{"version":3,"file":"static/js/47.a50eaa11.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js"],"sourcesContent":["import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  var _ref;\n\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  ...props\n}, ref) => {\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    props.onEnter == null ? void 0 : props.onEnter(node, isAppearing);\n  }, [props]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n\n  baseModalStyle.display = 'block';\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"names":["useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","resolveContainerRef","ref","document","_ref","canUseDOM","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","window","useWindow","useState","resolvedRef","setRef","earlyRef","nextRef","hasClass","element","className","classList","contains","baseVal","indexOf","fadeStyles","ENTERING","ENTERED","Fade","React","children","transitionClasses","props","handleEnter","useCallback","node","isAppearing","triggerBrowserReflow","onEnter","_jsx","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","classNames","defaultProps","in","timeout","mountOnEnter","unmountOnExit","appear","displayName","size","scrollbarSize","recalc","scrollDiv","createElement","style","position","top","width","height","overflow","appendChild","offsetWidth","clientWidth","removeChild","activeElement","doc","active","nodeName","e","manager","OPEN_DATA_ATTRIBUTE","dataAttr","ModalManager","handleContainerOverflow","isRTL","this","modals","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","_modal","containerState","paddingProp","container","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","remove","removeAttribute","Object","assign","modal","modalIdx","length","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","_excluded","useModalManager","provided","modalManager","getManager","dialog","backdrop","add","isTopModal","setDialogRef","setBackdropRef","Modal","forwardRef","show","role","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onExit","onExited","onExiting","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","isMounted","useMounted","prevShow","usePrevious","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","undefined","tabIndex","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","_jsxs","Manager","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","marginProp","qsa","el","adjustAndStore","restore","createWithBsPrefix","ModalDialog","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","propTypes","PropTypes","variant","CloseButton","type","AbstractModalHeader","closeLabel","closeVariant","closeButton","context","useContext","ModalContext","handleClick","ModalHeader","DivStyledAsH4","p","Component","animation","dialogAs","DialogTransition","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","options","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}