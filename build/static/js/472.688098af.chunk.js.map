{"version":3,"file":"static/js/472.688098af.chunk.js","mappings":"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","sources":["app/modules/master/components/Kota.tsx","app/modules/master/components/Lihat-master/LihatKota.tsx","app/modules/master/components/Update-master/UpdateKota.tsx","app/modules/master/components/Tambah-master/TambahKota.tsx","app/modules/master/components/Kecamatan.tsx","app/modules/master/components/Lihat-master/LihatKecamatan.tsx","app/modules/master/components/Update-master/UpdateKecamatan.tsx","app/modules/master/components/Tambah-master/TambahKecamatan.tsx","app/modules/master/components/Kelurahan.tsx","app/modules/master/components/Lihat-master/LihatKelurahan.tsx","app/modules/master/components/Update-master/UpdateKelurahan.tsx","app/modules/master/components/Tambah-master/TambahKelurahan.tsx","app/modules/master/components/JenisKegiatan.tsx","app/modules/master/components/Lihat-master/LihatJenisKegiatan.tsx","app/modules/master/components/Update-master/UpdateJenisKegiatan.tsx","app/modules/master/components/Tambah-master/TambahJenisKegiatan.tsx","app/modules/master/components/JenisKejadian.tsx","app/modules/master/components/Lihat-master/LihatJenisKejadian.tsx","app/modules/master/components/Update-master/UpdateJenisKejadian.tsx","app/modules/master/components/Tambah-master/TambahJenisKejadian.tsx","app/modules/master/components/JenisPelanggaran.tsx","app/modules/master/components/JenisPertolongan.tsx","app/modules/master/components/Lihat-master/LihatJenisPertolongan.tsx","app/modules/master/components/Update-master/UpdateJenisPertolongan.tsx","app/modules/master/components/JenisPerdaPerkada.tsx","app/modules/master/components/JenisPenindakan.tsx","app/modules/master/components/Lihat-master/LihatJenisPenindakan.tsx","app/modules/master/components/Update-master/UpdateJenisPenindakan.tsx","app/modules/master/components/KorbanJiwa.tsx","app/modules/master/components/Lihat-master/LihatKorbanJiwa.tsx","app/modules/master/components/Update-master/UpdateKorbanJiwa.tsx","app/modules/master/components/Tambah-master/TambahKorbanJiwa.tsx","app/modules/master/components/KorbanMaterial.tsx","app/modules/master/components/Lihat-master/LihatKorbanMaterial.tsx","app/modules/master/components/Update-master/UpdateKorbanMaterial.tsx","app/modules/master/components/JenisBantuan.tsx","app/modules/master/components/Lihat-master/LihatJenisBantuan.tsx","app/modules/master/components/Update-master/UpdateJenisBantuan.tsx","app/modules/master/components/InstansiTerkait.tsx","app/modules/master/components/KondisiSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatKondisiSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateKondisiSaranaPrasarana.tsx","app/modules/master/components/StatusSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatStatusSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateStatusSaranaPrasarana.tsx","app/modules/master/components/Agama.tsx","app/modules/master/components/Lihat-master/LihatAgama.tsx","app/modules/master/components/Update-master/UpdateAgama.tsx","app/modules/master/components/Tambah-master/TambahAgama.tsx","app/modules/master/components/Pangkat.tsx","app/modules/master/components/Update-master/UpdatePangkat.tsx","app/modules/master/components/Lihat-master/LihatPangkat.tsx","app/modules/master/components/Tambah-master/TambahPangkat.tsx","app/modules/master/components/TempatPelaksanaan.tsx","app/modules/master/components/Update-master/UpdateTempatPelaksanaan.tsx","app/modules/master/components/Lihat-master/LihatTempatPelaksanaan.tsx","app/modules/master/components/SKPD.tsx","app/modules/master/components/Update-master/UpdateSKPD.tsx","app/modules/master/components/Lihat-master/LihatSKPD.tsx","app/modules/master/components/Pendidikan.tsx","app/modules/master/components/Lihat-master/LihatPendidikan.tsx","app/modules/master/components/JenisSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateJenisSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatJenisSaranaPrasarana.tsx","app/modules/master/components/Golongan.tsx","app/modules/master/components/Eselon.tsx","app/modules/master/components/Update-master/UpdateEselon.tsx","app/modules/master/components/Lihat-master/LihatEselon.tsx","app/modules/master/components/Jabatan.tsx","app/modules/master/components/SumberInformasi.tsx","app/modules/master/components/Update-master/UpdateSumberInformasi.tsx","app/modules/master/components/Lihat-master/LihatSumberInformasi.tsx","app/modules/master/components/JenisKekerasan.tsx","app/modules/master/components/Update-master/UpdateJenisKekerasan.tsx","app/modules/master/components/Lihat-master/LihatJenisKekerasan.tsx","app/modules/master/components/JenisPenertiban.tsx","app/modules/master/components/Update-master/UpdateJenisPenertiban.tsx","app/modules/master/components/Lihat-master/LihatJenisPenertiban.tsx","app/modules/master/components/JenisPenyelesaian.tsx","app/modules/master/MasterPage.tsx"],"sourcesContent":["import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const KOTA_URL = `${API_URL}/master/kota`\n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  kota?: string\n}\n\nconst validatorForm = Yup.object().shape({\n  kota: Yup.string().required('Wajib diisi'),\n})\n\nexport function Kota() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterKota, setFilterKota] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterKota.val !== '') {\n      uriParam += `${valFilterKota.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterKota({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputKota = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterKota({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {\n      name: 'Kota',\n      selector: (row: any) => row.kota,\n      sortable: true,\n      sortField: 'kota',\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kota/LihatKota/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${KOTA_URL}/filter-kota/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${KOTA_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        kota: valuesFormik?.kota, //? valuesFormik.kota : '',\n      }\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${KOTA_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      kota: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${KOTA_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${KOTA_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Kota</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterKota.val} //4\n            onChange={handleChangeInputKota}\n            placeholder='Kota'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Kota</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Kota</Form.Label>\n                  <Form.Control\n                      name='kota'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.kota && formik.errors.kota,\n                        },\n                        {\n                          'is-valid': formik.touched.kota && !formik.errors.kota,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.kota}\n                    />\n                    {formik.touched.kota && formik.errors.kota && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.kota}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  kota?: string\n  kode?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/sarana-prasarana\n\nexport function LihatKota() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KOTA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kota: jsonD.kota,\n        kode: jsonD.kode,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kota ? valuesFormikExist?.kota : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode</Form.Label>\n                        <Form.Control\n                          name='kode'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kota'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kota?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000//master/kota\n\nexport function UpdateKota() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KOTA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kota: jsonD.kota,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kota: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kota: valuesFormik?.kota\n          ? valuesFormik.kota\n          : valuesFormikExist?.kota\n          ? valuesFormikExist.kota\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${KOTA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${KOTA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Kota', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Kota', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kota || valuesFormik?.kota === ''\n                              ? valuesFormik?.kota\n                              : valuesFormikExist?.kota\n                              ? valuesFormikExist?.kota\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kota'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kota?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/master/kota\n\nexport function TambahKota() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kota: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kota: valuesFormik?.kota ? valuesFormik.kota : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\n        if (response) {\n            if (selectedFile) {\n              formData.append('file_dokumentasi', selectedFile)\n              const responseFile = await axios.post(\n                `${KOTA_URL}/upload-file/${response.data.data.return_id}`,\n                formData\n              )\n              if (responseFile) {\n                console.log('File success uploaded!')\n                Swal.fire({\n                  icon: 'success',\n                  title: 'Data berhasil disimpan',\n                  showConfirmButton: false,\n                  timer: 1500,\n                })\n                navigate('/master/Kota', {replace: true})\n              }\n              return\n            }\n            Swal.fire({\n              icon: 'success',\n              title: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            navigate('/master/Kota', {replace: true})\n          }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kota}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kota'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Swal from 'sweetalert2'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\n\nexport function Kecamatan() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const [valFilterKota, setFilterKota] = useState({val: ''})\n  const [valFilterKecamatan, setFilterKecamatan] = useState({val: ''})\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n \n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterKota.val !== '') {\n      uriParam += `kota=${valFilterKota.val}`\n    }\n    if (valFilterKecamatan.val !== '') {\n      uriParam += `&kecamatan=${valFilterKecamatan.val}`\n    }\n    \n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handleChangeInputKota = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterKota({val: event.target.value})\n  }\n  const handleChangeInputKecamatan = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterKecamatan({val: event.target.value})\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Kode Kecamatan',\n      selector: (row: any) => row.kode_kecamatan,\n      sortable: true,\n      sortField: 'kode_kecamatan',\n      width: '200px',\n    },\n    {\n      name: 'kecamatan',\n      selector: (row: any) => row.kecamatan,\n      sortable: true,\n      sortField: 'kecamatan',\n      width: '250px',\n    },\n    {\n      name: 'Kode Kota',\n      selector: (row: any) => row.kode_kota,\n      sortable: true,\n      sortField: 'kode_kota',\n      width: '150px',\n    },\n    {\n      name: 'kota',\n      selector: (row: any) => row.kota,\n      sortable: true,\n      sortField: 'kota',\n      width: '300px',\n    },\n    {},\n\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kecamatan/LihatKecamatan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kecamatan/UpdateKecamatan/' + record.id, {replace: true})\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n\n\n  const [temp, setTemp] = useState([])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      console.log(qParamFind)\n      const response = await axios.get(\n        `${KECAMATAN_URL}/findone-by-kecamatan?${qParamFind.strparam}`\n      )\n      console.log(response.data.data)\n      // setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n        Array.from(items).forEach((item: any, index: any) => {\n          item.serial = index + 1\n        })\n        setTemp(items)\n        setLoading(false)\n      }, 100)\n\n      return () => clearTimeout(timeout)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n  //}\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(KECAMATAN_URL + '/find')\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n    }, 50)\n    return () => clearTimeout(timeout)\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${KECAMATAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6'>\n          <div className='form-group'>\n            <label htmlFor='' className='mb-3'>\n              Kota\n            </label>\n            <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='kota'\n            value={valFilterKota.val}\n            onChange={handleChangeInputKota}\n            placeholder='kota'\n          />\n          </div>\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6'>\n          <div className='form-group'>\n            <label htmlFor='' className='mb-3'>\n              Kecamatan\n            </label>\n            <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='kecamatan'\n            value={valFilterKecamatan.val}\n            onChange={handleChangeInputKecamatan}\n            placeholder='Kecamatan'\n          />\n          </div>\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link onClick={handleFilter} to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/Kecamatan/TambahKecamatan'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        {/* <DataTable columns={columns} data={temp} pagination /> */}\n        <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationTotalRows={totalRows}\n        />\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  kecamatan?: string\n  kode_kota?: string\n  kode_kecamatan?: string\n  kota?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kecamatan?: string\n  kode_kota?: string\n  kode_kecamatan?: string\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\nexport function LihatKecamatan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KECAMATAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kecamatan: jsonD.kecamatan,\n        kode_kota: jsonD.kode_kota,\n        kode_kecamatan: jsonD.kode_kecamatan,\n        kota: jsonD.kota,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kecamatan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kecamatan ? valuesFormikExist?.kecamatan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kota</Form.Label>\n                        <Form.Control\n                          name='kode_kota'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode_kota ? valuesFormikExist?.kode_kota : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kode_kecamatan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.kode_kecamatan\n                              ? valuesFormikExist?.kode_kecamatan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kota ? valuesFormikExist?.kota : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kecamatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kode_kota?: string\n  kecamatan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode_kota?: string\n  kecamatan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000//master/kecamatan\n\nexport function UpdateKecamatan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KECAMATAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kecamatan: jsonD.kecamatan,\n        kode_kota: jsonD.kode_kota,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value.toUpperCase(),\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kecamatan: '',\n      kode_kota: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kecamatan: valuesFormik?.kecamatan\n          ? valuesFormik.kecamatan\n          : valuesFormikExist?.kecamatan\n          ? valuesFormikExist.kecamatan\n          : '',\n        kode_kota: valuesFormik?.kode_kota\n          ? valuesFormik.kode_kota\n          : valuesFormikExist?.kode_kota\n          ? valuesFormikExist.kode_kota\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${KECAMATAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${KECAMATAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Kecamatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Kecamatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kecamatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kecamatan || valuesFormik?.kecamatan === ''\n                              ? valuesFormik?.kecamatan\n                              : valuesFormikExist?.kecamatan\n                              ? valuesFormikExist?.kecamatan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kota</Form.Label>\n                        <Form.Control\n                          name='kode_kota'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kode_kota || valuesFormik?.kode_kota === ''\n                              ? valuesFormik?.kode_kota\n                              : valuesFormikExist?.kode_kota\n                              ? valuesFormikExist?.kode_kota\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kecamatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kecamatan?: string\n  kode_kota?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\n\nexport function TambahKecamatan() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value.toUpperCase(),\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kecamatan: '',\n      kode_kota: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kecamatan: valuesFormik?.kecamatan ? valuesFormik.kecamatan : '',\n        kode_kota: valuesFormik?.kode_kota ? valuesFormik.kode_kota : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${KECAMATAN_URL}/create`, bodyparam)\n        console.log(response.data, valuesFormik)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${KECAMATAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Kecamatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Kecamatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kecamatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kecamatan}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kota</Form.Label>\n                        <Form.Control\n                          name='kode_kota'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kode_kota}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kecamatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Swal from 'sweetalert2'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {Kecamatan} from './Kecamatan'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\n\nexport function Kelurahan() {\n  // STATE SECTION\n  const navigate = useNavigate()\n  const [valFilterKelurahan, setFilterKelurahan] = useState({val: ''})\n  const [valFilterKecamatan, setFilterKecamatan] = useState({val: ''})\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [loading, setLoading] = useState(false)\n  const [perPage, setPerPage] = useState(10)\n  const [temp, setTemp] = useState([])\n  const [totalRows, setTotalRows] = useState(0)\n  // const [data, setData] = useState([])\n\n  // END STATE SECTION\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterKecamatan.val !== '') {\n      uriParam += `kecamatan=${valFilterKecamatan.val}`\n    }\n    if (valFilterKelurahan.val !== '') {\n      uriParam += `&kelurahan=${valFilterKelurahan.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handleChangeInputKelurahan = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterKelurahan({val: event.target.value})\n  }\n  const handleChangeInputKecamatan = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterKecamatan({val: event.target.value})\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      sortField: 'no',\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{row.serial}</div>\n      },\n    },\n    {\n      name: 'Kode Kelurahan',\n      selector: (row: any) => row.kode_kelurahan,\n      sortable: true,\n      sortField: 'kelurahan',\n    },\n    {\n      name: 'Kelurahan',\n      selector: (row: any) => row.kelurahan,\n      sortable: true,\n      sortField: 'kelurahan',\n    },\n    {\n      name: 'Kode Kecamatan',\n      selector: (row: any) => row.kode_kecamatan,\n      sortable: true,\n      sortField: 'Kode kecamatan',\n    },\n    {\n      name: 'Kecamatan',\n      selector: (row: any) => row.kecamatan,\n      sortable: true,\n      sortField: 'kecamatan',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kelurahan/LihatKelurahan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kelurahan/Updatekelurahan/' + record.id, {replace: true})\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  //if(valFilterKecamatan.val ? valFilterKecamatan.val : '' || valFilterKelurahan.val ? valFilterKelurahan.val : ''){\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      console.log(qParamFind)\n      const response = await axios.get(\n        `${KELURAHAN_URL}/findone-by-kelurahan?${qParamFind.strparam}`\n      )\n      console.log(response.data.data)\n      // setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n        Array.from(items).forEach((item: any, index: any) => {\n          item.serial = index + 1\n        })\n        setTemp(items)\n        setLoading(false)\n      }, 100)\n\n      return () => clearTimeout(timeout)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n  //}\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(KELURAHAN_URL + '/find')\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n    }, 50)\n    return () => clearTimeout(timeout)\n  }\n\n  // const handlePageChange = (page: any) => {\n  //   fetchUsers(page)\n  // }\n\n  // const handlePerRowsChange = async (newPerPage: any, page: any) => {\n  //   setLoading(true)\n\n  //   const response = await axios.get(\n  //     `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n  //   )\n\n  //   setData(response.data.data)\n  //   setPerPage(newPerPage)\n  //   setLoading(false)\n  // }\n\n  // const handleSort = (column: any, sortDirection: any) => {\n  //   // simulate server sort\n  //   console.log(column, sortDirection)\n  //   setLoading(true)\n\n  //   // instead of setTimeout this is where you would handle your API call.\n  //   setTimeout(() => {\n  //     setData(orderBy(data, column.sortField, sortDirection))\n  //     setLoading(false)\n  //   }, 100)\n  // }\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${KELURAHAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        {/* {valFilterKecamatan.val === 'PNS' || valFilterKecamatan.val === '' ? ( */}\n        <div className='col-xxl-6 col-lg-6 col-md-6 col-sm-12'>\n          <label htmlFor='' className='mb-3'>\n            Kecamatan\n          </label>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='kecamatan'\n            value={valFilterKecamatan.val}\n            onChange={handleChangeInputKecamatan}\n            placeholder='Kecamatan'\n          />\n        </div>\n        {/* ) : null} */}\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        {/* {valFilterKelurahan.val === 'PNS' || valFilterKelurahan.val === '' ? ( */}\n        <div className='col-xxl-6 col-lg-6 col-md-6 col-sm-12'>\n          <label htmlFor='' className='mb-3'>\n            Kelurahan\n          </label>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='kelurahan'\n            value={valFilterKelurahan.val}\n            onChange={handleChangeInputKelurahan}\n            placeholder='Kelurahan'\n          />\n        </div>\n        {/* ) : null} */}\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button onClick={handleFilter} className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/Kelurahan/TambahKelurahan'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        {/* <DataTable columns={columns} data={temp} pagination /> */}\n        <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationTotalRows={totalRows}\n        />\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  kecamatan?: string\n  kode_kelurahan?: string\n  kode_kecamatan?: string\n  kelurahan?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kecamatan?: string\n  kode_kelurahan?: string\n  kode_kecamatan?: string\n  kelurahan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\nexport function LihatKelurahan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KELURAHAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kecamatan: jsonD.kecamatan,\n        kode_kelurahan: jsonD.kode_kelurahan,\n        kode_kecamatan: jsonD.kode_kecamatan,\n        kelurahan: jsonD.kelurahan,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kecamatan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kecamatan ? valuesFormikExist?.kecamatan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kelurahan</Form.Label>\n                        <Form.Control\n                          name='kode_kelurahan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.kode_kelurahan\n                              ? valuesFormikExist?.kode_kelurahan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kode_kecamatan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.kode_kecamatan\n                              ? valuesFormikExist?.kode_kecamatan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kelurahan</Form.Label>\n                        <Form.Control\n                          name='kelurahan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kelurahan ? valuesFormikExist?.kelurahan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kelurahan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kode_kecamatan?: string\n  kelurahan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode_kecamatan?: string\n  kelurahan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000//master/kelurahan\n\nexport function UpdateKelurahan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KELURAHAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kelurahan: jsonD.kelurahan,\n        kode_kecamatan: jsonD.kode_kecamatan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value.toUpperCase(),\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kelurahan: '',\n      kode_kecamatan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kelurahan: valuesFormik?.kelurahan\n          ? valuesFormik.kelurahan\n          : valuesFormikExist?.kelurahan\n          ? valuesFormikExist.kelurahan\n          : '',\n        kode_kecamatan: valuesFormik?.kode_kecamatan\n          ? valuesFormik.kode_kecamatan\n          : valuesFormikExist?.kode_kecamatan\n          ? valuesFormikExist.kode_kecamatan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${KELURAHAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${KELURAHAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/kelurahan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/kelurahan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>kelurahan</Form.Label>\n                        <Form.Control\n                          name='kelurahan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kelurahan || valuesFormik?.kelurahan === ''\n                              ? valuesFormik?.kelurahan\n                              : valuesFormikExist?.kelurahan\n                              ? valuesFormikExist?.kelurahan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kota</Form.Label>\n                        <Form.Control\n                          name='kode_kecamatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kode_kecamatan || valuesFormik?.kode_kecamatan === ''\n                              ? valuesFormik?.kode_kecamatan\n                              : valuesFormikExist?.kode_kecamatan\n                              ? valuesFormikExist?.kode_kecamatan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/kelurahan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kelurahan?: string\n  kode_kecamatan?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\n\nexport function TambahKelurahan() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value.toUpperCase(),\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kelurahan: '',\n      kode_kecamatan: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kelurahan: valuesFormik?.kelurahan ? valuesFormik.kelurahan : '',\n        kode_kecamatan: valuesFormik?.kode_kecamatan ? valuesFormik.kode_kecamatan : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${KELURAHAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${KELURAHAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/kelurahan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/kelurahan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>kelurahan</Form.Label>\n                        <Form.Control\n                          name='kelurahan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kelurahan}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kode_kecamatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kode_kecamatan}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/kelurahan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan`\n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  jenis_kegiatan?: string\n}\n\nconst validatorForm = Yup.object().shape({\n  jenis_kegiatan: Yup.string().required('Wajib diisi'),\n})\n\nexport function JenisKegiatan() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterJenisKegiatan, setFilterJenisKegiatan] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterJenisKegiatan.val !== '') {\n      uriParam += `${valFilterJenisKegiatan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterJenisKegiatan({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputJenisKegiatan = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisKegiatan({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {\n      name: 'Jenis Kegiatan',\n      selector: (row: any) => row.jenis_kegiatan,\n      sortable: true,\n      sortField: 'jenis_kegiatan',\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisKegiatan/LihatJenisKegiatan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_KEGIATAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan, //? valuesFormik.jenis_kegiatan : '',\n      }\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_KEGIATAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_KEGIATAN_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_kegiatan: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_KEGIATAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Jenis Kegiatan</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisKegiatan.val} //4\n            onChange={handleChangeInputJenisKegiatan}\n            placeholder='Jenis Kegiatan'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Kegiatan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Jenis Kegiatan</Form.Label>\n                  <Form.Control\n                      name='jenis_kegiatan'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_kegiatan && formik.errors.jenis_kegiatan,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_kegiatan && !formik.errors.jenis_kegiatan,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_kegiatan}\n                    />\n                    {formik.touched.jenis_kegiatan && formik.errors.jenis_kegiatan && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_kegiatan}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_kegiatan?: string\n  updated_by?: string\n  kode?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_kegiatan?: string\n  kode?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/jenis_kegiatan\n\nexport function LihatJenisKegiatan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kegiatan: jsonD.jenis_kegiatan,\n        kode: jsonD.kode,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kegiatan</Form.Label>\n                        <Form.Control\n                          name='jenis kegiatan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_kegiatan\n                              ? valuesFormikExist?.jenis_kegiatan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>kode</Form.Label>\n                        <Form.Control\n                          name='kode'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKegiatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kegiatan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  jenis_kegiatan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000//master/jenis-kegiatan\n\nexport function UpdateJenisKegiatan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kegiatan: jsonD.jenis_kegiatan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kegiatan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan\n          ? valuesFormik.jenis_kegiatan\n          : valuesFormikExist?.jenis_kegiatan\n          ? valuesFormikExist.jenis_kegiatan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_KEGIATAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_KEGIATAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKegiatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKegiatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kegiatan</Form.Label>\n                        <Form.Control\n                          name='jenis_kegiatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_kegiatan || valuesFormik?.jenis_kegiatan === ''\n                              ? valuesFormik?.jenis_kegiatan\n                              : valuesFormikExist?.jenis_kegiatan\n                              ? valuesFormikExist?.jenis_kegiatan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKegiatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kegiatan?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/master/jenis_kegiatan\n\nexport function TambahJenisKegiatan() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kegiatan: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan ? valuesFormik.jenis_kegiatan : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_KEGIATAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JENIS_KEGIATAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKegiatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKegiatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kegiatan</Form.Label>\n                        <Form.Control\n                          name='jenis_kegiatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.jenis_kegiatan}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKegiatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  jenis_kejadian?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  jenis_kejadian: Yup.string().required('Wajib diisi'),\n})\n\nexport function JenisKejadian() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterJenisKejadian, setFilterJenisKejadian] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterJenisKejadian.val !== '') {\n      uriParam += `${valFilterJenisKejadian.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterJenisKejadian({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputJenisKejadian = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisKejadian({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Jenis Kejadian',\n      selector: (row: any) => row.jenis_kejadian,\n      sortable: true,\n      sortField: 'jenis_kejadian',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisKejadian/LihatJenisKejadian/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_KEJADIAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_kejadian: valuesFormik?.jenis_kejadian, //? valuesFormik.jenis_kejadian : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_KEJADIAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_KEJADIAN_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_kejadian: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_KEJADIAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Jenis Kejadian</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisKejadian.val} //4\n            onChange={handleChangeInputJenisKejadian}\n            placeholder='Jenis Kejadian'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Kejadian</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Jenis Kejadian</Form.Label>\n                  <Form.Control\n                      name='jenis_kejadian'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_kejadian && formik.errors.jenis_kejadian,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_kejadian && !formik.errors.jenis_kejadian,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_kejadian}\n                    />\n                    {formik.touched.jenis_kejadian && formik.errors.jenis_kejadian && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_kejadian}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_kejadian?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_kejadian?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000/jenis-kejadian\n\nexport function LihatJenisKejadian() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kejadian: jsonD.jenis_kejadian,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='jenis_kejadian'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_kejadian\n                              ? valuesFormikExist?.jenis_kejadian\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKejadian'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kejadian?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_kejadian?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000//master/jenis-kejadian\n\nexport function UpdateJenisKejadian() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kejadian: jsonD.jenis_kejadian,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kejadian: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kejadian: valuesFormik?.jenis_kejadian\n          ? valuesFormik.jenis_kejadian\n          : valuesFormikExist?.jenis_kejadian\n          ? valuesFormikExist.jenis_kejadian\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_KEJADIAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_KEJADIAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKejadian', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKejadian', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='jenis_kejadian'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_kejadian || valuesFormik?.jenis_kejadian === ''\n                              ? valuesFormik?.jenis_kejadian\n                              : valuesFormikExist?.jenis_kejadian\n                              ? valuesFormikExist?.jenis_kejadian\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKejadian'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kejadian?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000/master/jenis-kejadian\n\nexport function TambahJenisKejadian() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kejadian: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kejadian: valuesFormik?.jenis_kejadian ? valuesFormik.jenis_kejadian : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_KEJADIAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JENIS_KEJADIAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKejadian', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKejadian', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='jenis_kejadian'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.jenis_kejadian}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKejadian'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PELANGGARAN_URL = `${API_URL}/master/Jenis-pelanggaran` //http://localhost:3000/Jenis-pelanggaran\nexport function JenisPelanggaran() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Jenis Pelanggaran',\n      selector: (row: any) => row.jenis_pelanggaran,\n      sortable: true,\n      sortField: 'jenis_pelanggaran',\n    },\n    {\n    },\n    {\n      \n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_PELANGGARAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Pelanggaran\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Pelanggaran</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Pelanggaran</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Pelanggaran\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  jenis_pertolongan?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  jenis_pertolongan: Yup.string().required('Wajib diisi'),\n})\n\nexport function JenisPertolongan() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterJenisPertolongan, setFilterJenisPertolongan] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterJenisPertolongan.val !== '') {\n      uriParam += `${valFilterJenisPertolongan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterJenisPertolongan({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputJenisPertolongan = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisPertolongan({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Jenis Pertolongan',\n      selector: (row: any) => row.jenis_pertolongan,\n      sortable: true,\n      sortField: 'jenis_pertolongan',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisPertolongan/LihatJenisPertolongan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_PERTOLONGAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_pertolongan: valuesFormik?.jenis_pertolongan, //? valuesFormik.jenis_pertolongan : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_PERTOLONGAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_PERTOLONGAN_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_pertolongan: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_PERTOLONGAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Jenis Pertolongan</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisPertolongan.val} //4\n            onChange={handleChangeInputJenisPertolongan}\n            placeholder='Jenis pertolongan'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Pertolongan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Jenis Pertolongan</Form.Label>\n                  <Form.Control\n                      name='jenis_pertolongan'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_pertolongan && formik.errors.jenis_pertolongan,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_pertolongan && !formik.errors.jenis_pertolongan,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_pertolongan}\n                    />\n                    {formik.touched.jenis_pertolongan && formik.errors.jenis_pertolongan && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_pertolongan}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_pertolongan?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_pertolongan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` //http://localhost:3000/sarana-prasarana\n\nexport function LihatJenisPertolongan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_pertolongan: jsonD.jenis_pertolongan,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Pertolongan</Form.Label>\n                        <Form.Control\n                          name='jenis_pertolongan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.jenis_pertolongan ? valuesFormikExist?.jenis_pertolongan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPertolongan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_pertolongan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  jenis_pertolongan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` //http://localhost:3000//master/JenisPertolongan\n\nexport function UpdateJenisPertolongan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_pertolongan: jsonD.jenis_pertolongan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_pertolongan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_pertolongan: valuesFormik?.jenis_pertolongan\n          ? valuesFormik.jenis_pertolongan\n          : valuesFormikExist?.jenis_pertolongan\n          ? valuesFormikExist.jenis_pertolongan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_PERTOLONGAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_PERTOLONGAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisPertolongan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisPertolongan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Pertolongan</Form.Label>\n                        <Form.Control\n                          name='jenis_pertolongan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_pertolongan || valuesFormik?.jenis_pertolongan === ''\n                              ? valuesFormik?.jenis_pertolongan\n                              : valuesFormikExist?.jenis_pertolongan\n                              ? valuesFormikExist?.jenis_pertolongan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPertolongan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERDA_PERKADA_URL = `${API_URL}/master/jenis-perda-perkada` //http://localhost:3000/jenis-perda-perkada\n\nexport function JenisPerdaPerkada() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Judul',\n      selector: (row: any) => row.judul,\n      sortable: true,\n      sortField: 'judul',\n    },\n    {\n      name: 'Deskripsi',\n      selector: (row: any) => row.deskripsi,\n      sortable: true,\n      sortField: 'deskripsi',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_PERDA_PERKADA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Judul Perda / Perkada\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Deskripsi\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Perda / Perkada</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Perda / Perkada</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Perda / Perkada\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  jenis_penindakan?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  jenis_penindakan: Yup.string().required('Wajib diisi'),\n})\n\nexport function JenisPenindakan() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterJenisPenindakan, setFilterJenisPenindakan] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterJenisPenindakan.val !== '') {\n      uriParam += `${valFilterJenisPenindakan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterJenisPenindakan({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputJenisPenindakan = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisPenindakan({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Jenis Penindakan',\n      selector: (row: any) => row.jenis_penindakan,\n      sortable: true,\n      sortField: 'jenis_penindakan',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisPenindakan/LihatJenisPenindakan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_PENINDAKAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_penindakan: valuesFormik?.jenis_penindakan, //? valuesFormik.jenis_penindakan : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_PENINDAKAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_PENINDAKAN_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_penindakan: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_PENINDAKAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Jenis Penindakan</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisPenindakan.val} //4\n            onChange={handleChangeInputJenisPenindakan}\n            placeholder='Jenis Penindakan'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Penindakan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Jenis Penindakan</Form.Label>\n                  <Form.Control\n                      name='jenis_penindakan'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_penindakan && formik.errors.jenis_penindakan,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_penindakan && !formik.errors.jenis_penindakan,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_penindakan}\n                    />\n                    {formik.touched.jenis_penindakan && formik.errors.jenis_penindakan && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_penindakan}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_penindakan?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_penindakan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` //http://localhost:3000/jenis-Penindakan\n\nexport function LihatJenisPenindakan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_penindakan: jsonD.jenis_penindakan,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Penindakan</Form.Label>\n                        <Form.Control\n                          name='jenis_penindakan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_penindakan\n                              ? valuesFormikExist?.jenis_penindakan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Jenispenindakan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_penindakan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_penindakan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` //http://localhost:3000//master/jenis-Penindakan\n\nexport function UpdateJenisPenindakan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_penindakan: jsonD.jenis_penindakan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_penindakan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_penindakan: valuesFormik?.jenis_penindakan\n          ? valuesFormik.jenis_penindakan\n          : valuesFormikExist?.jenis_penindakan\n          ? valuesFormikExist.jenis_penindakan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_PENINDAKAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_PENINDAKAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisPenindakan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisPenindakan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Penindakan</Form.Label>\n                        <Form.Control\n                          name='jenis_penindakan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_penindakan || valuesFormik?.jenis_penindakan === ''\n                              ? valuesFormik?.jenis_penindakan\n                              : valuesFormikExist?.jenis_penindakan\n                              ? valuesFormikExist?.jenis_penindakan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPenindakan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nexport interface FormInput {\n  jenis_korban_jiwa?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  jenis_korban_jiwa: Yup.string().required('Wajib diisi'),\n})\n\nexport function KorbanJiwa() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterKorbanJiwa, setFilterKorbanJiwa] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterKorbanJiwa.val !== '') {\n      uriParam += `${valFilterKorbanJiwa.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterKorbanJiwa({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputKorbanJiwa = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterKorbanJiwa({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Korban Jiwa',\n      selector: (row: any) => row.jenis_korban_jiwa,\n      sortable: true,\n      sortField: 'jenis_korban_jiwa',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    menuPosition=\"top\"\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/KorbanJiwa/LihatKorbanJiwa/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_KORBAN_JIWA_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa, //? valuesFormik.jenis_korban_jiwa : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_KORBAN_JIWA_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_KORBAN_JIWA_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_korban_jiwa: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_KORBAN_JIWA_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>KorbanJiwa</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterKorbanJiwa.val} //4\n            onChange={handleChangeInputKorbanJiwa}\n            placeholder='Korban Jiwa'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Korban Jiwa</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Korban Jiwa</Form.Label>\n                  <Form.Control\n                      name='jenis_korban_jiwa'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_korban_jiwa && formik.errors.jenis_korban_jiwa,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_korban_jiwa && !formik.errors.jenis_korban_jiwa,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_korban_jiwa}\n                    />\n                    {formik.touched.jenis_korban_jiwa && formik.errors.jenis_korban_jiwa && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_korban_jiwa}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_korban_jiwa?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_korban_jiwa?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/master/korban_jiwa\n\nexport function LihatKorbanJiwa() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_korban_jiwa: jsonD.jenis_korban_jiwa,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Korban Jiwa</Form.Label>\n                        <Form.Control\n                          name='korban jiwa'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_korban_jiwa\n                              ? valuesFormikExist?.jenis_korban_jiwa\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KorbanJiwa'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_korban_jiwa?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_korban_jiwa?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000//master/jenis_korban_jiwa\n\nexport function UpdateKorbanJiwa() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_korban_jiwa: jsonD.jenis_korban_jiwa,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_korban_jiwa: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa\n          ? valuesFormik.jenis_korban_jiwa\n          : valuesFormikExist?.jenis_korban_jiwa\n          ? valuesFormikExist.jenis_korban_jiwa\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_KORBAN_JIWA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_KORBAN_JIWA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/KorbanJiwa', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/KorbanJiwa', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Korban Jiwa</Form.Label>\n                        <Form.Control\n                          name='jenis_korban_jiwa'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_korban_jiwa ||\n                            valuesFormik?.jenis_korban_jiwa === ''\n                              ? valuesFormik?.jenis_korban_jiwa\n                              : valuesFormikExist?.jenis_korban_jiwa\n                              ? valuesFormikExist?.jenis_korban_jiwa\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KorbanJiwa'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_korban_jiwa?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/master/jenis-korban-jiwa\n\nexport function TambahKorbanJiwa() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_korban_jiwa: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa ? valuesFormik.jenis_korban_jiwa : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_KORBAN_JIWA_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JENIS_KORBAN_JIWA_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/KorbanJiwa', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/KorbanJiwa', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>jenis Korban Jiwa</Form.Label>\n                        <Form.Control\n                          name='jenis_korban_jiwa'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.jenis_korban_jiwa}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KorbanJiwa'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nexport interface FormInput {\n  jenis_korban_material?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  jenis_korban_material: Yup.string().required('Wajib diisi'),\n})\n\nexport function KorbanMaterial() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterKorbanMaterial, setFilterKorbanMaterial] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterKorbanMaterial.val !== '') {\n      uriParam += `${valFilterKorbanMaterial.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterKorbanMaterial({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputKorbanMaterial = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterKorbanMaterial({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Korban Material',\n      selector: (row: any) => row.jenis_korban_material,\n      sortable: true,\n      sortField: 'jenis_korban_material',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    menuPosition=\"top\"\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/KorbanMaterial/LihatKorbanMaterial/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_korban_material: valuesFormik?.jenis_korban_material, //? valuesFormik.jenis_korban_material : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_KORBAN_MATERIAL_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_KORBAN_MATERIAL_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_korban_material: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_KORBAN_MATERIAL_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Korban Material</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterKorbanMaterial.val} //4\n            onChange={handleChangeInputKorbanMaterial}\n            placeholder='Korban Material'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Korban Material</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Korban Material</Form.Label>\n                  <Form.Control\n                      name='jenis_korban_material'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_korban_material && formik.errors.jenis_korban_material,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_korban_material && !formik.errors.jenis_korban_material,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_korban_material}\n                    />\n                    {formik.touched.jenis_korban_material && formik.errors.jenis_korban_material && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_korban_material}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_korban_material?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_korban_material?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` //http://localhost:3000/master/korban_jiwa\n\nexport function LihatKorbanMaterial() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_korban_material: jsonD.jenis_korban_material,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Korban Material</Form.Label>\n                        <Form.Control\n                          name='jenis_korban_material'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_korban_material\n                              ? valuesFormikExist?.jenis_korban_material\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KorbanJiwa'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_korban_material?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_korban_material?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` //http://localhost:3000/master/korban_jiwa\n\nexport function UpdateKorbanMaterial() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_korban_material: jsonD.jenis_korban_material,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_korban_material: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_korban_material: valuesFormik?.jenis_korban_material\n          ? valuesFormik.jenis_korban_material\n          : valuesFormikExist?.jenis_korban_material\n          ? valuesFormikExist.jenis_korban_material\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_KORBAN_MATERIAL_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_KORBAN_MATERIAL_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/KorbanMaterial', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/KorbanMaterial', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Korban Material</Form.Label>\n                        <Form.Control\n                          name='jenis_korban_material'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_korban_material || valuesFormik?.jenis_korban_material === ''\n                              ? valuesFormik?.jenis_korban_material\n                              : valuesFormikExist?.jenis_korban_material\n                              ? valuesFormikExist?.jenis_korban_material\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KorbanMaterial'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  jenis_bantuan?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  jenis_bantuan: Yup.string().required('Wajib diisi'),\n})\n\nexport function JenisBantuan() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterJenisBantuan, setFilterJenisBantuan] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterJenisBantuan.val !== '') {\n      uriParam += `${valFilterJenisBantuan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterJenisBantuan({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputJenisBantuan = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisBantuan({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Jenis Bantuan',\n      selector: (row: any) => row.jenis_bantuan,\n      sortable: true,\n      sortField: 'jenis_bantuan',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisBantuan/LihatJenisBantuan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_BANTUAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_bantuan: valuesFormik?.jenis_bantuan, //? valuesFormik.jenis_bantuan : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_BANTUAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_BANTUAN_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_bantuan: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_BANTUAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_BANTUAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Jenis Bantuan</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisBantuan.val} //4\n            onChange={handleChangeInputJenisBantuan}\n            placeholder='Jenis Bantuan'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Bantuan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Jenis Bantuan</Form.Label>\n                  <Form.Control\n                      name='jenis_bantuan'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_bantuan && formik.errors.jenis_bantuan,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_bantuan && !formik.errors.jenis_bantuan,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_bantuan}\n                    />\n                    {formik.touched.jenis_bantuan && formik.errors.jenis_bantuan && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_bantuan}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_bantuan?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_bantuan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` //http://localhost:3000/JenisBantuan\n\nexport function LihatJenisBantuan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_bantuan: jsonD.jenis_bantuan,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Bantuan</Form.Label>\n                        <Form.Control\n                          name='jenis_bantuan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_bantuan\n                              ? valuesFormikExist?.jenis_bantuan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisBantuan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_bantuan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_bantuan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` //http://localhost:3000//master/JenisKekerasan\n\nexport function UpdateJenisBantuan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_bantuan: jsonD.jenis_bantuan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_bantuan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_bantuan: valuesFormik?.jenis_bantuan\n          ? valuesFormik.jenis_bantuan\n          : valuesFormikExist?.jenis_bantuan\n          ? valuesFormikExist.jenis_bantuan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_BANTUAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_BANTUAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisBantuan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisBantuan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Bantuan</Form.Label>\n                        <Form.Control\n                          name='jenis_bantuan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_bantuan || valuesFormik?.jenis_bantuan === ''\n                              ? valuesFormik?.jenis_bantuan\n                              : valuesFormikExist?.jenis_bantuan\n                              ? valuesFormikExist?.jenis_bantuan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisBantuan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function InstansiTerkait() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Instansi Terkait\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Instansi Terkait</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Instansi Terakait</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Instansi Terkait\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  kondisi_sarana_prasarana?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  kondisi_sarana_prasarana: Yup.string().required('Wajib diisi'),\n})\n\nexport function KondisiSaranaPrasarana() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterKondisiSaranaPrasarana, setFilterKondisiSaranaPrasarana] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterKondisiSaranaPrasarana.val !== '') {\n      uriParam += `${valFilterKondisiSaranaPrasarana.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterKondisiSaranaPrasarana({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputKondisiSaranaPrasarana = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterKondisiSaranaPrasarana({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Kondisi Sarana Prasarana',\n      selector: (row: any) => row.kondisi_sarana_prasarana,\n      sortable: true,\n      sortField: 'kondisi_sarana_prasarana',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/KondisiSaranaPrasarana/LihatKondisiSaranaPrasarana/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        kondisi_sarana_prasarana: valuesFormik?.kondisi_sarana_prasarana, //? valuesFormik.kondisi_sarana_prasarana : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${KONDISI_SARANA_PRASARANA_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${KONDISI_SARANA_PRASARANA_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      kondisi_sarana_prasarana: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${KONDISI_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Kondisi Sarana Prasarana</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterKondisiSaranaPrasarana.val} //4\n            onChange={handleChangeInputKondisiSaranaPrasarana}\n            placeholder='Kondisi Sarana Prasarana'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Kondisi Sarana Prasarana</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Kondisi Sarana Prasarana</Form.Label>\n                  <Form.Control\n                      name='kondisi_sarana_prasarana'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.kondisi_sarana_prasarana && formik.errors.kondisi_sarana_prasarana,\n                        },\n                        {\n                          'is-valid': formik.touched.kondisi_sarana_prasarana && !formik.errors.kondisi_sarana_prasarana,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.kondisi_sarana_prasarana}\n                    />\n                    {formik.touched.kondisi_sarana_prasarana && formik.errors.kondisi_sarana_prasarana && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.kondisi_sarana_prasarana}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  kondisi_sarana_prasarana?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kondisi_sarana_prasarana?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` //http://localhost:3000/Kondisi-Penindakan\n\nexport function LihatKondisiSaranaPrasarana() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kondisi_sarana_prasarana: jsonD.kondisi_sarana_prasarana,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kondisi Sarana Prasarana</Form.Label>\n                        <Form.Control\n                          name='kondisi_sarana_prasarana'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.kondisi_sarana_prasarana\n                              ? valuesFormikExist?.kondisi_sarana_prasarana\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KondisiSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kondisi_sarana_prasarana?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kondisi_sarana_prasarana?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\n\nexport function UpdateKondisiSaranaPrasarana() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kondisi_sarana_prasarana: jsonD.kondisi_sarana_prasarana,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kondisi_sarana_prasarana: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kondisi_sarana_prasarana: valuesFormik?.kondisi_sarana_prasarana\n          ? valuesFormik.kondisi_sarana_prasarana\n          : valuesFormikExist?.kondisi_sarana_prasarana\n          ? valuesFormikExist.kondisi_sarana_prasarana\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${KONDISI_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${KONDISI_SARANA_PRASARANA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/KondisiSaranaPrasarana', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/KondisiSaranaPrasarana', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kondisi Sarana Prasarana</Form.Label>\n                        <Form.Control\n                          name='kondisi_sarana_prasarana'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kondisi_sarana_prasarana || valuesFormik?.kondisi_sarana_prasarana === ''\n                              ? valuesFormik?.kondisi_sarana_prasarana\n                              : valuesFormikExist?.kondisi_sarana_prasarana\n                              ? valuesFormikExist?.kondisi_sarana_prasarana\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KondisiSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  status_sarana_prasarana?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  status_sarana_prasarana: Yup.string().required('Wajib diisi'),\n})\n\nexport function StatusSaranaPrasarana() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterStatusSaranaPrasarana, setFilterStatusSaranaPrasarana] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterStatusSaranaPrasarana.val !== '') {\n      uriParam += `${valFilterStatusSaranaPrasarana.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterStatusSaranaPrasarana({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputStatusSaranaPrasarana = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterStatusSaranaPrasarana({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Status Sarana Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/StatusSaranaPrasarana/LihatStatusSaranaPrasarana/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        status_sarana_prasarana: valuesFormik?.status_sarana_prasarana, //? valuesFormik.status_sarana_prasarana : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${STATUS_SARANA_PRASARANA_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${STATUS_SARANA_PRASARANA_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      status_sarana_prasarana: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${STATUS_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Status Sarana Prasarana</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterStatusSaranaPrasarana.val} //4\n            onChange={handleChangeInputStatusSaranaPrasarana}\n            placeholder='Status Sarana Prasarana'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Status Sarana Prasarana</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Status Sarana Prasarana</Form.Label>\n                  <Form.Control\n                      name='status_sarana_prasarana'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.status_sarana_prasarana && formik.errors.status_sarana_prasarana,\n                        },\n                        {\n                          'is-valid': formik.touched.status_sarana_prasarana && !formik.errors.status_sarana_prasarana,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.status_sarana_prasarana}\n                    />\n                    {formik.touched.status_sarana_prasarana && formik.errors.status_sarana_prasarana && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.status_sarana_prasarana}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  status_sarana_prasarana?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  status_sarana_prasarana?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` //http://localhost:3000/jenis-Penindakan\n\nexport function LihatStatusSaranaPrasarana() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        status_sarana_prasarana: jsonD.status_sarana_prasarana,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Status Sarana Prasarana</Form.Label>\n                        <Form.Control\n                          name='status_sarana_prasarana'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.status_sarana_prasarana\n                              ? valuesFormikExist?.status_sarana_prasarana\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/StatusSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  status_sarana_prasarana?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  status_sarana_prasarana?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\n\nexport function UpdateStatusSaranaPrasarana() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        status_sarana_prasarana: jsonD.status_sarana_prasarana,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      status_sarana_prasarana: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        status_sarana_prasarana: valuesFormik?.status_sarana_prasarana\n          ? valuesFormik.status_sarana_prasarana\n          : valuesFormikExist?.status_sarana_prasarana\n          ? valuesFormikExist.status_sarana_prasarana\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${STATUS_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${STATUS_SARANA_PRASARANA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/StatusSaranaPrasarana', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/StatusSaranaPrasarana', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Status Sarana Prasarana</Form.Label>\n                        <Form.Control\n                          name='status_sarana_prasarana'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.status_sarana_prasarana || valuesFormik?.status_sarana_prasarana === ''\n                              ? valuesFormik?.status_sarana_prasarana\n                              : valuesFormikExist?.status_sarana_prasarana\n                              ? valuesFormikExist?.status_sarana_prasarana\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/StatusSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const AGAMA_URL = `${API_URL}/master/agama` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nexport interface FormInput {\n  agama?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  agama: Yup.string().required('Wajib diisi'),\n})\n\nexport function Agama() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterAgama, setFilterAgama] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterAgama.val !== '') {\n      uriParam += `${valFilterAgama.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterAgama({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputAgama = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterAgama({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Agama',\n      selector: (row: any) => row.agama,\n      sortable: true,\n      sortField: 'agama',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    menuPosition=\"top\"\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Agama/LihatAgama/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${AGAMA_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${AGAMA_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        agama: valuesFormik?.agama, //? valuesFormik.agama : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${AGAMA_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${AGAMA_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      agama: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${AGAMA_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${AGAMA_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Agama</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterAgama.val} //4\n            onChange={handleChangeInputAgama}\n            placeholder='Agama'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Agama</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Agama</Form.Label>\n                  <Form.Control\n                      name='agama'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.agama && formik.errors.agama,\n                        },\n                        {\n                          'is-valid': formik.touched.agama && !formik.errors.agama,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.agama}\n                    />\n                    {formik.touched.agama && formik.errors.agama && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.agama}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  agama?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  agama?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/sarana-prasarana\n\nexport function LihatAgama() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${AGAMA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        agama: jsonD.agama,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>agama</Form.Label>\n                        <Form.Control\n                          name='agama'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.agama ? valuesFormikExist?.agama : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Agama'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  agama?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  agama?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000//master/agama\n\nexport function UpdateAgama() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${AGAMA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        agama: jsonD.agama,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      agama: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        agama: valuesFormik?.agama\n          ? valuesFormik.agama\n          : valuesFormikExist?.agama\n          ? valuesFormikExist.agama\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${AGAMA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${AGAMA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Agama', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Agama', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>agama</Form.Label>\n                        <Form.Control\n                          name='agama'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.agama || valuesFormik?.agama === ''\n                              ? valuesFormik?.agama\n                              : valuesFormikExist?.agama\n                              ? valuesFormikExist?.agama\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Agama'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  agama?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/master/agama\n\nexport function TambahAgama() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      agama: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        agama: valuesFormik?.agama ? valuesFormik.agama : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${AGAMA_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${AGAMA_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/agama', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/agama', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>agama</Form.Label>\n                        <Form.Control\n                          name='agama'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.agama}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Agama'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nexport interface FormInput {\n  pangkat?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  pangkat: Yup.string().required('Wajib diisi'),\n})\n\nexport function Pangkat() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterPangkat, setFilterPangkat] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterPangkat.val !== '') {\n      uriParam += `${valFilterPangkat.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterPangkat({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputPangkat = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterPangkat({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Pangkat',\n      selector: (row: any) => row.pangkat,\n      sortable: true,\n      sortField: 'pangkat',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    menuPosition=\"top\"\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Pangkat/LihatPangkat/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${PANGKAT_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${PANGKAT_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        pangkat: valuesFormik?.pangkat, //? valuesFormik.pangkat : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${PANGKAT_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${PANGKAT_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      pangkat: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${PANGKAT_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${PANGKAT_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Pangkat</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterPangkat.val} //4\n            onChange={handleChangeInputPangkat}\n            placeholder='Pangkat'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Pangkat</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Pangkat</Form.Label>\n                  <Form.Control\n                      name='pangkat'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.pangkat && formik.errors.pangkat,\n                        },\n                        {\n                          'is-valid': formik.touched.pangkat && !formik.errors.pangkat,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.pangkat}\n                    />\n                    {formik.touched.pangkat && formik.errors.pangkat && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.pangkat}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  pangkat?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  pangkat?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000//master/pangkat\n\nexport function UpdatePangkat() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${PANGKAT_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        pangkat: jsonD.pangkat,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      pangkat: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        pangkat: valuesFormik?.pangkat\n          ? valuesFormik.pangkat\n          : valuesFormikExist?.pangkat\n          ? valuesFormikExist.pangkat\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${PANGKAT_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${PANGKAT_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/pangkat', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/pangkat', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>pangkat</Form.Label>\n                        <Form.Control\n                          name='pangkat'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.pangkat || valuesFormik?.pangkat === ''\n                              ? valuesFormik?.pangkat\n                              : valuesFormikExist?.pangkat\n                              ? valuesFormikExist?.pangkat\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/pangkat'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  pangkat?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  pangkat?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\n\nexport function LihatPangkat() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${PANGKAT_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        pangkat: jsonD.pangkat,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Pangkat</Form.Label>\n                        <Form.Control\n                          name='pangkat'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.pangkat ? valuesFormikExist?.pangkat : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/pangkat'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  pangkat?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\n\nexport function TambahPangkat() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      pangkat: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        pangkat: valuesFormik?.pangkat ? valuesFormik.pangkat : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${PANGKAT_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${PANGKAT_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/pangkat', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/pangkat', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>pangkat</Form.Label>\n                        <Form.Control\n                          name='pangkat'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.pangkat}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/pangkat'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\nimport { TEMPAT_PELAKSANA_URL } from './Lihat-master/LihatTempatPelaksanaan'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const BIDANG_WILAYAH_URL = `${API_URL}/master/bidang-wilayah`\n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  nama?: string\n  kategori?: string\n}\n\nconst validatorForm = Yup.object().shape({\n  kategori: Yup.string().required('Wajib diisi'),\n  nama: Yup.string().required('Wajib diisi'),\n})\n\nexport function TempatPelaksanaan() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterTempatPelaksanaan, setFilterTempatPelaksanaan] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterTempatPelaksanaan.val !== '') {\n      uriParam += `${valFilterTempatPelaksanaan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterTempatPelaksanaan({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputTempatPelaksanaan = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterTempatPelaksanaan({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{row.serial}</div>\n      },\n    },\n    {\n      name: 'Bidang/Wilayah',\n      selector: (row: any) => row.nama,\n      sortable: true,\n      sortField: 'nama',\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {\n      name: 'Kategori',\n      selector: (row: any) => row.kategori,\n      sortable: true,\n      sortField: 'kategori',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/TempatPelaksanaan/LihatTempatPelaksanaan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${BIDANG_WILAYAH_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${BIDANG_WILAYAH_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        nama: valuesFormik?.nama, //? valuesFormik.nama : '',\n        kategori: valuesFormik?.kategori //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${BIDANG_WILAYAH_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${BIDANG_WILAYAH_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      nama: '',\n      kategori: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${BIDANG_WILAYAH_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${BIDANG_WILAYAH_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Tempat Pelaksanaan</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterTempatPelaksanaan.val} //4\n            onChange={handleChangeInputTempatPelaksanaan}\n            placeholder='Bidang/Wilayah'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Tempat Pelaksanaan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Nama Bidang/Wilayah</Form.Label>\n                  <Form.Control\n                      name='nama'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.nama && formik.errors.nama,\n                        },\n                        {\n                          'is-valid': formik.touched.nama && !formik.errors.nama,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.nama}\n                    />\n                    {formik.touched.nama && formik.errors.nama && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.nama}</span>\n                        </div>\n                      </div>\n                    )}\n                  <Form.Label>Kategori</Form.Label>\n                  <select\n                          data-control='select2'\n                          data-placeholder='Jenis Kelamin'\n                          name='kategori'\n                          className={clsx(\n                            'form-control form-control-solid mb-1',\n                            {\n                              'is-invalid':\n                                formik.touched.kategori && formik.errors.kategori,\n                            },\n                            {\n                              'is-valid':\n                                formik.touched.kategori && !formik.errors.kategori,\n                            }\n                          )}\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kategori}\n                        >\n                          <option value=''>Pilih</option>\n                          <option value='Bidang'>Bidang</option>\n                          <option value='Wilayah'>Wilayah</option>\n                        </select>\n                        {formik.touched.kategori && formik.errors.kategori && (\n                          <div className='fv-plugins-message-container'>\n                            <div className='fv-help-block'>\n                              <span role='alert'>{formik.errors.kategori}</span>\n                            </div>\n                          </div>\n                        )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  nama?: string\n  kategori?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  nama?: string\n  kategori?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const BIDANG_WILAYAH_URL = `${API_URL}/master/bidang-wilayah` //http://localhost:3000//master/kota\n\nexport function UpdateTempatPelaksanaan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${BIDANG_WILAYAH_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        nama: jsonD.nama,\n        kategori: jsonD.kategori,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      nama: '',\n      kategori: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        nama : valuesFormik?.nama\n          ? valuesFormik.nama\n          : valuesFormikExist?.nama\n          ? valuesFormikExist.nama\n          : '',\n          kategori: valuesFormik?.kategori\n          ? valuesFormik.kategori\n          : valuesFormikExist?.kategori\n          ? valuesFormikExist.kategori\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${BIDANG_WILAYAH_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${BIDANG_WILAYAH_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/TempatPelaksanaan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/TempatPelaksanaan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Bidang Wilayah</Form.Label>\n                        <Form.Control\n                          name='nama'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.nama || valuesFormik?.nama === ''\n                              ? valuesFormik?.nama\n                              : valuesFormikExist?.nama\n                              ? valuesFormikExist?.nama\n                              : ''\n                          }\n                        />\n                        <Form.Label>Kategori</Form.Label>\n                        <Form.Control\n                          name='kategori'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kategori || valuesFormik?.kategori === ''\n                              ? valuesFormik?.kategori\n                              : valuesFormikExist?.kategori\n                              ? valuesFormikExist?.kategori\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/TempatPelaksanaan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  nama?: string\n  kode?: string\n  updated_by?: string\n  kategori?: string\n}\n\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  nama?: string\n  kategori?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const TEMPAT_PELAKSANA_URL = `${API_URL}/master/bidang-wilayah` //http://localhost:3000/sarana-prasarana\n\nexport function LihatTempatPelaksanaan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${TEMPAT_PELAKSANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        nama: jsonD.nama,\n        kode: jsonD.kode,\n        kategori: jsonD.kategori,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Tempat Pelaksana</Form.Label>\n                        <Form.Control\n                          name='nama'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.nama ? valuesFormikExist?.nama : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode</Form.Label>\n                        <Form.Control\n                          name='kode'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kategori</Form.Label>\n                        <Form.Control\n                          name='kategori'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kategori ? valuesFormikExist?.kategori : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/TempatPelaksanaan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const SKPD_URL = `${API_URL}/master/skpd`\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  skpd?: string\n}\n\nconst validatorForm = Yup.object().shape({\n  skpd: Yup.string().required('Wajib diisi'),\n})\n\nexport function SKPD() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterSKPD, setFilterSKPD] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([]) // Urutan 1\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => {\n    //3\n    let uriParam = ''\n    if (valFilterSKPD.val !== '') {\n      uriParam += `${valFilterSKPD.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handleFilterReset = () => {\n    setFilterSKPD({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputSKPD = (event: {\n    //5\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterSKPD({val: event.target.value})\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  // let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No', // Urutan 2\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{row.serial}</div>\n      },\n    },\n    {\n      name: 'SKPD',\n      selector: (row: any) => row.skpd,\n      sortable: true,\n      sortField: 'skpd',\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/SKPD/LihatSKPD/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${SKPD_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${SKPD_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        skpd: valuesFormik?.skpd, //? valuesFormik.skpd : '',\n      }\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${SKPD_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(`${SKPD_URL}/update/${idEditData.id}`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      skpd: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n\n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${SKPD_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n\n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${SKPD_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>SKPD</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterSKPD.val} //4\n            onChange={handleChangeInputSKPD}\n            placeholder='SKPD'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}>\n            {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} SKPD</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>SKPD</Form.Label>\n                  <Form.Control\n                    name='skpd'\n                    className={clsx(\n                      'form-control form-control-solid mb-1',\n                      {\n                        'is-invalid': formik.touched.skpd && formik.errors.skpd,\n                      },\n                      {\n                        'is-valid': formik.touched.skpd && !formik.errors.skpd,\n                      }\n                    )}\n                    onChange={handleChangeFormik}\n                    value={valuesFormik?.skpd}\n                  />\n                  {formik.touched.skpd && formik.errors.skpd && (\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>\n                        <span role='alert'>{formik.errors.skpd}</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n        {temp?.length > 0 && temp && ( //urutan 4\n          <DataTable\n            columns={columns}\n            data={temp}\n            progressPending={loading}\n            customStyles={customStyles}\n            progressComponent={<LoadingAnimation />}\n            pagination\n            // paginationServer\n            paginationTotalRows={totalRows}\n            //    expandableRowsComponent={(row) => (\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n            // )}\n            // expandableRowsComponent={ExpandedComponent}\n            // onChangeRowsPerPage={handlePerRowsChange}\n            // onChangePage={handlePageChange}\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n            noDataComponent={\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n                <div className='d-flex flex-column'>\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n                </div>\n              </div>\n            }\n          />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  skpd?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  skpd?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SKPD_URL = `${API_URL}/master/skpd` //http://localhost:3000//master/SKPD\n\nexport function UpdateSKPD() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${SKPD_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        skpd: jsonD.skpd,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      skpd: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        skpd: valuesFormik?.skpd\n          ? valuesFormik.skpd\n          : valuesFormikExist?.skpd\n          ? valuesFormikExist.skpd\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${SKPD_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${SKPD_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/SKPD', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/SKPD', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>SKPD</Form.Label>\n                        <Form.Control\n                          name='skpd'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.skpd || valuesFormik?.skpd === ''\n                              ? valuesFormik?.skpd\n                              : valuesFormikExist?.skpd\n                              ? valuesFormikExist?.skpd\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/SKPD'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  skpd?: string\n  kode?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  skpd?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SKPD_URL = `${API_URL}/master/skpd` //http://localhost:3000/sarana-prasarana\n\nexport function LihatSKPD() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${SKPD_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        skpd: jsonD.skpd,\n        kode: jsonD.kode,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>SKPD</Form.Label>\n                        <Form.Control\n                          name='skpd'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.skpd ? valuesFormikExist?.skpd : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode</Form.Label>\n                        <Form.Control\n                          name='kode'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/SKPD'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const PENDIDIKAN_URL = `${API_URL}/master/pendidikan` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nexport interface FormInput {\n  pendidikan?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  pendidikan: Yup.string().required('Wajib diisi'),\n})\n\nexport function Pendidikan() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterPendidikan, setFilterPendidikan] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterPendidikan.val !== '') {\n      uriParam += `${valFilterPendidikan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterPendidikan({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputPendidikan = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterPendidikan({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{row.serial}</div>\n      },\n    },\n    {},\n    {\n      name: 'Pendidikan',\n      selector: (row: any) => row.pendidikan,\n      sortable: true,\n      sortField: 'pendidikan',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    menuPosition=\"top\"\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Pendidikan/LihatPendidikan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${PENDIDIKAN_URL}/filter-pendidikan/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${PENDIDIKAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        pendidikan: valuesFormik?.pendidikan, //? valuesFormik.pendidikan : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${PENDIDIKAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${PENDIDIKAN_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      pendidikan: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${PENDIDIKAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${PENDIDIKAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Pendidikan</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterPendidikan.val} //4\n            onChange={handleChangeInputPendidikan}\n            placeholder='Pendidikan'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Pendidikan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Pendidikan</Form.Label>\n                  <Form.Control\n                      name='pendidikan'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.pendidikan && formik.errors.pendidikan,\n                        },\n                        {\n                          'is-valid': formik.touched.pendidikan && !formik.errors.pendidikan,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.pendidikan}\n                    />\n                    {formik.touched.pendidikan && formik.errors.pendidikan && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.pendidikan}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  pendidikan?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  pendidikan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PENDIDIKAN_URL = `${API_URL}/master/pendidikan` //http://localhost:3000/sarana-prasarana\n\nexport function LihatPendidikan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${PENDIDIKAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        pendidikan: jsonD.pendidikan,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Pendidikan</Form.Label>\n                        <Form.Control\n                          name='pendidikan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.pendidikan ? valuesFormikExist?.pendidikan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Pendidikan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  jenis_sarana_prasarana?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  jenis_sarana_prasarana: Yup.string().required('Wajib diisi'),\n})\n\nexport function JenisSaranaPrasarana() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterJenisSaranaPrasarana, setFilterJenisSaranaPrasarana] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterJenisSaranaPrasarana.val !== '') {\n      uriParam += `${valFilterJenisSaranaPrasarana.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterJenisSaranaPrasarana({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputJenisSaranaPrasarana = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisSaranaPrasarana({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  // let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Jenis Sarana Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisSaranaPrasarana/LihatJenisSaranaPrasarana/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_sarana_prasarana: valuesFormik?.jenis_sarana_prasarana, //? valuesFormik.jenis_sarana_prasarana : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_SARANA_PRASARANA_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_SARANA_PRASARANA_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_sarana_prasarana: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Jenis Sarana Prasarana</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisSaranaPrasarana.val} //4\n            onChange={handleChangeInputJenisSaranaPrasarana}\n            placeholder='Jenis Sarana Prasarana'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Sarana Prasarana</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Jenis Sarana Prasarana</Form.Label>\n                  <Form.Control\n                      name='jenis_sarana_prasarana'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_sarana_prasarana && formik.errors.jenis_sarana_prasarana,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_sarana_prasarana && !formik.errors.jenis_sarana_prasarana,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_sarana_prasarana}\n                    />\n                    {formik.touched.jenis_sarana_prasarana && formik.errors.jenis_sarana_prasarana && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_sarana_prasarana}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n        {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_sarana_prasarana?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_sarana_prasarana?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\n\nexport function UpdateJenisSaranaPrasarana() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_sarana_prasarana: jsonD.jenis_sarana_prasarana,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_sarana_prasarana: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_sarana_prasarana: valuesFormik?.jenis_sarana_prasarana\n          ? valuesFormik.jenis_sarana_prasarana\n          : valuesFormikExist?.jenis_sarana_prasarana\n          ? valuesFormikExist.jenis_sarana_prasarana\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_SARANA_PRASARANA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisSaranaPrasarana', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisSaranaPrasarana', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Sarana Prasarana</Form.Label>\n                        <Form.Control\n                          name='jenis_sarana_prasarana'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_sarana_prasarana || valuesFormik?.jenis_sarana_prasarana === ''\n                              ? valuesFormik?.jenis_sarana_prasarana\n                              : valuesFormikExist?.jenis_sarana_prasarana\n                              ? valuesFormikExist?.jenis_sarana_prasarana\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_sarana_prasarana?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_sarana_prasarana?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` //http://localhost:3000/jenis-Penindakan\n\nexport function LihatJenisSaranaPrasarana() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_sarana_prasarana: jsonD.jenis_sarana_prasarana,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Sarana Prasarana</Form.Label>\n                        <Form.Control\n                          name='jenis_sarana_prasarana'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_sarana_prasarana\n                              ? valuesFormikExist?.jenis_sarana_prasarana\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const GOLONGAN_URL = `${API_URL}/master/golongan` //http://localhost:3000/sarana-prasarana\n\nexport function Golongan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Golongan',\n      selector: (row: any) => row.golongan,\n      sortable: true,\n      sortField: 'golongan',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get( GOLONGAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Golongan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Golongan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Golongan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Golongan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const ESELON_URL = `${API_URL}/master/eselon` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nexport interface FormInput {\n  eselon?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  eselon: Yup.string().required('Wajib diisi'),\n})\n\nexport function Eselon() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterEselon, setFilterEselon] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterEselon.val !== '') {\n      uriParam += `${valFilterEselon.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterEselon({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputEselon = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterEselon({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Eselon',\n      selector: (row: any) => row.eselon,\n      sortable: true,\n      sortField: 'eselon',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    menuPosition=\"top\"\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Eselon/LihatEselon/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${ESELON_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${ESELON_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        eselon: valuesFormik?.eselon, //? valuesFormik.eselon : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${ESELON_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${ESELON_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      eselon: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${ESELON_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${ESELON_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Eselon</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterEselon.val} //4\n            onChange={handleChangeInputEselon}\n            placeholder='Eselon'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Eselon</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Eselon</Form.Label>\n                  <Form.Control\n                      name='eselon'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.eselon && formik.errors.eselon,\n                        },\n                        {\n                          'is-valid': formik.touched.eselon && !formik.errors.eselon,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.eselon}\n                    />\n                    {formik.touched.eselon && formik.errors.eselon && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.eselon}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  eselon?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  eselon?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const ESELON_URL = `${API_URL}/master/eselon` //http://localhost:3000//master/jenis-kejadian\n\nexport function UpdateEselon() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${ESELON_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        eselon: jsonD.eselon,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      eselon: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        eselon: valuesFormik?.eselon\n          ? valuesFormik.eselon\n          : valuesFormikExist?.eselon\n          ? valuesFormikExist.eselon\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${ESELON_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${ESELON_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Eselon', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Eselon', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Eselon</Form.Label>\n                        <Form.Control\n                          name='eselon'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.eselon || valuesFormik?.eselon === ''\n                              ? valuesFormik?.eselon\n                              : valuesFormikExist?.eselon\n                              ? valuesFormikExist?.eselon\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Eselon'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  eselon?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  eselon?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const ESELON_URL = `${API_URL}/master/eselon` //http://localhost:3000/jenis-kejadian\n\nexport function LihatEselon() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${ESELON_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        eselon: jsonD.eselon,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Eselon</Form.Label>\n                        <Form.Control\n                          name='eselon'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.eselon\n                              ? valuesFormikExist?.eselon\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Eselon'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { useFormik, FormikHelpers } from 'formik'\nimport { Link, useNavigate } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport clsx from 'clsx'\nimport Swal from 'sweetalert2'\n\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JABATAN_URL = `${API_URL}/master/jabatan` //http://localhost:3000/sarana-prasarana\nexport interface FormInput {\n  jabatan?: string\n  status?: string\n  created_by?: number\n}\nexport function Jabatan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const navigate = useNavigate()\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n  \n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n      wrap: true,\n    },\n    {\n      name: 'Jabatan',\n      selector: (row: any) => row.jabatan,\n      sortable: true,\n      sortField: 'jabatan',\n    }, {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n      wrap: true,\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/master/LihatJabatan\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JABATAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:', temp);\n\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n\n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :', data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      jabatan: '',\n      status: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jabatan: valuesFormik?.jabatan ? valuesFormik.jabatan : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JABATAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JABATAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/jabatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/jabatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Jabatan\n          </label>\n          <input\n            type='text' className='form-control form-control form-control-solid' name='tags' />\n        </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah Jabatan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Form.Group className=\"mb-3 form-control-solid\">\n              <Form.Label>Jabatan</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Jabatan\" />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3 form-control-solid\">\n            <label className='required fw-semibold fs-6 mb-2'>Status</label>\n              <select\n                data-control='select2'\n                data-placeholder='Status'\n                name='status'\n                className={clsx(\n                  'form-control form-control-solid mb-1',\n                  {\n                    'is-invalid':\n                      formik.touched.status && formik.errors.status,\n                  },\n                  {\n                    'is-valid':\n                      formik.touched.status && !formik.errors.status,\n                  }\n                )}\n                onChange={handleChangeFormik}\n                value={valuesFormik?.status}\n              >\n                <option value=''>Pilih</option>\n                <option value='JFT'>JFT</option>\n                <option value='Non JFT'>Non JFT</option>\n              </select>\n            </Form.Group>\n\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleClose}>\n              <i className=\"fa-solid fa-paper-plane\"></i>\n              Simpan\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable\n          columns={columns}\n          data={temp}\n          pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nexport interface FormInput {\n  sumber_informasi?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  sumber_informasi: Yup.string().required('Wajib diisi'),\n})\n\nexport function SumberInformasi() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterSumberInformasi, setFilterSumberInformasi] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterSumberInformasi.val !== '') {\n      uriParam += `${valFilterSumberInformasi.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterSumberInformasi({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputSumberInformasi = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterSumberInformasi({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Sumber Informasi',\n      selector: (row: any) => row.sumber_informasi,\n      sortable: true,\n      sortField: 'sumber_informasi',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    menuPosition=\"top\"\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/SumberInformasi/LihatSumberInformasi/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${SUMBER_INFORMASI_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        sumber_informasi: valuesFormik?.sumber_informasi, //? valuesFormik.sumber_informasi : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${SUMBER_INFORMASI_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${SUMBER_INFORMASI_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      sumber_informasi: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${SUMBER_INFORMASI_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Sumber Informasi</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterSumberInformasi.val} //4\n            onChange={handleChangeInputSumberInformasi}\n            placeholder='Sumber Informasi'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Sumber Informasi</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Sumber Informasi</Form.Label>\n                  <Form.Control\n                      name='sumber_informasi'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.sumber_informasi && formik.errors.sumber_informasi,\n                        },\n                        {\n                          'is-valid': formik.touched.sumber_informasi && !formik.errors.sumber_informasi,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.sumber_informasi}\n                    />\n                    {formik.touched.sumber_informasi && formik.errors.sumber_informasi && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.sumber_informasi}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  sumber_informasi?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  sumber_informasi?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi` //http://localhost:3000//master/jenis-kejadian\n\nexport function UpdateSumberInformasi() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        sumber_informasi: jsonD.sumber_informasi,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      sumber_informasi: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        sumber_informasi: valuesFormik?.sumber_informasi\n          ? valuesFormik.sumber_informasi\n          : valuesFormikExist?.sumber_informasi\n          ? valuesFormikExist.sumber_informasi\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${SUMBER_INFORMASI_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${SUMBER_INFORMASI_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/SumberInformasi', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/SumberInformasi', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='sumber_informasi'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.sumber_informasi || valuesFormik?.sumber_informasi === ''\n                              ? valuesFormik?.sumber_informasi\n                              : valuesFormikExist?.sumber_informasi\n                              ? valuesFormikExist?.sumber_informasi\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/SumberInformasi'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  sumber_informasi?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  sumber_informasi?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi`//http://localhost:3000/jenis-kejadian\n\nexport function LihatSumberInformasi() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        sumber_informasi: jsonD.sumber_informasi,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='sumber_informasi'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.sumber_informasi\n                              ? valuesFormikExist?.sumber_informasi\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/SumberInformasi'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  jenis_kekerasan?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  jenis_kekerasan: Yup.string().required('Wajib diisi'),\n})\n\nexport function JenisKekerasan() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterJenisKekerasan, setFilterJenisKekerasan] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterJenisKekerasan.val !== '') {\n      uriParam += `${valFilterJenisKekerasan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterJenisKekerasan({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputJenisKekerasan = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisKekerasan({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Jenis Kekerasan',\n      selector: (row: any) => row.jenis_kekerasan,\n      sortable: true,\n      sortField: 'jenis_kekerasan',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisKekerasan/LihatJenisKekerasan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_KEKERASAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_kekerasan: valuesFormik?.jenis_kekerasan, //? valuesFormik.jenis_kekerasan : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_KEKERASAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_KEKERASAN_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_kekerasan: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_KEKERASAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Jenis Kekerasan</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisKekerasan.val} //4\n            onChange={handleChangeInputJenisKekerasan}\n            placeholder='Jenis Kekerasan'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Kekerasan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Jenis Kekerasan</Form.Label>\n                  <Form.Control\n                      name='jenis_kekerasan'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_kekerasan && formik.errors.jenis_kekerasan,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_kekerasan && !formik.errors.jenis_kekerasan,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_kekerasan}\n                    />\n                    {formik.touched.jenis_kekerasan && formik.errors.jenis_kekerasan && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_kekerasan}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kekerasan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_kekerasan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` //http://localhost:3000//master/JenisKekerasan\n\nexport function UpdateJenisKekerasan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kekerasan: jsonD.jenis_kekerasan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kekerasan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kekerasan: valuesFormik?.jenis_kekerasan\n          ? valuesFormik.jenis_kekerasan\n          : valuesFormikExist?.jenis_kekerasan\n          ? valuesFormikExist.jenis_kekerasan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_KEKERASAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_KEKERASAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKekerasan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKekerasan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='jenis_kekerasan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_kekerasan || valuesFormik?.jenis_kekerasan === ''\n                              ? valuesFormik?.jenis_kekerasan\n                              : valuesFormikExist?.jenis_kekerasan\n                              ? valuesFormikExist?.jenis_kekerasan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKekerasan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_kekerasan?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_kekerasan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` //http://localhost:3000/JenisKekerasan\n\nexport function LihatJenisKekerasan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kekerasan: jsonD.jenis_kekerasan,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kekerasan</Form.Label>\n                        <Form.Control\n                          name='jenis_kekerasan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_kekerasan\n                              ? valuesFormikExist?.jenis_kekerasan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKekerasan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_PENERTIBAN_URL = `${API_URL}/master/jenis-penertiban`\n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  jenis_penertiban?: string\n}\n\nconst validatorForm = Yup.object().shape({\n  jenis_penertiban: Yup.string().required('Wajib diisi'),\n})\n\nexport function JenisPenertiban() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterJenisPenertiban, setFilterJenisPenertiban] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterJenisPenertiban.val !== '') {\n      uriParam += `${valFilterJenisPenertiban.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterJenisPenertiban({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputJenisPenertiban = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisPenertiban({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {\n      name: 'Jenis Penertiban',\n      selector: (row: any) => row.jenis_penertiban,\n      sortable: true,\n      sortField: 'jenis_penertiban',\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisPenertiban/LihatJenisPenertiban/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_PENERTIBAN_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_PENERTIBAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_penertiban: valuesFormik?.jenis_penertiban, //? valuesFormik.jenis_penertiban : '',\n      }\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_PENERTIBAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_PENERTIBAN_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_penertiban: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_PENERTIBAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_PENERTIBAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Jenis Penertiban</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisPenertiban.val} //4\n            onChange={handleChangeInputJenisPenertiban}\n            placeholder='Jenis Penertiban'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Penertiban</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Jenis Penertiban</Form.Label>\n                  <Form.Control\n                      name='jenis_penertiban'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_penertiban && formik.errors.jenis_penertiban,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_penertiban && !formik.errors.jenis_penertiban,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_penertiban}\n                    />\n                    {formik.touched.jenis_penertiban && formik.errors.jenis_penertiban && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_penertiban}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_penertiban?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  jenis_penertiban?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PENERTIBAN_URL = `${API_URL}/master/jenis-penertiban` //http://localhost:3000//master/kota\n\nexport function UpdateJenisPenertiban() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PENERTIBAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_penertiban: jsonD.jenis_penertiban,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_penertiban: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_penertiban: valuesFormik?.jenis_penertiban\n          ? valuesFormik.jenis_penertiban\n          : valuesFormikExist?.jenis_penertiban\n          ? valuesFormikExist.jenis_penertiban\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_PENERTIBAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_PENERTIBAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisPenertiban', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisPenertiban', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Penertiban</Form.Label>\n                        <Form.Control\n                          name='jenis_penertiban'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_penertiban || valuesFormik?.jenis_penertiban === ''\n                              ? valuesFormik?.jenis_penertiban\n                              : valuesFormikExist?.jenis_penertiban\n                              ? valuesFormikExist?.jenis_penertiban\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPenertiban'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_penertiban?: string\n  kode?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  jenis_penertiban?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PENERTIBAN_URL = `${API_URL}/master/jenis-penertiban` //http://localhost:3000/sarana-prasarana\n\nexport function LihatJenisPenertiban() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PENERTIBAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_penertiban: jsonD.jenis_penertiban,\n        kode: jsonD.kode,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Penertiban</Form.Label>\n                        <Form.Control\n                          name='jenis_penertiban'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.jenis_penertiban ? valuesFormikExist?.jenis_penertiban : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode</Form.Label>\n                        <Form.Control\n                          name='kode'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPenertiban'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function JenisPenyelesaian() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Penyelesaian\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Penyelesaian</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Penyelesaian</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Penyelesaian\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React from 'react'\nimport { Navigate, Route, Routes, Outlet } from 'react-router-dom'\nimport { PageLink, PageTitle } from '../../../_metronic/layout/core'\n\nimport { Kota } from './components/Kota'\nimport { LihatKota } from './components/Lihat-master/LihatKota'\nimport { UpdateKota } from './components/Update-master/UpdateKota'\nimport { TambahKota } from './components/Tambah-master/TambahKota'\n\nimport { Kecamatan } from './components/Kecamatan'\nimport { LihatKecamatan } from './components/Lihat-master/LihatKecamatan'\nimport { UpdateKecamatan } from './components/Update-master/UpdateKecamatan'\nimport { TambahKecamatan } from './components/Tambah-master/TambahKecamatan'\n\nimport { Kelurahan } from './components/Kelurahan'\nimport { LihatKelurahan } from './components/Lihat-master/LihatKelurahan'\nimport { UpdateKelurahan } from './components/Update-master/UpdateKelurahan'\nimport { TambahKelurahan } from './components/Tambah-master/TambahKelurahan'\n\nimport { JenisKegiatan } from './components/JenisKegiatan'\nimport { LihatJenisKegiatan } from './components/Lihat-master/LihatJenisKegiatan'\nimport { UpdateJenisKegiatan } from './components/Update-master/UpdateJenisKegiatan'\nimport { TambahJenisKegiatan } from './components/Tambah-master/TambahJenisKegiatan'\n\nimport { JenisKejadian } from './components/JenisKejadian'\nimport { LihatJenisKejadian } from './components/Lihat-master/LihatJenisKejadian'\nimport { UpdateJenisKejadian } from './components/Update-master/UpdateJenisKejadian'\nimport { TambahJenisKejadian } from './components/Tambah-master/TambahJenisKejadian'\n\nimport { JenisPelanggaran } from './components/JenisPelanggaran'\n\nimport { JenisPertolongan } from './components/JenisPertolongan'\nimport { LihatJenisPertolongan } from './components/Lihat-master/LihatJenisPertolongan'\nimport { UpdateJenisPertolongan } from './components/Update-master/UpdateJenisPertolongan'\n\nimport { JenisPerdaPerkada } from './components/JenisPerdaPerkada'\n\nimport { JenisPenindakan } from './components/JenisPenindakan'\nimport { LihatJenisPenindakan } from './components/Lihat-master/LihatJenisPenindakan'\nimport { UpdateJenisPenindakan } from './components/Update-master/UpdateJenisPenindakan'\n\nimport { KorbanJiwa } from './components/KorbanJiwa'\nimport { LihatKorbanJiwa } from './components/Lihat-master/LihatKorbanJiwa'\nimport { UpdateKorbanJiwa } from './components/Update-master/UpdateKorbanJiwa'\nimport { TambahKorbanJiwa } from './components/Tambah-master/TambahKorbanJiwa'\n\nimport { KorbanMaterial } from './components/KorbanMaterial'\nimport { LihatKorbanMaterial } from './components/Lihat-master/LihatKorbanMaterial'\nimport { UpdateKorbanMaterial } from './components/Update-master/UpdateKorbanMaterial'\n\nimport { JenisBantuan } from './components/JenisBantuan'\nimport { LihatJenisBantuan } from './components/Lihat-master/LihatJenisBantuan'\nimport { UpdateJenisBantuan } from './components/Update-master/UpdateJenisBantuan'\n\nimport { InstansiTerkait } from './components/InstansiTerkait'\n\nimport { KondisiSaranaPrasarana } from './components/KondisiSaranaPrasarana'\nimport { LihatKondisiSaranaPrasarana } from './components/Lihat-master/LihatKondisiSaranaPrasarana'\nimport { UpdateKondisiSaranaPrasarana } from './components/Update-master/UpdateKondisiSaranaPrasarana'\n\n\nimport { StatusSaranaPrasarana } from './components/StatusSaranaPrasarana'\nimport { LihatStatusSaranaPrasarana } from './components/Lihat-master/LihatStatusSaranaPrasarana'\nimport { UpdateStatusSaranaPrasarana } from './components/Update-master/UpdateStatusSaranaPrasarana'\n\nimport { Agama } from './components/Agama'\nimport { LihatAgama } from './components/Lihat-master/LihatAgama'\nimport { UpdateAgama } from './components/Update-master/UpdateAgama'\nimport { TambahAgama } from './components/Tambah-master/TambahAgama'\n\nimport { Pangkat } from './components/Pangkat'\nimport { UpdatePangkat } from './components/Update-master/UpdatePangkat'\nimport { LihatPangkat } from './components/Lihat-master/LihatPangkat'\nimport { TambahPangkat } from './components/Tambah-master/TambahPangkat'\n\nimport { TempatPelaksanaan } from './components/TempatPelaksanaan'\nimport { UpdateTempatPelaksanaan } from './components/Update-master/UpdateTempatPelaksanaan'\nimport { LihatTempatPelaksanaan } from './components/Lihat-master/LihatTempatPelaksanaan'\n\nimport { SKPD } from './components/SKPD'\nimport { UpdateSKPD } from './components/Update-master/UpdateSKPD'\nimport { LihatSKPD } from './components/Lihat-master/LihatSKPD'\n\nimport { Pendidikan } from './components/Pendidikan'\nimport { LihatPendidikan } from './components/Lihat-master/LihatPendidikan'\n\n\nimport { JenisSaranaPrasarana } from './components/JenisSaranaPrasarana'\nimport { UpdateJenisSaranaPrasarana } from './components/Update-master/UpdateJenisSaranaPrasarana'\nimport { LihatJenisSaranaPrasarana } from './components/Lihat-master/LihatJenisSaranaPrasarana'\n\nimport { Golongan } from './components/Golongan'\n\nimport { Eselon } from './components/Eselon'\nimport { UpdateEselon } from './components/Update-master/UpdateEselon'\nimport { LihatEselon } from './components/Lihat-master/LihatEselon'\n\nimport { Jabatan } from './components/Jabatan'\n\nimport { SumberInformasi } from './components/SumberInformasi'\nimport { UpdateSumberInformasi } from './components/Update-master/UpdateSumberInformasi'\nimport { LihatSumberInformasi } from './components/Lihat-master/LihatSumberInformasi'\n\nimport { JenisKekerasan } from './components/JenisKekerasan'\nimport { UpdateJenisKekerasan } from './components/Update-master/UpdateJenisKekerasan'\nimport { LihatJenisKekerasan } from './components/Lihat-master/LihatJenisKekerasan'\n\nimport { JenisPenertiban } from './components/JenisPenertiban'\nimport { UpdateJenisPenertiban } from './components/Update-master/UpdateJenisPenertiban'\nimport { LihatJenisPenertiban } from './components/Lihat-master/LihatJenisPenertiban'\n\nimport { JenisPenyelesaian } from './components/JenisPenyelesaian'\n\nconst masterBreadCrumbs: Array<PageLink> = [\n  {\n    title: 'Master',\n    path: '/master/InformasiDataMaster',\n    isSeparator: false,\n    isActive: false,\n  },\n  {\n    title: '',\n    path: '',\n    isSeparator: true,\n    isActive: false,\n  },\n]\n\nconst MasterPage: React.FC = () => {\n  return (\n    <Routes>\n      <Route\n        element={\n          <>\n            <Outlet />\n          </>\n        }\n      >\n        <Route\n          path='Kota'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kota</PageTitle>\n              <Kota />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/UpdateKecamatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kecamatan</PageTitle>\n              <UpdateKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/LihatKecamatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kecamatan</PageTitle>\n              <LihatKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/TambahKecamatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kecamatan</PageTitle>\n              <TambahKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='SKPD'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>SKPD</PageTitle>\n              <SKPD />\n            </>\n          }\n        />\n        <Route\n          path='SKPD/UpdateSKPD/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update SKPD</PageTitle>\n              <UpdateSKPD />\n            </>\n          }\n        />\n        <Route\n          path='SKPD/LihatSKPD/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat SKPD</PageTitle>\n              <LihatSKPD />\n            </>\n          }\n        />\n        <Route\n          path='Pendidikan/LihatPendidikan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Pendidikan</PageTitle>\n              <LihatPendidikan />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Pangkat</PageTitle>\n              <Pangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/UpdatePangkat/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Pangkat</PageTitle>\n              <UpdatePangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/LihatPangkat/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Pangkat</PageTitle>\n              <LihatPangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/TambahPangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Pangkat</PageTitle>\n              <TambahPangkat />\n            </>\n          }\n        />\n\n        <Route\n          path='TempatPelaksanaan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tempat Pelaksanaan</PageTitle>\n              <TempatPelaksanaan />\n            </>\n          }\n        />\n\n<Route\n          path='TempatPelaksanaan/UpdateTempatPelaksanaan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update TempatPelaksanaan</PageTitle>\n              <UpdateTempatPelaksanaan />\n            </>\n          }\n        />\n        <Route\n          path='TempatPelaksanaan/LihatTempatPelaksanaan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat TempatPelaksanaan</PageTitle>\n              <LihatTempatPelaksanaan />\n            </>\n          }\n        />\n\n        <Route\n          path='Golongan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Golongan </PageTitle>\n              <Golongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jenis Sarana Prasarana </PageTitle>\n              <JenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana/UpdateJenisSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Sarana Prasarana</PageTitle>\n              <UpdateJenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana/LihatJenisSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Sarana Prasarana</PageTitle>\n              <LihatJenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='KondisiSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Kondisi Sarana Prasarana </PageTitle>\n              <KondisiSaranaPrasarana />\n            </>\n          }\n        />\n         <Route\n          path='KondisiSaranaPrasarana/UpdateKondisiSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kondisi Sarana Prasarana</PageTitle>\n              <UpdateKondisiSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='KondisiSaranaPrasarana/LihatKondisiSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kondisi Sarana Prasarana</PageTitle>\n              <LihatKondisiSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='StatusSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Status Sarana Prasarana </PageTitle>\n              <StatusSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='StatusSaranaPrasarana/UpdateStatusSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Status Sarana Prasarana</PageTitle>\n              <UpdateStatusSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='StatusSaranaPrasarana/LihatStatusSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Status Sarana Prasarana</PageTitle>\n              <LihatStatusSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kecamatan</PageTitle>\n              <Kecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kota/UpdateKota/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kota</PageTitle>\n              <UpdateKota />\n            </>\n          }\n        />\n        <Route\n          path='Kota/LihatKota/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kota</PageTitle>\n              <LihatKota />\n            </>\n          }\n        />\n        <Route\n          path='Kota/TambahKota'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kota</PageTitle>\n              <TambahKota />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kelurahan</PageTitle>\n              <Kelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/UpdateKelurahan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kelurahan</PageTitle>\n              <UpdateKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/TambahKelurahan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kelurahan</PageTitle>\n              <TambahKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/LihatKelurahan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kelurahan</PageTitle>\n              <LihatKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kegiatan </PageTitle>\n              <JenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/UpdateJenisKegiatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisKegiatan</PageTitle>\n              <UpdateJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/TambahJenisKegiatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Kegiatan</PageTitle>\n              <TambahJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/LihatJenisKegiatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Kegiatan</PageTitle>\n              <LihatJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kejadian </PageTitle>\n              <JenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/UpdateJenisKejadian/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Kejadian</PageTitle>\n              <UpdateJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/LihatJenisKejadian/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Kejadian</PageTitle>\n              <LihatJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/TambahJenisKejadian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Kejadian</PageTitle>\n              <TambahJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='Agama'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Agama</PageTitle>\n              <Agama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/UpdateAgama/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Agama</PageTitle>\n              <UpdateAgama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/LihatAgama/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Agama</PageTitle>\n              <LihatAgama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/TambahAgama'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Agama</PageTitle>\n              <TambahAgama />\n            </>\n          }\n        />\n        <Route\n          path='Jabatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jabatan </PageTitle>\n              <Jabatan />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/tambah-jabatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jabatan </PageTitle>\n              <Jabatan />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/update-jabatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Agama</PageTitle>\n              <UpdateAgama />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/lihat-jabatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Agama</PageTitle>\n              <LihatAgama />\n            </>\n          }\n        />\n        <Route\n          path='Eselon'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Eselon </PageTitle>\n              <Eselon />\n            </>\n          }\n        />\n        <Route\n          path='Eselon/UpdateEselon/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Eselon</PageTitle>\n              <UpdateEselon />\n            </>\n          }\n        />\n        <Route\n          path='Eselon/LihatEselon/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Eselon</PageTitle>\n              <LihatEselon />\n            </>\n          }\n        />\n\n        <Route\n          path='Pendidikan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Pendidikan </PageTitle>\n              <Pendidikan />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Sumber Informasi </PageTitle>\n              <SumberInformasi />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi/UpdateSumberInformasi/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Sumber Informasi</PageTitle>\n              <UpdateSumberInformasi />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi/LihatSumberInformasi/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Sumber Informasi</PageTitle>\n              <LihatSumberInformasi />\n            </>\n          }\n        />\n        {/* <Route\n          path='SumberInformasi/TambahSumberInformasi/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Sumber Informasi</PageTitle>\n              <TambahSumberInformasi />\n            </>\n          }\n        /> */}\n        <Route\n          path='JenisPelanggaran'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pelanggaran</PageTitle>\n              <JenisPelanggaran />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pertolongan</PageTitle>\n              <JenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan/UpdateJenisPertolongan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Pertolongan</PageTitle>\n              <UpdateJenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan/LihatJenisPertolongan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Pertolongan</PageTitle>\n              <LihatJenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penindakan</PageTitle>\n              <JenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan/UpdateJenisPenindakan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Penindakan</PageTitle>\n              <UpdateJenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan/LihatJenisPenindakan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Penindakan</PageTitle>\n              <LihatJenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPerdaPerkada'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Perda / Perkada</PageTitle>\n              <JenisPerdaPerkada />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kekerasan</PageTitle>\n              <JenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan/UpdateJenisKekerasan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisKekerasan</PageTitle>\n              <UpdateJenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan/LihatJenisKekerasan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat JenisKekerasan</PageTitle>\n              <LihatJenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenertiban'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penertiban</PageTitle>\n              <JenisPenertiban />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenertiban/UpdateJenisPenertiban/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Penertiban</PageTitle>\n              <UpdateJenisPenertiban />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenertiban/LihatJenisPenertiban/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Penertiban</PageTitle>\n              <LihatJenisPenertiban />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenyelesaian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penyelesaian</PageTitle>\n              <JenisPenyelesaian />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Jiwa </PageTitle>\n              <KorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/UpdateKorbanJiwa/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update KorbanJiwa</PageTitle>\n              <UpdateKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/LihatKorbanJiwa/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat KorbanJiwa</PageTitle>\n              <LihatKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/TambahKorbanJiwa'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah KorbanJiwa</PageTitle>\n              <TambahKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Material</PageTitle>\n              <KorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial/UpdateKorbanMaterial/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update KorbanMaterial</PageTitle>\n              <UpdateKorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial/LihatKorbanMaterial/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat KorbanMaterial</PageTitle>\n              <LihatKorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Bantuan</PageTitle>\n              <JenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan/UpdateJenisBantuan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisBantuan</PageTitle>\n              <UpdateJenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan/LihatJenisBantuan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat JenisBantuan</PageTitle>\n              <LihatJenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='InstansiTerkait'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Instansi Terkait</PageTitle>\n              <InstansiTerkait />\n            </>\n          }\n        />\n\n        <Route index element={<Navigate to='/master' />} />\n      </Route>\n    </Routes>\n  )\n}\n\nexport default MasterPage\n"],"names":["KOTA_URL","process","createTheme","text","primary","secondary","background","default","context","divider","action","button","hover","disabled","systemMode","ThemeModeComponent","customStyles","rows","style","minHeight","headCells","paddingLeft","paddingRight","cells","validatorForm","Yup","shape","kota","required","Kota","navigate","useNavigate","mode","useThemeMode","calculatedMode","useState","val","valFilterKota","setFilterKota","temp","setTemp","loading","setLoading","strparam","qParamFind","setUriFind","show","setShow","handleClose","totalRows","setTotalRows","perPage","handleFilter","uriParam","prevState","LoadingAnimation","props","className","columns","name","selector","row","serial","sortable","cell","sortField","kode","record","Fragment","DropdownButton","map","DropdownType","idx","as","ButtonGroup","id","size","variant","title","Dropdown","href","onClick","replace","doEdit","konfirDel","useEffect","fetchUsers","page","axios","response","data","total_data","timeout","setTimeout","items","Array","from","forEach","item","index","clearTimeout","fetchDT","value","React","valuesFormik","setValuesFormik","aksi","setAksi","formik","useFormik","initialValues","validationSchema","enableReinitialize","onSubmit","values","setSubmitting","bodyparam","Swal","icon","showConfirmButton","timer","idEditData","console","error","setIdEditData","getDetail","idparam","parseInt","prevstate","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","color","then","result","isConfirmed","bodyParam","deleted_by","type","onChange","event","target","placeholder","to","path","Modal","onHide","backdrop","keyboard","centered","closeButton","handleSubmit","Form","clsx","touched","errors","prevValues","role","length","progressPending","progressComponent","pagination","paginationTotalRows","theme","noDataComponent","LihatKota","useParams","valuesFormikExist","setValuesFormikExist","fetchData","jsonD","paramValue","updated_by","readOnly","UpdateKota","selectedFile","formData","FormData","append","log","TambahKota","created_by","return_id","KECAMATAN_URL","Kecamatan","valFilterKecamatan","setFilterKecamatan","kode_kecamatan","width","kecamatan","kode_kota","align","htmlFor","LihatKecamatan","UpdateKecamatan","handleChangeFormik","toUpperCase","TambahKecamatan","KELURAHAN_URL","Kelurahan","valFilterKelurahan","setFilterKelurahan","kode_kelurahan","kelurahan","LihatKelurahan","UpdateKelurahan","TambahKelurahan","JENIS_KEGIATAN_URL","jenis_kegiatan","JenisKegiatan","valFilterJenisKegiatan","setFilterJenisKegiatan","LihatJenisKegiatan","UpdateJenisKegiatan","TambahJenisKegiatan","JENIS_KEJADIAN_URL","jenis_kejadian","JenisKejadian","valFilterJenisKejadian","setFilterJenisKejadian","LihatJenisKejadian","UpdateJenisKejadian","TambahJenisKejadian","JENIS_PELANGGARAN_URL","JenisPelanggaran","jenis_pelanggaran","setData","total","Button","JENIS_PERTOLONGAN_URL","jenis_pertolongan","JenisPertolongan","valFilterJenisPertolongan","setFilterJenisPertolongan","LihatJenisPertolongan","UpdateJenisPertolongan","JENIS_PERDA_PERKADA_URL","JenisPerdaPerkada","judul","deskripsi","JENIS_PENINDAKAN_URL","jenis_penindakan","JenisPenindakan","valFilterJenisPenindakan","setFilterJenisPenindakan","LihatJenisPenindakan","UpdateJenisPenindakan","JENIS_KORBAN_JIWA_URL","jenis_korban_jiwa","KorbanJiwa","valFilterKorbanJiwa","setFilterKorbanJiwa","menuPosition","LihatKorbanJiwa","UpdateKorbanJiwa","TambahKorbanJiwa","JENIS_KORBAN_MATERIAL_URL","jenis_korban_material","KorbanMaterial","valFilterKorbanMaterial","setFilterKorbanMaterial","LihatKorbanMaterial","UpdateKorbanMaterial","JENIS_BANTUAN_URL","jenis_bantuan","JenisBantuan","valFilterJenisBantuan","setFilterJenisBantuan","LihatJenisBantuan","UpdateJenisBantuan","SARANA_PRASARANA_URL","InstansiTerkait","jenis_sarana_prasarana","status_sarana_prasarana","jumlah","kondisi","keterangan","dokumentasi","KONDISI_SARANA_PRASARANA_URL","kondisi_sarana_prasarana","KondisiSaranaPrasarana","valFilterKondisiSaranaPrasarana","setFilterKondisiSaranaPrasarana","LihatKondisiSaranaPrasarana","UpdateKondisiSaranaPrasarana","STATUS_SARANA_PRASARANA_URL","StatusSaranaPrasarana","valFilterStatusSaranaPrasarana","setFilterStatusSaranaPrasarana","LihatStatusSaranaPrasarana","UpdateStatusSaranaPrasarana","AGAMA_URL","agama","Agama","valFilterAgama","setFilterAgama","LihatAgama","UpdateAgama","TambahAgama","PANGKAT_URL","pangkat","Pangkat","valFilterPangkat","setFilterPangkat","UpdatePangkat","LihatPangkat","TambahPangkat","BIDANG_WILAYAH_URL","kategori","nama","TempatPelaksanaan","valFilterTempatPelaksanaan","setFilterTempatPelaksanaan","UpdateTempatPelaksanaan","TEMPAT_PELAKSANA_URL","LihatTempatPelaksanaan","SKPD_URL","skpd","SKPD","valFilterSKPD","setFilterSKPD","UpdateSKPD","LihatSKPD","PENDIDIKAN_URL","pendidikan","Pendidikan","valFilterPendidikan","setFilterPendidikan","LihatPendidikan","JENIS_SARANA_PRASARANA_URL","JenisSaranaPrasarana","valFilterJenisSaranaPrasarana","setFilterJenisSaranaPrasarana","UpdateJenisSaranaPrasarana","LihatJenisSaranaPrasarana","GOLONGAN_URL","Golongan","golongan","ESELON_URL","eselon","Eselon","valFilterEselon","setFilterEselon","UpdateEselon","LihatEselon","JABATAN_URL","Jabatan","wrap","jabatan","status","SUMBER_INFORMASI_URL","sumber_informasi","SumberInformasi","valFilterSumberInformasi","setFilterSumberInformasi","UpdateSumberInformasi","LihatSumberInformasi","JENIS_KEKERASAN_URL","jenis_kekerasan","JenisKekerasan","valFilterJenisKekerasan","setFilterJenisKekerasan","UpdateJenisKekerasan","LihatJenisKekerasan","JENIS_PENERTIBAN_URL","jenis_penertiban","JenisPenertiban","valFilterJenisPenertiban","setFilterJenisPenertiban","UpdateJenisPenertiban","LihatJenisPenertiban","JenisPenyelesaian","masterBreadCrumbs","isSeparator","isActive","element","breadcrumbs"],"sourceRoot":""}