{"version":3,"file":"static/js/13.de2b21ee.chunk.js","mappings":"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","sources":["app/modules/master/components/Kota.tsx","app/modules/master/components/Lihat-master/LihatKota.tsx","app/modules/master/components/Update-master/UpdateKota.tsx","app/modules/master/components/Tambah-master/TambahKota.tsx","app/modules/master/components/Kecamatan.tsx","app/modules/master/components/Lihat-master/LihatKecamatan.tsx","app/modules/master/components/Update-master/UpdateKecamatan.tsx","app/modules/master/components/Tambah-master/TambahKecamatan.tsx","app/modules/master/components/Kelurahan.tsx","app/modules/master/components/Lihat-master/LihatKelurahan.tsx","app/modules/master/components/Update-master/UpdateKelurahan.tsx","app/modules/master/components/Tambah-master/TambahKelurahan.tsx","app/modules/master/components/JenisKegiatan.tsx","app/modules/master/components/Lihat-master/LihatJenisKegiatan.tsx","app/modules/master/components/Update-master/UpdateJenisKegiatan.tsx","app/modules/master/components/Tambah-master/TambahJenisKegiatan.tsx","app/modules/master/components/JenisKejadian.tsx","app/modules/master/components/Lihat-master/LihatJenisKejadian.tsx","app/modules/master/components/Update-master/UpdateJenisKejadian.tsx","app/modules/master/components/Tambah-master/TambahJenisKejadian.tsx","app/modules/master/components/JenisPelanggaran.tsx","app/modules/master/components/Lihat-master/LihatJenisPelanggaran.tsx","app/modules/master/components/JenisPertolongan.tsx","app/modules/master/components/Lihat-master/LihatJenisPertolongan.tsx","app/modules/master/components/Update-master/UpdateJenisPertolongan.tsx","app/modules/master/components/JenisPerdaPerkada.tsx","app/modules/master/components/Lihat-master/LihatJenisPerdaPerkada.tsx","app/modules/master/components/Update-master/UpdateJenisPerdaPerkada.tsx","app/modules/master/components/Tambah-master/TambahJenisPerdaPerkada.tsx","app/modules/master/components/MapPerdaPerkada.tsx","app/modules/master/components/Lihat-master/LihatMapPerdaPerkada.tsx","app/modules/master/components/Update-master/UpdateMapPerdaPerkada.tsx","app/modules/master/components/Tambah-master/TambahMapPerdaPerkada.tsx","app/modules/master/components/JenisPenindakan.tsx","app/modules/master/components/Lihat-master/LihatJenisPenindakan.tsx","app/modules/master/components/Update-master/UpdateJenisPenindakan.tsx","app/modules/master/components/KorbanJiwa.tsx","app/modules/master/components/Lihat-master/LihatKorbanJiwa.tsx","app/modules/master/components/Update-master/UpdateKorbanJiwa.tsx","app/modules/master/components/Tambah-master/TambahKorbanJiwa.tsx","app/modules/master/components/KorbanMaterial.tsx","app/modules/master/components/Lihat-master/LihatKorbanMaterial.tsx","app/modules/master/components/Update-master/UpdateKorbanMaterial.tsx","app/modules/master/components/JenisBantuan.tsx","app/modules/master/components/Lihat-master/LihatJenisBantuan.tsx","app/modules/master/components/Update-master/UpdateJenisBantuan.tsx","app/modules/master/components/InstansiTerkait.tsx","app/modules/master/components/KondisiSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatKondisiSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateKondisiSaranaPrasarana.tsx","app/modules/master/components/StatusSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatStatusSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateStatusSaranaPrasarana.tsx","app/modules/master/components/Agama.tsx","app/modules/master/components/Lihat-master/LihatAgama.tsx","app/modules/master/components/Update-master/UpdateAgama.tsx","app/modules/master/components/Tambah-master/TambahAgama.tsx","app/modules/master/components/Pangkat.tsx","app/modules/master/components/Update-master/UpdatePangkat.tsx","app/modules/master/components/Lihat-master/LihatPangkat.tsx","app/modules/master/components/Tambah-master/TambahPangkat.tsx","app/modules/master/components/TempatPelaksanaan.tsx","app/modules/master/components/Update-master/UpdateTempatPelaksanaan.tsx","app/modules/master/components/Lihat-master/LihatTempatPelaksanaan.tsx","app/modules/master/components/SKPD.tsx","app/modules/master/components/Update-master/UpdateSKPD.tsx","app/modules/master/components/Lihat-master/LihatSKPD.tsx","app/modules/master/components/Pendidikan.tsx","app/modules/master/components/Lihat-master/LihatPendidikan.tsx","app/modules/master/components/JenisSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateJenisSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatJenisSaranaPrasarana.tsx","app/modules/master/components/Golongan.tsx","app/modules/master/components/Eselon.tsx","app/modules/master/components/Update-master/UpdateEselon.tsx","app/modules/master/components/Lihat-master/LihatEselon.tsx","app/modules/master/components/Jabatan.tsx","app/modules/master/components/Lihat-master/LihatJabatan.tsx","app/modules/master/components/Tambah-master/TambahJabatan.tsx","app/modules/master/components/SumberInformasi.tsx","app/modules/master/components/Update-master/UpdateSumberInformasi.tsx","app/modules/master/components/Lihat-master/LihatSumberInformasi.tsx","app/modules/master/components/JenisKekerasan.tsx","app/modules/master/components/Update-master/UpdateJenisKekerasan.tsx","app/modules/master/components/Lihat-master/LihatJenisKekerasan.tsx","app/modules/master/components/JenisPenyelesaian.tsx","app/modules/master/components/StatusKenaikanPangkat.tsx","app/modules/master/components/Lihat-master/LihatStatusKenaikanPangkat.tsx","app/modules/master/MasterPage.tsx"],"sourcesContent":["import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL\r\nexport const KOTA_URL = `${API_URL}/kota`\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  kota?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  kota: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function Kota() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterKota, setFilterKota] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => {\r\n    //3\r\n    let uriParam = ''\r\n    if (valFilterKota.val !== '') {\r\n      uriParam += `${valFilterKota.val}`\r\n    }\r\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterKota({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputKota = (event: {\r\n    //5\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterKota({val: event.target.value})\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Kota',\r\n      selector: (row: any) => row.kota,\r\n      sortable: true,\r\n      sortField: 'kota',\r\n    },\r\n    {\r\n      name: 'Kode',\r\n      selector: (row: any) => row.kode,\r\n      sortable: true,\r\n      sortField: 'kode',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kota/LihatKota/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${KOTA_URL}/filter-kota/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${KOTA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        kota: valuesFormik?.kota, //? valuesFormik.kota : '',\r\n      }\r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(`${KOTA_URL}/update/${idEditData.id}`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      kota: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n\r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${KOTA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n\r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${KOTA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Kota</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterKota.val} //4\r\n            onChange={handleChangeInputKota}\r\n            placeholder='Kota'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}>\r\n            {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Kota</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Kota</Form.Label>\r\n                  <Form.Control\r\n                    name='kota'\r\n                    className={clsx(\r\n                      'form-control form-control-solid mb-1',\r\n                      {\r\n                        'is-invalid': formik.touched.kota && formik.errors.kota,\r\n                      },\r\n                      {\r\n                        'is-valid': formik.touched.kota && !formik.errors.kota,\r\n                      }\r\n                    )}\r\n                    onChange={handleChangeFormik}\r\n                    value={valuesFormik?.kota}\r\n                  />\r\n                  {formik.touched.kota && formik.errors.kota && (\r\n                    <div className='fv-plugins-message-container'>\r\n                      <div className='fv-help-block'>\r\n                        <span role='alert'>{formik.errors.kota}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n        {temp?.length > 0 && temp && (\r\n          <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  kota?: string\r\n  kode?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  kota?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatKota() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KOTA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kota: jsonD.kota,\r\n        kode: jsonD.kode,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kota'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kota ? valuesFormikExist?.kota : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode</Form.Label>\r\n                        <Form.Control\r\n                          name='kode'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kota'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kota?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  kota?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000//master/kota\r\n\r\nexport function UpdateKota() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KOTA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kota: jsonD.kota,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kota: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kota: valuesFormik?.kota\r\n          ? valuesFormik.kota\r\n          : valuesFormikExist?.kota\r\n          ? valuesFormikExist.kota\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${KOTA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${KOTA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Kota', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Kota', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kota'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kota || valuesFormik?.kota === ''\r\n                              ? valuesFormik?.kota\r\n                              : valuesFormikExist?.kota\r\n                              ? valuesFormikExist?.kota\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kota'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kota?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/master/kota\r\n\r\nexport function TambahKota() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kota: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kota: valuesFormik?.kota ? valuesFormik.kota : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\r\n        if (response) {\r\n            if (selectedFile) {\r\n              formData.append('file_dokumentasi', selectedFile)\r\n              const responseFile = await axios.post(\r\n                `${KOTA_URL}/upload-file/${response.data.data.return_id}`,\r\n                formData\r\n              )\r\n              if (responseFile) {\r\n                console.log('File success uploaded!')\r\n                Swal.fire({\r\n                  icon: 'success',\r\n                  title: 'Data berhasil disimpan',\r\n                  showConfirmButton: false,\r\n                  timer: 1500,\r\n                })\r\n                navigate('/master/Kota', {replace: true})\r\n              }\r\n              return\r\n            }\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            navigate('/master/Kota', {replace: true})\r\n          }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kota'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kota}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kota'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Swal from 'sweetalert2'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL //http://localhost:3000\r\nexport const KECAMATAN_URL = `${API_URL}/kecamatan` //http://localhost:3000/master/kecamatan\r\n\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nexport function Kecamatan() {\r\n  const navigate = useNavigate()\r\n\r\n  const [show, setShow] = useState(false)\r\n  const [valFilterKota, setFilterKota] = useState({val: ''})\r\n  const [valFilterKecamatan, setFilterKecamatan] = useState({val: ''})\r\n  const [data, setData] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n \r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n  const handleFilter = async () => {\r\n    let uriParam = ''\r\n    if (valFilterKota.val !== '') {\r\n      uriParam += `kota=${valFilterKota.val}`\r\n    }\r\n    if (valFilterKecamatan.val !== '') {\r\n      uriParam += `&kecamatan=${valFilterKecamatan.val}`\r\n    }\r\n    \r\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\r\n  }\r\n\r\n  const handleChangeInputKota = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterKota({val: event.target.value})\r\n  }\r\n  const handleChangeInputKecamatan = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterKecamatan({val: event.target.value})\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      sortField: 'no',\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Kode Kecamatan',\r\n      selector: (row: any) => row.kode_kecamatan,\r\n      sortable: true,\r\n      sortField: 'kode_kecamatan',\r\n      width: '200px',\r\n    },\r\n    {\r\n      name: 'Kecamatan',\r\n      selector: (row: any) => row.kecamatan,\r\n      sortable: true,\r\n      sortField: 'kecamatan',\r\n      width: '250px',\r\n    },\r\n    {\r\n      name: 'Kode Kota',\r\n      selector: (row: any) => row.kode_kota,\r\n      sortable: true,\r\n      sortField: 'kode_kota',\r\n      width: '150px',\r\n    },\r\n    {\r\n      name: 'Kota',\r\n      selector: (row: any) => row.kota,\r\n      sortable: true,\r\n      sortField: 'kota',\r\n      width: '300px',\r\n    },\r\n    {},\r\n\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      align: 'left',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kecamatan/LihatKecamatan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kecamatan/UpdateKecamatan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Ubah\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n\r\n\r\n  const [temp, setTemp] = useState([])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      console.log(qParamFind)\r\n      const response = await axios.get(\r\n        `${KECAMATAN_URL}/findone-by-kecamatan?${qParamFind.strparam}`\r\n      )\r\n      console.log(response.data.data)\r\n      // setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n  //}\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true)\r\n    const value = await axios.get(KECAMATAN_URL + '/find')\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n\r\n  const handlePageChange = (page: any) => {\r\n    fetchUsers(page)\r\n  }\r\n\r\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n    setLoading(true)\r\n\r\n    const response = await axios.get(\r\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\r\n    )\r\n\r\n    setData(response.data.data)\r\n    setPerPage(newPerPage)\r\n    setLoading(false)\r\n  }\r\n\r\n  const handleSort = (column: any, sortDirection: any) => {\r\n    // simulate server sort\r\n    console.log(column, sortDirection)\r\n    setLoading(true)\r\n\r\n    // instead of setTimeout this is where you would handle your API call.\r\n    setTimeout(() => {\r\n      setData(orderBy(data, column.sortField, sortDirection))\r\n      setLoading(false)\r\n    }, 100)\r\n  }\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      title: 'Anda yakin?',\r\n      text: 'Ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${KECAMATAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6'>\r\n          <div className='form-group'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Kota\r\n            </label>\r\n            <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='kota'\r\n            value={valFilterKota.val}\r\n            onChange={handleChangeInputKota}\r\n            placeholder='Kota'\r\n          />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6'>\r\n          <div className='form-group'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Kecamatan\r\n            </label>\r\n            <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='kecamatan'\r\n            value={valFilterKecamatan.val}\r\n            onChange={handleChangeInputKecamatan}\r\n            placeholder='Kecamatan'\r\n          />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n          <Link onClick={handleFilter} to='#'>\r\n            <button className='btn btn-primary'>\r\n              <i className='fa-solid fa-search'></i>\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='/master/Kecamatan/TambahKecamatan'>\r\n            <button className='btn btn-primary me-5'>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n        {/* <DataTable columns={columns} data={temp} pagination /> */}\r\n        {/* <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          paginationTotalRows={totalRows}\r\n        /> */}\r\n        {temp?.length > 0 && temp && ( //urutan 4\r\n          <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.')\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.')\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  kecamatan?: string\r\n  kode_kota?: string\r\n  kode_kecamatan?: string\r\n  kota?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kecamatan?: string\r\n  kode_kota?: string\r\n  kode_kecamatan?: string\r\n  kota?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\r\nexport function LihatKecamatan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KECAMATAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kecamatan: jsonD.kecamatan,\r\n        kode_kota: jsonD.kode_kota,\r\n        kode_kecamatan: jsonD.kode_kecamatan,\r\n        kota: jsonD.kota,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kecamatan ? valuesFormikExist?.kecamatan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kota'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode_kota ? valuesFormikExist?.kode_kota : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.kode_kecamatan\r\n                              ? valuesFormikExist?.kode_kecamatan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kota'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kota ? valuesFormikExist?.kota : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kecamatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kode_kota?: string\r\n  kecamatan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode_kota?: string\r\n  kecamatan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000//master/kecamatan\r\n\r\nexport function UpdateKecamatan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KECAMATAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kecamatan: jsonD.kecamatan,\r\n        kode_kota: jsonD.kode_kota,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value.toUpperCase(),\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kecamatan: '',\r\n      kode_kota: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kecamatan: valuesFormik?.kecamatan\r\n          ? valuesFormik.kecamatan\r\n          : valuesFormikExist?.kecamatan\r\n          ? valuesFormikExist.kecamatan\r\n          : '',\r\n        kode_kota: valuesFormik?.kode_kota\r\n          ? valuesFormik.kode_kota\r\n          : valuesFormikExist?.kode_kota\r\n          ? valuesFormikExist.kode_kota\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${KECAMATAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${KECAMATAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Kecamatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Kecamatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kecamatan || valuesFormik?.kecamatan === ''\r\n                              ? valuesFormik?.kecamatan\r\n                              : valuesFormikExist?.kecamatan\r\n                              ? valuesFormikExist?.kecamatan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kota'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kode_kota || valuesFormik?.kode_kota === ''\r\n                              ? valuesFormik?.kode_kota\r\n                              : valuesFormikExist?.kode_kota\r\n                              ? valuesFormikExist?.kode_kota\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kecamatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kecamatan?: string\r\n  kode_kota?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\r\n\r\nexport function TambahKecamatan() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value.toUpperCase(),\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kecamatan: '',\r\n      kode_kota: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kecamatan: valuesFormik?.kecamatan ? valuesFormik.kecamatan : '',\r\n        kode_kota: valuesFormik?.kode_kota ? valuesFormik.kode_kota : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${KECAMATAN_URL}/create`, bodyparam)\r\n        console.log(response.data, valuesFormik)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${KECAMATAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Kecamatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Kecamatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kecamatan}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kota'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kode_kota}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kecamatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Swal from 'sweetalert2'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {Kecamatan} from './Kecamatan'\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL //http://localhost:3000\r\nexport const KELURAHAN_URL = `${API_URL}/kelurahan` //http://localhost:3000/master/kelurahan\r\n\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nexport function Kelurahan() {\r\n  // STATE SECTION\r\n  const navigate = useNavigate()\r\n  const [valFilterKelurahan, setFilterKelurahan] = useState({val: ''})\r\n  const [valFilterKecamatan, setFilterKecamatan] = useState({val: ''})\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [loading, setLoading] = useState(false)\r\n  const [perPage, setPerPage] = useState(10)\r\n  const [temp, setTemp] = useState([])\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n  // const [data, setData] = useState([])\r\n\r\n  // END STATE SECTION\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const handleFilter = async () => {\r\n    let uriParam = ''\r\n    if (valFilterKecamatan.val !== '') {\r\n      uriParam += `kecamatan=${valFilterKecamatan.val}`\r\n    }\r\n    if (valFilterKelurahan.val !== '') {\r\n      uriParam += `&kelurahan=${valFilterKelurahan.val}`\r\n    }\r\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\r\n  }\r\n\r\n  const handleChangeInputKelurahan = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterKelurahan({val: event.target.value})\r\n  }\r\n  const handleChangeInputKecamatan = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterKecamatan({val: event.target.value})\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      sortField: 'no',\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Kode Kelurahan',\r\n      selector: (row: any) => row.kode_kelurahan,\r\n      sortable: true,\r\n      sortField: 'kelurahan',\r\n    },\r\n    {\r\n      name: 'Kelurahan',\r\n      selector: (row: any) => row.kelurahan,\r\n      sortable: true,\r\n      sortField: 'kelurahan',\r\n    },\r\n    {\r\n      name: 'Kode Kecamatan',\r\n      selector: (row: any) => row.kode_kecamatan,\r\n      sortable: true,\r\n      sortField: 'Kode kecamatan',\r\n    },\r\n    {\r\n      name: 'Kecamatan',\r\n      selector: (row: any) => row.kecamatan,\r\n      sortable: true,\r\n      sortField: 'kecamatan',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      align: 'left',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kelurahan/LihatKelurahan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kelurahan/Updatekelurahan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Ubah\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  //if(valFilterKecamatan.val ? valFilterKecamatan.val : '' || valFilterKelurahan.val ? valFilterKelurahan.val : ''){\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      console.log(qParamFind)\r\n      const response = await axios.get(\r\n        `${KELURAHAN_URL}/findone-by-kelurahan?${qParamFind.strparam}`\r\n      )\r\n      console.log(response.data.data)\r\n      // setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n  //}\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true)\r\n    const value = await axios.get(KELURAHAN_URL + '/find')\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n\r\n  // const handlePageChange = (page: any) => {\r\n  //   fetchUsers(page)\r\n  // }\r\n\r\n  // const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n  //   setLoading(true)\r\n\r\n  //   const response = await axios.get(\r\n  //     `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\r\n  //   )\r\n\r\n  //   setData(response.data.data)\r\n  //   setPerPage(newPerPage)\r\n  //   setLoading(false)\r\n  // }\r\n\r\n  // const handleSort = (column: any, sortDirection: any) => {\r\n  //   // simulate server sort\r\n  //   console.log(column, sortDirection)\r\n  //   setLoading(true)\r\n\r\n  //   // instead of setTimeout this is where you would handle your API call.\r\n  //   setTimeout(() => {\r\n  //     setData(orderBy(data, column.sortField, sortDirection))\r\n  //     setLoading(false)\r\n  //   }, 100)\r\n  // }\r\n\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      title: 'Anda yakin?',\r\n      text: 'Ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${KELURAHAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        {/* {valFilterKecamatan.val === 'PNS' || valFilterKecamatan.val === '' ? ( */}\r\n        <div className='col-xxl-6 col-lg-6 col-md-6 col-sm-12'>\r\n          <label htmlFor='' className='mb-3'>\r\n            Kecamatan\r\n          </label>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='kecamatan'\r\n            value={valFilterKecamatan.val}\r\n            onChange={handleChangeInputKecamatan}\r\n            placeholder='Kecamatan'\r\n          />\r\n        </div>\r\n        {/* ) : null} */}\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        {/* {valFilterKelurahan.val === 'PNS' || valFilterKelurahan.val === '' ? ( */}\r\n        <div className='col-xxl-6 col-lg-6 col-md-6 col-sm-12'>\r\n          <label htmlFor='' className='mb-3'>\r\n            Kelurahan\r\n          </label>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='kelurahan'\r\n            value={valFilterKelurahan.val}\r\n            onChange={handleChangeInputKelurahan}\r\n            placeholder='Kelurahan'\r\n          />\r\n        </div>\r\n        {/* ) : null} */}\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#'>\r\n            <button onClick={handleFilter} className='btn btn-primary'>\r\n              <i className='fa-solid fa-search'></i>\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='/master/Kelurahan/TambahKelurahan'>\r\n            <button className='btn btn-primary me-5'>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n        {/* <DataTable columns={columns} data={temp} pagination /> */}\r\n        {/* <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          paginationTotalRows={totalRows}\r\n        /> */}\r\n        {temp?.length > 0 && temp && ( //urutan 4\r\n          <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.')\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.')\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  kecamatan?: string\r\n  kode_kelurahan?: string\r\n  kode_kecamatan?: string\r\n  kelurahan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kecamatan?: string\r\n  kode_kelurahan?: string\r\n  kode_kecamatan?: string\r\n  kelurahan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\r\nexport function LihatKelurahan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KELURAHAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kecamatan: jsonD.kecamatan,\r\n        kode_kelurahan: jsonD.kode_kelurahan,\r\n        kode_kecamatan: jsonD.kode_kecamatan,\r\n        kelurahan: jsonD.kelurahan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kecamatan ? valuesFormikExist?.kecamatan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kelurahan</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kelurahan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.kode_kelurahan\r\n                              ? valuesFormikExist?.kode_kelurahan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.kode_kecamatan\r\n                              ? valuesFormikExist?.kode_kecamatan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kelurahan</Form.Label>\r\n                        <Form.Control\r\n                          name='kelurahan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kelurahan ? valuesFormikExist?.kelurahan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kelurahan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kode_kecamatan?: string\r\n  kelurahan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode_kecamatan?: string\r\n  kelurahan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000//master/kelurahan\r\n\r\nexport function UpdateKelurahan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KELURAHAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kelurahan: jsonD.kelurahan,\r\n        kode_kecamatan: jsonD.kode_kecamatan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value.toUpperCase(),\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kelurahan: '',\r\n      kode_kecamatan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kelurahan: valuesFormik?.kelurahan\r\n          ? valuesFormik.kelurahan\r\n          : valuesFormikExist?.kelurahan\r\n          ? valuesFormikExist.kelurahan\r\n          : '',\r\n        kode_kecamatan: valuesFormik?.kode_kecamatan\r\n          ? valuesFormik.kode_kecamatan\r\n          : valuesFormikExist?.kode_kecamatan\r\n          ? valuesFormikExist.kode_kecamatan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${KELURAHAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${KELURAHAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/kelurahan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/kelurahan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>kelurahan</Form.Label>\r\n                        <Form.Control\r\n                          name='kelurahan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kelurahan || valuesFormik?.kelurahan === ''\r\n                              ? valuesFormik?.kelurahan\r\n                              : valuesFormikExist?.kelurahan\r\n                              ? valuesFormikExist?.kelurahan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kode_kecamatan || valuesFormik?.kode_kecamatan === ''\r\n                              ? valuesFormik?.kode_kecamatan\r\n                              : valuesFormikExist?.kode_kecamatan\r\n                              ? valuesFormikExist?.kode_kecamatan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/kelurahan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kelurahan?: string\r\n  kode_kecamatan?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\r\n\r\nexport function TambahKelurahan() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value.toUpperCase(),\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kelurahan: '',\r\n      kode_kecamatan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kelurahan: valuesFormik?.kelurahan ? valuesFormik.kelurahan : '',\r\n        kode_kecamatan: valuesFormik?.kode_kecamatan ? valuesFormik.kode_kecamatan : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${KELURAHAN_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${KELURAHAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/kelurahan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/kelurahan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>kelurahan</Form.Label>\r\n                        <Form.Control\r\n                          name='kelurahan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kelurahan}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kode_kecamatan}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/kelurahan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL\r\nexport const JENIS_KEGIATAN_URL = `${API_URL}/jenis-kegiatan`\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_kegiatan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  jenis_kegiatan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisKegiatan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisKegiatan, setFilterJenisKegiatan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [filterTemp, setFilterTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => {\r\n    console.log('tes1', valFilterJenisKegiatan.val)\r\n    setUriFind((prevState) => ({...prevState, strparam: valFilterJenisKegiatan.val}))\r\n    const filterData: any = temp.filter(\r\n      (i: any) => i.nama.toLowerCase() === valFilterJenisKegiatan.val.toLowerCase()\r\n    )\r\n    setFilterTemp(filterData)\r\n  }\r\n\r\n  // const handleFilter = async () => {\r\n  // let uriParam = '';\r\n  // if (valFilterJenisKegiatan.val !== '') {\r\n  //   uriParam += valFilterJenisKegiatan.val;\r\n  // }\r\n  // await setUriFind((prevState) => ({...prevState, strparam: uriParam}));\r\n  // console.log('tes1', qParamFind.strparam)\r\n  // if (qParamFind.strparam) {\r\n  //   console.log('tes if', qParamFind.strparam)\r\n  //   const filterData: any = temp.filter(\r\n  //     (i: any) => i.nama.toLowerCase() === qParamFind.strparam.toLowerCase()\r\n  //     );\r\n  //     setFilterTemp(filterData);\r\n  //   }\r\n  // };\r\n\r\n  // const handleFilter = async () => { //3\r\n  //   let uriParam = ''\r\n  //   if (valFilterJenisKegiatan.val !== '') {\r\n  //     uriParam += `${valFilterJenisKegiatan.val}`\r\n  //   }\r\n  //   await setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  //   const filterData: any = temp.filter(\r\n  //     (i: any) => i.nama.toLowerCase() === qParamFind.strparam.toLowerCase()\r\n  //   )\r\n  //   const timeout = setTimeout(() => {\r\n  //     setFilterTemp(filterData)\r\n  //   }, 500)\r\n\r\n  //   return () => clearTimeout(timeout)\r\n  // }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisKegiatan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisKegiatan = (event: {\r\n    //5\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterJenisKegiatan({val: event.target.value})\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Jenis Kegiatan',\r\n      selector: (row: any) => row.nama,\r\n      sortable: true,\r\n      sortField: 'jenis_kegiatan',\r\n    },\r\n    {\r\n      name: 'Kode',\r\n      selector: (row: any) => row.kode,\r\n      sortable: true,\r\n      sortField: 'kode',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisKegiatan/LihatJenisKegiatan/' + record.id, {\r\n                          replace: true,\r\n                        })\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/?%24top=20`)\r\n      console.log(response.data)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    // fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KEGIATAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan, //? valuesFormik.jenis_kegiatan : '',\r\n      }\r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KEGIATAN_URL}/create`)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            // fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KEGIATAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            // fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_kegiatan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n\r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n\r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KEGIATAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          // fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Kegiatan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisKegiatan.val} //4\r\n            onChange={handleChangeInputJenisKegiatan}\r\n            placeholder='Jenis Kegiatan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}>\r\n            {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Kegiatan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Kegiatan</Form.Label>\r\n                  <Form.Control\r\n                    name='jenis_kegiatan'\r\n                    className={clsx(\r\n                      'form-control form-control-solid mb-1',\r\n                      {\r\n                        'is-invalid': formik.touched.jenis_kegiatan && formik.errors.jenis_kegiatan,\r\n                      },\r\n                      {\r\n                        'is-valid': formik.touched.jenis_kegiatan && !formik.errors.jenis_kegiatan,\r\n                      }\r\n                    )}\r\n                    onChange={handleChangeFormik}\r\n                    value={valuesFormik?.jenis_kegiatan}\r\n                  />\r\n                  {formik.touched.jenis_kegiatan && formik.errors.jenis_kegiatan && (\r\n                    <div className='fv-plugins-message-container'>\r\n                      <div className='fv-help-block'>\r\n                        <span role='alert'>{formik.errors.jenis_kegiatan}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n        {temp?.length > 0 && temp && (\r\n          <DataTable\r\n            columns={columns}\r\n            data={qParamFind.strparam ? filterTemp : temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_kegiatan?: string\r\n  updated_by?: string\r\n  kode?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kegiatan?: string\r\n  kode?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/jenis_kegiatan\r\n\r\nexport function LihatJenisKegiatan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kegiatan: jsonD.jenis_kegiatan,\r\n        kode: jsonD.kode,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kegiatan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis kegiatan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_kegiatan\r\n                              ? valuesFormikExist?.jenis_kegiatan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>kode</Form.Label>\r\n                        <Form.Control\r\n                          name='kode'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKegiatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kegiatan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  jenis_kegiatan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000//master/jenis-kegiatan\r\n\r\nexport function UpdateJenisKegiatan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kegiatan: jsonD.jenis_kegiatan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kegiatan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan\r\n          ? valuesFormik.jenis_kegiatan\r\n          : valuesFormikExist?.jenis_kegiatan\r\n          ? valuesFormikExist.jenis_kegiatan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KEGIATAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KEGIATAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKegiatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKegiatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kegiatan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kegiatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_kegiatan || valuesFormik?.jenis_kegiatan === ''\r\n                              ? valuesFormik?.jenis_kegiatan\r\n                              : valuesFormikExist?.jenis_kegiatan\r\n                              ? valuesFormikExist?.jenis_kegiatan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKegiatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kegiatan?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/master/jenis_kegiatan\r\n\r\nexport function TambahJenisKegiatan() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kegiatan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan ? valuesFormik.jenis_kegiatan : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${JENIS_KEGIATAN_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${JENIS_KEGIATAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKegiatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKegiatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kegiatan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kegiatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.jenis_kegiatan}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKegiatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL\r\nexport const JENIS_KEJADIAN_URL = `${API_URL}/jenis-kejadian` \r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_kejadian?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  jenis_kejadian: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisKejadian() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisKejadian, setFilterJenisKejadian] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [filterTemp, setFilterTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => {\r\n    console.log('tes1', valFilterJenisKejadian.val)\r\n    setUriFind((prevState) => ({...prevState, strparam: valFilterJenisKejadian.val}))\r\n    const filterData: any = temp.filter(\r\n      (i: any) => i.nama.toLowerCase() === valFilterJenisKejadian.val.toLowerCase()\r\n    )\r\n    setFilterTemp(filterData)\r\n  }\r\n\r\n  // const handleFilter = async () => {//3\r\n  //   let uriParam = ''\r\n  //   if (valFilterJenisKejadian.val !== '') {\r\n  //     uriParam += `${valFilterJenisKejadian.val}`\r\n  //   }\r\n  //   setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  //   const filterData: any = temp.filter(\r\n  //     (i: any) => i.nama.toLowerCase() === qParamFind.strparam.toLowerCase()\r\n  //   )\r\n  //   const timeout = setTimeout(() => {\r\n  //     setFilterTemp(filterData)\r\n  //   }, 500)\r\n\r\n  //   return () => clearTimeout(timeout)\r\n  // }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisKejadian({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisKejadian = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisKejadian({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      width: '200px',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Kejadian',\r\n      selector: (row: any) => row.nama,\r\n      sortable: true,\r\n      sortField: 'jenis_kejadian',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisKejadian/LihatJenisKejadian/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/?%24top=20`)\r\n      console.log(response.data)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    // fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KEJADIAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_kejadian: valuesFormik?.jenis_kejadian, //? valuesFormik.jenis_kejadian : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KEJADIAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KEJADIAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            // fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_kejadian: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KEJADIAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Kejadian</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisKejadian.val} //4\r\n            onChange={handleChangeInputJenisKejadian}\r\n            placeholder='Jenis Kejadian'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}>\r\n            {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Kejadian</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Kejadian</Form.Label>\r\n                  <Form.Control\r\n                    name='jenis_kejadian'\r\n                    className={clsx(\r\n                      'form-control form-control-solid mb-1',\r\n                      {\r\n                        'is-invalid': formik.touched.jenis_kejadian && formik.errors.jenis_kejadian,\r\n                      },\r\n                      {\r\n                        'is-valid': formik.touched.jenis_kejadian && !formik.errors.jenis_kejadian,\r\n                      }\r\n                    )}\r\n                    onChange={handleChangeFormik}\r\n                    value={valuesFormik?.jenis_kejadian}\r\n                  />\r\n                  {formik.touched.jenis_kejadian && formik.errors.jenis_kejadian && (\r\n                    <div className='fv-plugins-message-container'>\r\n                      <div className='fv-help-block'>\r\n                        <span role='alert'>{formik.errors.jenis_kejadian}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n        {temp?.length > 0 && temp && (\r\n          <DataTable\r\n            columns={columns}\r\n            data={qParamFind.strparam ? filterTemp : temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_kejadian?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kejadian?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL //http://localhost:3001\r\nexport const JENIS_KEJADIAN_URL = `${API_URL}/jenis-kejadian` //http://localhost:3001/jenis-kejadian\r\n\r\nexport function LihatJenisKejadian() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kejadian: jsonD.jenis_kejadian,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kejadian'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_kejadian\r\n                              ? valuesFormikExist?.jenis_kejadian\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKejadian'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kejadian?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kejadian?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000//master/jenis-kejadian\r\n\r\nexport function UpdateJenisKejadian() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kejadian: jsonD.jenis_kejadian,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kejadian: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kejadian: valuesFormik?.jenis_kejadian\r\n          ? valuesFormik.jenis_kejadian\r\n          : valuesFormikExist?.jenis_kejadian\r\n          ? valuesFormikExist.jenis_kejadian\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KEJADIAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KEJADIAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKejadian', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKejadian', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kejadian'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_kejadian || valuesFormik?.jenis_kejadian === ''\r\n                              ? valuesFormik?.jenis_kejadian\r\n                              : valuesFormikExist?.jenis_kejadian\r\n                              ? valuesFormikExist?.jenis_kejadian\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKejadian'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kejadian?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000/master/jenis-kejadian\r\n\r\nexport function TambahJenisKejadian() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kejadian: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kejadian: valuesFormik?.jenis_kejadian ? valuesFormik.jenis_kejadian : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${JENIS_KEJADIAN_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${JENIS_KEJADIAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKejadian', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKejadian', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kejadian'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.jenis_kejadian}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKejadian'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport DataTable, { createTheme } from 'react-data-table-component';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport clsx from 'clsx'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PELANGGARAN_URL = `${API_URL}/master/Jenis-pelanggaran` //http://localhost:3000/Jenis-pelanggaran\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  jenis_pelanggaran?: string\r\n  kode_penertiban?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_pelanggaran: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisPelanggaran() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisPelanggaran, setFilterJenisPelanggaran] = useState({val: ''})\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n  // const handleShow = () => setShow(true);\r\n\r\n  const handleFilter = async () => {\r\n    //3\r\n    let uriParam = ''\r\n    if (valFilterJenisPelanggaran.val !== '') {\r\n      uriParam += `${valFilterJenisPelanggaran.val}`\r\n    }\r\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisPelanggaran({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisPelanggaran = (event: {\r\n    //5\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterJenisPelanggaran({val: event.target.value})\r\n  }\r\n\r\n  // START : CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  // Column Table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      width: '150px',\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n      // sortField: 'id',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Pelanggaran',\r\n      selector: (row: any) => row.jenis_pelanggaran,\r\n      sortable: true,\r\n      sortField: 'jenis_pelanggaran',\r\n      width: '200px',\r\n    },\r\n    {},\r\n    // {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      align: 'left',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisPelanggaran/LihatJenisPelanggaran/' + record.id, {\r\n                          replace: true,\r\n                        })\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START : VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_PELANGGARAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_PELANGGARAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n\r\n  // END : VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_pelanggaran: valuesFormik?.jenis_pelanggaran,\r\n        kode_penertiban: '', //? valuesFormik.jenis_pelanggaran : '', //? valuesFormik.kategori : '',\r\n      }\r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_PELANGGARAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_PELANGGARAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_pelanggaran: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n\r\n  //  GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_PELANGGARAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n\r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_PELANGGARAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END : CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-xxl- col-lg-6 col-md-3 col-sm-10'>\r\n          <label htmlFor='' className='mb-3'>\r\n            Jenis Pelanggaran\r\n          </label>\r\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'></div>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='tags'\r\n            value={valFilterJenisPelanggaran.val}\r\n            onChange={handleChangeInputJenisPelanggaran}\r\n            placeholder='Jenis Pelanggaran'\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}>\r\n            <button className='btn btn-primary'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#'>\r\n            <button className='btn btn-primary me-5' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Pelanggaran</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Pelanggaran</Form.Label>\r\n                  <Form.Control\r\n                    name='jenis_pelanggaran'\r\n                    className={clsx(\r\n                      'form-control form-control-solid mb-1',\r\n                      {\r\n                        'is-invalid':\r\n                          formik.touched.jenis_pelanggaran && formik.errors.jenis_pelanggaran,\r\n                      },\r\n                      {\r\n                        'is-valid':\r\n                          formik.touched.jenis_pelanggaran && !formik.errors.jenis_pelanggaran,\r\n                      }\r\n                    )}\r\n                    onChange={handleChangeFormik}\r\n                    value={valuesFormik?.jenis_pelanggaran}\r\n                  />\r\n                  {formik.touched.jenis_pelanggaran && formik.errors.jenis_pelanggaran && (\r\n                    <div className='fv-plugins-message-container'>\r\n                      <div className='fv-help-block'>\r\n                        <span role='alert'>{formik.errors.jenis_pelanggaran}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n        {temp?.length > 0 && temp && (\r\n          <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n  // const handlePageChange = (page: any) => {\r\n  //   fetchUsers(page);\r\n  // };\r\n\r\n  // const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n  //   setLoading(true);\r\n\r\n  //   const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\r\n\r\n  //   setData(response.data.data);\r\n  //   setPerPage(newPerPage);\r\n  //   setLoading(false);\r\n  // };\r\n\r\n  // const handleSort = (column: any, sortDirection: any) => {\r\n  //   // simulate server sort\r\n  //   console.log(column, sortDirection);\r\n  //   setLoading(true);\r\n\r\n  //   // instead of setTimeout this is where you would handle your API call.\r\n  //   setTimeout(() => {\r\n  //     setData(orderBy(data, column.sortField, sortDirection));\r\n  //     setLoading(false);\r\n  //   }, 100);\r\n  // };\r\n\r\n// function orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n//   throw new Error('Function not implemented.');\r\n// }\r\n\r\n// function onEdit(record: any) {\r\n//   throw new Error('Function not implemented.');\r\n// }\r\n\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_pelanggaran?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_pelanggaran?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PELANGGARAN_URL = `${API_URL}/master/Jenis-pelanggaran` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatJenisPelanggaran() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PELANGGARAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_pelanggaran: jsonD.jenis_pelanggaran,\r\n        updated_by: '',\r\n    }\r\n    setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    // console.log('respon data', valuesFormikExist)\r\n}\r\nfetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-8'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Pelanggaran</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_pelanggaran'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.jenis_pelanggaran ? valuesFormikExist?.jenis_pelanggaran : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPelanggaran'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_pertolongan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_pertolongan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisPertolongan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisPertolongan, setFilterJenisPertolongan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisPertolongan.val !== '') {\r\n      uriParam += `${valFilterJenisPertolongan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisPertolongan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisPertolongan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisPertolongan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Pertolongan',\r\n      selector: (row: any) => row.jenis_pertolongan,\r\n      sortable: true,\r\n      sortField: 'jenis_pertolongan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisPertolongan/LihatJenisPertolongan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_PERTOLONGAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_pertolongan: valuesFormik?.jenis_pertolongan, //? valuesFormik.jenis_pertolongan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_PERTOLONGAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_PERTOLONGAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_pertolongan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_PERTOLONGAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Pertolongan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisPertolongan.val} //4\r\n            onChange={handleChangeInputJenisPertolongan}\r\n            placeholder='Jenis pertolongan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Pertolongan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Pertolongan</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_pertolongan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_pertolongan && formik.errors.jenis_pertolongan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_pertolongan && !formik.errors.jenis_pertolongan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_pertolongan}\r\n                    />\r\n                    {formik.touched.jenis_pertolongan && formik.errors.jenis_pertolongan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_pertolongan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_pertolongan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_pertolongan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatJenisPertolongan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_pertolongan: jsonD.jenis_pertolongan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Pertolongan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_pertolongan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.jenis_pertolongan ? valuesFormikExist?.jenis_pertolongan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPertolongan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_pertolongan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  jenis_pertolongan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` //http://localhost:3000//master/JenisPertolongan\r\n\r\nexport function UpdateJenisPertolongan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_pertolongan: jsonD.jenis_pertolongan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_pertolongan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_pertolongan: valuesFormik?.jenis_pertolongan\r\n          ? valuesFormik.jenis_pertolongan\r\n          : valuesFormikExist?.jenis_pertolongan\r\n          ? valuesFormikExist.jenis_pertolongan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_PERTOLONGAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_PERTOLONGAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisPertolongan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisPertolongan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Pertolongan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_pertolongan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_pertolongan || valuesFormik?.jenis_pertolongan === ''\r\n                              ? valuesFormik?.jenis_pertolongan\r\n                              : valuesFormikExist?.jenis_pertolongan\r\n                              ? valuesFormikExist?.jenis_pertolongan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPertolongan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport DataTable, { createTheme } from 'react-data-table-component';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\nimport clsx from 'clsx'\r\n\r\nexport const MASTERDATA_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL //http://localhost:3001\r\nexport const JENIS_PERDA_PERKADA_URL = `${MASTERDATA_URL}/jenis-perda-perkada` //http://localhost:3001/jenis-perda-perkada\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  judul?: string\r\n  pasal?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  jenis_perda_perkada: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisPerdaPerkada() {\r\n  const {mode} = useThemeMode()\r\n  const navigate = useNavigate();\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJudul, setFilterJudul] = useState({val: ''})\r\n  const [valFilterDeskripsi, setFilterDeskripsi] = useState({val: ''})\r\n  \r\n  const [data, setData] = useState([]);\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const handleShow = () => setShow(true);\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  const handleFilter = async () => {\r\n    let uriParam = ''\r\n    if (valFilterJudul.val !== '') {\r\n      uriParam += `judul=${valFilterJudul.val}`\r\n    }\r\n    if (valFilterDeskripsi.val !== '') {\r\n      uriParam += `&deskripsi=${valFilterDeskripsi.val}`\r\n    }\r\n\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  // const handleFilterReset = () => {\r\n  //   setFilterJudul({val: ''})\r\n  //   setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  // }\r\n\r\n  const handleChangeInputJenisPerdaPerkada = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJudul({ val: event.target.value })\r\n  }\r\n  const handleChangeInputDeskripsi = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterDeskripsi({ val: event.target.value })\r\n  }\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\r\n          <div className=\"d-flex flex-column\">\r\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  // let number = 1\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.id,\r\n      sortable: true,\r\n      sortField: 'id',\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      }\r\n    },\r\n    {\r\n    },\r\n    {\r\n      name: 'Judul',\r\n      selector: (row: any) => row.judul,\r\n      sortable: true,\r\n      sortField: 'judul',\r\n      width: '300px'\r\n    },\r\n    {\r\n      name: 'Deskripsi',\r\n      selector: (row: any) => row.deskripsi,\r\n      sortable: true,\r\n      sortField: 'deskripsi',\r\n    },\r\n    {\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: \"Action\",\r\n      className: \"action\",\r\n      align: \"left\",\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n\r\n            <div className=\"mb-2\">\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size=\"sm\"\r\n                    variant=\"light\"\r\n                    title=\"Aksi\">\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisPerdaPerkada/LihatJenisPerdaPerkada/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisPerdaPerkada/UpdateJenisPerdaPerkada/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Ubah\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\" onClick={() => konfirDel(record.id)}>Hapus</Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n\r\n  ]\r\n\r\n  useEffect(() => {\r\n      async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      console.log(qParamFind)\r\n      const response = await axios.get(\r\n        `${JENIS_PERDA_PERKADA_URL}${qParamFind.strparam}`\r\n      )\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100)\r\n\r\n    // setTemp(value.data.data);\r\n    // console.log('cek response api:',temp);\r\n   \r\n    // setTotalRows(response.data.total);\r\n    // console.log('cek ahhh :' ,data);\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_PERDA_PERKADA_URL}`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n\r\n  // const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n  //   setLoading(true);\r\n\r\n  //   const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\r\n\r\n  //   setData(response.data.data);\r\n  //   setPerPage(newPerPage);\r\n  //   setLoading(false);\r\n  // };\r\n\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // const handleSort = (column: any, sortDirection: any) => {\r\n  //   // simulate server sort\r\n  //   console.log(column, sortDirection);\r\n  //   setLoading(true);\r\n\r\n  //   // instead of setTimeout this is where you would handle your API call.\r\n  //   setTimeout(() => {\r\n  //     setData(orderBy(data, column.sortField, sortDirection));\r\n  //     setLoading(false);\r\n  //   }, 100);\r\n  // };\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        judul: valuesFormik?.judul,\r\n        pasal: valuesFormik?.pasal,\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_PERDA_PERKADA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_PERDA_PERKADA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      judul: '',\r\n      // deskripsi: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_PERDA_PERKADA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_PERDA_PERKADA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\r\n            <label htmlFor='' className='mb-3'>\r\n              <h3>Judul Perda / Perkada</h3>\r\n            </label>\r\n            <input\r\n              type='text' \r\n              className='form-control form-control form-control-solid' \r\n              name='q'\r\n              value={valFilterJudul.val}\r\n              onChange={handleChangeInputJenisPerdaPerkada}\r\n              placeholder='Jenis Perda / Perkada'\r\n            />\r\n          </div>\r\n      </div>\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\r\n            <label htmlFor='' className='mb-3'>\r\n              <h3>Deskripsi</h3>\r\n            </label>\r\n            <input\r\n              type='text' \r\n              className='form-control form-control form-control-solid' \r\n              name='q'\r\n              value={valFilterDeskripsi.val}\r\n              onChange={handleChangeInputDeskripsi}\r\n              placeholder='Deskripsi'\r\n            />\r\n          </div>\r\n      </div>\r\n\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n          <Link onClick={handleFilter} to='#'>\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\r\n          <Link to='/master/JenisPerdaPerkada/TambahJenisPerdaPerkada'>\r\n            <button className='btn btn-primary me-5'>\r\n              <i className=\"fa-solid fa-plus\"></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n\r\n      <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Perda / Perkada</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className='row mt-2 '>\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <div className='form-group'>\r\n                <Form.Label>Jenis Perda / Perkada</Form.Label>\r\n                <Form.Control\r\n                  name='jenis_perda_perkada'\r\n                  className={clsx(\r\n                    'form-control form-control-solid mb-1',\r\n                    {\r\n                      'is-invalid': formik.touched.judul && formik.errors.judul,\r\n                    },\r\n                    {\r\n                      'is-valid': formik.touched.judul && !formik.errors.judul,\r\n                    }\r\n                  )}\r\n                  onChange={handleChangeFormik}\r\n                  value={valuesFormik?.judul}\r\n                />\r\n                {formik.touched.judul && formik.errors.judul && (\r\n                  <div className='fv-plugins-message-container'>\r\n                    <div className='fv-help-block'>\r\n                      <span role='alert'>{formik.errors.judul}</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n            </div>\r\n\r\n        {/* <Form.Group className=\"mb-3 form-control-solid\">\r\n            <Form.Label>Perda / Perkada</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Perda / Perkada\" />\r\n        </Form.Group> */}\r\n\r\n            <div className='p-0 mt-6'>\r\n              <div className='text-center'>\r\n                <button\r\n                  className='float-none btn btn-light align-self-center m-1'\r\n                  onClick={handleClose}\r\n                  type='button'\r\n                >\r\n                  <i className='fa fa-close'></i>\r\n                  Batal\r\n                </button>\r\n                <button\r\n                  className='float-none btn btn-primary align-self-center m-1'\r\n                  type='submit'\r\n                >\r\n                  <i className='fa-solid fa-paper-plane'></i>\r\n                  Simpan\r\n                </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n    <div className='table-responsive mt-5 ms-5 me-5'>\r\n    {temp?.length > 0 && temp && (\r\n    <DataTable\r\n      columns={columns}\r\n      data={temp}\r\n      pagination\r\n      progressPending={loading}\r\n      customStyles={customStyles}\r\n      paginationTotalRows={totalRows}\r\n      progressComponent={<LoadingAnimation />}\r\n      theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n      noDataComponent={\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n          </div>\r\n        </div>\r\n      }\r\n    />\r\n    )}\r\n    </div>\r\n    {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.');\r\n}","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  judul?: string\r\n  deskripsi?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  judul?: string\r\n  deskripsi?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PERDA_PERKADA_URL = `${API_URL}/master/jenis-perda-perkada` //http://localhost:3000/jenis-perda-perkada\r\n\r\nexport function LihatJenisPerdaPerkada() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PERDA_PERKADA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        judul: jsonD.judul,\r\n        deskripsi: jsonD.deskripsi,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Perda / Perkada</Form.Label>\r\n                        <Form.Control\r\n                          name='judul'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.judul\r\n                              ? valuesFormikExist?.judul\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Deskripsi</Form.Label>\r\n                        <Form.Control\r\n                          name='deskripsi'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.deskripsi\r\n                              ? valuesFormikExist?.deskripsi\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPerdaPerkada'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  judul?: string\r\n  deskripsi?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  judul?: string\r\n  deskripsi?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PERDA_PERKADA_URL = `${API_URL}/master/jenis-perda-perkada` //http://localhost:3000//master/jenis-perda-perkada\r\n\r\nexport function UpdateJenisPerdaPerkada() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PERDA_PERKADA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        judul: jsonD.judul,\r\n        deskripsi: jsonD.deskripsi,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  // const handleChangeFormikSelect = (value: any, name: string) => {\r\n  //   setValuesFormik((prevValues: any) => ({\r\n  //     ...prevValues,\r\n  //     [name]: value,\r\n  //   }))\r\n  // }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      judul: '',\r\n      deskripsi: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        judul: valuesFormik?.judul\r\n          ? valuesFormik.judul\r\n          : valuesFormikExist?.judul\r\n          ? valuesFormikExist.judul\r\n          : '',\r\n        deskripsi: valuesFormik?.deskripsi\r\n          ? valuesFormik.deskripsi\r\n          : valuesFormikExist?.deskripsi\r\n          ? valuesFormikExist.deskripsi\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_PERDA_PERKADA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_PERDA_PERKADA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisPerdaPerkada', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisPerdaPerkada', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Perda / Perkada</Form.Label>\r\n                        <Form.Control\r\n                          name='judul'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.judul || valuesFormik?.judul === ''\r\n                              ? valuesFormik?.judul\r\n                              : valuesFormikExist?.judul\r\n                              ? valuesFormikExist?.judul\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Deskripsi</Form.Label>\r\n                        <Form.Control\r\n                          name='deskripsi'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.deskripsi || valuesFormik?.deskripsi === ''\r\n                              ? valuesFormik?.deskripsi\r\n                              : valuesFormikExist?.deskripsi\r\n                              ? valuesFormikExist?.deskripsi\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPerdaPerkada'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  judul?: string\r\n  deskripsi?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL //http://localhost:3001\r\nexport const JENIS_PERDA_PERKADA_URL = `${API_URL}/jenis-perda-perkada` //http://localhost:3000/master/jenis-perda-perkada\r\n\r\nexport function TambahJenisPerdaPerkada() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value.toUpperCase(),\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      judul: '',\r\n      deskripsi: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        judul: valuesFormik?.judul ? valuesFormik.judul : '',\r\n        deskripsi: valuesFormik?.deskripsi ? valuesFormik.deskripsi : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${JENIS_PERDA_PERKADA_URL}/create`, bodyparam)\r\n        console.log(response.data, valuesFormik)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${JENIS_PERDA_PERKADA_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisPerdaPerkada', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisPerdaPerkada', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Judul</Form.Label>\r\n                        <Form.Control\r\n                          name='judul'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.judul}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Deskripsi</Form.Label>\r\n                        <Form.Control\r\n                          name='deskripsi'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.deskripsi}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPerdaPerkada'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport { Button } from 'react-bootstrap'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { useState, useEffect, Fragment } from 'react'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport { KTSVG } from '../../../../_metronic/helpers'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport DataTable, { createTheme } from 'react-data-table-component'\r\nimport { ThemeModeComponent } from '../../../../_metronic/assets/ts/layout'\r\nimport { useThemeMode } from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const MASTER_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL //http://localhost:3001\r\nexport const JENIS_PERDA_PERKADA_URL = `${MASTER_URL}/jenis-perda-perkada` //http://localhost:3001/jenis-perda-perkada\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  id?: number\r\n  judul?: string\r\n  pasal?: string\r\n  jenis_pelanggaran?: string\r\n  jenis_penertiban?: string\r\n}\r\n\r\nexport function MapPerdaPerkada() {\r\n  const { mode } = useThemeMode()\r\n  const navigate = useNavigate();\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJudul, setFilterJudul] = useState({ val: '' })\r\n  const [valFilterPasal, setFilterPasal] = useState({ val: '' })\r\n\r\n  const [data, setData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({ strparam: '' })\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleChangeInputJenisPerdaPerkada = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJudul({ val: event.target.value })\r\n  }\r\n  const handleChangeInputPasal = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterPasal({ val: event.target.value })\r\n  }\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\r\n          <div className=\"d-flex flex-column\">\r\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const handleFilter = async () => {\r\n    let uriParam = ''\r\n    if (valFilterJudul.val !== '') {\r\n      uriParam += `judul=${valFilterJudul.val}`\r\n    }\r\n    if (valFilterPasal.val !== '') {\r\n      uriParam += `&pasal=${valFilterPasal.val}`\r\n    }\r\n\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJudul({ val: '' })\r\n    setFilterPasal({ val: '' })\r\n    setUriFind((prevState) => ({ ...prevState, strparam: '' }))\r\n  }\r\n\r\n  const dataPerdaPerkada = (page: number) => {\r\n    axios\r\n      .get(\r\n        `${JENIS_PERDA_PERKADA_URL}/?%24filter=${qParamFind.strparam}&%24top=${perPage}&%24page=${page}`\r\n      )\r\n      .then((res) => {\r\n        const data = res.data.data.map((d: any) => ({\r\n          id: d.id,\r\n          judul: d.judul,\r\n          pasal: d.pasal,\r\n          j_pelanggaran: d.jenis_pelanggaran,\r\n          j_penertiban: d.jenis_penertiban,\r\n        }))\r\n        Array.from(data).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setData(data)\r\n        setTotalRows(res.data.total_items)\r\n        setLoading(false)\r\n\r\n        return [data, setData] as const\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    dataPerdaPerkada(0)\r\n  }, [qParamFind, perPage])\r\n\r\n  const handlePageChange = (page: number) => {\r\n    dataPerdaPerkada(page - 1)\r\n    console.log('Ini page', page)\r\n  }\r\n\r\n  const handlePerRowsChange = async (newPerPage: number, page: number) => {\r\n    setLoading(true)\r\n    axios\r\n      .get(\r\n        `${JENIS_PERDA_PERKADA_URL}/?%24filter=${qParamFind.strparam}&%24top=${newPerPage}&%24page=${page}`\r\n      )\r\n      .then((res) => {\r\n        const data = res.data.data.map((d: any) => ({\r\n          id: d.id,\r\n          judul: d.judul,\r\n          pasal: d.pasal,\r\n          j_pelanggaran: d.jenis_pelanggaran,\r\n          j_penertiban: d.jenis_penertiban,\r\n        }))\r\n        Array.from(data).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setData(data)\r\n        setPerPage(newPerPage)\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      width: '200px',\r\n      sortable: true,\r\n      selector: (row: any) => row.serial,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      }\r\n    },\r\n    {\r\n      name: 'Jenis Perda / Perkada',\r\n      width: '300px',\r\n      sortable: true,\r\n      sortField: 'judul',\r\n      selector: (row: any) => row.judul,\r\n    },\r\n    {\r\n      name: 'Jenis Pasal',\r\n      width: '280px',\r\n      sortable: true,\r\n      sortField: 'pasal',\r\n      selector: (row: any) => row.pasal,\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      fixed: true,\r\n      center: true,\r\n      sortable: false,\r\n      allowOverflow: true,\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='d-flex mb-2 mt-2 flex-end'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size=\"sm\"\r\n                    variant=\"light\"\r\n                    title=\"Aksi\">\r\n                    <Dropdown.Item\r\n                      onClick={() =>\r\n                        navigate('/master/MapPerdaPerkada/LihatMapPerdaPerkada/' + record.id)}\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      onClick={() =>\r\n                        navigate('/master/MapPerdaPerkada/UpdateMapPerdaPerkada/' + record.id)}\r\n                    >\r\n                      Ubah\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\" onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n  ]\r\n\r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_PERDA_PERKADA_URL}/${id}`, bodyParam)\r\n        if (response) {\r\n          dataPerdaPerkada(0)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::DELETE\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-6'>\r\n          <label htmlFor='' className='mb-3'>\r\n            <h3>Jenis Perda / Perkada</h3>\r\n          </label>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJudul.val}\r\n            onChange={handleChangeInputJenisPerdaPerkada}\r\n            placeholder='Jenis Perda / Perkada'\r\n          />\r\n        </div>\r\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-6'>\r\n          <label htmlFor='' className='mb-3'>\r\n            <h3>Jenis Pasal</h3>\r\n          </label>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterPasal.val}\r\n            onChange={handleChangeInputPasal}\r\n            placeholder='Jenis Pasal'\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n          <Button\r\n            className='btn btn-light-primary me-2'\r\n            onClick={handleFilter}\r\n          >\r\n            <KTSVG\r\n              path='/media/icons/duotune/general/gen021.svg'\r\n              className='svg-icon-2'\r\n            />\r\n            Cari\r\n          </Button>\r\n          <Button\r\n            className='btn btn-light-primary me-2'\r\n            onClick={handleFilterReset}\r\n          >\r\n            <i className='fa-solid fa-arrows-rotate svg-icon-2'></i>\r\n            Reset\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\r\n          <Link to='/master/MapPerdaPerkada/TambahMapPerdaPerkada'>\r\n            <button className='btn btn-primary me-5'>\r\n              <i className=\"fa-solid fa-plus\"></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n        <DataTable\r\n          pagination\r\n          data={data}\r\n          paginationServer\r\n          columns={columns}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          paginationTotalRows={totalRows}\r\n          onChangePage={handlePageChange}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          progressComponent={<LoadingAnimation />}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  id?: number\r\n  judul?: string\r\n  pasal?: string\r\n  jenis_penertiban?: string\r\n  jenis_pelanggaran?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\nconst MASTER_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL //http://localhost:3001\r\nexport const JENIS_PERDA_PERKADA_URL = `${MASTER_URL}/jenis-perda-perkada` //http://localhost:3001/jenis-perda-perkada\r\n\r\nexport function LihatMapPerdaPerkada() {\r\n  const { id } = useParams()\r\n  const [data, setData] = useState<FormInput[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const LihatMapPerdaPerkada = async () => {\r\n    axios.get(`${JENIS_PERDA_PERKADA_URL}/?%24filter=id%20eq%20%27${id}%27`)\r\n      .then((res) => {\r\n        const data = res.data.data.map((d: any) => ({\r\n          id: d.id,\r\n          judul: d.judul,\r\n          pasal: d.pasal,\r\n          jenis_penertiban: d.jenis_penertiban,\r\n          jenis_pelanggaran: d.jenis_pelanggaran,\r\n        }))\r\n        Array.from(data).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setData(data)\r\n        setLoading(false)\r\n\r\n        return [data, setData] as const\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    LihatMapPerdaPerkada()\r\n  }, [id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n                    <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Perda / Perkada</Form.Label>\r\n                        <Form.Control\r\n                          name='judul'\r\n                          className='form-control form-control-solid'\r\n                          value={data[0]?.judul || ''}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Pasal</Form.Label>\r\n                        <Form.Control\r\n                          name='pasal'\r\n                          className='form-control form-control-solid'\r\n                          value={data[0]?.pasal || ''}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='col-xxl-10 col-lg-12 col-md-3 col-sm-12'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Penertiban</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          name='j_penertiban'\r\n                          className='form-control form-control-solid'\r\n                          value={data[0]?.jenis_penertiban || ''}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='col-xxl-10 col-lg-12 col-md-3 col-sm-12'>\r\n                      <div className='form-group mb-10'>\r\n                        <Form.Label>Jenis Pelanggaran</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          name='j_pelanggaran'\r\n                          className='form-control form-control-solid'\r\n                          value={data[0]?.jenis_pelanggaran || ''}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/MapPerdaPerkada'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useFormik } from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  judul?: string\r\n  pasal?: string\r\n  jenis_penertiban?: string\r\n  jenis_pelanggaran?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  judul?: string\r\n  pasal?: string\r\n  jenis_penertiban?: string\r\n  jenis_pelanggaran?: string\r\n}\r\n\r\nconst MASTER_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL //http://localhost:3000\r\nexport const JENIS_PERDA_PERKADA_URL = `${MASTER_URL}/jenis-perda-perkada` //http://localhost:3000//master/jenis-perda-perkada\r\n\r\nexport function UpdateMapPerdaPerkada() {\r\n  const navigate = useNavigate()\r\n  const { id } = useParams()\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PERDA_PERKADA_URL}/?%24filter=id%20eq%20%27${id}%27`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        judul: jsonD.judul,\r\n        pasal: jsonD.pasal,\r\n        jenis_penertiban: jsonD.jenis_penertiban,\r\n        jenis_pelanggaran: jsonD.jenis_pelanggaran,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({ ...prevstate, ...paramValue }))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      judul: '',\r\n      pasal: '',\r\n      jenis_penertiban: '',\r\n      jenis_pelanggaran: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      const bodyparam: FormInput = {\r\n        judul: valuesFormik?.judul\r\n          ? valuesFormik.judul\r\n          : valuesFormikExist?.judul\r\n            ? valuesFormikExist.judul\r\n            : '',\r\n        pasal: valuesFormik?.pasal\r\n          ? valuesFormik.pasal\r\n          : valuesFormikExist?.pasal\r\n            ? valuesFormikExist.pasal\r\n            : '',\r\n        jenis_penertiban: valuesFormik?.jenis_penertiban\r\n          ? valuesFormik.jenis_penertiban\r\n          : valuesFormikExist?.jenis_penertiban\r\n            ? valuesFormikExist.jenis_penertiban\r\n            : '',\r\n        jenis_pelanggaran: valuesFormik?.jenis_pelanggaran\r\n          ? valuesFormik.jenis_pelanggaran\r\n          : valuesFormikExist?.jenis_pelanggaran\r\n            ? valuesFormikExist.jenis_pelanggaran\r\n            : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_PERDA_PERKADA_URL}/${id}`, bodyparam)\r\n        if (response) {\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/MapPerdaPerkada', { replace: true })\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row g-8 mt-2 ms-5 me-5'>\r\n                    <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Perda / Perkada</Form.Label>\r\n                        <Form.Control\r\n                          name='judul'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.judul || valuesFormik?.judul === ''\r\n                              ? valuesFormik?.judul\r\n                              : valuesFormikExist?.judul\r\n                                ? valuesFormikExist?.judul\r\n                                : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Pasal</Form.Label>\r\n                        <Form.Control\r\n                          name='pasal'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.pasal || valuesFormik?.pasal === ''\r\n                              ? valuesFormik?.pasal\r\n                              : valuesFormikExist?.pasal\r\n                                ? valuesFormikExist?.pasal\r\n                                : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-xxl-10 col-lg-12 col-md-3 col-sm-12'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Penertiban</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          name='jenis_penertiban'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_penertiban || valuesFormik?.jenis_penertiban === ''\r\n                              ? valuesFormik?.jenis_penertiban\r\n                              : valuesFormikExist?.jenis_penertiban\r\n                                ? valuesFormikExist?.jenis_penertiban\r\n                                : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-xxl-10 col-lg-12 col-md-3 col-sm-12'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Pelanggaran</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          name='jenis_pelanggaran'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_pelanggaran || valuesFormik?.jenis_pelanggaran === ''\r\n                              ? valuesFormik?.jenis_pelanggaran\r\n                              : valuesFormikExist?.jenis_pelanggaran\r\n                                ? valuesFormikExist?.jenis_pelanggaran\r\n                                : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n                    <div className='d-md-flex justify-content-md-center'>\r\n                      <Link to='/master/MapPerdaPerkada'>\r\n                        <button className='btn btn-secondary me-2'>\r\n                          <i className='fa-solid fa-arrow-left'></i>\r\n                          Kembali\r\n                        </button>\r\n                      </Link>\r\n                      <button className='btn btn-primary' type='submit'>\r\n                        <i className='fa-solid fa-paper-plane'></i>\r\n                        Simpan\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useFormik } from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  judul?: string\r\n  pasal?: string\r\n  jenis_penertiban?: string\r\n  jenis_pelanggaran?: string\r\n  created_by?: number\r\n}\r\n\r\nconst MASTER_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL //http://localhost:3001\r\nexport const JENIS_PERDA_PERKADA_URL = `${MASTER_URL}/jenis-perda-perkada` //http://localhost:3000/master/jenis-perda-perkada\r\n\r\nexport function TambahMapPerdaPerkada() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      judul: '',\r\n      pasal: '',\r\n      jenis_pelanggaran: '',\r\n      jenis_penertiban: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      const bodyparam: FormInput = {\r\n        judul: valuesFormik?.judul ? valuesFormik.judul : '',\r\n        pasal: valuesFormik?.pasal ? valuesFormik.pasal : '',\r\n        jenis_pelanggaran: valuesFormik?.jenis_pelanggaran ? valuesFormik.jenis_pelanggaran : '',\r\n        jenis_penertiban: valuesFormik?.jenis_penertiban ? valuesFormik.jenis_penertiban : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${JENIS_PERDA_PERKADA_URL}`, bodyparam)\r\n        console.log(response.data, valuesFormik)\r\n        if (response) {\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/MapPerdaPerkada', { replace: true })\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n                    <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Perda / Perkada</Form.Label>\r\n                        <Form.Control\r\n                          name='judul'\r\n                          className='form-control form-control-solid'\r\n                          placeholder='Masukkan Jenis Perda Perkada'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.judul}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Pasal</Form.Label>\r\n                        <Form.Control\r\n                          name='pasal'\r\n                          className='form-control form-control-solid'\r\n                          placeholder='Masukkan Jenis Pasal'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.pasal}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='col-xxl-10 col-lg-12 col-md-3 col-sm-12'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Penertiban</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          type='text'\r\n                          name='jenis_penertiban'\r\n                          className='form-control form-control-solid'\r\n                          placeholder='Masukkan Jenis Penertiban'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.jenis_penertiban}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='col-xxl-10 col-lg-12 col-md-3 col-sm-12'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Pelanggaran</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          type='text'\r\n                          name='jenis_pelanggaran'\r\n                          className='form-control form-control-solid'\r\n                          placeholder='Masukkan Jenis Pelanggaran'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.jenis_pelanggaran}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n                    <div className='d-md-flex justify-content-md-center'>\r\n                      <Link to='/master/MapPerdaPerkada'>\r\n                        <button className='btn btn-secondary me-2'>\r\n                          <i className='fa-solid fa-arrow-left'></i>\r\n                          Kembali\r\n                        </button>\r\n                      </Link>\r\n                      <button className='btn btn-primary' type='submit'>\r\n                        <i className='fa-solid fa-paper-plane'></i>\r\n                        Simpan\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_penindakan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_penindakan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisPenindakan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisPenindakan, setFilterJenisPenindakan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisPenindakan.val !== '') {\r\n      uriParam += `${valFilterJenisPenindakan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisPenindakan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisPenindakan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisPenindakan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Penindakan',\r\n      selector: (row: any) => row.jenis_penindakan,\r\n      sortable: true,\r\n      sortField: 'jenis_penindakan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisPenindakan/LihatJenisPenindakan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_PENINDAKAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_penindakan: valuesFormik?.jenis_penindakan, //? valuesFormik.jenis_penindakan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_PENINDAKAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_PENINDAKAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_penindakan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_PENINDAKAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Penindakan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisPenindakan.val} //4\r\n            onChange={handleChangeInputJenisPenindakan}\r\n            placeholder='Jenis Penindakan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Penindakan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Penindakan</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_penindakan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_penindakan && formik.errors.jenis_penindakan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_penindakan && !formik.errors.jenis_penindakan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_penindakan}\r\n                    />\r\n                    {formik.touched.jenis_penindakan && formik.errors.jenis_penindakan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_penindakan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_penindakan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_penindakan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` //http://localhost:3000/jenis-Penindakan\r\n\r\nexport function LihatJenisPenindakan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_penindakan: jsonD.jenis_penindakan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Penindakan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_penindakan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_penindakan\r\n                              ? valuesFormikExist?.jenis_penindakan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPenindakan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_penindakan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_penindakan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` //http://localhost:3000//master/jenis-Penindakan\r\n\r\nexport function UpdateJenisPenindakan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_penindakan: jsonD.jenis_penindakan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_penindakan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_penindakan: valuesFormik?.jenis_penindakan\r\n          ? valuesFormik.jenis_penindakan\r\n          : valuesFormikExist?.jenis_penindakan\r\n          ? valuesFormikExist.jenis_penindakan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_PENINDAKAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_PENINDAKAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisPenindakan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisPenindakan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Penindakan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_penindakan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_penindakan || valuesFormik?.jenis_penindakan === ''\r\n                              ? valuesFormik?.jenis_penindakan\r\n                              : valuesFormikExist?.jenis_penindakan\r\n                              ? valuesFormikExist?.jenis_penindakan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPenindakan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  jenis_korban_jiwa?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_korban_jiwa: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function KorbanJiwa() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterKorbanJiwa, setFilterKorbanJiwa] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterKorbanJiwa.val !== '') {\r\n      uriParam += `${valFilterKorbanJiwa.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterKorbanJiwa({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputKorbanJiwa = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterKorbanJiwa({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Korban Jiwa',\r\n      selector: (row: any) => row.jenis_korban_jiwa,\r\n      sortable: true,\r\n      sortField: 'jenis_korban_jiwa',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/KorbanJiwa/LihatKorbanJiwa/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KORBAN_JIWA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa, //? valuesFormik.jenis_korban_jiwa : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KORBAN_JIWA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KORBAN_JIWA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_korban_jiwa: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KORBAN_JIWA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>KorbanJiwa</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterKorbanJiwa.val} //4\r\n            onChange={handleChangeInputKorbanJiwa}\r\n            placeholder='Korban Jiwa'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Korban Jiwa</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Korban Jiwa</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_korban_jiwa'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_korban_jiwa && formik.errors.jenis_korban_jiwa,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_korban_jiwa && !formik.errors.jenis_korban_jiwa,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_korban_jiwa}\r\n                    />\r\n                    {formik.touched.jenis_korban_jiwa && formik.errors.jenis_korban_jiwa && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_korban_jiwa}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_jiwa?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_korban_jiwa?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/master/korban_jiwa\r\n\r\nexport function LihatKorbanJiwa() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_korban_jiwa: jsonD.jenis_korban_jiwa,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Korban Jiwa</Form.Label>\r\n                        <Form.Control\r\n                          name='korban jiwa'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_korban_jiwa\r\n                              ? valuesFormikExist?.jenis_korban_jiwa\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanJiwa'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_jiwa?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_korban_jiwa?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000//master/jenis_korban_jiwa\r\n\r\nexport function UpdateKorbanJiwa() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_korban_jiwa: jsonD.jenis_korban_jiwa,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_korban_jiwa: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa\r\n          ? valuesFormik.jenis_korban_jiwa\r\n          : valuesFormikExist?.jenis_korban_jiwa\r\n          ? valuesFormikExist.jenis_korban_jiwa\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KORBAN_JIWA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KORBAN_JIWA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/KorbanJiwa', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/KorbanJiwa', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Korban Jiwa</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_korban_jiwa'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_korban_jiwa ||\r\n                            valuesFormik?.jenis_korban_jiwa === ''\r\n                              ? valuesFormik?.jenis_korban_jiwa\r\n                              : valuesFormikExist?.jenis_korban_jiwa\r\n                              ? valuesFormikExist?.jenis_korban_jiwa\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanJiwa'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_jiwa?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/master/jenis-korban-jiwa\r\n\r\nexport function TambahKorbanJiwa() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_korban_jiwa: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa ? valuesFormik.jenis_korban_jiwa : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${JENIS_KORBAN_JIWA_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${JENIS_KORBAN_JIWA_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/KorbanJiwa', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/KorbanJiwa', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>jenis Korban Jiwa</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_korban_jiwa'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.jenis_korban_jiwa}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanJiwa'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  jenis_korban_material?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_korban_material: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function KorbanMaterial() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterKorbanMaterial, setFilterKorbanMaterial] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterKorbanMaterial.val !== '') {\r\n      uriParam += `${valFilterKorbanMaterial.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterKorbanMaterial({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputKorbanMaterial = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterKorbanMaterial({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Korban Material',\r\n      selector: (row: any) => row.jenis_korban_material,\r\n      sortable: true,\r\n      sortField: 'jenis_korban_material',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/KorbanMaterial/LihatKorbanMaterial/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_material: valuesFormik?.jenis_korban_material, //? valuesFormik.jenis_korban_material : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KORBAN_MATERIAL_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KORBAN_MATERIAL_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_korban_material: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KORBAN_MATERIAL_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Korban Material</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterKorbanMaterial.val} //4\r\n            onChange={handleChangeInputKorbanMaterial}\r\n            placeholder='Korban Material'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Korban Material</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Korban Material</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_korban_material'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_korban_material && formik.errors.jenis_korban_material,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_korban_material && !formik.errors.jenis_korban_material,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_korban_material}\r\n                    />\r\n                    {formik.touched.jenis_korban_material && formik.errors.jenis_korban_material && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_korban_material}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_material?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_korban_material?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` //http://localhost:3000/master/korban_jiwa\r\n\r\nexport function LihatKorbanMaterial() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_korban_material: jsonD.jenis_korban_material,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Korban Material</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_korban_material'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_korban_material\r\n                              ? valuesFormikExist?.jenis_korban_material\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanMaterial'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_material?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_korban_material?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` //http://localhost:3000/master/korban_jiwa\r\n\r\nexport function UpdateKorbanMaterial() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_korban_material: jsonD.jenis_korban_material,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_korban_material: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_material: valuesFormik?.jenis_korban_material\r\n          ? valuesFormik.jenis_korban_material\r\n          : valuesFormikExist?.jenis_korban_material\r\n          ? valuesFormikExist.jenis_korban_material\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KORBAN_MATERIAL_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KORBAN_MATERIAL_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/KorbanMaterial', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/KorbanMaterial', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Korban Material</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_korban_material'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_korban_material || valuesFormik?.jenis_korban_material === ''\r\n                              ? valuesFormik?.jenis_korban_material\r\n                              : valuesFormikExist?.jenis_korban_material\r\n                              ? valuesFormikExist?.jenis_korban_material\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanMaterial'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_bantuan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_bantuan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisBantuan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisBantuan, setFilterJenisBantuan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisBantuan.val !== '') {\r\n      uriParam += `${valFilterJenisBantuan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisBantuan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisBantuan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisBantuan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Bantuan',\r\n      selector: (row: any) => row.jenis_bantuan,\r\n      sortable: true,\r\n      sortField: 'jenis_bantuan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisBantuan/LihatJenisBantuan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_BANTUAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_bantuan: valuesFormik?.jenis_bantuan, //? valuesFormik.jenis_bantuan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_BANTUAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_BANTUAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_bantuan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_BANTUAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_BANTUAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Bantuan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisBantuan.val} //4\r\n            onChange={handleChangeInputJenisBantuan}\r\n            placeholder='Jenis Bantuan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Bantuan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Bantuan</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_bantuan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_bantuan && formik.errors.jenis_bantuan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_bantuan && !formik.errors.jenis_bantuan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_bantuan}\r\n                    />\r\n                    {formik.touched.jenis_bantuan && formik.errors.jenis_bantuan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_bantuan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_bantuan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_bantuan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` //http://localhost:3000/JenisBantuan\r\n\r\nexport function LihatJenisBantuan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_bantuan: jsonD.jenis_bantuan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Bantuan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_bantuan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_bantuan\r\n                              ? valuesFormikExist?.jenis_bantuan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisBantuan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_bantuan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_bantuan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateJenisBantuan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_bantuan: jsonD.jenis_bantuan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_bantuan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_bantuan: valuesFormik?.jenis_bantuan\r\n          ? valuesFormik.jenis_bantuan\r\n          : valuesFormikExist?.jenis_bantuan\r\n          ? valuesFormikExist.jenis_bantuan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_BANTUAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_BANTUAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisBantuan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisBantuan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Bantuan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_bantuan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_bantuan || valuesFormik?.jenis_bantuan === ''\r\n                              ? valuesFormik?.jenis_bantuan\r\n                              : valuesFormikExist?.jenis_bantuan\r\n                              ? valuesFormikExist?.jenis_bantuan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisBantuan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function InstansiTerkait() {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1);\r\n  }, []);\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\r\n          <div className=\"d-flex flex-column\">\r\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'Jenis Sarana & Prasarana',\r\n      selector: (row: any) => row.jenis_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'jenis_sarana_prasarana',\r\n    },\r\n    {\r\n      name: 'Status Sarana & Prasarana',\r\n      selector: (row: any) => row.status_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'status_sarana_prasarana',\r\n    },\r\n    {\r\n      name: 'Jumlah',\r\n      selector: (row: any) => row.jumlah,\r\n      sortable: true,\r\n      sortField: 'jumlah',\r\n    },\r\n    {\r\n      name: 'Kondisi',\r\n      selector: (row: any) => row.kondisi,\r\n      sortable: true,\r\n      sortField: 'kondisi',\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: (row: any) => row.keterangan,\r\n      sortable: true,\r\n      sortField: 'keterangan',\r\n    },\r\n    {\r\n      name: 'Dokumentasi',\r\n      selector: (row: any) => row.dokumentasi,\r\n      sortable: true,\r\n      sortField: 'dokumentasi',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: \"Action\",\r\n      className: \"action\",\r\n      align: \"left\",\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n\r\n            <div className=\"mb-2\">\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size=\"sm\"\r\n                    variant=\"light\"\r\n                    title=\"Aksi\">\r\n                    <Dropdown.Item>\r\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\r\n                        Detail\r\n                      </Link>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n\r\n  ];\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n   \r\n  const [temp, setTemp] = useState([]);\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true);\r\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\r\n\r\n    setTemp(value.data.data);\r\n    console.log('cek response api:',temp);\r\n\r\n    \r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\r\n    setData(response.data.data);\r\n   \r\n    setTotalRows(response.data.total);\r\n    setLoading(false);\r\n    console.log('cek ahhh :' ,data);\r\n    return [data, setData] as const;\r\n  };\r\n\r\n  const handlePageChange = (page: any) => {\r\n    fetchUsers(page);\r\n  };\r\n\r\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n    setLoading(true);\r\n\r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\r\n\r\n    setData(response.data.data);\r\n    setPerPage(newPerPage);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSort = (column: any, sortDirection: any) => {\r\n    // simulate server sort\r\n    console.log(column, sortDirection);\r\n    setLoading(true);\r\n\r\n    // instead of setTimeout this is where you would handle your API call.\r\n    setTimeout(() => {\r\n      setData(orderBy(data, column.sortField, sortDirection));\r\n      setLoading(false);\r\n    }, 100);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Instansi Terkait\r\n            </label>\r\n            <input\r\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\r\n          </div>\r\n      </div>\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n        <Link to='#'>\r\n            <button className='btn btn-primary'>\r\n              <i className='fa-solid fa-search'></i>\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-5' onClick={handleShow}>\r\n              <i className=\"fa-solid fa-plus\"></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tambah Instansi Terkait</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\r\n        <Form.Group className=\"mb-3 form-control-solid\">\r\n            <Form.Label>Instansi Terakait</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Instansi Terkait\" />\r\n        </Form.Group>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n          <i className=\"fa-solid fa-paper-plane\"></i>\r\n            Simpan\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n      <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            pagination\r\n        />\r\n        {/* <DataTable\r\n          columns={columns}\r\n          data={data}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          sortServer\r\n          onSort={handleSort}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n        /> */}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  kondisi_sarana_prasarana?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  kondisi_sarana_prasarana: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function KondisiSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterKondisiSaranaPrasarana, setFilterKondisiSaranaPrasarana] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterKondisiSaranaPrasarana.val !== '') {\r\n      uriParam += `${valFilterKondisiSaranaPrasarana.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterKondisiSaranaPrasarana({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputKondisiSaranaPrasarana = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterKondisiSaranaPrasarana({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Kondisi Sarana Prasarana',\r\n      selector: (row: any) => row.kondisi_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'kondisi_sarana_prasarana',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/KondisiSaranaPrasarana/LihatKondisiSaranaPrasarana/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        kondisi_sarana_prasarana: valuesFormik?.kondisi_sarana_prasarana, //? valuesFormik.kondisi_sarana_prasarana : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${KONDISI_SARANA_PRASARANA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${KONDISI_SARANA_PRASARANA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      kondisi_sarana_prasarana: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${KONDISI_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Kondisi Sarana Prasarana</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterKondisiSaranaPrasarana.val} //4\r\n            onChange={handleChangeInputKondisiSaranaPrasarana}\r\n            placeholder='Kondisi Sarana Prasarana'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Kondisi Sarana Prasarana</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Kondisi Sarana Prasarana</Form.Label>\r\n                  <Form.Control\r\n                      name='kondisi_sarana_prasarana'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.kondisi_sarana_prasarana && formik.errors.kondisi_sarana_prasarana,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.kondisi_sarana_prasarana && !formik.errors.kondisi_sarana_prasarana,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.kondisi_sarana_prasarana}\r\n                    />\r\n                    {formik.touched.kondisi_sarana_prasarana && formik.errors.kondisi_sarana_prasarana && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.kondisi_sarana_prasarana}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  kondisi_sarana_prasarana?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kondisi_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` //http://localhost:3000/Kondisi-Penindakan\r\n\r\nexport function LihatKondisiSaranaPrasarana() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kondisi_sarana_prasarana: jsonD.kondisi_sarana_prasarana,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kondisi Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='kondisi_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.kondisi_sarana_prasarana\r\n                              ? valuesFormikExist?.kondisi_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KondisiSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kondisi_sarana_prasarana?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kondisi_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateKondisiSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kondisi_sarana_prasarana: jsonD.kondisi_sarana_prasarana,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kondisi_sarana_prasarana: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kondisi_sarana_prasarana: valuesFormik?.kondisi_sarana_prasarana\r\n          ? valuesFormik.kondisi_sarana_prasarana\r\n          : valuesFormikExist?.kondisi_sarana_prasarana\r\n          ? valuesFormikExist.kondisi_sarana_prasarana\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${KONDISI_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${KONDISI_SARANA_PRASARANA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/KondisiSaranaPrasarana', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/KondisiSaranaPrasarana', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kondisi Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='kondisi_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kondisi_sarana_prasarana || valuesFormik?.kondisi_sarana_prasarana === ''\r\n                              ? valuesFormik?.kondisi_sarana_prasarana\r\n                              : valuesFormikExist?.kondisi_sarana_prasarana\r\n                              ? valuesFormikExist?.kondisi_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KondisiSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  status_sarana_prasarana?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  status_sarana_prasarana: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function StatusSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterStatusSaranaPrasarana, setFilterStatusSaranaPrasarana] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterStatusSaranaPrasarana.val !== '') {\r\n      uriParam += `${valFilterStatusSaranaPrasarana.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterStatusSaranaPrasarana({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputStatusSaranaPrasarana = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterStatusSaranaPrasarana({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Status Sarana Prasarana',\r\n      selector: (row: any) => row.status_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'status_sarana_prasarana',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/StatusSaranaPrasarana/LihatStatusSaranaPrasarana/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        status_sarana_prasarana: valuesFormik?.status_sarana_prasarana, //? valuesFormik.status_sarana_prasarana : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${STATUS_SARANA_PRASARANA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${STATUS_SARANA_PRASARANA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      status_sarana_prasarana: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${STATUS_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Status Sarana Prasarana</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterStatusSaranaPrasarana.val} //4\r\n            onChange={handleChangeInputStatusSaranaPrasarana}\r\n            placeholder='Status Sarana Prasarana'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Status Sarana Prasarana</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Status Sarana Prasarana</Form.Label>\r\n                  <Form.Control\r\n                      name='status_sarana_prasarana'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.status_sarana_prasarana && formik.errors.status_sarana_prasarana,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.status_sarana_prasarana && !formik.errors.status_sarana_prasarana,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.status_sarana_prasarana}\r\n                    />\r\n                    {formik.touched.status_sarana_prasarana && formik.errors.status_sarana_prasarana && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.status_sarana_prasarana}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  status_sarana_prasarana?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  status_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` //http://localhost:3000/jenis-Penindakan\r\n\r\nexport function LihatStatusSaranaPrasarana() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        status_sarana_prasarana: jsonD.status_sarana_prasarana,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Status Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='status_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.status_sarana_prasarana\r\n                              ? valuesFormikExist?.status_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/StatusSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  status_sarana_prasarana?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  status_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateStatusSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        status_sarana_prasarana: jsonD.status_sarana_prasarana,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      status_sarana_prasarana: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        status_sarana_prasarana: valuesFormik?.status_sarana_prasarana\r\n          ? valuesFormik.status_sarana_prasarana\r\n          : valuesFormikExist?.status_sarana_prasarana\r\n          ? valuesFormikExist.status_sarana_prasarana\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${STATUS_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${STATUS_SARANA_PRASARANA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/StatusSaranaPrasarana', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/StatusSaranaPrasarana', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Status Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='status_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.status_sarana_prasarana || valuesFormik?.status_sarana_prasarana === ''\r\n                              ? valuesFormik?.status_sarana_prasarana\r\n                              : valuesFormikExist?.status_sarana_prasarana\r\n                              ? valuesFormikExist?.status_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/StatusSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const AGAMA_URL = `${API_URL}/master/agama` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  agama?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  agama: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function Agama() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterAgama, setFilterAgama] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterAgama.val !== '') {\r\n      uriParam += `${valFilterAgama.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterAgama({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputAgama = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterAgama({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Agama',\r\n      selector: (row: any) => row.agama,\r\n      sortable: true,\r\n      sortField: 'agama',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Agama/LihatAgama/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${AGAMA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${AGAMA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        agama: valuesFormik?.agama, //? valuesFormik.agama : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${AGAMA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${AGAMA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      agama: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${AGAMA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${AGAMA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Agama</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterAgama.val} //4\r\n            onChange={handleChangeInputAgama}\r\n            placeholder='Agama'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Agama</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Agama</Form.Label>\r\n                  <Form.Control\r\n                      name='agama'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.agama && formik.errors.agama,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.agama && !formik.errors.agama,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.agama}\r\n                    />\r\n                    {formik.touched.agama && formik.errors.agama && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.agama}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  agama?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  agama?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatAgama() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${AGAMA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        agama: jsonD.agama,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>agama</Form.Label>\r\n                        <Form.Control\r\n                          name='agama'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.agama ? valuesFormikExist?.agama : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Agama'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  agama?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  agama?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000//master/agama\r\n\r\nexport function UpdateAgama() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${AGAMA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        agama: jsonD.agama,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      agama: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        agama: valuesFormik?.agama\r\n          ? valuesFormik.agama\r\n          : valuesFormikExist?.agama\r\n          ? valuesFormikExist.agama\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${AGAMA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${AGAMA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Agama', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Agama', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>agama</Form.Label>\r\n                        <Form.Control\r\n                          name='agama'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.agama || valuesFormik?.agama === ''\r\n                              ? valuesFormik?.agama\r\n                              : valuesFormikExist?.agama\r\n                              ? valuesFormikExist?.agama\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Agama'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  agama?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/master/agama\r\n\r\nexport function TambahAgama() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      agama: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        agama: valuesFormik?.agama ? valuesFormik.agama : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${AGAMA_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${AGAMA_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/agama', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/agama', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>agama</Form.Label>\r\n                        <Form.Control\r\n                          name='agama'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.agama}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Agama'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const PANGKAT_URL = `${API_URL}/master/pangkat`\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  pangkat?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  pangkat: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function Pangkat() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterPangkat, setFilterPangkat] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => {\r\n    //3\r\n    let uriParam = ''\r\n    if (valFilterPangkat.val !== '') {\r\n      uriParam += `${valFilterPangkat.val}`\r\n    }\r\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterPangkat({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputPangkat = (event: {\r\n    //5\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterPangkat({val: event.target.value})\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Pangkat',\r\n      selector: (row: any) => row.pangkat,\r\n      sortable: true,\r\n      sortField: 'pangkat',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuposition='top'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Pangkat/LihatPangkat/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${PANGKAT_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${PANGKAT_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        pangkat: valuesFormik?.pangkat, //? valuesFormik.pangkat : '', //? valuesFormik.kategori : '',\r\n      }\r\n\r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${PANGKAT_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(`${PANGKAT_URL}/update/${idEditData.id}`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      pangkat: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n\r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${PANGKAT_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n\r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${PANGKAT_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Pangkat</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterPangkat.val} //4\r\n            onChange={handleChangeInputPangkat}\r\n            placeholder='Pangkat'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}>\r\n            {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Pangkat</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Pangkat</Form.Label>\r\n                  <Form.Control\r\n                    name='pangkat'\r\n                    className={clsx(\r\n                      'form-control form-control-solid mb-1',\r\n                      {\r\n                        'is-invalid': formik.touched.pangkat && formik.errors.pangkat,\r\n                      },\r\n                      {\r\n                        'is-valid': formik.touched.pangkat && !formik.errors.pangkat,\r\n                      }\r\n                    )}\r\n                    onChange={handleChangeFormik}\r\n                    value={valuesFormik?.pangkat}\r\n                  />\r\n                  {formik.touched.pangkat && formik.errors.pangkat && (\r\n                    <div className='fv-plugins-message-container'>\r\n                      <div className='fv-help-block'>\r\n                        <span role='alert'>{formik.errors.pangkat}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n        {temp?.length > 0 && temp && (\r\n          <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  pangkat?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  pangkat?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000//master/pangkat\r\n\r\nexport function UpdatePangkat() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${PANGKAT_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        pangkat: jsonD.pangkat,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      pangkat: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        pangkat: valuesFormik?.pangkat\r\n          ? valuesFormik.pangkat\r\n          : valuesFormikExist?.pangkat\r\n          ? valuesFormikExist.pangkat\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${PANGKAT_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${PANGKAT_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/pangkat', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/pangkat', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>pangkat</Form.Label>\r\n                        <Form.Control\r\n                          name='pangkat'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.pangkat || valuesFormik?.pangkat === ''\r\n                              ? valuesFormik?.pangkat\r\n                              : valuesFormikExist?.pangkat\r\n                              ? valuesFormikExist?.pangkat\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/pangkat'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  pangkat?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  pangkat?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\r\n\r\nexport function LihatPangkat() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${PANGKAT_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        pangkat: jsonD.pangkat,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Pangkat</Form.Label>\r\n                        <Form.Control\r\n                          name='pangkat'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.pangkat ? valuesFormikExist?.pangkat : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/pangkat'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  pangkat?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\r\n\r\nexport function TambahPangkat() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      pangkat: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        pangkat: valuesFormik?.pangkat ? valuesFormik.pangkat : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${PANGKAT_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${PANGKAT_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/pangkat', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/pangkat', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>pangkat</Form.Label>\r\n                        <Form.Control\r\n                          name='pangkat'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.pangkat}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/pangkat'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\nimport { TEMPAT_PELAKSANA_URL } from './Lihat-master/LihatTempatPelaksanaan'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const BIDANG_WILAYAH_URL = `${API_URL}/master/bidang-wilayah`\r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  nama?: string\r\n  kategori?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  kategori: Yup.string().required('Wajib diisi'),\r\n  nama: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function TempatPelaksanaan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterTempatPelaksanaan, setFilterTempatPelaksanaan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterTempatPelaksanaan.val !== '') {\r\n      uriParam += `${valFilterTempatPelaksanaan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterTempatPelaksanaan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputTempatPelaksanaan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterTempatPelaksanaan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Bidang/Wilayah',\r\n      selector: (row: any) => row.nama,\r\n      sortable: true,\r\n      sortField: 'nama',\r\n    },\r\n    {\r\n      name: 'Kode',\r\n      selector: (row: any) => row.kode,\r\n      sortable: true,\r\n      sortField: 'kode',\r\n    },\r\n    {\r\n      name: 'Kategori',\r\n      selector: (row: any) => row.kategori,\r\n      sortable: true,\r\n      sortField: 'kategori',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/TempatPelaksanaan/LihatTempatPelaksanaan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${BIDANG_WILAYAH_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${BIDANG_WILAYAH_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        nama: valuesFormik?.nama, //? valuesFormik.nama : '',\r\n        kategori: valuesFormik?.kategori //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${BIDANG_WILAYAH_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${BIDANG_WILAYAH_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      nama: '',\r\n      kategori: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${BIDANG_WILAYAH_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${BIDANG_WILAYAH_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Tempat Pelaksanaan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterTempatPelaksanaan.val} //4\r\n            onChange={handleChangeInputTempatPelaksanaan}\r\n            placeholder='Bidang/Wilayah'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Tempat Pelaksanaan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Nama Bidang/Wilayah</Form.Label>\r\n                  <Form.Control\r\n                      name='nama'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.nama && formik.errors.nama,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.nama && !formik.errors.nama,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.nama}\r\n                    />\r\n                    {formik.touched.nama && formik.errors.nama && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.nama}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  <Form.Label>Kategori</Form.Label>\r\n                  <select\r\n                          data-control='select2'\r\n                          data-placeholder='Jenis Kelamin'\r\n                          name='kategori'\r\n                          className={clsx(\r\n                            'form-control form-control-solid mb-1',\r\n                            {\r\n                              'is-invalid':\r\n                                formik.touched.kategori && formik.errors.kategori,\r\n                            },\r\n                            {\r\n                              'is-valid':\r\n                                formik.touched.kategori && !formik.errors.kategori,\r\n                            }\r\n                          )}\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kategori}\r\n                        >\r\n                          <option value=''>Pilih</option>\r\n                          <option value='Bidang'>Bidang</option>\r\n                          <option value='Wilayah'>Wilayah</option>\r\n                        </select>\r\n                        {formik.touched.kategori && formik.errors.kategori && (\r\n                          <div className='fv-plugins-message-container'>\r\n                            <div className='fv-help-block'>\r\n                              <span role='alert'>{formik.errors.kategori}</span>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  nama?: string\r\n  kategori?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  nama?: string\r\n  kategori?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const BIDANG_WILAYAH_URL = `${API_URL}/master/bidang-wilayah` //http://localhost:3000//master/kota\r\n\r\nexport function UpdateTempatPelaksanaan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${BIDANG_WILAYAH_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        nama: jsonD.nama,\r\n        kategori: jsonD.kategori,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      nama: '',\r\n      kategori: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        nama : valuesFormik?.nama\r\n          ? valuesFormik.nama\r\n          : valuesFormikExist?.nama\r\n          ? valuesFormikExist.nama\r\n          : '',\r\n          kategori: valuesFormik?.kategori\r\n          ? valuesFormik.kategori\r\n          : valuesFormikExist?.kategori\r\n          ? valuesFormikExist.kategori\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${BIDANG_WILAYAH_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${BIDANG_WILAYAH_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/TempatPelaksanaan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/TempatPelaksanaan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Bidang Wilayah</Form.Label>\r\n                        <Form.Control\r\n                          name='nama'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.nama || valuesFormik?.nama === ''\r\n                              ? valuesFormik?.nama\r\n                              : valuesFormikExist?.nama\r\n                              ? valuesFormikExist?.nama\r\n                              : ''\r\n                          }\r\n                        />\r\n                        <Form.Label>Kategori</Form.Label>\r\n                        <Form.Control\r\n                          name='kategori'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kategori || valuesFormik?.kategori === ''\r\n                              ? valuesFormik?.kategori\r\n                              : valuesFormikExist?.kategori\r\n                              ? valuesFormikExist?.kategori\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/TempatPelaksanaan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  nama?: string\r\n  kode?: string\r\n  updated_by?: string\r\n  kategori?: string\r\n}\r\n\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  nama?: string\r\n  kategori?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const TEMPAT_PELAKSANA_URL = `${API_URL}/master/bidang-wilayah` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatTempatPelaksanaan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${TEMPAT_PELAKSANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        nama: jsonD.nama,\r\n        kode: jsonD.kode,\r\n        kategori: jsonD.kategori,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Tempat Pelaksana</Form.Label>\r\n                        <Form.Control\r\n                          name='nama'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.nama ? valuesFormikExist?.nama : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode</Form.Label>\r\n                        <Form.Control\r\n                          name='kode'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kategori</Form.Label>\r\n                        <Form.Control\r\n                          name='kategori'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kategori ? valuesFormikExist?.kategori : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/TempatPelaksanaan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const SKPD_URL = `${API_URL}/master/skpd`\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  skpd?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  skpd: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function SKPD() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterSKPD, setFilterSKPD] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([]) // Urutan 1\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => {\r\n    //3\r\n    let uriParam = ''\r\n    if (valFilterSKPD.val !== '') {\r\n      uriParam += `${valFilterSKPD.val}`\r\n    }\r\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterSKPD({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputSKPD = (event: {\r\n    //5\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterSKPD({val: event.target.value})\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  // let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'SKPD',\r\n      selector: (row: any) => row.skpd,\r\n      sortable: true,\r\n      sortField: 'skpd',\r\n    },\r\n    {\r\n      name: 'Kode',\r\n      selector: (row: any) => row.kode,\r\n      sortable: true,\r\n      sortField: 'kode',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/SKPD/LihatSKPD/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${SKPD_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${SKPD_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        skpd: valuesFormik?.skpd, //? valuesFormik.skpd : '',\r\n      }\r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${SKPD_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(`${SKPD_URL}/update/${idEditData.id}`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      skpd: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n\r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${SKPD_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n\r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${SKPD_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>SKPD</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterSKPD.val} //4\r\n            onChange={handleChangeInputSKPD}\r\n            placeholder='SKPD'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}>\r\n            {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} SKPD</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>SKPD</Form.Label>\r\n                  <Form.Control\r\n                    name='skpd'\r\n                    className={clsx(\r\n                      'form-control form-control-solid mb-1',\r\n                      {\r\n                        'is-invalid': formik.touched.skpd && formik.errors.skpd,\r\n                      },\r\n                      {\r\n                        'is-valid': formik.touched.skpd && !formik.errors.skpd,\r\n                      }\r\n                    )}\r\n                    onChange={handleChangeFormik}\r\n                    value={valuesFormik?.skpd}\r\n                  />\r\n                  {formik.touched.skpd && formik.errors.skpd && (\r\n                    <div className='fv-plugins-message-container'>\r\n                      <div className='fv-help-block'>\r\n                        <span role='alert'>{formik.errors.skpd}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n        <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n      </div>\r\n\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  skpd?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  skpd?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SKPD_URL = `${API_URL}/master/skpd` //http://localhost:3000//master/SKPD\r\n\r\nexport function UpdateSKPD() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${SKPD_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        skpd: jsonD.skpd,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      skpd: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        skpd: valuesFormik?.skpd\r\n          ? valuesFormik.skpd\r\n          : valuesFormikExist?.skpd\r\n          ? valuesFormikExist.skpd\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${SKPD_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${SKPD_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/SKPD', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/SKPD', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>SKPD</Form.Label>\r\n                        <Form.Control\r\n                          name='skpd'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.skpd || valuesFormik?.skpd === ''\r\n                              ? valuesFormik?.skpd\r\n                              : valuesFormikExist?.skpd\r\n                              ? valuesFormikExist?.skpd\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/SKPD'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  skpd?: string\r\n  kode?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  skpd?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SKPD_URL = `${API_URL}/master/skpd` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatSKPD() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${SKPD_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        skpd: jsonD.skpd,\r\n        kode: jsonD.kode,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>SKPD</Form.Label>\r\n                        <Form.Control\r\n                          name='skpd'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.skpd ? valuesFormikExist?.skpd : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode</Form.Label>\r\n                        <Form.Control\r\n                          name='kode'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/SKPD'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const PENDIDIKAN_URL = `${API_URL}/master/pendidikan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  pendidikan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  pendidikan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function Pendidikan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterPendidikan, setFilterPendidikan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterPendidikan.val !== '') {\r\n      uriParam += `${valFilterPendidikan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterPendidikan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputPendidikan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterPendidikan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Pendidikan',\r\n      selector: (row: any) => row.pendidikan,\r\n      sortable: true,\r\n      sortField: 'pendidikan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Pendidikan/LihatPendidikan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${PENDIDIKAN_URL}/filter-pendidikan/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${PENDIDIKAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        pendidikan: valuesFormik?.pendidikan, //? valuesFormik.pendidikan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${PENDIDIKAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${PENDIDIKAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      pendidikan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${PENDIDIKAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${PENDIDIKAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Pendidikan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterPendidikan.val} //4\r\n            onChange={handleChangeInputPendidikan}\r\n            placeholder='Pendidikan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Pendidikan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Pendidikan</Form.Label>\r\n                  <Form.Control\r\n                      name='pendidikan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.pendidikan && formik.errors.pendidikan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.pendidikan && !formik.errors.pendidikan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.pendidikan}\r\n                    />\r\n                    {formik.touched.pendidikan && formik.errors.pendidikan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.pendidikan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  pendidikan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  pendidikan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const PENDIDIKAN_URL = `${API_URL}/master/pendidikan` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatPendidikan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${PENDIDIKAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        pendidikan: jsonD.pendidikan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Pendidikan</Form.Label>\r\n                        <Form.Control\r\n                          name='pendidikan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.pendidikan ? valuesFormikExist?.pendidikan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Pendidikan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_sarana_prasarana?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_sarana_prasarana: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisSaranaPrasarana, setFilterJenisSaranaPrasarana] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisSaranaPrasarana.val !== '') {\r\n      uriParam += `${valFilterJenisSaranaPrasarana.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisSaranaPrasarana({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisSaranaPrasarana = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisSaranaPrasarana({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  // let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Sarana Prasarana',\r\n      selector: (row: any) => row.jenis_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'jenis_sarana_prasarana',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisSaranaPrasarana/LihatJenisSaranaPrasarana/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_sarana_prasarana: valuesFormik?.jenis_sarana_prasarana, //? valuesFormik.jenis_sarana_prasarana : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_SARANA_PRASARANA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_SARANA_PRASARANA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_sarana_prasarana: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Sarana Prasarana</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisSaranaPrasarana.val} //4\r\n            onChange={handleChangeInputJenisSaranaPrasarana}\r\n            placeholder='Jenis Sarana Prasarana'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Sarana Prasarana</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Sarana Prasarana</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_sarana_prasarana'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_sarana_prasarana && formik.errors.jenis_sarana_prasarana,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_sarana_prasarana && !formik.errors.jenis_sarana_prasarana,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_sarana_prasarana}\r\n                    />\r\n                    {formik.touched.jenis_sarana_prasarana && formik.errors.jenis_sarana_prasarana && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_sarana_prasarana}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n        {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_sarana_prasarana?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateJenisSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_sarana_prasarana: jsonD.jenis_sarana_prasarana,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_sarana_prasarana: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_sarana_prasarana: valuesFormik?.jenis_sarana_prasarana\r\n          ? valuesFormik.jenis_sarana_prasarana\r\n          : valuesFormikExist?.jenis_sarana_prasarana\r\n          ? valuesFormikExist.jenis_sarana_prasarana\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_SARANA_PRASARANA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisSaranaPrasarana', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisSaranaPrasarana', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_sarana_prasarana || valuesFormik?.jenis_sarana_prasarana === ''\r\n                              ? valuesFormik?.jenis_sarana_prasarana\r\n                              : valuesFormikExist?.jenis_sarana_prasarana\r\n                              ? valuesFormikExist?.jenis_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_sarana_prasarana?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` //http://localhost:3000/jenis-Penindakan\r\n\r\nexport function LihatJenisSaranaPrasarana() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_sarana_prasarana: jsonD.jenis_sarana_prasarana,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_sarana_prasarana\r\n                              ? valuesFormikExist?.jenis_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const GOLONGAN_URL = `${API_URL}/master/golongan`\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  golongan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  golongan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function Golongan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterGolongan, setFilterGolongan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => {\r\n    //3\r\n    let uriParam = ''\r\n    if (valFilterGolongan.val !== '') {\r\n      uriParam += `${valFilterGolongan.val}`\r\n    }\r\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterGolongan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputGolongan = (event: {\r\n    //5\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterGolongan({val: event.target.value})\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n    },\r\n    {},\r\n    {\r\n      name: 'Golongan',\r\n      selector: (row: any) => row.golongan,\r\n      sortable: true,\r\n      sortField: 'golongan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item onClick={() => doDetail(record.id)}>Detail</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${GOLONGAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${GOLONGAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        golongan: valuesFormik?.golongan, //? valuesFormik.golongan : '', //? valuesFormik.kategori : '',\r\n      }\r\n\r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${GOLONGAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(`${GOLONGAN_URL}/update/${idEditData.id}`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      golongan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n\r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${GOLONGAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n\r\n  const doDetail = (id: any) => {\r\n    setShow(true)\r\n    setAksi(2)\r\n    getDetail(id)\r\n  }\r\n\r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${GOLONGAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Golongan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterGolongan.val} //4\r\n            onChange={handleChangeInputGolongan}\r\n            placeholder='Cari Golongan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}>\r\n            {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n\r\n          <Link to='#' onClick={handleFilterReset}>\r\n            <button className='btn btn-light-primary me-2'>\r\n              <i className='fa-solid fa-arrows-rotate svg-icon-2'></i>\r\n              Reset\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              {aksi === 0 ? 'Tambah' : aksi === 1 ? 'Ubah' : 'Detail'} Golongan\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Golongan</Form.Label>\r\n                  {aksi === 0 || aksi === 1 ? (\r\n                    <Form.Control\r\n                      name='golongan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.golongan && formik.errors.golongan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.golongan && !formik.errors.golongan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.golongan}\r\n                      placeholder='Masukkan Golongan'\r\n                    />\r\n                  ) : (\r\n                    <Form.Control\r\n                      name='golongan'\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.golongan}\r\n                      disabled\r\n                    />\r\n                  )}\r\n                  {formik.touched.golongan && formik.errors.golongan && (\r\n                    <div className='fv-plugins-message-container'>\r\n                      <div className='fv-help-block'>\r\n                        <span role='alert'>{formik.errors.golongan}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa-solid fa-arrow-left' />\r\n                      Kembali\r\n                    </button>\r\n                    {aksi === 0 || aksi === 1 ? (\r\n                      <button\r\n                        className='float-none btn btn-primary align-self-center m-1'\r\n                        type='submit'\r\n                      >\r\n                        <i className='fa-solid fa-paper-plane'></i>\r\n                        Simpan\r\n                      </button>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n        {temp?.length > 0 && temp && (\r\n          <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            paginationTotalRows={totalRows}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const ESELON_URL = `${API_URL}/master/eselon` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  eselon?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  eselon: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function Eselon() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterEselon, setFilterEselon] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterEselon.val !== '') {\r\n      uriParam += `${valFilterEselon.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterEselon({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputEselon = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterEselon({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Eselon',\r\n      selector: (row: any) => row.eselon,\r\n      sortable: true,\r\n      sortField: 'eselon',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Eselon/LihatEselon/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${ESELON_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${ESELON_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        eselon: valuesFormik?.eselon, //? valuesFormik.eselon : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${ESELON_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${ESELON_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      eselon: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${ESELON_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${ESELON_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Eselon</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterEselon.val} //4\r\n            onChange={handleChangeInputEselon}\r\n            placeholder='Eselon'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Eselon</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Eselon</Form.Label>\r\n                  <Form.Control\r\n                      name='eselon'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.eselon && formik.errors.eselon,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.eselon && !formik.errors.eselon,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.eselon}\r\n                    />\r\n                    {formik.touched.eselon && formik.errors.eselon && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.eselon}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  eselon?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  eselon?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const ESELON_URL = `${API_URL}/master/eselon` //http://localhost:3000//master/jenis-kejadian\r\n\r\nexport function UpdateEselon() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${ESELON_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        eselon: jsonD.eselon,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      eselon: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        eselon: valuesFormik?.eselon\r\n          ? valuesFormik.eselon\r\n          : valuesFormikExist?.eselon\r\n          ? valuesFormikExist.eselon\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${ESELON_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${ESELON_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Eselon', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Eselon', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Eselon</Form.Label>\r\n                        <Form.Control\r\n                          name='eselon'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.eselon || valuesFormik?.eselon === ''\r\n                              ? valuesFormik?.eselon\r\n                              : valuesFormikExist?.eselon\r\n                              ? valuesFormikExist?.eselon\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Eselon'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  eselon?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  eselon?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const ESELON_URL = `${API_URL}/master/eselon` //http://localhost:3000/jenis-kejadian\r\n\r\nexport function LihatEselon() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${ESELON_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        eselon: jsonD.eselon,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Eselon</Form.Label>\r\n                        <Form.Control\r\n                          name='eselon'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.eselon\r\n                              ? valuesFormikExist?.eselon\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Eselon'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport {useFormik, FormikHelpers} from 'formik'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport clsx from 'clsx'\r\nimport Swal from 'sweetalert2'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport * as Yup from 'yup'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JABATAN_URL = `${API_URL}/master/jabatan` //http://localhost:3000/sarana-prasarana\r\nexport interface FormInput {\r\n  nama?: string\r\n  status?: string\r\n  created_by?: number\r\n}\r\nconst validatorForm = Yup.object().shape({\r\n  nama: Yup.string().required('Wajib diisi'),\r\n  status: Yup.string().required('Wajib diisi'),\r\n})\r\nexport function Jabatan() {\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n  const navigate = useNavigate()\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [perPage, setPerPage] = useState(10)\r\n  const [data, setData] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [temp, setTemp] = useState([])\r\n  const [aksi, setAksi] = useState(0)\r\n  const [valFilterJabatan, setFilterJabatan] = useState({val: ''})\r\n\r\n  useEffect(() => {\r\n    async function fetchUsers(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(\r\n        `${JABATAN_URL}/find?limit=${perPage}&offset=${page}${qParamFind.strparam}`\r\n      )\r\n      setData(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      setLoading(false)\r\n    }\r\n    fetchUsers(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchData = async (page: number) => {\r\n    setLoading(true)\r\n    const response = await axios.get(\r\n      `${JABATAN_URL}/find?limit=${perPage}&offset=${page}${qParamFind.strparam}`\r\n    )\r\n    setData(response.data.data)\r\n    setTotalRows(response.data.total_data)\r\n    setLoading(false)\r\n\r\n    return [data, setData] as const\r\n  }\r\n  const handlePerRowsChange = async (newPerPage: number, page: number) => {\r\n    setLoading(true)\r\n    const response = await axios.get(\r\n      `${JABATAN_URL}/find?limit=${newPerPage}&offset=${page}${qParamFind.strparam}`\r\n    )\r\n    setData(response.data.data)\r\n    setPerPage(newPerPage)\r\n    setLoading(false)\r\n  }\r\n\r\n  const handleFilter = async () => {\r\n    let uriParam = ''\r\n    if (valFilterJabatan.val !== '') {\r\n      uriParam += `&nama=${valFilterJabatan.val}`\r\n    }\r\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\r\n  }\r\n\r\n  const handlePageChange = (page: number) => {\r\n    fetchData(page)\r\n  }\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeInputJabatan = (event: {\r\n    //5\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterJabatan({val: event.target.value})\r\n  }\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n  let no = 1\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.id,\r\n      sortable: true,\r\n      sortField: 'no',\r\n      minWidth: '30px',\r\n      cell: (record: any) => {\r\n        return <div className='mt-2 mb-2'>{no++}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Jabatan',\r\n      selector: (row: any) => row.jabatan,\r\n      sortable: true,\r\n      sortField: 'jabatan',\r\n      minWidth: '100px',\r\n    },\r\n    {\r\n      name: 'Status',\r\n      selector: (row: any) => row.status,\r\n      sortable: true,\r\n      sortField: 'status',\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: 'Kode',\r\n      selector: (row: any) => row.kode,\r\n      sortable: true,\r\n      sortField: 'kode',\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      align: 'left',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/jabatan/lihat-jabatan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        nama: valuesFormik?.nama,\r\n        status: valuesFormik?.status,\r\n      }\r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JABATAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchData(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(`${JABATAN_URL}/update/${idEditData.id}`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchData(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  // UPDATE\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JABATAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n      nama: data.data.jabatan,\r\n    }))\r\n  }\r\n  //End UPDATE\r\n  //Detail\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      nama: '',\r\n      status: '',\r\n    })\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  //End Detail\r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JABATAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n          fetchData(1)\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END DELETE\r\n  const handleSort = (column: any, sortDirection: any) => {\r\n    // simulate server sort\r\n    console.log(column, sortDirection)\r\n    setLoading(true)\r\n\r\n    // instead of setTimeout this is where you would handle your API call.\r\n    setTimeout(() => {\r\n      setData(orderBy(data, column.sortField, sortDirection))\r\n      setLoading(false)\r\n    }, 100)\r\n  }\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='row g-8 mt-2 ms-5 me-5'>\r\n          <label>\r\n            <h3>Jabatan</h3>\r\n          </label>\r\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n            <input\r\n              type='text'\r\n              className='form-control form-control form-control-solid'\r\n              name='nama'\r\n              value={valFilterJabatan.val}\r\n              onChange={handleChangeInputJabatan}\r\n              placeholder='Jabatan'\r\n            />\r\n          </div>\r\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n            <Link to='#' onClick={handleFilter}>\r\n              {/* 1 */}\r\n              <button className='btn btn-light-primary me-2'>\r\n                <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n                Cari\r\n              </button>\r\n            </Link>\r\n          </div>\r\n          <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n            <Link to='/master/Jabatan/TambahJabatan'>\r\n              <button className='btn btn-primary me-2'>\r\n                <i className='fa-solid fa-plus'></i>\r\n                Tambah\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'}Tambah Jabatan</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div className='mb-3 form-control-solid'>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jabatan</Form.Label>\r\n                  <Form.Control\r\n                    name='nama'\r\n                    className='form-control form-control-solid'\r\n                    onChange={handleChangeFormik}\r\n                    value={valuesFormik?.nama}\r\n                    placeholder='Jabatan'\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Form.Group className='mb-3 form-control-solid'>\r\n                <label className='required fw-semibold fs-6 mb-2'>Status</label>\r\n                <select\r\n                  data-control='select2'\r\n                  data-placeholder='Status'\r\n                  name='status'\r\n                  className={clsx(\r\n                    'form-control form-control-solid mb-1',\r\n                    {\r\n                      'is-invalid': formik.touched.status && formik.errors.status,\r\n                    },\r\n                    {\r\n                      'is-valid': formik.touched.status && !formik.errors.status,\r\n                    }\r\n                  )}\r\n                  onChange={handleChangeFormik}\r\n                  value={valuesFormik?.status}\r\n                >\r\n                  <option value=''>Pilih</option>\r\n                  <option value='JFT'>JFT</option>\r\n                  <option value='Non JFT'>Non JFT</option>\r\n                </select>\r\n              </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant='secondary' onClick={handleClose}>\r\n                Batal\r\n              </Button>\r\n              <Button variant='primary' type='submit'>\r\n                <i className='fa-solid fa-paper-plane'></i>\r\n                Simpan\r\n              </Button>\r\n            </Modal.Footer>\r\n          </form>\r\n        </Modal>\r\n      </>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n        <DataTable\r\n          columns={columns}\r\n          data={data}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          customStyles={customStyles}\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          sortServer\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          onSort={handleSort}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n        />\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.')\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.')\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jabatan?: string\r\n  status?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jabatan?: string\r\n  status?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JABATAN_URL = `${API_URL}/master/jabatan` //http://localhost:3000/jabatan\r\n\r\nexport function LihatJabatan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JABATAN_URL}/findone/${id}`)\r\n      console.log(fetchData)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jabatan: jsonD.jabatan,\r\n        status: jsonD.status,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jabatan</Form.Label>\r\n                        <Form.Control\r\n                          name='jabatan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.jabatan ? valuesFormikExist?.jabatan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Status</Form.Label>\r\n                        <Form.Control\r\n                          name='status'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.status ? valuesFormikExist?.status : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Jabatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect, Fragment, useState} from 'react'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport Swal from 'sweetalert2'\r\nimport DataTable, {createTheme} from 'react-data-table-component'\r\nimport {ThemeModeComponent} from '../../../../../_metronic/assets/ts/layout'\r\n\r\nimport {KTSVG} from '../../../../../_metronic/helpers'\r\nimport {useParams} from 'react-router-dom'\r\nimport {ButtonGroup, Dropdown, DropdownButton, Modal} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport {useFormik, FormikHelpers} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport clsx from 'clsx'\r\nimport {useThemeMode} from '../../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JABATAN_URL = `${API_URL}/master/jabatan` //http://localhost:3000/master/jabatan\r\n\r\n// createTheme creates a new theme named solarized that overrides the build in dark theme\r\ncreateTheme(\r\n    'darkMetro',\r\n    {\r\n      text: {\r\n        primary: '#92929f',\r\n        secondary: '#92929f',\r\n      },\r\n      background: {\r\n        default: '#1e1e2e',\r\n      },\r\n      context: {\r\n        background: '#cb4b16',\r\n        text: '#FFFFFF',\r\n      },\r\n      divider: {\r\n        default: '#2b2c41',\r\n      },\r\n      action: {\r\n        button: 'rgba(0,0,0,.54)',\r\n        hover: 'rgba(0,0,0,.08)',\r\n        disabled: 'rgba(0,0,0,.12)',\r\n      },\r\n    },\r\n    'dark'\r\n  )\r\n  const systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nexport interface FormInput {\r\n    jabatan?: string\r\n    status?: string\r\n    created_by?: number\r\n}\r\n\r\n// const validatorForm = Yup.object().shape({\r\n//     hubungan: Yup.string().required('Wajib diisi'),\r\n//     nama: Yup.string().required('Wajib diisi'),\r\n//     jenis_kelamin: Yup.string().required('Wajib diisi'),\r\n//   })\r\n\r\nexport function TambahJabatan() {\r\n  const navigate = useNavigate()\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [aksi, setAksi] = useState(0)\r\n//   const [valuesFormik, setValuesFormik] = useState<FormInput>()\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jabatan: '',\r\n      status: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jabatan: valuesFormik?.jabatan ? valuesFormik.jabatan : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${JABATAN_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${JABATAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Jabatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Jabatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n          size='lg'\r\n          show={show}\r\n          onHide={handleClose}\r\n          aria-labelledby='example-modal-sizes-title-lg'\r\n          backdrop='static'\r\n          keyboard={false}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id='example-modal-sizes-title-lg'>\r\n              {aksi === 0 ? 'Tambah' : 'Ubah'} Jabatan\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <form className='form' onSubmit={formik.handleSubmit}>\r\n              <div\r\n                className='d-flex flex-column scroll-y me-n7 pe-7'\r\n                id='kt_modal_add_user_scroll'\r\n                data-kt-scroll='true'\r\n                data-kt-scroll-activate='{default: false, lg: true}'\r\n                data-kt-scroll-max-height='auto'\r\n                data-kt-scroll-dependencies='#kt_modal_add_user_header'\r\n                data-kt-scroll-wrappers='#kt_modal_add_user_scroll'\r\n                data-kt-scroll-offset='300px'\r\n              >\r\n                <div className='fv-row mb-7'>\r\n                  <label className='required fw-semibold fs-6 mb-2'>jabatan</label>\r\n                  <input\r\n                    type='text'\r\n                    name='jabatan'\r\n                    placeholder='Jabatan'\r\n                    className={clsx(\r\n                      'form-control form-control-solid mb-1',\r\n                      {\r\n                        'is-invalid': formik.touched.jabatan && formik.errors.jabatan,\r\n                      },\r\n                      {\r\n                        'is-valid': formik.touched.jabatan && !formik.errors.jabatan,\r\n                      }\r\n                    )}\r\n                    onChange={handleChangeFormik}\r\n                    value={valuesFormik?.jabatan}\r\n                  />\r\n                  {formik.touched.jabatan && formik.errors.jabatan && (\r\n                    <div className='fv-plugins-message-container'>\r\n                      <div className='fv-help-block'>\r\n                        <span role='alert'>{formik.errors.jabatan}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='fv-row mb-7'>\r\n                  <div id='kt_docs_repeater_basic'>\r\n                    <div className='fv-row mb-7 mt-7'>\r\n                      <label className='required fw-semibold fs-6 mb-2'>Status</label>\r\n                      <select\r\n                        data-control='select2'\r\n                        data-placeholder='Status'\r\n                        name='status'\r\n                        className={clsx(\r\n                          'form-control form-control-solid mb-1',\r\n                          {\r\n                            'is-invalid':\r\n                              formik.touched.status && formik.errors.status,\r\n                          },\r\n                          {\r\n                            'is-valid':\r\n                              formik.touched.status && !formik.errors.status,\r\n                          }\r\n                        )}\r\n                        onChange={handleChangeFormik}\r\n                        value={valuesFormik?.status}\r\n                      >\r\n                        <option value=''>Pilih</option>\r\n                        <option value='JFT'>JFT</option>\r\n                        <option value='Non JFT'>Non JFT</option>\r\n                      </select>\r\n                      {formik.touched.status && formik.errors.status && (\r\n                        <div className='fv-plugins-message-container'>\r\n                          <div className='fv-help-block'>\r\n                            <span role='alert'>{formik.errors.status}</span>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='p-0 mt-6'>\r\n                <div className='text-center'>\r\n                  <button\r\n                    type='button'\r\n                    onClick={handleClose}\r\n                    className='float-none btn btn-light align-self-center m-1'\r\n                  >\r\n                    Tutup\r\n                  </button>\r\n                  <button\r\n                    type='submit'\r\n                    className='float-none btn btn-primary align-self-center m-1'\r\n                    disabled={formik.isSubmitting || !formik.isValid}\r\n                  >\r\n                    Simpan\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </Modal.Body>\r\n        </Modal>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  sumber_informasi?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  sumber_informasi: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function SumberInformasi() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterSumberInformasi, setFilterSumberInformasi] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterSumberInformasi.val !== '') {\r\n      uriParam += `${valFilterSumberInformasi.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterSumberInformasi({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputSumberInformasi = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterSumberInformasi({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Sumber Informasi',\r\n      selector: (row: any) => row.sumber_informasi,\r\n      sortable: true,\r\n      sortField: 'sumber_informasi',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/SumberInformasi/LihatSumberInformasi/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${SUMBER_INFORMASI_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        sumber_informasi: valuesFormik?.sumber_informasi, //? valuesFormik.sumber_informasi : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${SUMBER_INFORMASI_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${SUMBER_INFORMASI_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      sumber_informasi: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${SUMBER_INFORMASI_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Sumber Informasi</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterSumberInformasi.val} //4\r\n            onChange={handleChangeInputSumberInformasi}\r\n            placeholder='Sumber Informasi'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Sumber Informasi</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Sumber Informasi</Form.Label>\r\n                  <Form.Control\r\n                      name='sumber_informasi'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.sumber_informasi && formik.errors.sumber_informasi,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.sumber_informasi && !formik.errors.sumber_informasi,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.sumber_informasi}\r\n                    />\r\n                    {formik.touched.sumber_informasi && formik.errors.sumber_informasi && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.sumber_informasi}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  sumber_informasi?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  sumber_informasi?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi` //http://localhost:3000//master/jenis-kejadian\r\n\r\nexport function UpdateSumberInformasi() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        sumber_informasi: jsonD.sumber_informasi,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      sumber_informasi: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        sumber_informasi: valuesFormik?.sumber_informasi\r\n          ? valuesFormik.sumber_informasi\r\n          : valuesFormikExist?.sumber_informasi\r\n          ? valuesFormikExist.sumber_informasi\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${SUMBER_INFORMASI_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${SUMBER_INFORMASI_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/SumberInformasi', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/SumberInformasi', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='sumber_informasi'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.sumber_informasi || valuesFormik?.sumber_informasi === ''\r\n                              ? valuesFormik?.sumber_informasi\r\n                              : valuesFormikExist?.sumber_informasi\r\n                              ? valuesFormikExist?.sumber_informasi\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/SumberInformasi'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  sumber_informasi?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  sumber_informasi?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi`//http://localhost:3000/jenis-kejadian\r\n\r\nexport function LihatSumberInformasi() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        sumber_informasi: jsonD.sumber_informasi,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='sumber_informasi'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.sumber_informasi\r\n                              ? valuesFormikExist?.sumber_informasi\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/SumberInformasi'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_kekerasan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_kekerasan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisKekerasan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisKekerasan, setFilterJenisKekerasan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisKekerasan.val !== '') {\r\n      uriParam += `${valFilterJenisKekerasan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisKekerasan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisKekerasan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisKekerasan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Kekerasan',\r\n      selector: (row: any) => row.jenis_kekerasan,\r\n      sortable: true,\r\n      sortField: 'jenis_kekerasan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisKekerasan/LihatJenisKekerasan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KEKERASAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_kekerasan: valuesFormik?.jenis_kekerasan, //? valuesFormik.jenis_kekerasan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KEKERASAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KEKERASAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_kekerasan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KEKERASAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Kekerasan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisKekerasan.val} //4\r\n            onChange={handleChangeInputJenisKekerasan}\r\n            placeholder='Jenis Kekerasan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Kekerasan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Kekerasan</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_kekerasan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_kekerasan && formik.errors.jenis_kekerasan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_kekerasan && !formik.errors.jenis_kekerasan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_kekerasan}\r\n                    />\r\n                    {formik.touched.jenis_kekerasan && formik.errors.jenis_kekerasan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_kekerasan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kekerasan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kekerasan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateJenisKekerasan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kekerasan: jsonD.jenis_kekerasan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kekerasan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kekerasan: valuesFormik?.jenis_kekerasan\r\n          ? valuesFormik.jenis_kekerasan\r\n          : valuesFormikExist?.jenis_kekerasan\r\n          ? valuesFormikExist.jenis_kekerasan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KEKERASAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KEKERASAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKekerasan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKekerasan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kekerasan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_kekerasan || valuesFormik?.jenis_kekerasan === ''\r\n                              ? valuesFormik?.jenis_kekerasan\r\n                              : valuesFormikExist?.jenis_kekerasan\r\n                              ? valuesFormikExist?.jenis_kekerasan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKekerasan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_kekerasan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kekerasan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` //http://localhost:3000/JenisKekerasan\r\n\r\nexport function LihatJenisKekerasan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kekerasan: jsonD.jenis_kekerasan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kekerasan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kekerasan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_kekerasan\r\n                              ? valuesFormikExist?.jenis_kekerasan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKekerasan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function JenisPenyelesaian() {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1);\r\n  }, []);\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\r\n          <div className=\"d-flex flex-column\">\r\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'Jenis Sarana & Prasarana',\r\n      selector: (row: any) => row.jenis_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'jenis_sarana_prasarana',\r\n    },\r\n    {\r\n      name: 'Status Sarana & Prasarana',\r\n      selector: (row: any) => row.status_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'status_sarana_prasarana',\r\n    },\r\n    {\r\n      name: 'Jumlah',\r\n      selector: (row: any) => row.jumlah,\r\n      sortable: true,\r\n      sortField: 'jumlah',\r\n    },\r\n    {\r\n      name: 'Kondisi',\r\n      selector: (row: any) => row.kondisi,\r\n      sortable: true,\r\n      sortField: 'kondisi',\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: (row: any) => row.keterangan,\r\n      sortable: true,\r\n      sortField: 'keterangan',\r\n    },\r\n    {\r\n      name: 'Dokumentasi',\r\n      selector: (row: any) => row.dokumentasi,\r\n      sortable: true,\r\n      sortField: 'dokumentasi',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: \"Action\",\r\n      className: \"action\",\r\n      align: \"left\",\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n\r\n            <div className=\"mb-2\">\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size=\"sm\"\r\n                    variant=\"light\"\r\n                    title=\"Aksi\">\r\n                    <Dropdown.Item>\r\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\r\n                        Detail\r\n                      </Link>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n\r\n  ];\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n   \r\n  const [temp, setTemp] = useState([]);\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true);\r\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\r\n\r\n    setTemp(value.data.data);\r\n    console.log('cek response api:',temp);\r\n\r\n    \r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\r\n    setData(response.data.data);\r\n   \r\n    setTotalRows(response.data.total);\r\n    setLoading(false);\r\n    console.log('cek ahhh :' ,data);\r\n    return [data, setData] as const;\r\n  };\r\n\r\n  const handlePageChange = (page: any) => {\r\n    fetchUsers(page);\r\n  };\r\n\r\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n    setLoading(true);\r\n\r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\r\n\r\n    setData(response.data.data);\r\n    setPerPage(newPerPage);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSort = (column: any, sortDirection: any) => {\r\n    // simulate server sort\r\n    console.log(column, sortDirection);\r\n    setLoading(true);\r\n\r\n    // instead of setTimeout this is where you would handle your API call.\r\n    setTimeout(() => {\r\n      setData(orderBy(data, column.sortField, sortDirection));\r\n      setLoading(false);\r\n    }, 100);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Jenis Penyelesaian\r\n            </label>\r\n            <input\r\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\r\n          </div>\r\n      </div>\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n        <Link to='#'>\r\n            <button className='btn btn-primary'>\r\n              <i className='fa-solid fa-search'></i>\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-5' onClick={handleShow}>\r\n              <i className=\"fa-solid fa-plus\"></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tambah Jenis Penyelesaian</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\r\n        <Form.Group className=\"mb-3 form-control-solid\">\r\n            <Form.Label>Jenis Penyelesaian</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Penyelesaian\" />\r\n        </Form.Group>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n          <i className=\"fa-solid fa-paper-plane\"></i>\r\n            Simpan\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n      <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            pagination\r\n        />\r\n        {/* <DataTable\r\n          columns={columns}\r\n          data={data}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          sortServer\r\n          onSort={handleSort}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n        /> */}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport {useFormik, FormikHelpers} from 'formik'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport Swal from 'sweetalert2'\r\nimport * as Yup from 'yup'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const STATUS_KENAIKAN_PANGKAT_URL = `${API_URL}/master/status_kenaikan_pangkat`\r\nexport interface FormInput {\r\n  status_kenaikan_pangkat?: string\r\n  created_by?: number\r\n}\r\nconst validatorForm = Yup.object().shape({\r\n  status_kenaikan_pangkat: Yup.string().required('Wajib diisi'),\r\n})\r\nexport function StatusKenaikanPangkat() {\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n  const navigate = useNavigate()\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [perPage, setPerPage] = useState(10)\r\n  const [data, setData] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [temp, setTemp] = useState([])\r\n  const [aksi, setAksi] = useState(0)\r\n  const [valFilterPangkat, setFilterPangkat] = useState({val: ''})\r\n\r\n  useEffect(() => {\r\n    async function fetchUsers(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(\r\n        `${STATUS_KENAIKAN_PANGKAT_URL}/filter/${qParamFind.strparam}`\r\n      )\r\n      setData(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      setLoading(false)\r\n    }\r\n    fetchUsers(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchData = async (page: number) => {\r\n    setLoading(true)\r\n    const response = await axios.get(`${STATUS_KENAIKAN_PANGKAT_URL}/filter/${qParamFind.strparam}`)\r\n    setData(response.data.data)\r\n    setTotalRows(response.data.total_data)\r\n    setLoading(false)\r\n\r\n    return [data, setData] as const\r\n  }\r\n  const handlePerRowsChange = async (newPerPage: number, page: number) => {\r\n    setLoading(true)\r\n    const response = await axios.get(`${STATUS_KENAIKAN_PANGKAT_URL}/filter/${qParamFind.strparam}`)\r\n    setData(response.data.data)\r\n    setPerPage(newPerPage)\r\n    setLoading(false)\r\n  }\r\n\r\n  const handleFilter = async () => {\r\n    let uriParam = ''\r\n    if (valFilterPangkat.val !== '') {\r\n      uriParam += `${valFilterPangkat.val}`\r\n    }\r\n\r\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\r\n  }\r\n\r\n  const handlePageChange = (page: number) => {\r\n    fetchData(page)\r\n  }\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeInputPangkat = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterPangkat({val: event.target.value})\r\n  }\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n  let no = 1\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.id,\r\n      sortable: true,\r\n      sortField: 'no',\r\n      minWidth: '30px',\r\n      cell: (record: any) => {\r\n        return <div className='mt-2 mb-2'>{no++}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Status Kenaikan Pangkat',\r\n      selector: (row: any) => row.status_kenaikan_pangkat,\r\n      sortable: true,\r\n      sortField: 'status_kenaikan_pangkat',\r\n      minWidth: '100px',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      align: 'left',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate(\r\n                          '/master/statuskenaikanpangkat/lihat-status-kenaikan-pangkat/' +\r\n                            record.id,\r\n                          {replace: true}\r\n                        )\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        status_kenaikan_pangkat: valuesFormik?.status_kenaikan_pangkat,\r\n      }\r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${STATUS_KENAIKAN_PANGKAT_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchData(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${STATUS_KENAIKAN_PANGKAT_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchData(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  // UPDATE\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${STATUS_KENAIKAN_PANGKAT_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n  //End UPDATE\r\n  //Detail\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      status_kenaikan_pangkat: '',\r\n    })\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  //End Detail\r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(\r\n          `${STATUS_KENAIKAN_PANGKAT_URL}/delete/${id}`,\r\n          bodyParam\r\n        )\r\n        if (response) {\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n          fetchData(1)\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END DELET\r\n  const handleSort = (column: any, sortDirection: any) => {\r\n    // simulate server sort\r\n    console.log(column, sortDirection)\r\n    setLoading(true)\r\n\r\n    // instead of setTimeout this is where you would handle your API call.\r\n    setTimeout(() => {\r\n      setData(orderBy(data, column.sortField, sortDirection))\r\n      setLoading(false)\r\n    }, 100)\r\n  }\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='row g-8 mt-2 ms-5 me-5'>\r\n          <label>\r\n            <h3> Status Kenaikan Pangkat</h3>\r\n          </label>\r\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n            <input\r\n              type='text'\r\n              className='form-control form-control form-control-solid'\r\n              name='q'\r\n              value={valFilterPangkat.val}\r\n              onChange={handleChangeInputPangkat}\r\n              placeholder='Status Kenaikan Pangkat'\r\n            />\r\n          </div>\r\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n            <Link to='#' onClick={handleFilter}>\r\n              {/* 1 */}\r\n              <button className='btn btn-light-primary me-2'>\r\n                <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n                Cari\r\n              </button>\r\n            </Link>\r\n          </div>\r\n          <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n            <Link to='#i'>\r\n              <button className='btn btn-primary me-2' onClick={doAdd}>\r\n                <i className='fa-solid fa-plus'></i>\r\n                Tambah\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <Modal.Header closeButton>\r\n              {/* <Modal.Title {aksi === 0 ? 'Tambah' : 'Ubah'}>Tambah Pangkat</Modal.Title> */}\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div className='mb-3 form-control-solid'>\r\n                <div className='form-group'>\r\n                  <Form.Label>Status Kenaikan Pangkat</Form.Label>\r\n                  <Form.Control\r\n                    name='status_kenaikan_pangkat'\r\n                    className='form-control form-control-solid'\r\n                    onChange={handleChangeFormik}\r\n                    value={valuesFormik?.status_kenaikan_pangkat}\r\n                    placeholder='Status Kenaikan Pangkat'\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant='secondary' onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n              <Button variant='primary' type='submit'>\r\n                <i className='fa-solid fa-paper-plane'></i>\r\n                Simpan\r\n              </Button>\r\n            </Modal.Footer>\r\n          </form>\r\n        </Modal>\r\n      </>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n        <DataTable\r\n          columns={columns}\r\n          data={data}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          customStyles={customStyles}\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          sortServer\r\n          onSort={handleSort}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n        />\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.')\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.')\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  status_kenaikan_pangkat?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  status_kenaikan_pangkat?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const STATUS_KENAIKAN_PANGKAT_URL = `${API_URL}/master/status_kenaikan_pangkat`\r\n\r\nexport function LihatStatusKenaikanPangkat() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${STATUS_KENAIKAN_PANGKAT_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        status_kenaikan_pangkat: jsonD.status_kenaikan_pangkat,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='status_kenaikan_pangkat'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.status_kenaikan_pangkat\r\n                              ? valuesFormikExist?.status_kenaikan_pangkat\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/StatusKenaikanPangkat'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Navigate, Route, Routes, Outlet } from 'react-router-dom'\r\nimport { PageLink, PageTitle } from '../../../_metronic/layout/core'\r\n\r\nimport { Kota } from './components/Kota'\r\nimport { LihatKota } from './components/Lihat-master/LihatKota'\r\nimport { UpdateKota } from './components/Update-master/UpdateKota'\r\nimport { TambahKota } from './components/Tambah-master/TambahKota'\r\n\r\nimport { Kecamatan } from './components/Kecamatan'\r\nimport { LihatKecamatan } from './components/Lihat-master/LihatKecamatan'\r\nimport { UpdateKecamatan } from './components/Update-master/UpdateKecamatan'\r\nimport { TambahKecamatan } from './components/Tambah-master/TambahKecamatan'\r\n\r\nimport { Kelurahan } from './components/Kelurahan'\r\nimport { LihatKelurahan } from './components/Lihat-master/LihatKelurahan'\r\nimport { UpdateKelurahan } from './components/Update-master/UpdateKelurahan'\r\nimport { TambahKelurahan } from './components/Tambah-master/TambahKelurahan'\r\n\r\nimport { JenisKegiatan } from './components/JenisKegiatan'\r\nimport { LihatJenisKegiatan } from './components/Lihat-master/LihatJenisKegiatan'\r\nimport { UpdateJenisKegiatan } from './components/Update-master/UpdateJenisKegiatan'\r\nimport { TambahJenisKegiatan } from './components/Tambah-master/TambahJenisKegiatan'\r\n\r\nimport { JenisKejadian } from './components/JenisKejadian'\r\nimport { LihatJenisKejadian } from './components/Lihat-master/LihatJenisKejadian'\r\nimport { UpdateJenisKejadian } from './components/Update-master/UpdateJenisKejadian'\r\nimport { TambahJenisKejadian } from './components/Tambah-master/TambahJenisKejadian'\r\n\r\nimport { JenisPelanggaran } from './components/JenisPelanggaran'\r\nimport { LihatJenisPelanggaran } from './components/Lihat-master/LihatJenisPelanggaran'\r\n\r\nimport { JenisPertolongan } from './components/JenisPertolongan'\r\nimport { LihatJenisPertolongan } from './components/Lihat-master/LihatJenisPertolongan'\r\nimport { UpdateJenisPertolongan } from './components/Update-master/UpdateJenisPertolongan'\r\n\r\nimport { JenisPerdaPerkada } from './components/JenisPerdaPerkada'\r\nimport { LihatJenisPerdaPerkada } from './components/Lihat-master/LihatJenisPerdaPerkada'\r\nimport { UpdateJenisPerdaPerkada } from './components/Update-master/UpdateJenisPerdaPerkada'\r\nimport { TambahJenisPerdaPerkada } from './components/Tambah-master/TambahJenisPerdaPerkada'\r\n\r\nimport { MapPerdaPerkada } from './components/MapPerdaPerkada'\r\nimport { LihatMapPerdaPerkada } from './components/Lihat-master/LihatMapPerdaPerkada'\r\nimport { UpdateMapPerdaPerkada } from './components/Update-master/UpdateMapPerdaPerkada'\r\nimport { TambahMapPerdaPerkada } from './components/Tambah-master/TambahMapPerdaPerkada'\r\n\r\nimport { JenisPenindakan } from './components/JenisPenindakan'\r\nimport { LihatJenisPenindakan } from './components/Lihat-master/LihatJenisPenindakan'\r\nimport { UpdateJenisPenindakan } from './components/Update-master/UpdateJenisPenindakan'\r\n\r\nimport { KorbanJiwa } from './components/KorbanJiwa'\r\nimport { LihatKorbanJiwa } from './components/Lihat-master/LihatKorbanJiwa'\r\nimport { UpdateKorbanJiwa } from './components/Update-master/UpdateKorbanJiwa'\r\nimport { TambahKorbanJiwa } from './components/Tambah-master/TambahKorbanJiwa'\r\n\r\nimport { KorbanMaterial } from './components/KorbanMaterial'\r\nimport { LihatKorbanMaterial } from './components/Lihat-master/LihatKorbanMaterial'\r\nimport { UpdateKorbanMaterial } from './components/Update-master/UpdateKorbanMaterial'\r\n\r\nimport { JenisBantuan } from './components/JenisBantuan'\r\nimport { LihatJenisBantuan } from './components/Lihat-master/LihatJenisBantuan'\r\nimport { UpdateJenisBantuan } from './components/Update-master/UpdateJenisBantuan'\r\n\r\nimport { InstansiTerkait } from './components/InstansiTerkait'\r\n\r\nimport { KondisiSaranaPrasarana } from './components/KondisiSaranaPrasarana'\r\nimport { LihatKondisiSaranaPrasarana } from './components/Lihat-master/LihatKondisiSaranaPrasarana'\r\nimport { UpdateKondisiSaranaPrasarana } from './components/Update-master/UpdateKondisiSaranaPrasarana'\r\n\r\nimport { StatusSaranaPrasarana } from './components/StatusSaranaPrasarana'\r\nimport { LihatStatusSaranaPrasarana } from './components/Lihat-master/LihatStatusSaranaPrasarana'\r\nimport { UpdateStatusSaranaPrasarana } from './components/Update-master/UpdateStatusSaranaPrasarana'\r\n\r\nimport { Agama } from './components/Agama'\r\nimport { LihatAgama } from './components/Lihat-master/LihatAgama'\r\nimport { UpdateAgama } from './components/Update-master/UpdateAgama'\r\nimport { TambahAgama } from './components/Tambah-master/TambahAgama'\r\n\r\nimport { Pangkat } from './components/Pangkat'\r\nimport { UpdatePangkat } from './components/Update-master/UpdatePangkat'\r\nimport { LihatPangkat } from './components/Lihat-master/LihatPangkat'\r\nimport { TambahPangkat } from './components/Tambah-master/TambahPangkat'\r\n\r\nimport { TempatPelaksanaan } from './components/TempatPelaksanaan'\r\nimport { UpdateTempatPelaksanaan } from './components/Update-master/UpdateTempatPelaksanaan'\r\nimport { LihatTempatPelaksanaan } from './components/Lihat-master/LihatTempatPelaksanaan'\r\n\r\nimport { SKPD } from './components/SKPD'\r\nimport { UpdateSKPD } from './components/Update-master/UpdateSKPD'\r\nimport { LihatSKPD } from './components/Lihat-master/LihatSKPD'\r\n\r\nimport { Pendidikan } from './components/Pendidikan'\r\nimport { LihatPendidikan } from './components/Lihat-master/LihatPendidikan'\r\n\r\nimport { JenisSaranaPrasarana } from './components/JenisSaranaPrasarana'\r\nimport { UpdateJenisSaranaPrasarana } from './components/Update-master/UpdateJenisSaranaPrasarana'\r\nimport { LihatJenisSaranaPrasarana } from './components/Lihat-master/LihatJenisSaranaPrasarana'\r\n\r\nimport { Golongan } from './components/Golongan'\r\n\r\nimport { Eselon } from './components/Eselon'\r\nimport { UpdateEselon } from './components/Update-master/UpdateEselon'\r\nimport { LihatEselon } from './components/Lihat-master/LihatEselon'\r\n\r\nimport { Jabatan } from './components/Jabatan'\r\nimport { LihatJabatan } from './components/Lihat-master/LihatJabatan'\r\nimport { TambahJabatan } from './components/Tambah-master/TambahJabatan'\r\n\r\nimport { SumberInformasi } from './components/SumberInformasi'\r\nimport { UpdateSumberInformasi } from './components/Update-master/UpdateSumberInformasi'\r\nimport { LihatSumberInformasi } from './components/Lihat-master/LihatSumberInformasi'\r\n\r\nimport { JenisKekerasan } from './components/JenisKekerasan'\r\nimport { UpdateJenisKekerasan } from './components/Update-master/UpdateJenisKekerasan'\r\nimport { LihatJenisKekerasan } from './components/Lihat-master/LihatJenisKekerasan'\r\n\r\n// import {JenisPenertiban} from './components/JenisPenertiban'\r\n// import {UpdateJenisPenertiban} from './components/Update-master/UpdateJenisPenertiban'\r\n// import {LihatJenisPenertiban} from './components/Lihat-master/LihatJenisPenertiban'\r\n\r\nimport { JenisPenyelesaian } from './components/JenisPenyelesaian'\r\n\r\nimport { StatusKenaikanPangkat } from './components/StatusKenaikanPangkat'\r\nimport { LihatStatusKenaikanPangkat } from './components/Lihat-master/LihatStatusKenaikanPangkat'\r\n\r\nconst masterBreadCrumbs: Array<PageLink> = [\r\n  {\r\n    title: 'Master',\r\n    path: '/master/InformasiDataMaster',\r\n    isSeparator: false,\r\n    isActive: false,\r\n  },\r\n  {\r\n    title: '',\r\n    path: '',\r\n    isSeparator: true,\r\n    isActive: false,\r\n  },\r\n]\r\n\r\nconst MasterPage: React.FC = () => {\r\n  return (\r\n    <Routes>\r\n      <Route\r\n        element={\r\n          <>\r\n            <Outlet />\r\n          </>\r\n        }\r\n      >\r\n        <Route\r\n          path='Kota'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kota</PageTitle>\r\n              <Kota />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Kecamatan/UpdateKecamatan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kecamatan</PageTitle>\r\n              <UpdateKecamatan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Kecamatan/LihatKecamatan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kecamatan</PageTitle>\r\n              <LihatKecamatan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Kecamatan/TambahKecamatan'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kecamatan</PageTitle>\r\n              <TambahKecamatan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='SKPD'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>SKPD</PageTitle>\r\n              <SKPD />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='SKPD/UpdateSKPD/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update SKPD</PageTitle>\r\n              <UpdateSKPD />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='SKPD/LihatSKPD/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat SKPD</PageTitle>\r\n              <LihatSKPD />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Pendidikan/LihatPendidikan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Pendidikan</PageTitle>\r\n              <LihatPendidikan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Pangkat'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Pangkat</PageTitle>\r\n              <Pangkat />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Pangkat/UpdatePangkat/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Pangkat</PageTitle>\r\n              <UpdatePangkat />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Pangkat/LihatPangkat/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Pangkat</PageTitle>\r\n              <LihatPangkat />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Pangkat/TambahPangkat'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Pangkat</PageTitle>\r\n              <TambahPangkat />\r\n            </>\r\n          }\r\n        />\r\n\r\n        <Route\r\n          path='TempatPelaksanaan'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tempat Pelaksanaan</PageTitle>\r\n              <TempatPelaksanaan />\r\n            </>\r\n          }\r\n        />\r\n\r\n        <Route\r\n          path='TempatPelaksanaan/UpdateTempatPelaksanaan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update TempatPelaksanaan</PageTitle>\r\n              <UpdateTempatPelaksanaan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='TempatPelaksanaan/LihatTempatPelaksanaan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat TempatPelaksanaan</PageTitle>\r\n              <LihatTempatPelaksanaan />\r\n            </>\r\n          }\r\n        />\r\n\r\n        <Route\r\n          path='Golongan'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Golongan </PageTitle>\r\n              <Golongan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisSaranaPrasarana'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jenis Sarana Prasarana </PageTitle>\r\n              <JenisSaranaPrasarana />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisSaranaPrasarana/UpdateJenisSaranaPrasarana/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Sarana Prasarana</PageTitle>\r\n              <UpdateJenisSaranaPrasarana />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisSaranaPrasarana/LihatJenisSaranaPrasarana/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Sarana Prasarana</PageTitle>\r\n              <LihatJenisSaranaPrasarana />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='KondisiSaranaPrasarana'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Kondisi Sarana Prasarana </PageTitle>\r\n              <KondisiSaranaPrasarana />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='KondisiSaranaPrasarana/UpdateKondisiSaranaPrasarana/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kondisi Sarana Prasarana</PageTitle>\r\n              <UpdateKondisiSaranaPrasarana />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='KondisiSaranaPrasarana/LihatKondisiSaranaPrasarana/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kondisi Sarana Prasarana</PageTitle>\r\n              <LihatKondisiSaranaPrasarana />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='StatusSaranaPrasarana'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Status Sarana Prasarana </PageTitle>\r\n              <StatusSaranaPrasarana />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='StatusSaranaPrasarana/UpdateStatusSaranaPrasarana/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Status Sarana Prasarana</PageTitle>\r\n              <UpdateStatusSaranaPrasarana />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='StatusSaranaPrasarana/LihatStatusSaranaPrasarana/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Status Sarana Prasarana</PageTitle>\r\n              <LihatStatusSaranaPrasarana />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Kecamatan'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kecamatan</PageTitle>\r\n              <Kecamatan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Kota/UpdateKota/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kota</PageTitle>\r\n              <UpdateKota />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Kota/LihatKota/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kota</PageTitle>\r\n              <LihatKota />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Kota/TambahKota'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kota</PageTitle>\r\n              <TambahKota />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Kelurahan'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kelurahan</PageTitle>\r\n              <Kelurahan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Kelurahan/UpdateKelurahan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kelurahan</PageTitle>\r\n              <UpdateKelurahan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Kelurahan/TambahKelurahan'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kelurahan</PageTitle>\r\n              <TambahKelurahan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Kelurahan/LihatKelurahan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kelurahan</PageTitle>\r\n              <LihatKelurahan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisKegiatan'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kegiatan </PageTitle>\r\n              <JenisKegiatan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisKegiatan/UpdateJenisKegiatan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisKegiatan</PageTitle>\r\n              <UpdateJenisKegiatan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisKegiatan/TambahJenisKegiatan'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Kegiatan</PageTitle>\r\n              <TambahJenisKegiatan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisKegiatan/LihatJenisKegiatan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Kegiatan</PageTitle>\r\n              <LihatJenisKegiatan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisKejadian'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kejadian </PageTitle>\r\n              <JenisKejadian />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisKejadian/UpdateJenisKejadian/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Kejadian</PageTitle>\r\n              <UpdateJenisKejadian />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisKejadian/LihatJenisKejadian/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Kejadian</PageTitle>\r\n              <LihatJenisKejadian />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisKejadian/TambahJenisKejadian'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Kejadian</PageTitle>\r\n              <TambahJenisKejadian />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Agama'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Agama</PageTitle>\r\n              <Agama />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Agama/UpdateAgama/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Agama</PageTitle>\r\n              <UpdateAgama />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Agama/LihatAgama/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Agama</PageTitle>\r\n              <LihatAgama />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Agama/TambahAgama'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Agama</PageTitle>\r\n              <TambahAgama />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Jabatan'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jabatan </PageTitle>\r\n              <Jabatan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Jabatan/TambahJabatan'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jabatan </PageTitle>\r\n              <TambahJabatan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='jabatan/update-jabatan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Agama</PageTitle>\r\n              <UpdateAgama />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='jabatan/lihat-jabatan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jabatan</PageTitle>\r\n              <LihatJabatan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='StatusKenaikanPangkat'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Status Kenaikan Pangkat </PageTitle>\r\n              <StatusKenaikanPangkat />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='statuskenaikanpangkat/lihat-status-kenaikan-pangkat/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat StatusKenaikanPangkat</PageTitle>\r\n              <LihatStatusKenaikanPangkat />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Eselon'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Eselon </PageTitle>\r\n              <Eselon />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Eselon/UpdateEselon/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Eselon</PageTitle>\r\n              <UpdateEselon />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='Eselon/LihatEselon/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Eselon</PageTitle>\r\n              <LihatEselon />\r\n            </>\r\n          }\r\n        />\r\n\r\n        <Route\r\n          path='Pendidikan'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Pendidikan </PageTitle>\r\n              <Pendidikan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='SumberInformasi'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Sumber Informasi </PageTitle>\r\n              <SumberInformasi />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='SumberInformasi/UpdateSumberInformasi/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Sumber Informasi</PageTitle>\r\n              <UpdateSumberInformasi />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='SumberInformasi/LihatSumberInformasi/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Sumber Informasi</PageTitle>\r\n              <LihatSumberInformasi />\r\n            </>\r\n          }\r\n        />\r\n        {/* <Route\r\n          path='SumberInformasi/TambahSumberInformasi/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Sumber Informasi</PageTitle>\r\n              <TambahSumberInformasi />\r\n            </>\r\n          }\r\n        /> */}\r\n        <Route\r\n          path='JenisPelanggaran'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pelanggaran</PageTitle>\r\n              <JenisPelanggaran />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisPelanggaran/LihatJenisPelanggaran/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Pelanggaran</PageTitle>\r\n              <LihatJenisPelanggaran />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisPertolongan'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pertolongan</PageTitle>\r\n              <JenisPertolongan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisPertolongan/UpdateJenisPertolongan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Pertolongan</PageTitle>\r\n              <UpdateJenisPertolongan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisPertolongan/LihatJenisPertolongan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Pertolongan</PageTitle>\r\n              <LihatJenisPertolongan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisPenindakan'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penindakan</PageTitle>\r\n              <JenisPenindakan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisPenindakan/UpdateJenisPenindakan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Penindakan</PageTitle>\r\n              <UpdateJenisPenindakan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisPenindakan/LihatJenisPenindakan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Penindakan</PageTitle>\r\n              <LihatJenisPenindakan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisPerdaPerkada'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Perda / Perkada</PageTitle>\r\n              <JenisPerdaPerkada />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisPerdaPerkada/LihatJenisPerdaPerkada/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Perda / Perkada</PageTitle>\r\n              <LihatJenisPerdaPerkada />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisPerdaPerkada/UpdateJenisPerdaPerkada/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Perda / Perkada</PageTitle>\r\n              <UpdateJenisPerdaPerkada />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisPerdaPerkada/TambahJenisPerdaPerkada'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Perda / Perkada</PageTitle>\r\n              <TambahJenisPerdaPerkada />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='MapPerdaPerkada'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Mapping Perda / Perkada</PageTitle>\r\n              <MapPerdaPerkada />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='MapPerdaPerkada/LihatMapPerdaPerkada/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Map Perda / Perkada</PageTitle>\r\n              <LihatMapPerdaPerkada />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='MapPerdaPerkada/UpdateMapPerdaPerkada/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Map Perda / Perkada</PageTitle>\r\n              <UpdateMapPerdaPerkada />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='MapPerdaPerkada/TambahMapPerdaPerkada'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Map Perda / Perkada</PageTitle>\r\n              <TambahMapPerdaPerkada />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisKekerasan'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kekerasan</PageTitle>\r\n              <JenisKekerasan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisKekerasan/UpdateJenisKekerasan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisKekerasan</PageTitle>\r\n              <UpdateJenisKekerasan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisKekerasan/LihatJenisKekerasan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat JenisKekerasan</PageTitle>\r\n              <LihatJenisKekerasan />\r\n            </>\r\n          }\r\n        />\r\n        {/* <Route\r\n          path='JenisPenertiban'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penertiban</PageTitle>\r\n              <JenisPenertiban />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisPenertiban/UpdateJenisPenertiban/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Penertiban</PageTitle>\r\n              <UpdateJenisPenertiban />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisPenertiban/LihatJenisPenertiban/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Penertiban</PageTitle>\r\n              <LihatJenisPenertiban />\r\n            </>\r\n          }\r\n        /> */}\r\n        <Route\r\n          path='JenisPenyelesaian'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penyelesaian</PageTitle>\r\n              <JenisPenyelesaian />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='KorbanJiwa'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Jiwa </PageTitle>\r\n              <KorbanJiwa />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='KorbanJiwa/UpdateKorbanJiwa/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update KorbanJiwa</PageTitle>\r\n              <UpdateKorbanJiwa />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='KorbanJiwa/LihatKorbanJiwa/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat KorbanJiwa</PageTitle>\r\n              <LihatKorbanJiwa />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='KorbanJiwa/TambahKorbanJiwa'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah KorbanJiwa</PageTitle>\r\n              <TambahKorbanJiwa />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='KorbanMaterial'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Material</PageTitle>\r\n              <KorbanMaterial />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='KorbanMaterial/UpdateKorbanMaterial/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update KorbanMaterial</PageTitle>\r\n              <UpdateKorbanMaterial />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='KorbanMaterial/LihatKorbanMaterial/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat KorbanMaterial</PageTitle>\r\n              <LihatKorbanMaterial />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisBantuan'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Bantuan</PageTitle>\r\n              <JenisBantuan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisBantuan/UpdateJenisBantuan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisBantuan</PageTitle>\r\n              <UpdateJenisBantuan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='JenisBantuan/LihatJenisBantuan/:id'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat JenisBantuan</PageTitle>\r\n              <LihatJenisBantuan />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='InstansiTerkait'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Instansi Terkait</PageTitle>\r\n              <InstansiTerkait />\r\n            </>\r\n          }\r\n        />\r\n\r\n        <Route index element={<Navigate to='/master' />} />\r\n      </Route>\r\n    </Routes>\r\n  )\r\n}\r\n\r\nexport default MasterPage"],"names":["KOTA_URL","process","REACT_APP_SISAPPRA_MASTERDATA_API_URL","createTheme","text","primary","secondary","background","default","context","divider","action","button","hover","disabled","systemMode","ThemeModeComponent","customStyles","rows","style","minHeight","headCells","paddingLeft","paddingRight","cells","validatorForm","Yup","shape","kota","required","Kota","navigate","useNavigate","mode","useThemeMode","calculatedMode","useState","val","valFilterKota","setFilterKota","temp","setTemp","loading","setLoading","strparam","qParamFind","setUriFind","show","setShow","handleClose","totalRows","setTotalRows","perPage","handleFilter","uriParam","prevState","LoadingAnimation","props","className","columns","name","selector","row","serial","sortable","cell","sortField","kode","record","Fragment","DropdownButton","map","DropdownType","idx","as","ButtonGroup","id","size","variant","title","Dropdown","href","onClick","replace","doEdit","konfirDel","useEffect","fetchUsers","page","axios","response","data","total_data","timeout","setTimeout","items","Array","from","forEach","item","index","clearTimeout","fetchDT","value","React","valuesFormik","setValuesFormik","aksi","setAksi","formik","useFormik","initialValues","validationSchema","enableReinitialize","onSubmit","values","setSubmitting","bodyparam","Swal","icon","showConfirmButton","timer","idEditData","console","error","setIdEditData","getDetail","idparam","parseInt","prevstate","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","color","then","result","isConfirmed","bodyParam","deleted_by","type","onChange","event","target","placeholder","to","path","Modal","onHide","backdrop","keyboard","centered","closeButton","handleSubmit","Form","clsx","touched","errors","prevValues","role","length","progressPending","progressComponent","pagination","paginationTotalRows","theme","noDataComponent","REACT_APP_SISAPPRA_API_URL","LihatKota","useParams","valuesFormikExist","setValuesFormikExist","fetchData","jsonD","paramValue","updated_by","readOnly","UpdateKota","selectedFile","formData","FormData","append","log","TambahKota","created_by","return_id","KECAMATAN_URL","Kecamatan","valFilterKecamatan","setFilterKecamatan","kode_kecamatan","width","kecamatan","kode_kota","align","htmlFor","LihatKecamatan","UpdateKecamatan","handleChangeFormik","toUpperCase","TambahKecamatan","KELURAHAN_URL","Kelurahan","valFilterKelurahan","setFilterKelurahan","kode_kelurahan","kelurahan","LihatKelurahan","UpdateKelurahan","TambahKelurahan","JENIS_KEGIATAN_URL","jenis_kegiatan","JenisKegiatan","valFilterJenisKegiatan","setFilterJenisKegiatan","filterTemp","setFilterTemp","filterData","filter","i","nama","toLowerCase","LihatJenisKegiatan","UpdateJenisKegiatan","TambahJenisKegiatan","JENIS_KEJADIAN_URL","jenis_kejadian","JenisKejadian","valFilterJenisKejadian","setFilterJenisKejadian","LihatJenisKejadian","UpdateJenisKejadian","TambahJenisKejadian","JENIS_PELANGGARAN_URL","jenis_pelanggaran","JenisPelanggaran","valFilterJenisPelanggaran","setFilterJenisPelanggaran","kode_penertiban","LihatJenisPelanggaran","JENIS_PERTOLONGAN_URL","jenis_pertolongan","JenisPertolongan","valFilterJenisPertolongan","setFilterJenisPertolongan","LihatJenisPertolongan","UpdateJenisPertolongan","JENIS_PERDA_PERKADA_URL","jenis_perda_perkada","JenisPerdaPerkada","valFilterJudul","setFilterJudul","valFilterDeskripsi","setFilterDeskripsi","judul","deskripsi","pasal","LihatJenisPerdaPerkada","UpdateJenisPerdaPerkada","TambahJenisPerdaPerkada","MapPerdaPerkada","valFilterPasal","setFilterPasal","setData","setPerPage","dataPerdaPerkada","res","d","j_pelanggaran","j_penertiban","jenis_penertiban","total_items","handlePerRowsChange","newPerPage","fixed","center","allowOverflow","Button","paginationServer","onChangePage","onChangeRowsPerPage","LihatMapPerdaPerkada","UpdateMapPerdaPerkada","TambahMapPerdaPerkada","JENIS_PENINDAKAN_URL","jenis_penindakan","JenisPenindakan","valFilterJenisPenindakan","setFilterJenisPenindakan","LihatJenisPenindakan","UpdateJenisPenindakan","JENIS_KORBAN_JIWA_URL","jenis_korban_jiwa","KorbanJiwa","valFilterKorbanJiwa","setFilterKorbanJiwa","menuPosition","LihatKorbanJiwa","UpdateKorbanJiwa","TambahKorbanJiwa","JENIS_KORBAN_MATERIAL_URL","jenis_korban_material","KorbanMaterial","valFilterKorbanMaterial","setFilterKorbanMaterial","LihatKorbanMaterial","UpdateKorbanMaterial","JENIS_BANTUAN_URL","jenis_bantuan","JenisBantuan","valFilterJenisBantuan","setFilterJenisBantuan","LihatJenisBantuan","UpdateJenisBantuan","SARANA_PRASARANA_URL","InstansiTerkait","jenis_sarana_prasarana","status_sarana_prasarana","jumlah","kondisi","keterangan","dokumentasi","total","KONDISI_SARANA_PRASARANA_URL","kondisi_sarana_prasarana","KondisiSaranaPrasarana","valFilterKondisiSaranaPrasarana","setFilterKondisiSaranaPrasarana","LihatKondisiSaranaPrasarana","UpdateKondisiSaranaPrasarana","STATUS_SARANA_PRASARANA_URL","StatusSaranaPrasarana","valFilterStatusSaranaPrasarana","setFilterStatusSaranaPrasarana","LihatStatusSaranaPrasarana","UpdateStatusSaranaPrasarana","AGAMA_URL","agama","Agama","valFilterAgama","setFilterAgama","LihatAgama","UpdateAgama","TambahAgama","PANGKAT_URL","pangkat","Pangkat","valFilterPangkat","setFilterPangkat","menuposition","UpdatePangkat","LihatPangkat","TambahPangkat","BIDANG_WILAYAH_URL","kategori","TempatPelaksanaan","valFilterTempatPelaksanaan","setFilterTempatPelaksanaan","UpdateTempatPelaksanaan","TEMPAT_PELAKSANA_URL","LihatTempatPelaksanaan","SKPD_URL","skpd","SKPD","valFilterSKPD","setFilterSKPD","UpdateSKPD","LihatSKPD","PENDIDIKAN_URL","pendidikan","Pendidikan","valFilterPendidikan","setFilterPendidikan","LihatPendidikan","JENIS_SARANA_PRASARANA_URL","JenisSaranaPrasarana","valFilterJenisSaranaPrasarana","setFilterJenisSaranaPrasarana","UpdateJenisSaranaPrasarana","LihatJenisSaranaPrasarana","GOLONGAN_URL","golongan","Golongan","valFilterGolongan","setFilterGolongan","doDetail","ESELON_URL","eselon","Eselon","valFilterEselon","setFilterEselon","UpdateEselon","LihatEselon","JABATAN_URL","status","Jabatan","valFilterJabatan","setFilterJabatan","no","minWidth","jabatan","wrap","sortServer","onSort","column","sortDirection","Error","orderBy","LihatJabatan","TambahJabatan","isSubmitting","isValid","SUMBER_INFORMASI_URL","sumber_informasi","SumberInformasi","valFilterSumberInformasi","setFilterSumberInformasi","UpdateSumberInformasi","LihatSumberInformasi","JENIS_KEKERASAN_URL","jenis_kekerasan","JenisKekerasan","valFilterJenisKekerasan","setFilterJenisKekerasan","UpdateJenisKekerasan","LihatJenisKekerasan","JenisPenyelesaian","STATUS_KENAIKAN_PANGKAT_URL","status_kenaikan_pangkat","StatusKenaikanPangkat","LihatStatusKenaikanPangkat","masterBreadCrumbs","isSeparator","isActive","element","breadcrumbs"],"sourceRoot":""}