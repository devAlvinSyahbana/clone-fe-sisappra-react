{"version":3,"file":"static/js/311.a23a8f44.chunk.js","mappings":"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","sources":["app/modules/sarana_prasarana/components/LaporanSaranaPrasarana.tsx","app/modules/sarana_prasarana/components/TambahLaporanSarana.tsx","app/modules/sarana_prasarana/components/UbahLaporanSarana.tsx","app/modules/sarana_prasarana/components/LihatLaporanSarana.tsx","app/modules/sarana_prasarana/SaranaPrasaranaPage.tsx"],"sourcesContent":["import {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport AsyncSelect from 'react-select/async'\nimport Swal from 'sweetalert2'\nimport FileDownload from 'js-file-download'\n\nexport interface FormInput {\n  jenis_sarana_prasarana?: any\n  status_sarana_prasarana?: any\n  jumlah?: number\n  kondisi?: any\n  keterangan?: string\n  file_dokumentasi?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function LaporanSaranaPrasarana() {\n  const navigate = useNavigate()\n\n  const [inputValJenis, setDataJenis] = useState({label: '', value: null})\n  const [inputValStatus, setDataStatus] = useState({label: '', value: null})\n  const [inputValKondisi, setDataKondisi] = useState({label: '', value: null})\n  const [btnLoadingUnduh, setbtnLoadingUnduh] = useState(false)\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(\n        `${SARANA_PRASARANA_URL}/filter?limit=${perPage}&offset=${page}${qParamFind.strparam}`\n      )\n      setData(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const response = await axios.delete(`${SARANA_PRASARANA_URL}/delete/${id}`)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: false,\n      cell: (record: any) => {\n        return (\n          <a target=\"_blank\" rel=\"noreferrer\" href={`${API_URL}/${record.dokumentasi}`} className='btn-link'>\n            Lihat\n          </a>\n        )\n      },\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      center: true,\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2 mt-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate(\n                          '/sarana-prasarana/LaporanSaranaPrasarana/LihatLaporanSarana/' +\n                            record.id,\n                          {replace: true}\n                        )\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate(\n                          '/sarana-prasarana/LaporanSaranaPrasarana/UbahLaporanSarana/' + record.id,\n                          {replace: true}\n                        )\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const response = await axios.get(\n      `${SARANA_PRASARANA_URL}/filter?limit=${perPage}&offset=${page}${qParamFind.strparam}`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total_data)\n    setLoading(false)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `${SARANA_PRASARANA_URL}/filter?limit=${perPage}&offset=${page}${qParamFind.strparam}`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  // AUTOCOMPLITE JENIS SARANA & PRASANAN\n  const filterSapra = async (inputValue: string) => {\n    const response = await axios.get(`${SARANA_PRASARANA_URL}/findjenis/${inputValue}`)\n    const json = await response.data.data\n    return json.map((i: any) => ({label: i.jenis_sarana_prasarana, value: i.id}))\n  }\n  const loadOptionsSapra = (inputValue: string, callback: (options: SelectOption[]) => void) => {\n    setTimeout(async () => {\n      callback(await filterSapra(inputValue))\n    }, 1000)\n  }\n  const handleInputChange = (newValue: any) => {\n    setDataJenis((prevstate: any) => ({...prevstate, ...newValue}))\n  }\n\n  // AUTOCOMPLITE STATUS SARANA & PRASANAN\n  const filterStapra = async (inputValue: string) => {\n    const response = await axios.get(`${SARANA_PRASARANA_URL}/findstatus/${inputValue}`)\n    const json = await response.data.data\n    return json.map((i: any) => ({label: i.status_sarana_prasarana, value: i.id}))\n  }\n  const loadOptionsStapra = (inputValue: string, callback: (options: SelectOption[]) => void) => {\n    setTimeout(async () => {\n      callback(await filterStapra(inputValue))\n    }, 1000)\n  }\n  const handleInputStapra = (newValue: any) => {\n    setDataStatus((prevstate: any) => ({...prevstate, ...newValue}))\n  }\n\n  // AUTOCOMPLITE KONDISI SARANA & PRASANAN\n  const filterKonpra = async (inputValue: string) => {\n    const response = await axios.get(`${SARANA_PRASARANA_URL}/findkondisi/${inputValue}`)\n    const json = await response.data.data\n    return json.map((i: any) => ({label: i.kondisi_sarana_prasarana, value: i.id}))\n  }\n  const loadOptionsKonpra = (inputValue: string, callback: (options: SelectOption[]) => void) => {\n    setTimeout(async () => {\n      callback(await filterKonpra(inputValue))\n    }, 1000)\n  }\n  const handleInputKonpra = (newValue: any) => {\n    setDataKondisi((prevstate: any) => ({...prevstate, ...newValue}))\n  }\n\n  const handleFilterReset = () => {\n    setDataJenis({label: '', value: null})\n    setDataStatus({label: '', value: null})\n    setDataKondisi({label: '', value: null})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (inputValJenis.value) {\n      uriParam += `&jenis_sarana_prasarana=${inputValJenis.value}`\n    }\n    if (inputValStatus.value) {\n      uriParam += `&status_sarana_prasarana=${inputValStatus.value}`\n    }\n    if (inputValKondisi.value) {\n      uriParam += `&kondisi_sarana_prasarana=${inputValKondisi.value}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handleUnduh = async () => {\n    setbtnLoadingUnduh(true)\n    await axios({\n      url: `${SARANA_PRASARANA_URL}/unduh?q=1${qParamFind.strparam}`,\n      method: 'GET',\n      responseType: 'blob', // Important\n    }).then((response) => {\n      FileDownload(response.data, 'DATA SARANA DAN PRASARANA.xlsx')\n      setbtnLoadingUnduh(false)\n    })\n  }\n\n  return (\n    <>\n      <div className={`card`}>\n        {/* begin::Body */}\n        <div className='row g-8 mt-2 ms-5 me-5'>\n          <div className='col-md-6'>\n            <div className='form-group'>\n              <label htmlFor='' className='mb-3'>\n                Jenis Sarana & Prasarana\n              </label>\n              <AsyncSelect\n                cacheOptions\n                value={inputValJenis.value ? inputValJenis : {value: '', label: 'Pilih'}}\n                loadOptions={loadOptionsSapra}\n                defaultOptions\n                onChange={handleInputChange}\n                placeholder={'Pilih'}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='row g-8 mt-2 ms-5 me-5'>\n          <div className='col-md-6'>\n            <div className='form-group'>\n              <label htmlFor='' className='mb-3'>\n                Status Sarana & Prasarana\n              </label>\n              <AsyncSelect\n                cacheOptions\n                value={inputValStatus.value ? inputValStatus : {value: '', label: 'Pilih'}}\n                loadOptions={loadOptionsStapra}\n                defaultOptions\n                onChange={handleInputStapra}\n                placeholder={'Pilih'}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='row g-8 mt-2 ms-5 me-5'>\n          <div className='col-md-6'>\n            <div className='form-group'>\n              <label htmlFor='' className='mb-3'>\n                Kondisi\n              </label>\n              <AsyncSelect\n                cacheOptions\n                value={inputValKondisi.value ? inputValKondisi : {value: '', label: 'Pilih'}}\n                loadOptions={loadOptionsKonpra}\n                defaultOptions\n                onChange={handleInputKonpra}\n                placeholder={'Pilih'}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='row g-8 mt-2 ms-5 me-5'>\n          <div className='col-md-6 col-lg-6 col-sm-12'>\n            <Link to='#' onClick={handleFilter} className='me-2'>\n              <button className='btn btn-primary me-2'>\n                <i className='fa-solid fa-search'></i>\n                Cari\n              </button>\n            </Link>\n            <Link to='#' onClick={handleFilterReset}>\n              <button className='btn btn-primary'>\n                <i className='fa-solid fa-arrows-rotate'></i>\n                Reset\n              </button>\n            </Link>\n          </div>\n\n          <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n            <Link to='/sarana-prasarana/LaporanSaranaPrasarana/TambahLaporanSarana'>\n              <Button variant='primary'>\n                <span className='svg-icon svg-icon-2'>\n                  <svg\n                    width={24}\n                    height={24}\n                    viewBox='0 0 24 24'\n                    fill='none'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <rect\n                      opacity='0.5'\n                      x='11.364'\n                      y='20.364'\n                      width={16}\n                      height={2}\n                      rx={1}\n                      transform='rotate(-90 11.364 20.364)'\n                      fill='currentColor'\n                    />\n                    <rect x='4.36396' y='11.364' width={16} height={2} rx={1} fill='currentColor' />\n                  </svg>\n                </span>\n                Tambah Sarana\n              </Button>\n            </Link>\n            &nbsp;\n            <Dropdown as={ButtonGroup}>\n              <Button variant='light'>\n                {btnLoadingUnduh ? (\n                  <>\n                    <span className='spinner-border spinner-border-md align-middle me-3'></span>{' '}\n                    Memproses...\n                  </>\n                ) : (\n                  'Unduh'\n                )}\n              </Button>\n\n              <Dropdown.Toggle split variant='light' id='dropdown-split-basic' />\n\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={handleUnduh}>Excel</Dropdown.Item>\n                <Dropdown.Item>PDF</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n        </div>\n        <div className='table-responsive mt-5 ms-5 me-5'>\n          <DataTable\n            columns={columns}\n            data={data}\n            progressPending={loading}\n            progressComponent={<LoadingAnimation />}\n            pagination\n            paginationServer\n            paginationTotalRows={totalRows}\n            onChangeRowsPerPage={handlePerRowsChange}\n            onChangePage={handlePageChange}\n          />\n        </div>\n        {/* end::Body */}\n      </div>\n    </>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_sarana_prasarana?: any\n  status_sarana_prasarana?: any\n  jumlah?: number\n  kondisi?: any\n  keterangan?: string\n  file_dokumentasi?: string\n  created_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function TambahLaporanSarana() {\n  const navigate = useNavigate()\n\n  // AUTOCOMPLITE JENIS SARANA & PRASANAN\n  const filterSapra = async (inputValue: string) => {\n    const response = await axios.get(`${SARANA_PRASARANA_URL}/findjenis/${inputValue}`)\n    const json = await response.data.data\n    return json.map((i: any) => ({label: i.jenis_sarana_prasarana, value: i.id}))\n  }\n  const loadOptionsSapra = (inputValue: string, callback: (options: SelectOption[]) => void) => {\n    setTimeout(async () => {\n      callback(await filterSapra(inputValue))\n    }, 1000)\n  }\n\n  // AUTOCOMPLITE STATUS SARANA & PRASANAN\n  const filterStapra = async (inputValue: string) => {\n    const response = await axios.get(`${SARANA_PRASARANA_URL}/findstatus/${inputValue}`)\n    const json = await response.data.data\n    return json.map((i: any) => ({label: i.status_sarana_prasarana, value: i.id}))\n  }\n  const loadOptionsStapra = (inputValue: string, callback: (options: SelectOption[]) => void) => {\n    setTimeout(async () => {\n      callback(await filterStapra(inputValue))\n    }, 1000)\n  }\n\n  // AUTOCOMPLITE KONDISI SARANA & PRASANAN\n  const filterKonpra = async (inputValue: string) => {\n    const response = await axios.get(`${SARANA_PRASARANA_URL}/findkondisi/${inputValue}`)\n    const json = await response.data.data\n    return json.map((i: any) => ({label: i.kondisi_sarana_prasarana, value: i.id}))\n  }\n  const loadOptionsKonpra = (inputValue: string, callback: (options: SelectOption[]) => void) => {\n    setTimeout(async () => {\n      callback(await filterKonpra(inputValue))\n    }, 1000)\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_sarana_prasarana: {value: '', label: 'Pilih'},\n      status_sarana_prasarana: {value: '', label: 'Pilih'},\n      jumlah: 0,\n      kondisi: {value: '', label: 'Pilih'},\n      keterangan: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_sarana_prasarana: valuesFormik?.jenis_sarana_prasarana?.value\n          ? valuesFormik.jenis_sarana_prasarana.value\n          : 0,\n        status_sarana_prasarana: valuesFormik?.status_sarana_prasarana?.value\n          ? valuesFormik.status_sarana_prasarana.value\n          : 0,\n        kondisi: valuesFormik?.kondisi?.value ? valuesFormik.kondisi.value : 0,\n        keterangan: valuesFormik?.keterangan ? valuesFormik.keterangan : '',\n        jumlah: valuesFormik?.jumlah ? valuesFormik.jumlah : 0,\n        created_by: '',\n      }\n      try {\n        const response = await axios.post(`${SARANA_PRASARANA_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${SARANA_PRASARANA_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/sarana-prasarana/LaporanSaranaPrasarana', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/sarana-prasarana/LaporanSaranaPrasarana', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-sm-12 col-md-4 col-lg-4 col-xl-4 mb-6'>\n                      <div className='form-group'>\n                        <label htmlFor='' className='mb-3'>\n                          Jenis Sarana & Prasarana\n                        </label>\n                        <AsyncSelect\n                          cacheOptions\n                          loadOptions={loadOptionsSapra}\n                          defaultOptions\n                          onChange={(e) => handleChangeFormikSelect(e, 'jenis_sarana_prasarana')}\n                          value={\n                            valuesFormik?.jenis_sarana_prasarana\n                              ? valuesFormik?.jenis_sarana_prasarana\n                              : {value: '', label: 'Pilih'}\n                          }\n                          placeholder={'Pilih'}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-sm-12 col-md-4 col-lg-4 col-xl-4 mb-6'>\n                      <div className='form-group'>\n                        <label htmlFor='' className='mb-3'>\n                          Status Sarana & Prasarana\n                        </label>\n                        <AsyncSelect\n                          cacheOptions\n                          loadOptions={loadOptionsStapra}\n                          defaultOptions\n                          onChange={(e) => handleChangeFormikSelect(e, 'status_sarana_prasarana')}\n                          value={\n                            valuesFormik?.status_sarana_prasarana\n                              ? valuesFormik?.status_sarana_prasarana\n                              : {value: '', label: 'Pilih'}\n                          }\n                          placeholder={'Pilih'}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-sm-12 col-md-4 col-lg-4 col-xl-4 mb-6'>\n                      <div className='form-group'>\n                        <label htmlFor='' className='mb-3'>\n                          Kondisi\n                        </label>\n                        <AsyncSelect\n                          cacheOptions\n                          loadOptions={loadOptionsKonpra}\n                          defaultOptions\n                          onChange={(e) => handleChangeFormikSelect(e, 'kondisi')}\n                          value={\n                            valuesFormik?.kondisi\n                              ? valuesFormik?.kondisi\n                              : {value: '', label: 'Pilih'}\n                          }\n                          placeholder={'Pilih'}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-sm-12 col-md-6 col-lg-6 col-xl-6 mb-6'>\n                      <div className='form-group'>\n                        <label htmlFor='' className='mb-3'>\n                          Jumlah\n                        </label>\n                        <input\n                          className='form-control form-control form-control-solid'\n                          name='jumlah'\n                          type='number'\n                          min='0'\n                          onChange={handleChangeFormik}\n                          onBlur={formik.handleBlur}\n                          value={valuesFormik?.jumlah}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-sm-12 col-md-6 col-lg-6 col-xl-6 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>File Dokumentasi</Form.Label>\n                        <Form.Control\n                          type='file'\n                          className='form-control form-control-solid'\n                          id='firstimg'\n                          onChange={(event: {target: any}) =>\n                            setSelectedFile(event.target.files[0])\n                          }\n                          accept=\"image/jpeg,image/png,application/pdf\"\n                        />\n                        <small className='mt-4'>*File yang dapat di upload berformat (.pdf, .jpeg, .png)</small>\n                      </div>\n                    </div>\n                    <div className='col-12 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Keterangan</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          name='keterangan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.keterangan}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/sarana-prasarana/LaporanSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\nimport {KTSVG} from '../../../../_metronic/helpers'\n\nexport interface FormInput {\n  jenis_sarana_prasarana?: any\n  status_sarana_prasarana?: any\n  jumlah?: number\n  kondisi?: any\n  keterangan?: string\n  file_dokumentasi?: any\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_sarana_prasarana_id?: number\n  jenis_sarana_prasarana_name?: string\n  status_sarana_prasarana_id?: 0\n  status_sarana_prasarana_name?: string\n  jumlah?: number\n  kondisi_id?: 0\n  kondisi_name?: string\n  keterangan?: string\n  dokumentasi?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function UbahLaporanSarana() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_sarana_prasarana: {\n          value: jsonD.jenis_sarana_prasarana_id,\n          label: jsonD.jenis_sarana_prasarana_name,\n        },\n        status_sarana_prasarana: {\n          value: jsonD.status_sarana_prasarana_id,\n          label: jsonD.status_sarana_prasarana_name,\n        },\n        kondisi: {value: jsonD.kondisi_id, label: jsonD.kondisi_name},\n        jumlah: jsonD.jumlah,\n        keterangan: jsonD.keterangan,\n        file_dokumentasi: jsonD.dokumentasi,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  // AUTOCOMPLITE JENIS SARANA & PRASANAN\n  const filterSapra = async (inputValue: string) => {\n    const response = await axios.get(`${SARANA_PRASARANA_URL}/findjenis/${inputValue}`)\n    const json = await response.data.data\n    return json.map((i: any) => ({label: i.jenis_sarana_prasarana, value: i.id}))\n  }\n  const loadOptionsSapra = (inputValue: string, callback: (options: SelectOption[]) => void) => {\n    setTimeout(async () => {\n      callback(await filterSapra(inputValue))\n    }, 1000)\n  }\n\n  // AUTOCOMPLITE STATUS SARANA & PRASANAN\n  const filterStapra = async (inputValue: string) => {\n    const response = await axios.get(`${SARANA_PRASARANA_URL}/findstatus/${inputValue}`)\n    const json = await response.data.data\n    return json.map((i: any) => ({label: i.status_sarana_prasarana, value: i.id}))\n  }\n  const loadOptionsStapra = (inputValue: string, callback: (options: SelectOption[]) => void) => {\n    setTimeout(async () => {\n      callback(await filterStapra(inputValue))\n    }, 1000)\n  }\n\n  // AUTOCOMPLITE KONDISI SARANA & PRASANAN\n  const filterKonpra = async (inputValue: string) => {\n    const response = await axios.get(`${SARANA_PRASARANA_URL}/findkondisi/${inputValue}`)\n    const json = await response.data.data\n    return json.map((i: any) => ({label: i.kondisi_sarana_prasarana, value: i.id}))\n  }\n  const loadOptionsKonpra = (inputValue: string, callback: (options: SelectOption[]) => void) => {\n    setTimeout(async () => {\n      callback(await filterKonpra(inputValue))\n    }, 1000)\n  }\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_sarana_prasarana: {value: '', label: 'Pilih'},\n      status_sarana_prasarana: {value: '', label: 'Pilih'},\n      jumlah: 0,\n      kondisi: {value: '', label: 'Pilih'},\n      keterangan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_sarana_prasarana: valuesFormik?.jenis_sarana_prasarana?.value\n          ? valuesFormik.jenis_sarana_prasarana.value\n          : valuesFormikExist?.jenis_sarana_prasarana?.value\n          ? valuesFormikExist.jenis_sarana_prasarana.value\n          : 0,\n        status_sarana_prasarana: valuesFormik?.status_sarana_prasarana?.value\n          ? valuesFormik.status_sarana_prasarana.value\n          : valuesFormikExist?.status_sarana_prasarana?.value\n          ? valuesFormikExist.status_sarana_prasarana.value\n          : 0,\n        kondisi: valuesFormik?.kondisi?.value\n          ? valuesFormik.kondisi.value\n          : valuesFormikExist?.kondisi?.value\n          ? valuesFormikExist.kondisi.value\n          : 0,\n        keterangan: valuesFormik?.keterangan\n          ? valuesFormik.keterangan\n          : valuesFormikExist?.keterangan\n          ? valuesFormikExist.keterangan\n          : '',\n        jumlah: valuesFormik?.jumlah\n          ? valuesFormik.jumlah\n          : valuesFormikExist?.jumlah\n          ? valuesFormikExist.jumlah\n          : 0,\n        updated_by: '',\n      }\n      try {\n        const response = await axios.put(`${SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${SARANA_PRASARANA_URL}/upload-file/${id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/sarana-prasarana/LaporanSaranaPrasarana', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/sarana-prasarana/LaporanSaranaPrasarana', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-sm-12 col-md-4 col-lg-4 col-xl-4 mb-6'>\n                      <div className='form-group'>\n                        <label htmlFor='' className='mb-3'>\n                          Jenis Sarana & Prasarana\n                        </label>\n                        <AsyncSelect\n                          cacheOptions\n                          loadOptions={loadOptionsSapra}\n                          defaultOptions\n                          onChange={(e) => handleChangeFormikSelect(e, 'jenis_sarana_prasarana')}\n                          value={\n                            valuesFormik?.jenis_sarana_prasarana\n                              ? valuesFormik?.jenis_sarana_prasarana\n                              : valuesFormikExist?.jenis_sarana_prasarana?.value !== 0\n                              ? valuesFormikExist?.jenis_sarana_prasarana\n                              : {value: '', label: 'Pilih'}\n                          }\n                          placeholder={'Pilih'}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-sm-12 col-md-4 col-lg-4 col-xl-4 mb-6'>\n                      <div className='form-group'>\n                        <label htmlFor='' className='mb-3'>\n                          Status Sarana & Prasarana\n                        </label>\n                        <AsyncSelect\n                          cacheOptions\n                          loadOptions={loadOptionsStapra}\n                          defaultOptions\n                          onChange={(e) => handleChangeFormikSelect(e, 'status_sarana_prasarana')}\n                          value={\n                            valuesFormik?.status_sarana_prasarana\n                              ? valuesFormik?.status_sarana_prasarana\n                              : valuesFormikExist?.status_sarana_prasarana?.value !== 0\n                              ? valuesFormikExist?.status_sarana_prasarana\n                              : {value: '', label: 'Pilih'}\n                          }\n                          placeholder={'Pilih'}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-sm-12 col-md-4 col-lg-4 col-xl-4 mb-6'>\n                      <div className='form-group'>\n                        <label htmlFor='' className='mb-3'>\n                          Kondisi\n                        </label>\n                        <AsyncSelect\n                          cacheOptions\n                          loadOptions={loadOptionsKonpra}\n                          defaultOptions\n                          onChange={(e) => handleChangeFormikSelect(e, 'kondisi')}\n                          value={\n                            valuesFormik?.kondisi\n                              ? valuesFormik?.kondisi\n                              : valuesFormikExist?.kondisi?.value !== 0\n                              ? valuesFormikExist?.kondisi\n                              : {value: '', label: 'Pilih'}\n                          }\n                          placeholder={'Pilih'}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-sm-12 col-md-6 col-lg-6 col-xl-6 mb-6'>\n                      <div className='form-group'>\n                        <label htmlFor='' className='mb-3'>\n                          Jumlah\n                        </label>\n                        <input\n                          className='form-control form-control form-control-solid'\n                          name='jumlah'\n                          type='number'\n                          min='0'\n                          onChange={handleChangeFormik}\n                          onBlur={formik.handleBlur}\n                          value={\n                            valuesFormik?.jumlah || valuesFormik?.jumlah === 0\n                              ? valuesFormik?.jumlah\n                              : valuesFormikExist?.jumlah\n                              ? valuesFormikExist?.jumlah\n                              : 0\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className='col-sm-12 col-md-6 col-lg-6 col-xl-6 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>File Dokumentasi</Form.Label>\n                        <Form.Control\n                          type='file'\n                          className='form-control form-control-solid'\n                          id='firstimg'\n                          onChange={(event: {target: any}) =>\n                            setSelectedFile(event.target.files[0])\n                          }\n                          accept='image/jpeg,image/png,application/pdf'\n                        />\n                        <small className='mt-4'>\n                          *File yang dapat di upload berformat (.pdf, .jpeg, .png)\n                        </small>\n                        {valuesFormikExist?.file_dokumentasi &&\n                        valuesFormikExist?.file_dokumentasi !== '' ? (\n                          <>\n                            <div className='card h-100 mt-3'>\n                              <div className='card-body d-flex justify-content-center text-center flex-column p-4 border-gray-300 border-dotted'>\n                                <a\n                                  className='text-gray-800 text-hover-primary d-flex flex-column'\n                                  target='_blank'\n                                  rel=\"noreferrer\"\n                                  href={`${API_URL}/${valuesFormikExist?.file_dokumentasi}`}\n                                >\n                                  <div className='symbol symbol-75px mb-5'>\n                                    <KTSVG\n                                      className='theme-light-show svg-icon svg-icon-5x me-1'\n                                      path='/media/icons/duotune/files/fil003.svg'\n                                    />\n                                    <KTSVG\n                                      className='theme-dark-show svg-icon svg-icon-5x me-1'\n                                      path='/media/icons/duotune/files/fil003.svg'\n                                    />\n                                  </div>\n                                  <div className='fs-5 fw-bold mb-2'>File Dokumentasi</div>\n                                </a>\n                              </div>\n                            </div>\n                          </>\n                        ) : null}\n                      </div>\n                    </div>\n                    <div className='col-12 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Keterangan</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          name='keterangan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.keterangan || valuesFormik?.keterangan === ''\n                              ? valuesFormik?.keterangan\n                              : valuesFormikExist?.keterangan\n                              ? valuesFormikExist?.keterangan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/sarana-prasarana/LaporanSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport {KTSVG} from '../../../../_metronic/helpers'\n\nexport interface FormInput {\n  jenis_sarana_prasarana?: any\n  status_sarana_prasarana?: any\n  jumlah?: number\n  kondisi?: any\n  keterangan?: string\n  file_dokumentasi?: any\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_sarana_prasarana_id?: number\n  jenis_sarana_prasarana_name?: string\n  status_sarana_prasarana_id?: 0\n  status_sarana_prasarana_name?: string\n  jumlah?: number\n  kondisi_id?: 0\n  kondisi_name?: string\n  keterangan?: string\n  dokumentasi?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function LihatLaporanSarana() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_sarana_prasarana: {\n          value: jsonD.jenis_sarana_prasarana_id,\n          label: jsonD.jenis_sarana_prasarana_name,\n        },\n        status_sarana_prasarana: {\n          value: jsonD.status_sarana_prasarana_id,\n          label: jsonD.status_sarana_prasarana_name,\n        },\n        kondisi: {value: jsonD.kondisi_id, label: jsonD.kondisi_name},\n        jumlah: jsonD.jumlah,\n        keterangan: jsonD.keterangan,\n        file_dokumentasi: jsonD.dokumentasi,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-sm-12 col-md-4 col-lg-4 col-xl-4 mb-6'>\n                      <div className='form-group'>\n                        <label htmlFor='' className='mb-3'>\n                          Jenis Sarana & Prasarana\n                        </label>\n                        <input\n                          className='form-control form-control-solid'\n                          name='jenis_sarpra'\n                          type='text'\n                          value={\n                            valuesFormikExist?.jenis_sarana_prasarana?.value !== 0\n                              ? valuesFormikExist?.jenis_sarana_prasarana?.label\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-sm-12 col-md-4 col-lg-4 col-xl-4 mb-6'>\n                      <div className='form-group'>\n                        <label htmlFor='' className='mb-3'>\n                          Status Sarana & Prasarana\n                        </label>\n                        <input\n                          className='form-control form-control-solid'\n                          name='stat_sarpra'\n                          type='text'\n                          value={\n                            valuesFormikExist?.status_sarana_prasarana?.value !== 0\n                              ? valuesFormikExist?.status_sarana_prasarana?.label\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-sm-12 col-md-4 col-lg-4 col-xl-4 mb-6'>\n                      <div className='form-group'>\n                        <label htmlFor='' className='mb-3'>\n                          Kondisi\n                        </label>\n                        <input\n                          className='form-control form-control-solid'\n                          name='kondisi'\n                          type='text'\n                          value={\n                            valuesFormikExist?.kondisi?.value !== 0\n                              ? valuesFormikExist?.kondisi?.label\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-sm-12 col-md-6 col-lg-6 col-xl-6 mb-6'>\n                      <div className='form-group'>\n                        <label htmlFor='' className='mb-3'>\n                          Jumlah\n                        </label>\n                        <input\n                          className='form-control form-control-solid'\n                          name='jumlah'\n                          type='number'\n                          min='0'\n                          value={valuesFormikExist?.jumlah ? valuesFormikExist?.jumlah : 0}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-sm-12 col-md-6 col-lg-6 col-xl-6 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>File Dokumentasi</Form.Label>\n                        <div className='card h-100 mt-3'>\n                          <div className='card-body d-flex justify-content-center text-center flex-column p-4 border-gray-300 border-dotted'>\n                            {valuesFormikExist?.file_dokumentasi &&\n                            valuesFormikExist?.file_dokumentasi !== '' ? (\n                              <>\n                                <a\n                                  className='text-gray-800 text-hover-primary d-flex flex-column'\n                                  target='_blank'\n                                  rel=\"noreferrer\"\n                                  href={`${API_URL}/${valuesFormikExist?.file_dokumentasi}`}\n                                >\n                                  <div className='symbol symbol-75px mb-5'>\n                                    <KTSVG\n                                      className='theme-light-show svg-icon svg-icon-5x me-1'\n                                      path='/media/icons/duotune/files/fil003.svg'\n                                    />\n                                    <KTSVG\n                                      className='theme-dark-show svg-icon svg-icon-5x me-1'\n                                      path='/media/icons/duotune/files/fil003.svg'\n                                    />\n                                  </div>\n                                  <div className='fs-5 fw-bold mb-2'>File Dokumentasi</div>\n                                </a>\n                              </>\n                            ) : (\n                              <>\n                                <div className='text-gray-800 text-hover-primary d-flex flex-column'>\n                                  <div className='symbol symbol-75px mb-5'>\n                                    <KTSVG\n                                      className='theme-light-show svg-icon svg-icon-5x me-1'\n                                      path='/media/icons/duotune/files/fil007.svg'\n                                    />\n                                    <KTSVG\n                                      className='theme-dark-show svg-icon svg-icon-5x me-1'\n                                      path='/media/icons/duotune/files/fil007.svg'\n                                    />\n                                  </div>\n                                  <div className='fs-5 fw-bold mb-2'>Tidak ada file dokumentasi...</div>\n                                </div>\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-12 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Keterangan</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          name='keterangan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.keterangan ? valuesFormikExist?.keterangan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/sarana-prasarana/LaporanSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport {Navigate, Route, Routes, Outlet} from 'react-router-dom'\nimport {PageLink, PageTitle} from '../../../_metronic/layout/core'\nimport {LaporanSaranaPrasarana} from './components/LaporanSaranaPrasarana'\nimport {TambahLaporanSarana} from './components/TambahLaporanSarana'\nimport {UbahLaporanSarana} from './components/UbahLaporanSarana'\nimport {LihatLaporanSarana} from './components/LihatLaporanSarana'\n\nconst sarana_prasaranaBreadCrumbs: Array<PageLink> = [\n  {\n    title: 'Sarana & Prasarana',\n    path: '/sarana-prasarana/LaporanSaranaPrasarana',\n    isSeparator: false,\n    isActive: false,\n  },\n  {\n    title: '',\n    path: '',\n    isSeparator: true,\n    isActive: false,\n  },\n]\n\nconst SaranaPrasaranaPage: React.FC = () => {\n  return (\n    <Routes>\n      <Route\n        element={\n          <>\n            <Outlet />\n          </>\n        }\n      >\n        <Route\n          path='LaporanSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={sarana_prasaranaBreadCrumbs}>\n                Laporan Sarana & Prasarana\n              </PageTitle>\n              <LaporanSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='LaporanSaranaPrasarana/TambahLaporanSarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={sarana_prasaranaBreadCrumbs}>Tambah Laporan Sarana</PageTitle>\n              <TambahLaporanSarana />\n            </>\n          }\n        />\n        <Route\n          path='LaporanSaranaPrasarana/UbahLaporanSarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={sarana_prasaranaBreadCrumbs}>Ubah Laporan Sarana</PageTitle>\n              <UbahLaporanSarana />\n            </>\n          }\n        />\n        <Route\n          path='LaporanSaranaPrasarana/LihatLaporanSarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={sarana_prasaranaBreadCrumbs}>Lihat Laporan Sarana</PageTitle>\n              <LihatLaporanSarana />\n            </>\n          }\n        />\n\n        <Route index element={<Navigate to='/sarana-prasarana' />} />\n      </Route>\n    </Routes>\n  )\n}\n\nexport default SaranaPrasaranaPage\n"],"names":["API_URL","process","SARANA_PRASARANA_URL","LaporanSaranaPrasarana","navigate","useNavigate","useState","label","value","inputValJenis","setDataJenis","inputValStatus","setDataStatus","inputValKondisi","setDataKondisi","btnLoadingUnduh","setbtnLoadingUnduh","data","setData","loading","setLoading","totalRows","setTotalRows","perPage","setPerPage","strparam","qParamFind","setUriFind","useEffect","page","axios","response","total_data","fetchDT","LoadingAnimation","props","className","columns","name","selector","row","jenis_sarana_prasarana","sortable","sortField","status_sarana_prasarana","jumlah","kondisi","keterangan","dokumentasi","cell","record","target","rel","href","text","center","Fragment","DropdownButton","map","DropdownType","idx","as","ButtonGroup","id","size","variant","title","Dropdown","onClick","replace","Swal","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","fetchUsers","showConfirmButton","timer","handlePerRowsChange","newPerPage","filterSapra","inputValue","json","i","filterStapra","filterKonpra","kondisi_sarana_prasarana","handleFilter","uriParam","prevState","handleUnduh","url","method","responseType","FileDownload","htmlFor","cacheOptions","loadOptions","callback","setTimeout","defaultOptions","onChange","newValue","prevstate","placeholder","to","Button","width","height","viewBox","fill","xmlns","opacity","x","y","rx","transform","split","progressPending","progressComponent","pagination","paginationServer","paginationTotalRows","onChangeRowsPerPage","onChangePage","TambahLaporanSarana","React","valuesFormik","setValuesFormik","handleChangeFormikSelect","prevValues","handleChangeFormik","event","formik","useFormik","initialValues","onSubmit","values","console","log","selectedFile","formData","FormData","bodyparam","created_by","append","return_id","error","setSelectedFile","handleSubmit","e","type","min","onBlur","handleBlur","Form","files","accept","UbahLaporanSarana","useParams","valuesFormikExist","setValuesFormikExist","fetchData","jsonD","paramValue","jenis_sarana_prasarana_id","jenis_sarana_prasarana_name","status_sarana_prasarana_id","status_sarana_prasarana_name","kondisi_id","kondisi_name","file_dokumentasi","updated_by","path","LihatLaporanSarana","readOnly","sarana_prasaranaBreadCrumbs","isSeparator","isActive","element","breadcrumbs","index"],"sourceRoot":""}