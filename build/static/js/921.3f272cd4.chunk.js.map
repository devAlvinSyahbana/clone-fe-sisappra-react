{"version":3,"file":"static/js/921.3f272cd4.chunk.js","mappings":"6WAmBaA,EAAQ,UADLC,mCACK,gBAEd,SAASC,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,WAAS,GAAjC,eAGA,GAHA,WAGiCA,EAAAA,EAAAA,UAAS,CAACC,SAAU,MAArD,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAuCH,EAAAA,EAAAA,UAAS,CAACI,IAAK,KAAtD,eAAOC,EAAP,KAAsBC,EAAtB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IA8CMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,KACXC,MAAM,GAER,CACEN,KAAM,OACNC,SAAU,SAACC,GAAD,OAAcA,EAAIK,MAC5BH,UAAU,EACVC,UAAW,OACXG,MAAO,QACPF,MAAM,GAER,CACEN,KAAM,OACNC,SAAU,SAACC,GAAD,OAAcA,EAAIO,MAC5BL,UAAU,EACVC,UAAW,OACXC,MAAM,GAER,CACEN,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WACE,gBAAKJ,UAAU,aAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAQE,SAACC,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,0BAA4B0B,EAAOX,GAAI,CAACyB,SAAS,KAH9D,qBAQA,SAACH,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,2BAA6B0B,EAAOX,GAAI,CAACyB,SAAS,KAH/D,mBAQA,SAACH,EAAA,OAAD,CAAeC,KAAK,IAAIC,QAAS,kBA5FhCxB,EA4FgDW,EAAOX,QA3FxE0B,IAAAA,KAAU,CACRL,MAAO,cACPd,KAAM,2BACNoB,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,MACnBC,iBAAkB,WACjBC,KATH,mCASQ,WAAOC,GAAP,qEACFA,EAAOC,YADL,gCAEmBC,IAAAA,OAAA,UAAgBtD,EAAhB,mBAAmCkB,EAAnC,kBAFnB,eAIFL,EAAW,GACX+B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,wBACPgB,mBAAmB,EACnBC,MAAO,QAGTZ,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,yCACPgB,mBAAmB,EACnBC,MAAO,OAhBP,2CATR,uDADgB,IAACtC,GA4FD,qBAtBKgB,eAmCjBuB,EAAY,mCAAG,oFACfC,EAAW,GACW,KAAtBhD,EAAcD,MAChBiD,GAAQ,gBAAahD,EAAcD,MAErCD,GAAW,SAACmD,GAAD,eAAC,UAAmBA,GAApB,IAA+BrD,SAAUoD,OALjC,2CAAH,qDAelB,EAAwCE,EAAAA,SAA0B,IAAlE,eAkBA,GAlBA,WAkBwBvD,EAAAA,EAAAA,UAAS,KAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,MAEAvD,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAAuBwD,GAAvB,8EACEL,GAAW,GADb,SAEyBT,IAAAA,IAAA,UAAatD,EAAb,2BAFzB,OAEQqE,EAFR,OAGEP,EAAQO,EAASR,KAAKA,MACtBG,EAAaK,EAASR,KAAKS,YAC3BP,GAAW,GALb,4CADc,uBAAC,SAAD,2BAQdQ,CAAQ,KACP,CAAChE,EAAY0D,IAEhB,IAAMpD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAUtD,EAAW,SAFxB,cAEXwE,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,YAAaR,GALR,SAOMZ,IAAAA,IAAA,2CACec,EADf,qBACgCH,EADhC,aAPN,cAOXI,EAPW,OAUjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAdT,kBAeV,CAACA,EAAMC,IAfG,4CAAH,sDAkBhB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACE,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,mBAGA,kBACEmD,KAAK,OACLnD,UAAU,+CACVX,KAAK,OACLyD,MAAO9D,EAAcD,IACrBqE,SA1EoB,SAACC,GAI7BpE,EAAc,CAACF,IAAKsE,EAAMC,OAAOR,SAuEzBS,YAAY,eAIlB,iBAAKvD,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACE,oBAAQxD,UAAU,kBAAkBgB,QAASe,EAA7C,WACE,cAAG/B,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,0BAAT,UACE,oBAAQxD,UAAU,uBAAlB,WACE,cAAGA,UAAU,qBADf,oBAON,yBAkBA,gBAAKA,UAAU,oCAAf,UACE,SAAC,KAAD,CAAWZ,QAASA,EAAS+C,KAAMK,EAAMiB,YAAU,S,eC3P9CnF,EAAQ,UADLC,mCACK,gBAEd,SAASmF,IACd,IAAOlE,GAAMmE,EAAAA,EAAAA,MAANnE,GACP,EAAkD0C,EAAAA,SAA0B,IAA5E,eAAO0B,EAAP,KAA0BC,EAA1B,KAgBA,OAdA3E,EAAAA,EAAAA,YAAU,WACR,IAAM4E,EAAS,mCAAG,wGACOlC,IAAAA,IAAA,UAAatD,EAAb,oBAAiCkB,IADxC,OACVmD,EADU,OAEVoB,EAA0BpB,EAASR,KAAKA,KACxC6B,EAAwB,CAC5BpE,KAAMmE,EAAMnE,KACZE,KAAMiE,EAAMjE,KACZmE,WAAY,IAEdJ,GAAqB,SAACK,GAAD,eAAC,UAAwBA,GAAcF,MAR5C,2CAAH,qDAUfF,MACC,CAACF,EAAmBpE,KAGrB,gBAAKQ,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,6BACE,iBAAKA,UAAU,WAAf,WACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,oBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,OACLW,UAAU,kCACV8C,MAAwB,OAAjBc,QAAiB,IAAjBA,GAAAA,EAAmBhE,KAAnB,OAA0BgE,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAmBhE,KAAO,GAC3DwE,UAAQ,UAId,gBAAKpE,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,oBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,OACLW,UAAU,kCACV8C,MAAwB,OAAjBc,QAAiB,IAAjBA,GAAAA,EAAmB9D,KAAnB,OAA0B8D,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAmB9D,KAAO,GAC3DsE,UAAQ,aAKhB,gBAAKpE,UAAU,mDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,eAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gC,eC5DT1B,EAAQ,UADLC,mCACK,gBAEd,SAAS8F,IACd,IAAM5F,GAAWC,EAAAA,EAAAA,MACVc,GAAMmE,EAAAA,EAAAA,MAANnE,GACP,GAAwCb,EAAAA,EAAAA,UAAS,MAAjD,eAAO2F,EAAP,KACA,GADA,KACwCpC,EAAAA,SAA0B,KAAlE,eAAOqC,EAAP,KAAqBC,EAArB,KACA,EAAkDtC,EAAAA,SAA0B,IAA5E,eAAO0B,EAAP,KAA0BC,EAA1B,MAEA3E,EAAAA,EAAAA,YAAU,WACR,IAAM4E,EAAS,mCAAG,wGACOlC,IAAAA,IAAA,UAAatD,EAAb,oBAAiCkB,IADxC,OACVmD,EADU,OAEVoB,EAA0BpB,EAASR,KAAKA,KACxC6B,EAAwB,CAC5BpE,KAAMmE,EAAMnE,KACZqE,WAAY,GAEdJ,GAAqB,SAACK,GAAD,eAAC,UAAmBA,GAAcF,MAPvC,2CAAH,qDASfF,MACC,CAACS,EAAc/E,IAElB,IAiBMiF,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACb/E,KAAM,IAERgF,SAAS,WAAD,wBAAE,WAAOC,GAAP,gFACJC,EAAW,IAAIC,SACbC,EAAuB,CAC3BpF,KAAkB,OAAZ2E,QAAY,IAAZA,GAAAA,EAAc3E,KAChB2E,EAAa3E,KACI,OAAjBgE,QAAiB,IAAjBA,GAAAA,EAAmBhE,KACnBgE,EAAkBhE,KAClB,GACJqE,WAAY,GARN,kBAWiBrC,IAAAA,IAAA,UAAatD,EAAb,mBAAgCkB,GAAMwF,GAXvD,uCAaAV,EAbA,wBAcFQ,EAASG,OAAO,mBAAoBX,GAdlC,UAeyB1C,IAAAA,KAAA,UAActD,EAAd,mBAAiCkB,GAAMsF,GAfhE,wBAiBA/B,QAAQC,IAAI,0BACZ9B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,eAAgB,CAACwC,SAAS,KAxBnC,2BA4BJC,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,eAAgB,CAACwC,SAAS,IAlC/B,0DAqCNC,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,0CACPgB,mBAAmB,EACnBC,MAAO,OAETiB,QAAQmC,MAAR,MA3CM,0DAAF,mDAAC,KAgDX,OACE,gBAAKlF,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,kBAAM4E,SAAUH,EAAOU,aAAvB,WACE,gBAAKnF,UAAU,WAAf,UACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,oBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,OACLW,UAAU,kCACVoD,SA7EG,SAACC,GAI1BmB,GAAgB,SAACY,GAAD,eAAC,UACZA,GADW,cAEb/B,EAAMC,OAAOjE,KAAOgE,EAAMC,OAAOR,YAwEdA,MACc,OAAZyB,QAAY,IAAZA,GAAAA,EAAc3E,MAA+B,MAAX,OAAZ2E,QAAY,IAAZA,OAAA,EAAAA,EAAc3E,MAApC,OACI2E,QADJ,IACIA,OADJ,EACIA,EAAc3E,KACG,OAAjBgE,QAAiB,IAAjBA,GAAAA,EAAmBhE,KAAnB,OACAgE,QADA,IACAA,OADA,EACAA,EAAmBhE,KACnB,aAMd,iBAAKI,UAAU,mDAAf,WACE,SAAC,KAAD,CAAMwD,GAAG,eAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gBAKF,oBAAQA,UAAU,kBAAkBmD,KAAK,SAAzC,WACE,cAAGnD,UAAU,4BADf,8BCpIpB,IACa1B,EAAQ,UADLC,mCACK,gBAEd,SAAS8G,IACd,IAAM5G,GAAWC,EAAAA,EAAAA,MAEjB,EAAwCwD,EAAAA,SAA0B,IAAlE,eAAOqC,EAAP,KAAqBC,EAArB,KAmBMC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACb/E,KAAM,IAERgF,SAAS,WAAD,wBAAE,WAAOC,GAAP,kFACR9B,QAAQC,IAAIsB,GACRQ,EAAW,IAAIC,SACbC,EAAuB,CAC3BpF,KAAkB,OAAZ2E,QAAY,IAAZA,GAAAA,EAAc3E,KAAO2E,EAAa3E,KAAO,GAC/C0F,WAAY,GALN,kBAQiB1D,IAAAA,KAAA,UAActD,EAAd,WAAiC0G,GARlD,YAQArC,EARA,6BAUE2B,EAVF,wBAWAQ,EAASG,OAAO,mBAAoBX,GAXpC,UAY2B1C,IAAAA,KAAA,UACtBtD,EADsB,wBACEqE,EAASR,KAAKA,KAAKoD,WAC9CT,GAdF,wBAiBE/B,QAAQC,IAAI,0BACZ9B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,eAAgB,CAACwC,SAAS,KAxBrC,2BA4BFC,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,eAAgB,CAACwC,SAAS,IAlCjC,0DAqCNC,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,0CACPgB,mBAAmB,EACnBC,MAAO,OAETiB,QAAQmC,MAAR,MA3CM,0DAAF,mDAAC,KAgDX,GAAwCvG,EAAAA,EAAAA,UAAS,MAAjD,eAAO2F,EAAP,UAEA,OACE,gBAAKtE,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,kBAAM4E,SAAUH,EAAOU,aAAvB,WACE,gBAAKnF,UAAU,WAAf,UACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,oBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,OACLW,UAAU,kCACVoD,SA/EG,SAACC,GAI1BmB,GAAgB,SAACY,GAAD,eAAC,UACZA,GADW,cAEb/B,EAAMC,OAAOjE,KAAOgE,EAAMC,OAAOR,YA0EdA,MAAK,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAAc3E,eAK7B,iBAAKI,UAAU,mDAAf,WACE,SAAC,KAAD,CAAMwD,GAAG,eAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gBAKF,oBAAQA,UAAU,kBAAkBmD,KAAK,SAAzC,WACE,cAAGnD,UAAU,4BADf,8BC5GpB,IACawF,EAAa,UADVjH,mCACU,qBAEnB,SAASkH,IACd,IAAMhH,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,WAAS,GAAjC,0BAIAO,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,CACEL,KAAM,iBACNC,SAAU,SAACC,GAAD,OAAcA,EAAImG,gBAC5BjG,UAAU,EACVC,UAAW,iBACXG,MAAO,SAET,CACER,KAAM,YACNC,SAAU,SAACC,GAAD,OAAcA,EAAIoG,WAC5BlG,UAAU,EACVC,UAAW,YACXG,MAAO,SAET,CACER,KAAM,YACNC,SAAU,SAACC,GAAD,OAAcA,EAAIqG,WAC5BnG,UAAU,EACVC,UAAW,YACXG,MAAO,SAET,CACER,KAAM,OACNC,SAAU,SAACC,GAAD,OAAcA,EAAIK,MAC5BH,UAAU,EACVC,UAAW,OACXG,MAAO,SAET,GAEA,CACER,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WACE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAQE,SAACC,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,oCAAsC0B,EAAOX,GAAI,CAACyB,SAAS,KAHxE,qBAQA,SAACH,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,qCAAuC0B,EAAOX,GAAI,CAACyB,SAAS,KAHzE,mBAQA,SAACH,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAtBKP,eAiCvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAU4D,EAAgB,SAF7B,cAEX1C,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAqBR,GALhB,SAOMZ,IAAAA,IAAA,2CACec,EADf,qBACgCH,EADhC,aAPN,cAOXI,EAPW,OAUjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAdT,kBAeV,CAACA,EAAMC,IAfG,4CAAH,sDA8ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACE,gBAAKA,UAAU,WAAf,UACE,iBAAKA,UAAU,aAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,mBAGA,kBACEmD,KAAK,OACLnD,UAAU,+CACVX,KAAK,iBAKb,gBAAKW,UAAU,yBAAf,UACE,gBAAKA,UAAU,WAAf,UACE,iBAAKA,UAAU,aAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,wBAGA,kBACEmD,KAAK,OACLnD,UAAU,+CACVX,KAAK,iBAKb,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACE,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,oCAAT,UACE,oBAAQxD,UAAU,uBAAlB,WACE,cAAGA,UAAU,qBADf,oBAQN,gBAAKA,UAAU,kCAAf,UACE,SAAC,KAAD,CAAWZ,QAASA,EAAS+C,KAAMK,EAAMiB,YAAU,SCxM3D,IACa+B,EAAa,UADVjH,mCACU,qBACnB,SAASsH,IACd,IAAOrG,GAAMmE,EAAAA,EAAAA,MAANnE,GACP,EAAkD0C,EAAAA,SAA0B,IAA5E,eAAO0B,EAAP,KAA0BC,EAA1B,KAkBA,OAhBA3E,EAAAA,EAAAA,YAAU,WACR,IAAM4E,EAAS,mCAAG,wGACOlC,IAAAA,IAAA,UAAa4D,EAAb,oBAAsChG,IAD7C,OACVmD,EADU,OAEVoB,EAA0BpB,EAASR,KAAKA,KACxC6B,EAAwB,CAC5B2B,UAAW5B,EAAM4B,UACjBC,UAAW7B,EAAM6B,UACjBF,eAAgB3B,EAAM2B,eACtB9F,KAAMmE,EAAMnE,KACZqE,WAAY,IAEdJ,GAAqB,SAACK,GAAD,eAAC,UAAwBA,GAAcF,MAV5C,2CAAH,qDAYfF,MACC,CAACF,EAAmBpE,KAGrB,gBAAKQ,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,6BACE,iBAAKA,UAAU,WAAf,WACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,yBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,YACLW,UAAU,kCACV8C,MAAwB,OAAjBc,QAAiB,IAAjBA,GAAAA,EAAmB+B,UAAnB,OAA+B/B,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAmB+B,UAAY,GACrEvB,UAAQ,UAId,gBAAKpE,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,yBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,YACLW,UAAU,kCACV8C,MAAwB,OAAjBc,QAAiB,IAAjBA,GAAAA,EAAmBgC,UAAnB,OAA+BhC,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAmBgC,UAAY,GACrExB,UAAQ,UAId,gBAAKpE,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,8BACA,SAACA,EAAA,UAAD,CACE9E,KAAK,iBACLW,UAAU,kCACV8C,MACmB,OAAjBc,QAAiB,IAAjBA,GAAAA,EAAmB8B,eAAnB,OACI9B,QADJ,IACIA,OADJ,EACIA,EAAmB8B,eACnB,GAENtB,UAAQ,UAId,gBAAKpE,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,oBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,OACLW,UAAU,kCACV8C,MAAwB,OAAjBc,QAAiB,IAAjBA,GAAAA,EAAmBhE,KAAnB,OAA0BgE,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAmBhE,KAAO,GAC3DwE,UAAQ,aAKhB,gBAAKpE,UAAU,mDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,oBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gCC3FtB,IACawF,EAAa,UADVjH,mCACU,qBAEnB,SAASuH,IACd,IAAMrH,GAAWC,EAAAA,EAAAA,MACVc,GAAMmE,EAAAA,EAAAA,MAANnE,GACP,GAAwCb,EAAAA,EAAAA,UAAS,MAAjD,eAAO2F,EAAP,KACA,GADA,KACwCpC,EAAAA,SAA0B,KAAlE,eAAOqC,EAAP,KAAqBC,EAArB,KACA,EAAkDtC,EAAAA,SAA0B,IAA5E,eAAO0B,EAAP,KAA0BC,EAA1B,MAEA3E,EAAAA,EAAAA,YAAU,WACR,IAAM4E,EAAS,mCAAG,wGACOlC,IAAAA,IAAA,UAAa4D,EAAb,oBAAsChG,IAD7C,OACVmD,EADU,OAEVoB,EAA0BpB,EAASR,KAAKA,KACxC6B,EAAwB,CAC5B2B,UAAW5B,EAAM4B,UACjBC,UAAW7B,EAAM6B,UACjB3B,WAAY,GAEdJ,GAAqB,SAACK,GAAD,eAAC,UAAmBA,GAAcF,MARvC,2CAAH,qDAUfF,MACC,CAACS,EAAc/E,IAElB,IAAMuG,EAAqB,SAAC1C,GAI1BmB,GAAgB,SAACY,GAAD,eAAC,UACZA,GADW,cAEb/B,EAAMC,OAAOjE,KAAOgE,EAAMC,OAAOR,YAIhC2B,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbgB,UAAW,GACXC,UAAW,IAEbhB,SAAS,WAAD,wBAAE,WAAOC,GAAP,gFACJC,EAAW,IAAIC,SACbC,EAAuB,CAC3BW,UAAuB,OAAZpB,QAAY,IAAZA,GAAAA,EAAcoB,UACrBpB,EAAaoB,UACI,OAAjB/B,QAAiB,IAAjBA,GAAAA,EAAmB+B,UACnB/B,EAAkB+B,UAClB,GACJC,UAAuB,OAAZrB,QAAY,IAAZA,GAAAA,EAAcqB,UACrBrB,EAAaqB,UACI,OAAjBhC,QAAiB,IAAjBA,GAAAA,EAAmBgC,UACnBhC,EAAkBgC,UAClB,GACJ3B,WAAY,GAbN,kBAgBiBrC,IAAAA,IAAA,UAAa4D,EAAb,mBAAqChG,GAAMwF,GAhB5D,uCAkBAV,EAlBA,wBAmBFQ,EAASG,OAAO,mBAAoBX,GAnBlC,UAoByB1C,IAAAA,KAAA,UAAc4D,EAAd,mBAAsChG,GAAMsF,GApBrE,wBAsBA/B,QAAQC,IAAI,0BACZ9B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,oBAAqB,CAACwC,SAAS,KA7BxC,2BAiCJC,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,oBAAqB,CAACwC,SAAS,IAvCpC,0DA0CNC,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,0CACPgB,mBAAmB,EACnBC,MAAO,OAETiB,QAAQmC,MAAR,MAhDM,0DAAF,mDAAC,KAqDX,OACE,gBAAKlF,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,kBAAM4E,SAAUH,EAAOU,aAAvB,WACE,iBAAKnF,UAAU,WAAf,WACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,yBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,YACLW,UAAU,kCACVoD,SAAU2C,EACVjD,MACc,OAAZyB,QAAY,IAAZA,GAAAA,EAAcoB,WAAyC,MAAhB,OAAZpB,QAAY,IAAZA,OAAA,EAAAA,EAAcoB,WAAzC,OACIpB,QADJ,IACIA,OADJ,EACIA,EAAcoB,UACG,OAAjB/B,QAAiB,IAAjBA,GAAAA,EAAmB+B,UAAnB,OACA/B,QADA,IACAA,OADA,EACAA,EAAmB+B,UACnB,WAKZ,gBAAK3F,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,yBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,YACLW,UAAU,kCACVoD,SAAU2C,EACVjD,MACc,OAAZyB,QAAY,IAAZA,GAAAA,EAAcqB,WAAyC,MAAhB,OAAZrB,QAAY,IAAZA,OAAA,EAAAA,EAAcqB,WAAzC,OACIrB,QADJ,IACIA,OADJ,EACIA,EAAcqB,UACG,OAAjBhC,QAAiB,IAAjBA,GAAAA,EAAmBgC,UAAnB,OACAhC,QADA,IACAA,OADA,EACAA,EAAmBgC,UACnB,cAMd,iBAAK5F,UAAU,mDAAf,WACE,SAAC,KAAD,CAAMwD,GAAG,oBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gBAKF,oBAAQA,UAAU,kBAAkBmD,KAAK,SAAzC,WACE,cAAGnD,UAAU,4BADf,8BCrJpB,IACawF,EAAa,UADVjH,mCACU,qBAEnB,SAASyH,IACd,IAAMvH,GAAWC,EAAAA,EAAAA,MAEjB,EAAwCwD,EAAAA,SAA0B,IAAlE,eAAOqC,EAAP,KAAqBC,EAArB,KAEMuB,EAAqB,SAAC1C,GAI1BmB,GAAgB,SAACY,GAAD,eAAC,UACZA,GADW,cAEb/B,EAAMC,OAAOjE,KAAOgE,EAAMC,OAAOR,YAIhC2B,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbgB,UAAW,GACXC,UAAW,IAEbhB,SAAS,WAAD,wBAAE,WAAOC,GAAP,kFACR9B,QAAQC,IAAIsB,GACRQ,EAAW,IAAIC,SACbC,EAAuB,CAC3BW,UAAuB,OAAZpB,QAAY,IAAZA,GAAAA,EAAcoB,UAAYpB,EAAaoB,UAAY,GAC9DC,UAAuB,OAAZrB,QAAY,IAAZA,GAAAA,EAAcqB,UAAYrB,EAAaqB,UAAY,GAC9DN,WAAY,GANN,kBASiB1D,IAAAA,KAAA,UAAc4D,EAAd,WAAsCR,GATvD,YASArC,EATA,6BAWA2B,EAXA,wBAYFQ,EAASG,OAAO,mBAAoBX,GAZlC,UAayB1C,IAAAA,KAAA,UACtB4D,EADsB,wBACO7C,EAASR,KAAKA,KAAKoD,WACnDT,GAfA,wBAkBA/B,QAAQC,IAAI,0BACZ9B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,oBAAqB,CAACwC,SAAS,KAzBxC,2BA6BJC,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,oBAAqB,CAACwC,SAAS,IAnCpC,0DAsCNC,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,0CACPgB,mBAAmB,EACnBC,MAAO,OAETiB,QAAQmC,MAAR,MA5CM,0DAAF,mDAAC,KAiDX,GAAwCvG,EAAAA,EAAAA,UAAS,MAAjD,eAAO2F,EAAP,UAEA,OACE,gBAAKtE,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,kBAAM4E,SAAUH,EAAOU,aAAvB,WACE,iBAAKnF,UAAU,WAAf,WACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,yBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,YACLW,UAAU,kCACVoD,SAAU2C,EACVjD,MAAK,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAAcoB,kBAI3B,gBAAK3F,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,yBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,YACLW,UAAU,kCACVoD,SAAU2C,EACVjD,MAAK,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAAcqB,qBAK7B,iBAAK5F,UAAU,mDAAf,WACE,SAAC,KAAD,CAAMwD,GAAG,oBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gBAKF,oBAAQA,UAAU,kBAAkBmD,KAAK,SAAzC,WACE,cAAGnD,UAAU,4BADf,8BCpHpB,IACaiG,EAAa,UADV1H,mCACU,qBAEnB,SAAS2H,IACd,IAAMzH,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,WAAS,GAAjC,0BAIAO,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,CACEL,KAAM,iBACNC,SAAU,SAACC,GAAD,OAAcA,EAAI4G,gBAC5B1G,UAAU,EACVC,UAAW,aAEb,CACEL,KAAM,YACNC,SAAU,SAACC,GAAD,OAAcA,EAAI6G,WAC5B3G,UAAU,EACVC,UAAW,aAEb,CACEL,KAAM,iBACNC,SAAU,SAACC,GAAD,OAAcA,EAAImG,gBAC5BjG,UAAU,EACVC,UAAW,kBAEb,CACEL,KAAM,YACNC,SAAU,SAACC,GAAD,OAAcA,EAAIoG,WAC5BlG,UAAU,EACVC,UAAW,aAEb,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WACE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAQE,SAACC,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,oCAAsC0B,EAAOX,GAAI,CAACyB,SAAS,KAHxE,qBAQA,SAACH,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,qCAAuC0B,EAAOX,GAAI,CAACyB,SAAS,KAHzE,mBAQA,SAACH,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAtBKP,eAiCvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAUqE,EAAgB,SAF7B,cAEXnD,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAqBR,GALhB,SAOMZ,IAAAA,IAAA,2CACec,EADf,qBACgCH,EADhC,aAPN,cAOXI,EAPW,OAUjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAdT,kBAeV,CAACA,EAAMC,IAfG,4CAAH,sDA8ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACE,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,wBAGA,kBAAOmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGrF,gBAAKW,UAAU,yBAAf,UACE,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,wBAGA,kBAAOmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGrF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACE,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,oCAAT,UACE,oBAAQxD,UAAU,uBAAlB,WACE,cAAGA,UAAU,qBADf,oBAQN,gBAAKA,UAAU,kCAAf,UACE,SAAC,KAAD,CAAWZ,QAASA,EAAS+C,KAAMK,EAAMiB,YAAU,SCrL3D,IACawC,EAAa,UADV1H,mCACU,qBACnB,SAAS8H,IACd,IAAO7G,GAAMmE,EAAAA,EAAAA,MAANnE,GACP,EAAkD0C,EAAAA,SAA0B,IAA5E,eAAO0B,EAAP,KAA0BC,EAA1B,KAkBA,OAhBA3E,EAAAA,EAAAA,YAAU,WACR,IAAM4E,EAAS,mCAAG,wGACOlC,IAAAA,IAAA,UAAaqE,EAAb,oBAAsCzG,IAD7C,OACVmD,EADU,OAEVoB,EAA0BpB,EAASR,KAAKA,KACxC6B,EAAwB,CAC5B2B,UAAW5B,EAAM4B,UACjBQ,eAAgBpC,EAAMoC,eACtBT,eAAgB3B,EAAM2B,eACtBU,UAAWrC,EAAMqC,UACjBnC,WAAY,IAEdJ,GAAqB,SAACK,GAAD,eAAC,UAAwBA,GAAcF,MAV5C,2CAAH,qDAYfF,MACC,CAACF,EAAmBpE,KAGrB,gBAAKQ,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,6BACE,iBAAKA,UAAU,WAAf,WACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,yBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,YACLW,UAAU,kCACV8C,MAAwB,OAAjBc,QAAiB,IAAjBA,GAAAA,EAAmB+B,UAAnB,OAA+B/B,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAmB+B,UAAY,GACrEvB,UAAQ,UAId,gBAAKpE,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,8BACA,SAACA,EAAA,UAAD,CACE9E,KAAK,iBACLW,UAAU,kCACV8C,MACmB,OAAjBc,QAAiB,IAAjBA,GAAAA,EAAmBuC,eAAnB,OACIvC,QADJ,IACIA,OADJ,EACIA,EAAmBuC,eACnB,GAEN/B,UAAQ,UAId,gBAAKpE,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,8BACA,SAACA,EAAA,UAAD,CACE9E,KAAK,iBACLW,UAAU,kCACV8C,MACmB,OAAjBc,QAAiB,IAAjBA,GAAAA,EAAmB8B,eAAnB,OACI9B,QADJ,IACIA,OADJ,EACIA,EAAmB8B,eACnB,GAENtB,UAAQ,UAId,gBAAKpE,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,yBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,YACLW,UAAU,kCACV8C,MAAwB,OAAjBc,QAAiB,IAAjBA,GAAAA,EAAmBwC,UAAnB,OAA+BxC,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAmBwC,UAAY,GACrEhC,UAAQ,aAKhB,gBAAKpE,UAAU,mDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,oBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gCC/FtB,IACaiG,EAAa,UADV1H,mCACU,qBAEnB,SAAS+H,IACd,IAAM7H,GAAWC,EAAAA,EAAAA,MACVc,GAAMmE,EAAAA,EAAAA,MAANnE,GACP,GAAwCb,EAAAA,EAAAA,UAAS,MAAjD,eAAO2F,EAAP,KACA,GADA,KACwCpC,EAAAA,SAA0B,KAAlE,eAAOqC,EAAP,KAAqBC,EAArB,KACA,EAAkDtC,EAAAA,SAA0B,IAA5E,eAAO0B,EAAP,KAA0BC,EAA1B,MAEA3E,EAAAA,EAAAA,YAAU,WACR,IAAM4E,EAAS,mCAAG,wGACOlC,IAAAA,IAAA,UAAaqE,EAAb,oBAAsCzG,IAD7C,OACVmD,EADU,OAEVoB,EAA0BpB,EAASR,KAAKA,KACxC6B,EAAwB,CAC5BoC,UAAWrC,EAAMqC,UACjBV,eAAgB3B,EAAM2B,eACtBzB,WAAY,GAEdJ,GAAqB,SAACK,GAAD,eAAC,UAAmBA,GAAcF,MARvC,2CAAH,qDAUfF,MACC,CAACS,EAAc/E,IAElB,IAAMuG,EAAqB,SAAC1C,GAI1BmB,GAAgB,SAACY,GAAD,eAAC,UACZA,GADW,cAEb/B,EAAMC,OAAOjE,KAAOgE,EAAMC,OAAOR,YAIhC2B,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbyB,UAAW,GACXV,eAAgB,IAElBd,SAAS,WAAD,wBAAE,WAAOC,GAAP,gFACJC,EAAW,IAAIC,SACbC,EAAuB,CAC3BoB,UAAuB,OAAZ7B,QAAY,IAAZA,GAAAA,EAAc6B,UACrB7B,EAAa6B,UACI,OAAjBxC,QAAiB,IAAjBA,GAAAA,EAAmBwC,UACnBxC,EAAkBwC,UAClB,GACJV,eAA4B,OAAZnB,QAAY,IAAZA,GAAAA,EAAcmB,eAC1BnB,EAAamB,eACI,OAAjB9B,QAAiB,IAAjBA,GAAAA,EAAmB8B,eACnB9B,EAAkB8B,eAClB,GACJzB,WAAY,GAbN,kBAgBiBrC,IAAAA,IAAA,UAAaqE,EAAb,mBAAqCzG,GAAMwF,GAhB5D,uCAkBAV,EAlBA,wBAmBFQ,EAASG,OAAO,mBAAoBX,GAnBlC,UAoByB1C,IAAAA,KAAA,UAAcqE,EAAd,mBAAsCzG,GAAMsF,GApBrE,wBAsBA/B,QAAQC,IAAI,0BACZ9B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,oBAAqB,CAACwC,SAAS,KA7BxC,2BAiCJC,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,oBAAqB,CAACwC,SAAS,IAvCpC,0DA0CNC,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,0CACPgB,mBAAmB,EACnBC,MAAO,OAETiB,QAAQmC,MAAR,MAhDM,0DAAF,mDAAC,KAqDX,OACE,gBAAKlF,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,kBAAM4E,SAAUH,EAAOU,aAAvB,WACE,iBAAKnF,UAAU,WAAf,WACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,yBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,YACLW,UAAU,kCACVoD,SAAU2C,EACVjD,MACc,OAAZyB,QAAY,IAAZA,GAAAA,EAAc6B,WAAyC,MAAhB,OAAZ7B,QAAY,IAAZA,OAAA,EAAAA,EAAc6B,WAAzC,OACI7B,QADJ,IACIA,OADJ,EACIA,EAAc6B,UACG,OAAjBxC,QAAiB,IAAjBA,GAAAA,EAAmBwC,UAAnB,OACAxC,QADA,IACAA,OADA,EACAA,EAAmBwC,UACnB,WAKZ,gBAAKpG,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,yBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,iBACLW,UAAU,kCACVoD,SAAU2C,EACVjD,MACc,OAAZyB,QAAY,IAAZA,GAAAA,EAAcmB,gBAAmD,MAArB,OAAZnB,QAAY,IAAZA,OAAA,EAAAA,EAAcmB,gBAA9C,OACInB,QADJ,IACIA,OADJ,EACIA,EAAcmB,eACG,OAAjB9B,QAAiB,IAAjBA,GAAAA,EAAmB8B,eAAnB,OACA9B,QADA,IACAA,OADA,EACAA,EAAmB8B,eACnB,cAMd,iBAAK1F,UAAU,mDAAf,WACE,SAAC,KAAD,CAAMwD,GAAG,oBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gBAKF,oBAAQA,UAAU,kBAAkBmD,KAAK,SAAzC,WACE,cAAGnD,UAAU,4BADf,8BCrJpB,IACaiG,EAAa,UADV1H,mCACU,qBAEnB,SAASgI,IACd,IAAM9H,GAAWC,EAAAA,EAAAA,MAEjB,EAAwCwD,EAAAA,SAA0B,IAAlE,eAAOqC,EAAP,KAAqBC,EAArB,KAEMuB,EAAqB,SAAC1C,GAI1BmB,GAAgB,SAACY,GAAD,eAAC,UACZA,GADW,cAEb/B,EAAMC,OAAOjE,KAAOgE,EAAMC,OAAOR,YAIhC2B,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbyB,UAAW,GACXV,eAAgB,IAElBd,SAAS,WAAD,wBAAE,WAAOC,GAAP,kFACR9B,QAAQC,IAAIsB,GACRQ,EAAW,IAAIC,SACbC,EAAuB,CAC3BoB,UAAuB,OAAZ7B,QAAY,IAAZA,GAAAA,EAAc6B,UAAY7B,EAAa6B,UAAY,GAC9DV,eAA4B,OAAZnB,QAAY,IAAZA,GAAAA,EAAcmB,eAAiBnB,EAAamB,eAAiB,GAC7EJ,WAAY,GANN,kBASiB1D,IAAAA,KAAA,UAAcqE,EAAd,WAAsCjB,GATvD,YASArC,EATA,6BAWA2B,EAXA,wBAYFQ,EAASG,OAAO,mBAAoBX,GAZlC,UAayB1C,IAAAA,KAAA,UACtBqE,EADsB,wBACOtD,EAASR,KAAKA,KAAKoD,WACnDT,GAfA,wBAkBA/B,QAAQC,IAAI,0BACZ9B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,oBAAqB,CAACwC,SAAS,KAzBxC,2BA6BJC,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,oBAAqB,CAACwC,SAAS,IAnCpC,0DAsCNC,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,0CACPgB,mBAAmB,EACnBC,MAAO,OAETiB,QAAQmC,MAAR,MA5CM,0DAAF,mDAAC,KAiDX,GAAwCvG,EAAAA,EAAAA,UAAS,MAAjD,eAAO2F,EAAP,UAEA,OACE,gBAAKtE,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,kBAAM4E,SAAUH,EAAOU,aAAvB,WACE,iBAAKnF,UAAU,WAAf,WACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,yBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,YACLW,UAAU,kCACVoD,SAAU2C,EACVjD,MAAK,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAAc6B,kBAI3B,gBAAKpG,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,8BACA,SAACA,EAAA,UAAD,CACE9E,KAAK,iBACLW,UAAU,kCACVoD,SAAU2C,EACVjD,MAAK,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAAcmB,0BAK7B,iBAAK1F,UAAU,mDAAf,WACE,SAAC,KAAD,CAAMwD,GAAG,oBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gBAKF,oBAAQA,UAAU,kBAAkBmD,KAAK,SAAzC,WACE,cAAGnD,UAAU,4BADf,8BCpHpB,IACawG,EAAkB,UADfjI,mCACe,0BAExB,SAASkI,IACd,IAAMhI,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,WAAS,GAAjC,0BAIAO,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,GACA,CACEL,KAAM,iBACNC,SAAU,SAACC,GAAD,OAAcA,EAAImH,gBAC5BjH,UAAU,EACVC,UAAW,iBACXG,MAAO,SAET,GACA,CACER,KAAM,OACNC,SAAU,SAACC,GAAD,OAAcA,EAAIO,MAC5BL,UAAU,EACVC,UAAW,QAEb,GACA,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WACE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAQE,SAACC,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,4CAA8C0B,EAAOX,GAAI,CAChEyB,SAAS,KAJf,qBAUA,SAACH,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,6CAA+C0B,EAAOX,GAAI,CACjEyB,SAAS,KAJf,mBAUA,SAACH,EAAA,OAAD,CAAeC,KAAK,IAApB,qBA1BKP,eAqCvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAU4E,EAAqB,SAFlC,cAEX1D,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAqBR,GALhB,SAOMZ,IAAAA,IAAA,2CACec,EADf,qBACgCH,EADhC,aAPN,cAOXI,EAPW,OAUjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAdT,kBAeV,CAACA,EAAMC,IAfG,4CAAH,sDA8ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACE,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,6BAGA,kBAAOmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGrF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACE,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,4CAAT,UACE,oBAAQxD,UAAU,uBAAlB,WACE,cAAGA,UAAU,qBADf,oBAQN,gBAAKA,UAAU,kCAAf,UACE,SAAC,KAAD,CAAWZ,QAASA,EAAS+C,KAAMK,EAAMiB,YAAU,SC7K3D,IACa+C,EAAkB,UADfjI,mCACe,0BAExB,SAASoI,IACd,IAAOnH,GAAMmE,EAAAA,EAAAA,MAANnE,GACP,EAAkD0C,EAAAA,SAA0B,IAA5E,eAAO0B,EAAP,KAA0BC,EAA1B,KAgBA,OAdA3E,EAAAA,EAAAA,YAAU,WACR,IAAM4E,EAAS,mCAAG,wGACOlC,IAAAA,IAAA,UAAa4E,EAAb,oBAA2ChH,IADlD,OACVmD,EADU,OAEVoB,EAA0BpB,EAASR,KAAKA,KACxC6B,EAAwB,CAC5B0C,eAAgB3C,EAAM2C,eACtB5G,KAAMiE,EAAMjE,KACZmE,WAAY,IAEdJ,GAAqB,SAACK,GAAD,eAAC,UAAwBA,GAAcF,MAR5C,2CAAH,qDAUfF,MACC,CAACF,EAAmBpE,KAGrB,gBAAKQ,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,6BACE,iBAAKA,UAAU,WAAf,WACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,8BACA,SAACA,EAAA,UAAD,CACE9E,KAAK,iBACLW,UAAU,kCACV8C,MACmB,OAAjBc,QAAiB,IAAjBA,GAAAA,EAAmB8C,eAAnB,OACI9C,QADJ,IACIA,OADJ,EACIA,EAAmB8C,eACnB,GAENtC,UAAQ,UAId,gBAAKpE,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,oBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,OACLW,UAAU,kCACV8C,MAAwB,OAAjBc,QAAiB,IAAjBA,GAAAA,EAAmB9D,KAAnB,OAA0B8D,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAmB9D,KAAO,GAC3DsE,UAAQ,aAKhB,gBAAKpE,UAAU,mDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,yBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gCCjEtB,IACawG,EAAkB,UADfjI,mCACe,0BAExB,SAASqI,IACd,IAAMnI,GAAWC,EAAAA,EAAAA,MACVc,GAAMmE,EAAAA,EAAAA,MAANnE,GACP,GAAwCb,EAAAA,EAAAA,UAAS,MAAjD,eAAO2F,EAAP,KACA,GADA,KACwCpC,EAAAA,SAA0B,KAAlE,eAAOqC,EAAP,KAAqBC,EAArB,KACA,EAAkDtC,EAAAA,SAA0B,IAA5E,eAAO0B,EAAP,KAA0BC,EAA1B,MAEA3E,EAAAA,EAAAA,YAAU,WACR,IAAM4E,EAAS,mCAAG,wGACOlC,IAAAA,IAAA,UAAa4E,EAAb,oBAA2ChH,IADlD,OACVmD,EADU,OAEVoB,EAA0BpB,EAASR,KAAKA,KACxC6B,EAAwB,CAC5B0C,eAAgB3C,EAAM2C,eACtBzC,WAAY,GAEdJ,GAAqB,SAACK,GAAD,eAAC,UAAmBA,GAAcF,MAPvC,2CAAH,qDASfF,MACC,CAACS,EAAc/E,IAElB,IAiBMiF,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACb+B,eAAgB,IAElB9B,SAAS,WAAD,wBAAE,WAAOC,GAAP,gFACJC,EAAW,IAAIC,SACbC,EAAuB,CAC3B0B,eAA4B,OAAZnC,QAAY,IAAZA,GAAAA,EAAcmC,eAC1BnC,EAAamC,eACI,OAAjB9C,QAAiB,IAAjBA,GAAAA,EAAmB8C,eACnB9C,EAAkB8C,eAClB,GACJzC,WAAY,GARN,kBAWiBrC,IAAAA,IAAA,UAAa4E,EAAb,mBAA0ChH,GAAMwF,GAXjE,uCAaAV,EAbA,wBAcFQ,EAASG,OAAO,mBAAoBX,GAdlC,UAeyB1C,IAAAA,KAAA,UAAc4E,EAAd,mBAA2ChH,GAAMsF,GAf1E,wBAiBA/B,QAAQC,IAAI,0BACZ9B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,wBAAyB,CAACwC,SAAS,KAxB5C,2BA4BJC,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,wBAAyB,CAACwC,SAAS,IAlCxC,0DAqCNC,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,0CACPgB,mBAAmB,EACnBC,MAAO,OAETiB,QAAQmC,MAAR,MA3CM,0DAAF,mDAAC,KAgDX,OACE,gBAAKlF,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,kBAAM4E,SAAUH,EAAOU,aAAvB,WACE,gBAAKnF,UAAU,WAAf,UACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,8BACA,SAACA,EAAA,UAAD,CACE9E,KAAK,iBACLW,UAAU,kCACVoD,SA7EG,SAACC,GAI1BmB,GAAgB,SAACY,GAAD,eAAC,UACZA,GADW,cAEb/B,EAAMC,OAAOjE,KAAOgE,EAAMC,OAAOR,YAwEdA,MACc,OAAZyB,QAAY,IAAZA,GAAAA,EAAcmC,gBAAmD,MAArB,OAAZnC,QAAY,IAAZA,OAAA,EAAAA,EAAcmC,gBAA9C,OACInC,QADJ,IACIA,OADJ,EACIA,EAAcmC,eACG,OAAjB9C,QAAiB,IAAjBA,GAAAA,EAAmB8C,eAAnB,OACA9C,QADA,IACAA,OADA,EACAA,EAAmB8C,eACnB,aAMd,iBAAK1G,UAAU,mDAAf,WACE,SAAC,KAAD,CAAMwD,GAAG,wBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gBAKF,oBAAQA,UAAU,kBAAkBmD,KAAK,SAAzC,WACE,cAAGnD,UAAU,4BADf,8BCpIpB,IACawG,GAAkB,UADfjI,mCACe,0BAExB,SAASsI,KACd,IAAMpI,GAAWC,EAAAA,EAAAA,MAEjB,EAAwCwD,EAAAA,SAA0B,IAAlE,eAAOqC,EAAP,KAAqBC,EAArB,KAmBMC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACb+B,eAAgB,IAElB9B,SAAS,WAAD,wBAAE,WAAOC,GAAP,kFACR9B,QAAQC,IAAIsB,GACRQ,EAAW,IAAIC,SACbC,EAAuB,CAC3B0B,eAA4B,OAAZnC,QAAY,IAAZA,GAAAA,EAAcmC,eAAiBnC,EAAamC,eAAiB,GAC7EpB,WAAY,GALN,kBAQiB1D,IAAAA,KAAA,UAAc4E,GAAd,WAA2CxB,GAR5D,YAQArC,EARA,6BAUA2B,EAVA,wBAWFQ,EAASG,OAAO,mBAAoBX,GAXlC,UAYyB1C,IAAAA,KAAA,UACtB4E,GADsB,wBACY7D,EAASR,KAAKA,KAAKoD,WACxDT,GAdA,wBAiBA/B,QAAQC,IAAI,0BACZ9B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,wBAAyB,CAACwC,SAAS,KAxB5C,2BA4BJC,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,wBAAyB,CAACwC,SAAS,IAlCxC,0DAqCNC,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,0CACPgB,mBAAmB,EACnBC,MAAO,OAETiB,QAAQmC,MAAR,MA3CM,0DAAF,mDAAC,KAgDX,GAAwCvG,EAAAA,EAAAA,UAAS,MAAjD,eAAO2F,EAAP,UAEA,OACE,gBAAKtE,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,kBAAM4E,SAAUH,EAAOU,aAAvB,WACE,gBAAKnF,UAAU,WAAf,UACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,8BACA,SAACA,EAAA,UAAD,CACE9E,KAAK,iBACLW,UAAU,kCACVoD,SA/EG,SAACC,GAI1BmB,GAAgB,SAACY,GAAD,eAAC,UACZA,GADW,cAEb/B,EAAMC,OAAOjE,KAAOgE,EAAMC,OAAOR,YA0EdA,MAAK,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAAcmC,yBAK7B,iBAAK1G,UAAU,mDAAf,WACE,SAAC,KAAD,CAAMwD,GAAG,wBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gBAKF,oBAAQA,UAAU,kBAAkBmD,KAAK,SAAzC,WACE,cAAGnD,UAAU,4BADf,8B,gBCzGP8G,GAAkB,UADfvI,mCACe,0BAETwI,GAAAA,KAAaC,MAAM,CACvCC,eAAgBF,GAAAA,KAAaG,SAAS,iBAGjC,SAASC,KACd,IAAM1I,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,WAAS,GAAjC,0BAIAO,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,GACA,CACEL,KAAM,iBACNC,SAAU,SAACC,GAAD,OAAcA,EAAI0H,gBAC5BxH,UAAU,EACVC,UAAW,kBAEb,GACA,GACA,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WACE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAQE,SAACC,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,4CAA8C0B,EAAOX,GAAI,CAChEyB,SAAS,KAJf,qBAUA,SAACH,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,6CAA+C0B,EAAOX,GAAI,CACjEyB,SAAS,KAJf,mBAUA,SAACH,EAAA,OAAD,CAAeE,QAAS,kBAAMoG,EAAS,OAACjH,QAAD,IAACA,OAAD,EAACA,EAAQX,KAAhD,qBA1BKgB,eAqCvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAUkF,GAAqB,SAFlC,cAEXhE,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAqBR,GALhB,SAOMZ,IAAAA,IAAA,2CACec,EADf,qBACgCH,EADhC,aAPN,cAOXI,EAPW,OAUjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAdT,kBAeV,CAACA,EAAMC,IAfG,4CAAH,sDAkCVgF,EAAY,SAAC5H,GACjB0B,IAAAA,KAAU,CACRL,MAAO,cACPd,KAAM,2BACNoB,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,MACnBC,iBAAkB,WACjBC,KATH,mCASQ,WAAOC,GAAP,qEACFA,EAAOC,YADL,gCAEmBC,IAAAA,OAAA,UAAgBkF,GAAhB,mBAA6CtH,EAA7C,kBAFnB,eAIFL,EAAW,GACX+B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,wBACPgB,mBAAmB,EACnBC,MAAO,QAGTZ,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,yCACPgB,mBAAmB,EACnBC,MAAO,OAhBP,2CATR,wDAgCF,OACE,iBAAK9B,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACE,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,6BAGA,kBAAOmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGrF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACE,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,4CAAT,UACE,oBAAQxD,UAAU,uBAAlB,WACE,cAAGA,UAAU,qBADf,oBAQN,gBAAKA,UAAU,kCAAf,UACE,SAAC,KAAD,CAAWZ,QAASA,EAAS+C,KAAMK,EAAMiB,YAAU,SCpM3D,IACaqD,GAAkB,UADfvI,mCACe,0BAExB,SAAS8I,KACd,IAAO7H,GAAMmE,EAAAA,EAAAA,MAANnE,GACP,EAAkD0C,EAAAA,SAA0B,IAA5E,eAAO0B,EAAP,KAA0BC,EAA1B,KAeA,OAbA3E,EAAAA,EAAAA,YAAU,WACR,IAAM4E,EAAS,mCAAG,wGACOlC,IAAAA,IAAA,UAAakF,GAAb,oBAA2CtH,IADlD,OACVmD,EADU,OAEVoB,EAA0BpB,EAASR,KAAKA,KACxC6B,EAAwB,CAC5BiD,eAAgBlD,EAAMkD,eACtBhD,WAAY,IAEdJ,GAAqB,SAACK,GAAD,eAAC,UAAwBA,GAAcF,MAP5C,2CAAH,qDASfF,MACC,CAACF,EAAmBpE,KAGrB,gBAAKQ,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,6BACE,gBAAKA,UAAU,WAAf,UACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,8BACA,SAACA,EAAA,UAAD,CACE9E,KAAK,iBACLW,UAAU,kCACV8C,MACmB,OAAjBc,QAAiB,IAAjBA,GAAAA,EAAmBqD,eAAnB,OACIrD,QADJ,IACIA,OADJ,EACIA,EAAmBqD,eACnB,GAEN7C,UAAQ,YAMhB,gBAAKpE,UAAU,mDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,wBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gCCrDtB,IACa8G,GAAkB,UADfvI,mCACe,0BAExB,SAAS+I,KACd,IAAM7I,GAAWC,EAAAA,EAAAA,MACVc,GAAMmE,EAAAA,EAAAA,MAANnE,GACP,GAAwCb,EAAAA,EAAAA,UAAS,MAAjD,eAAO2F,EAAP,KACA,GADA,KACwCpC,EAAAA,SAA0B,KAAlE,eAAOqC,EAAP,KAAqBC,EAArB,KACA,EAAkDtC,EAAAA,SAA0B,IAA5E,eAAO0B,EAAP,KAA0BC,EAA1B,MAEA3E,EAAAA,EAAAA,YAAU,WACR,IAAM4E,EAAS,mCAAG,wGACOlC,IAAAA,IAAA,UAAakF,GAAb,oBAA2CtH,IADlD,OACVmD,EADU,OAEVoB,EAA0BpB,EAASR,KAAKA,KACxC6B,EAAwB,CAC5BiD,eAAgBlD,EAAMkD,eACtBhD,WAAY,GAEdJ,GAAqB,SAACK,GAAD,eAAC,UAAmBA,GAAcF,MAPvC,2CAAH,qDASfF,MACC,CAACS,EAAc/E,IAElB,IAiBMiF,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbsC,eAAgB,IAElBrC,SAAS,WAAD,wBAAE,WAAOC,GAAP,gFACJC,EAAW,IAAIC,SACbC,EAAuB,CAC3BiC,eAA4B,OAAZ1C,QAAY,IAAZA,GAAAA,EAAc0C,eAC1B1C,EAAa0C,eACI,OAAjBrD,QAAiB,IAAjBA,GAAAA,EAAmBqD,eACnBrD,EAAkBqD,eAClB,GACJhD,WAAY,GARN,kBAWiBrC,IAAAA,IAAA,UAAakF,GAAb,mBAA0CtH,GAAMwF,GAXjE,uCAaAV,EAbA,wBAcFQ,EAASG,OAAO,mBAAoBX,GAdlC,UAeyB1C,IAAAA,KAAA,UAAckF,GAAd,mBAA2CtH,GAAMsF,GAf1E,wBAiBA/B,QAAQC,IAAI,0BACZ9B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,wBAAyB,CAACwC,SAAS,KAxB5C,2BA4BJC,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,wBAAyB,CAACwC,SAAS,IAlCxC,0DAqCNC,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,0CACPgB,mBAAmB,EACnBC,MAAO,OAETiB,QAAQmC,MAAR,MA3CM,0DAAF,mDAAC,KAgDX,OACE,gBAAKlF,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,kBAAM4E,SAAUH,EAAOU,aAAvB,WACE,gBAAKnF,UAAU,WAAf,UACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,8BACA,SAACA,EAAA,UAAD,CACE9E,KAAK,iBACLW,UAAU,kCACVoD,SA7EG,SAACC,GAI1BmB,GAAgB,SAACY,GAAD,eAAC,UACZA,GADW,cAEb/B,EAAMC,OAAOjE,KAAOgE,EAAMC,OAAOR,YAwEdA,MACc,OAAZyB,QAAY,IAAZA,GAAAA,EAAc0C,gBAAmD,MAArB,OAAZ1C,QAAY,IAAZA,OAAA,EAAAA,EAAc0C,gBAA9C,OACI1C,QADJ,IACIA,OADJ,EACIA,EAAc0C,eACG,OAAjBrD,QAAiB,IAAjBA,GAAAA,EAAmBqD,eAAnB,OACArD,QADA,IACAA,OADA,EACAA,EAAmBqD,eACnB,aAMd,iBAAKjH,UAAU,mDAAf,WACE,SAAC,KAAD,CAAMwD,GAAG,wBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gBAKF,oBAAQA,UAAU,kBAAkBmD,KAAK,SAAzC,WACE,cAAGnD,UAAU,4BADf,8BCnIpB,IACa8G,GAAkB,UADfvI,mCACe,0BAExB,SAASgJ,KACd,IAAM9I,GAAWC,EAAAA,EAAAA,MAEjB,EAAwCwD,EAAAA,SAA0B,IAAlE,eAAOqC,EAAP,KAAqBC,EAArB,KAmBMC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbsC,eAAgB,IAElBrC,SAAS,WAAD,wBAAE,WAAOC,GAAP,kFACR9B,QAAQC,IAAIsB,GACRQ,EAAW,IAAIC,SACbC,EAAuB,CAC3BiC,eAA4B,OAAZ1C,QAAY,IAAZA,GAAAA,EAAc0C,eAAiB1C,EAAa0C,eAAiB,GAC7E3B,WAAY,GALN,kBAQiB1D,IAAAA,KAAA,UAAckF,GAAd,WAA2C9B,GAR5D,YAQArC,EARA,6BAUA2B,EAVA,wBAWFQ,EAASG,OAAO,mBAAoBX,GAXlC,UAYyB1C,IAAAA,KAAA,UACtBkF,GADsB,wBACYnE,EAASR,KAAKA,KAAKoD,WACxDT,GAdA,wBAiBA/B,QAAQC,IAAI,0BACZ9B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,wBAAyB,CAACwC,SAAS,KAxB5C,2BA4BJC,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,wBAAyB,CAACwC,SAAS,IAlCxC,0DAqCNC,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,0CACPgB,mBAAmB,EACnBC,MAAO,OAETiB,QAAQmC,MAAR,MA3CM,0DAAF,mDAAC,KAgDX,GAAwCvG,EAAAA,EAAAA,UAAS,MAAjD,eAAO2F,EAAP,UAEA,OACE,gBAAKtE,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,kBAAM4E,SAAUH,EAAOU,aAAvB,WACE,gBAAKnF,UAAU,WAAf,UACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,8BACA,SAACA,EAAA,UAAD,CACE9E,KAAK,iBACLW,UAAU,kCACVoD,SA/EG,SAACC,GAI1BmB,GAAgB,SAACY,GAAD,eAAC,UACZA,GADW,cAEb/B,EAAMC,OAAOjE,KAAOgE,EAAMC,OAAOR,YA0EdA,MAAK,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAAc0C,yBAK7B,iBAAKjH,UAAU,mDAAf,WACE,SAAC,KAAD,CAAMwD,GAAG,wBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gBAKF,oBAAQA,UAAU,kBAAkBmD,KAAK,SAAzC,WACE,cAAGnD,UAAU,4BADf,8B,4BC5GPwH,GAAqB,UADlBjJ,mCACkB,6BAC3B,SAASkJ,KACd,OAAwB9I,EAAAA,EAAAA,WAAS,GAAjC,eAAO+I,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,KAGlCzI,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,GAEA,CACEL,KAAM,oBACNC,SAAU,SAACC,GAAD,OAAcA,EAAIsI,mBAC5BpI,UAAU,EACVC,UAAW,qBAEb,GAEA,GAGA,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WAEE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAOE,SAACC,EAAA,OAAD,WACE,SAAC,KAAD,CAAM0C,GAAG,2CAAT,uBAIF,SAAC1C,EAAA,OAAD,CAAeC,KAAK,IAApB,mBACA,SAACD,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAXKP,eAuBvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAU4F,GAAwB,SAFrC,cAEX1E,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAoBR,GALf,SAQMZ,IAAAA,IAAA,2CAA8Cc,EAA9C,qBAA+DH,EAA/D,aARN,cAQXI,EARW,OASjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAbT,kBAcV,CAACA,EAAMC,IAdG,4CAAH,sDA4ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACI,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,gCAGA,kBACEmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGlF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACA,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACI,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACE,oBAAQxD,UAAU,uBAAuBgB,QAzJhC,kBAAM2G,GAAQ,IAyJvB,WACE,cAAG3H,UAAU,qBADf,oBAQN,+BACA,UAAC8H,GAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,EAA3B,WACE,SAACE,GAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,GAAA,QAAD,0CAEF,SAACA,GAAA,OAAD,WAEA,UAAC3D,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACI,SAACmE,EAAA,QAAD,iCACA,SAACA,EAAA,UAAD,CAAchB,KAAK,OAAOI,YAAY,4BAI1C,UAACuE,GAAA,SAAD,YACE,SAACG,GAAA,EAAD,CAAQrH,QAAQ,YAAYI,QAAS4G,EAArC,oBAGA,UAACK,GAAA,EAAD,CAAQrH,QAAQ,UAAUI,QAAS4G,EAAnC,WACA,cAAG5H,UAAU,4BADb,qBAQJ,gBAAKA,UAAU,kCAAf,UACA,SAAC,KAAD,CACMZ,QAASA,EACT+C,KAAMK,EACNiB,YAAU,SCnMtB,IACayE,GAAqB,UADlB3J,mCACkB,6BAE3B,SAAS4J,KACd,OAAwBxJ,EAAAA,EAAAA,WAAS,GAAjC,eAAO+I,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,KAGlCzI,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,GAEA,CACEL,KAAM,oBACNC,SAAU,SAACC,GAAD,OAAcA,EAAI6I,mBAC5B3I,UAAU,EACVC,UAAW,qBAEb,GAEA,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WAEE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAOE,SAACC,EAAA,OAAD,WACE,SAAC,KAAD,CAAM0C,GAAG,2CAAT,uBAIF,SAAC1C,EAAA,OAAD,CAAeC,KAAK,IAApB,mBACA,SAACD,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAXKP,eAuBvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAUsG,GAAwB,SAFrC,cAEXpF,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAoBR,GALf,SAQMZ,IAAAA,IAAA,2CAA8Cc,EAA9C,qBAA+DH,EAA/D,aARN,cAQXI,EARW,OASjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAbT,kBAcV,CAACA,EAAMC,IAdG,4CAAH,sDA4ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACI,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,gCAGA,kBACEmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGlF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACA,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACI,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,KAAT,UACE,oBAAQxD,UAAU,uBAAuBgB,QAtJhC,kBAAM2G,GAAQ,IAsJvB,WACE,cAAG3H,UAAU,qBADf,oBAON,+BACA,UAAC8H,GAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,EAA3B,WACE,SAACE,GAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,GAAA,QAAD,0CAEF,SAACA,GAAA,OAAD,WAEA,UAAC3D,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACI,SAACmE,EAAA,QAAD,iCACA,SAACA,EAAA,UAAD,CAAchB,KAAK,OAAOI,YAAY,4BAI1C,UAACuE,GAAA,SAAD,YACE,SAACG,GAAA,EAAD,CAAQrH,QAAQ,YAAYI,QAAS4G,EAArC,oBAGA,UAACK,GAAA,EAAD,CAAQrH,QAAQ,UAAUI,QAAS4G,EAAnC,WACA,cAAG5H,UAAU,4BADb,qBAOJ,gBAAKA,UAAU,kCAAf,UACA,SAAC,KAAD,CACMZ,QAASA,EACT+C,KAAMK,EACNiB,YAAU,SC/LtB,IACa4E,GAAuB,UADpB9J,mCACoB,+BAE7B,SAAS+J,KACd,OAAwB3J,EAAAA,EAAAA,WAAS,GAAjC,eAAO+I,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,KAGlCzI,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,GAEA,CACEL,KAAM,QACNC,SAAU,SAACC,GAAD,OAAcA,EAAIgJ,OAC5B9I,UAAU,EACVC,UAAW,SAEb,CACEL,KAAM,YACNC,SAAU,SAACC,GAAD,OAAcA,EAAIiJ,WAC5B/I,UAAU,EACVC,UAAW,aAEb,GAEA,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WAEE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAOE,SAACC,EAAA,OAAD,WACE,SAAC,KAAD,CAAM0C,GAAG,2CAAT,uBAIF,SAAC1C,EAAA,OAAD,CAAeC,KAAK,IAApB,mBACA,SAACD,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAXKP,eAuBvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAUyG,GAA0B,SAFvC,cAEXvF,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAoBR,GALf,SAQMZ,IAAAA,IAAA,2CAA8Cc,EAA9C,qBAA+DH,EAA/D,aARN,cAQXI,EARW,OASjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAbT,kBAcV,CAACA,EAAMC,IAdG,4CAAH,sDA4ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACI,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,oCAGA,kBACEmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGlF,gBAAKW,UAAU,yBAAf,UACI,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,wBAGA,kBACEmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGlF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACA,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACI,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,KAAT,UACE,oBAAQxD,UAAU,uBAAuBgB,QArKhC,kBAAM2G,GAAQ,IAqKvB,WACE,cAAG3H,UAAU,qBADf,oBAON,+BACA,UAAC8H,GAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,EAA3B,WACE,SAACE,GAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,GAAA,QAAD,8CAEF,SAACA,GAAA,OAAD,WAEA,UAAC3D,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACI,SAACmE,EAAA,QAAD,+BACA,SAACA,EAAA,UAAD,CAAchB,KAAK,OAAOI,YAAY,0BAI1C,UAACuE,GAAA,SAAD,YACE,SAACG,GAAA,EAAD,CAAQrH,QAAQ,YAAYI,QAAS4G,EAArC,oBAGA,UAACK,GAAA,EAAD,CAAQrH,QAAQ,UAAUI,QAAS4G,EAAnC,WACA,cAAG5H,UAAU,4BADb,qBAOJ,gBAAKA,UAAU,kCAAf,UACA,SAAC,KAAD,CACMZ,QAASA,EACT+C,KAAMK,EACNiB,YAAU,SC9MtB,IACagF,GAAoB,UADjBlK,mCACiB,4BAE1B,SAASmK,KACd,OAAwB/J,EAAAA,EAAAA,WAAS,GAAjC,eAAO+I,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,KAGlCzI,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,GAGA,CACEL,KAAM,mBACNC,SAAU,SAACC,GAAD,OAAcA,EAAIoJ,kBAC5BlJ,UAAU,EACVC,UAAW,oBAEb,GAEA,GAEA,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WAEE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAOE,SAACC,EAAA,OAAD,WACE,SAAC,KAAD,CAAM0C,GAAG,2CAAT,uBAIF,SAAC1C,EAAA,OAAD,CAAeC,KAAK,IAApB,mBACA,SAACD,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAXKP,eAuBvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAU6G,GAAuB,SAFpC,cAEX3F,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAoBR,GALf,SAQMZ,IAAAA,IAAA,2CAA8Cc,EAA9C,qBAA+DH,EAA/D,aARN,cAQXI,EARW,OASjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAbT,kBAcV,CAACA,EAAMC,IAdG,4CAAH,sDA4ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACI,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,6BAGA,kBACEmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGlF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACA,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACI,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACE,oBAAQxD,UAAU,uBAAuBgB,QAzJhC,kBAAM2G,GAAQ,IAyJvB,WACE,cAAG3H,UAAU,qBADf,oBAQN,+BACA,UAAC8H,GAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,EAA3B,WACE,SAACE,GAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,GAAA,QAAD,yCAEF,SAACA,GAAA,OAAD,WAEA,UAAC3D,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACI,SAACmE,EAAA,QAAD,gCACA,SAACA,EAAA,UAAD,CAAchB,KAAK,OAAOI,YAAY,2BAI1C,UAACuE,GAAA,SAAD,YACE,SAACG,GAAA,EAAD,CAAQrH,QAAQ,YAAYI,QAAS4G,EAArC,oBAGA,UAACK,GAAA,EAAD,CAAQrH,QAAQ,UAAUI,QAAS4G,EAAnC,WACA,cAAG5H,UAAU,4BADb,qBAQJ,gBAAKA,UAAU,kCAAf,UACA,SAAC,KAAD,CACMZ,QAASA,EACT+C,KAAMK,EACNiB,YAAU,SCpMtB,IACamF,GAAqB,UADlBrK,mCACkB,6BAE3B,SAASsK,KACd,IAAMpK,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,WAAS,GAAjC,0BAIAO,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,GACA,CACEL,KAAM,oBACNC,SAAU,SAACC,GAAD,OAAcA,EAAIuJ,mBAC5BrJ,UAAU,EACVC,UAAW,qBAEb,GACA,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WACE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAQE,SAACC,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,sCAAwC0B,EAAOX,GAAI,CAACyB,SAAS,KAH1E,qBAQA,SAACH,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,uCAAyC0B,EAAOX,GAAI,CAC3DyB,SAAS,KAJf,mBAUA,SAACH,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAxBKP,eAmCvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAUgH,GAAwB,SAFrC,cAEX9F,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAqBR,GALhB,SAOMZ,IAAAA,IAAA,2CACec,EADf,qBACgCH,EADhC,aAPN,cAOXI,EAPW,OAUjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAdT,kBAeV,CAACA,EAAMC,IAfG,4CAAH,sDA8ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACE,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,0BAGA,kBAAOmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGrF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACE,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,sCAAT,UACE,oBAAQxD,UAAU,uBAAlB,WACE,cAAGA,UAAU,qBADf,oBAON,gBAAKA,UAAU,kCAAf,UACE,SAAC,KAAD,CAAWZ,QAASA,EAAS+C,KAAMK,EAAMiB,YAAU,SCpK3D,IACamF,GAAqB,UADlBrK,mCACkB,6BAE3B,SAASwK,KACd,IAAOvJ,GAAMmE,EAAAA,EAAAA,MAANnE,GACP,EAAkD0C,EAAAA,SAA0B,IAA5E,eAAO0B,EAAP,KAA0BC,EAA1B,KAeA,OAbA3E,EAAAA,EAAAA,YAAU,WACR,IAAM4E,EAAS,mCAAG,wGACOlC,IAAAA,IAAA,UAAagH,GAAb,oBAA8CpJ,IADrD,OACVmD,EADU,OAEVoB,EAA0BpB,EAASR,KAAKA,KACxC6B,EAAwB,CAC5B8E,kBAAmB/E,EAAM+E,kBACzB7E,WAAY,IAEdJ,GAAqB,SAACK,GAAD,eAAC,UAAwBA,GAAcF,MAP5C,2CAAH,qDASfF,MACC,CAACF,EAAmBpE,KAGrB,gBAAKQ,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,6BACE,gBAAKA,UAAU,WAAf,UACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,2BACA,SAACA,EAAA,UAAD,CACE9E,KAAK,cACLW,UAAU,kCACV8C,MACmB,OAAjBc,QAAiB,IAAjBA,GAAAA,EAAmBkF,kBAAnB,OACIlF,QADJ,IACIA,OADJ,EACIA,EAAmBkF,kBACnB,GAEN1E,UAAQ,YAKhB,gBAAKpE,UAAU,mDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,qBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gCCpDtB,IACa4I,GAAqB,UADlBrK,mCACkB,6BAE3B,SAASyK,KACd,IAAMvK,GAAWC,EAAAA,EAAAA,MACVc,GAAMmE,EAAAA,EAAAA,MAANnE,GACP,GAAwCb,EAAAA,EAAAA,UAAS,MAAjD,eAAO2F,EAAP,KACA,GADA,KACwCpC,EAAAA,SAA0B,KAAlE,eAAOqC,EAAP,KAAqBC,EAArB,KACA,EAAkDtC,EAAAA,SAA0B,IAA5E,eAAO0B,EAAP,KAA0BC,EAA1B,MAEA3E,EAAAA,EAAAA,YAAU,WACR,IAAM4E,EAAS,mCAAG,wGACOlC,IAAAA,IAAA,UAAagH,GAAb,oBAA8CpJ,IADrD,OACVmD,EADU,OAEVoB,EAA0BpB,EAASR,KAAKA,KACxC6B,EAAwB,CAC5B8E,kBAAmB/E,EAAM+E,kBACzB7E,WAAY,GAEdJ,GAAqB,SAACK,GAAD,eAAC,UAAmBA,GAAcF,MAPvC,2CAAH,qDASfF,MACC,CAACS,EAAc/E,IAElB,IAiBMiF,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbmE,kBAAmB,IAErBlE,SAAS,WAAD,wBAAE,WAAOC,GAAP,gFACJC,EAAW,IAAIC,SACbC,EAAuB,CAC3B8D,kBAA+B,OAAZvE,QAAY,IAAZA,GAAAA,EAAcuE,kBAC7BvE,EAAauE,kBACI,OAAjBlF,QAAiB,IAAjBA,GAAAA,EAAmBkF,kBACnBlF,EAAkBkF,kBAClB,GACJ7E,WAAY,GARN,kBAWiBrC,IAAAA,IAAA,UAAagH,GAAb,mBAA6CpJ,GAAMwF,GAXpE,uCAaAV,EAbA,wBAcFQ,EAASG,OAAO,mBAAoBX,GAdlC,UAeyB1C,IAAAA,KAAA,UAAcgH,GAAd,mBAA8CpJ,GAAMsF,GAf7E,wBAiBA/B,QAAQC,IAAI,0BACZ9B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,qBAAsB,CAACwC,SAAS,KAxBzC,2BA4BJC,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,qBAAsB,CAACwC,SAAS,IAlCrC,0DAqCNC,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,0CACPgB,mBAAmB,EACnBC,MAAO,OAETiB,QAAQmC,MAAR,MA3CM,0DAAF,mDAAC,KAgDX,OACE,gBAAKlF,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,kBAAM4E,SAAUH,EAAOU,aAAvB,WACE,gBAAKnF,UAAU,WAAf,UACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,iCACA,SAACA,EAAA,UAAD,CACE9E,KAAK,oBACLW,UAAU,kCACVoD,SA7EG,SAACC,GAI1BmB,GAAgB,SAACY,GAAD,eAAC,UACZA,GADW,cAEb/B,EAAMC,OAAOjE,KAAOgE,EAAMC,OAAOR,YAwEdA,MACc,OAAZyB,QAAY,IAAZA,GAAAA,EAAcuE,mBACsB,MAAxB,OAAZvE,QAAY,IAAZA,OAAA,EAAAA,EAAcuE,mBADd,OAEIvE,QAFJ,IAEIA,OAFJ,EAEIA,EAAcuE,kBACG,OAAjBlF,QAAiB,IAAjBA,GAAAA,EAAmBkF,kBAAnB,OACAlF,QADA,IACAA,OADA,EACAA,EAAmBkF,kBACnB,aAMd,iBAAK9I,UAAU,mDAAf,WACE,SAAC,KAAD,CAAMwD,GAAG,qBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gBAKF,oBAAQA,UAAU,kBAAkBmD,KAAK,SAAzC,WACE,cAAGnD,UAAU,4BADf,8BCpIpB,IACa4I,GAAqB,UADlBrK,mCACkB,6BAE3B,SAAS0K,KACd,IAAMxK,GAAWC,EAAAA,EAAAA,MAEjB,EAAwCwD,EAAAA,SAA0B,IAAlE,eAAOqC,EAAP,KAAqBC,EAArB,KAmBMC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbmE,kBAAmB,IAErBlE,SAAS,WAAD,wBAAE,WAAOC,GAAP,kFACR9B,QAAQC,IAAIsB,GACRQ,EAAW,IAAIC,SACbC,EAAuB,CAC3B8D,kBAA+B,OAAZvE,QAAY,IAAZA,GAAAA,EAAcuE,kBAAoBvE,EAAauE,kBAAoB,GACtFxD,WAAY,GALN,kBAQiB1D,IAAAA,KAAA,UAAcgH,GAAd,WAA8C5D,GAR/D,YAQArC,EARA,6BAUA2B,EAVA,wBAWFQ,EAASG,OAAO,mBAAoBX,GAXlC,UAYyB1C,IAAAA,KAAA,UACtBgH,GADsB,wBACejG,EAASR,KAAKA,KAAKoD,WAC3DT,GAdA,wBAiBA/B,QAAQC,IAAI,0BACZ9B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,qBAAsB,CAACwC,SAAS,KAxBzC,2BA4BJC,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,qBAAsB,CAACwC,SAAS,IAlCrC,0DAqCNC,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,0CACPgB,mBAAmB,EACnBC,MAAO,OAETiB,QAAQmC,MAAR,MA3CM,0DAAF,mDAAC,KAgDX,GAAwCvG,EAAAA,EAAAA,UAAS,MAAjD,eAAO2F,EAAP,UAEA,OACE,gBAAKtE,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,kBAAM4E,SAAUH,EAAOU,aAAvB,WACE,gBAAKnF,UAAU,WAAf,UACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,iCACA,SAACA,EAAA,UAAD,CACE9E,KAAK,oBACLW,UAAU,kCACVoD,SA/EG,SAACC,GAI1BmB,GAAgB,SAACY,GAAD,eAAC,UACZA,GADW,cAEb/B,EAAMC,OAAOjE,KAAOgE,EAAMC,OAAOR,YA0EdA,MAAK,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAAcuE,4BAK7B,iBAAK9I,UAAU,mDAAf,WACE,SAAC,KAAD,CAAMwD,GAAG,qBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gBAKF,oBAAQA,UAAU,kBAAkBmD,KAAK,SAAzC,WACE,cAAGnD,UAAU,4BADf,8BC7GpB,IACakJ,GAAyB,UADtB3K,mCACsB,iCAE/B,SAAS4K,KACd,OAAwBxK,EAAAA,EAAAA,WAAS,GAAjC,eAAO+I,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,KAGlCzI,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,GAEA,GAEA,CACEL,KAAM,wBACNC,SAAU,SAACC,GAAD,OAAcA,EAAI6J,uBAC5B3J,UAAU,EACVC,UAAW,yBAEb,GAEA,GAEA,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WAEE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAOE,SAACC,EAAA,OAAD,WACE,SAAC,KAAD,CAAM0C,GAAG,2CAAT,uBAIF,SAAC1C,EAAA,OAAD,CAAeC,KAAK,IAApB,mBACA,SAACD,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAXKP,eAuBvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAUsH,GAA4B,SAFzC,cAEXpG,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAoBR,GALf,SAQMZ,IAAAA,IAAA,2CAA8Cc,EAA9C,qBAA+DH,EAA/D,aARN,cAQXI,EARW,OASjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAbT,kBAcV,CAACA,EAAMC,IAdG,4CAAH,sDA4ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACI,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,8BAGA,kBACEmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGlF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACA,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACI,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,KAAT,UACE,oBAAQxD,UAAU,uBAAuBgB,QA1JhC,kBAAM2G,GAAQ,IA0JvB,WACE,cAAG3H,UAAU,qBADf,oBAON,+BACA,UAAC8H,GAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,EAA3B,WACE,SAACE,GAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,GAAA,QAAD,wCAEF,SAACA,GAAA,OAAD,WAEA,UAAC3D,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACI,SAACmE,EAAA,QAAD,+BACA,SAACA,EAAA,UAAD,CAAchB,KAAK,OAAOI,YAAY,0BAI1C,UAACuE,GAAA,SAAD,YACE,SAACG,GAAA,EAAD,CAAQrH,QAAQ,YAAYI,QAAS4G,EAArC,oBAGA,UAACK,GAAA,EAAD,CAAQrH,QAAQ,UAAUI,QAAS4G,EAAnC,WACA,cAAG5H,UAAU,4BADb,qBAOJ,gBAAKA,UAAU,kCAAf,UACA,SAAC,KAAD,CACMZ,QAASA,EACT+C,KAAMK,EACNiB,YAAU,SCnMtB,IACa4F,GAAiB,UADd9K,mCACc,yBAEvB,SAAS+K,KACd,OAAwB3K,EAAAA,EAAAA,WAAS,GAAjC,eAAO+I,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,KAGlCzI,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,GAGA,CACEL,KAAM,gBACNC,SAAU,SAACC,GAAD,OAAcA,EAAIgK,eAC5B9J,UAAU,EACVC,UAAW,iBAEb,GAEA,GAEA,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WAEE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAOE,SAACC,EAAA,OAAD,WACE,SAAC,KAAD,CAAM0C,GAAG,2CAAT,uBAIF,SAAC1C,EAAA,OAAD,CAAeC,KAAK,IAApB,mBACA,SAACD,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAXKP,eAuBvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAUyH,GAAoB,SAFjC,cAEXvG,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAoBR,GALf,SAQMZ,IAAAA,IAAA,2CAA8Cc,EAA9C,qBAA+DH,EAA/D,aARN,cAQXI,EARW,OASjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAbT,kBAcV,CAACA,EAAMC,IAdG,4CAAH,sDA4ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACI,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,4BAGA,kBACEmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGlF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACA,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACI,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACE,oBAAQxD,UAAU,uBAAuBgB,QAzJhC,kBAAM2G,GAAQ,IAyJvB,WACE,cAAG3H,UAAU,qBADf,oBAQN,+BACA,UAAC8H,GAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,EAA3B,WACE,SAACE,GAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,GAAA,QAAD,sCAEF,SAACA,GAAA,OAAD,WAEA,UAAC3D,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACI,SAACmE,EAAA,QAAD,6BACA,SAACA,EAAA,UAAD,CAAchB,KAAK,OAAOI,YAAY,wBAI1C,UAACuE,GAAA,SAAD,YACE,SAACG,GAAA,EAAD,CAAQrH,QAAQ,YAAYI,QAAS4G,EAArC,oBAGA,UAACK,GAAA,EAAD,CAAQrH,QAAQ,UAAUI,QAAS4G,EAAnC,WACA,cAAG5H,UAAU,4BADb,qBAQJ,gBAAKA,UAAU,kCAAf,UACA,SAAC,KAAD,CACMZ,QAASA,EACT+C,KAAMK,EACNiB,YAAU,SCpMtB,IACa+F,GAAoB,UADjBjL,mCACiB,qBAE1B,SAASkL,KACd,OAAwB9K,EAAAA,EAAAA,WAAS,GAAjC,eAAO+I,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,KAIlCzI,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,2BACNC,SAAU,SAACC,GAAD,OAAcA,EAAImK,wBAC5BjK,UAAU,EACVC,UAAW,0BAEb,CACEL,KAAM,4BACNC,SAAU,SAACC,GAAD,OAAcA,EAAIoK,yBAC5BlK,UAAU,EACVC,UAAW,2BAEb,CACEL,KAAM,SACNC,SAAU,SAACC,GAAD,OAAcA,EAAIqK,QAC5BnK,UAAU,EACVC,UAAW,UAEb,CACEL,KAAM,UACNC,SAAU,SAACC,GAAD,OAAcA,EAAIsK,SAC5BpK,UAAU,EACVC,UAAW,WAEb,CACEL,KAAM,aACNC,SAAU,SAACC,GAAD,OAAcA,EAAIuK,YAC5BrK,UAAU,EACVC,UAAW,cAEb,CACEL,KAAM,cACNC,SAAU,SAACC,GAAD,OAAcA,EAAIwK,aAC5BtK,UAAU,EACVC,UAAW,eAEb,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WAEE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAOE,SAACC,EAAA,OAAD,WACE,SAAC,KAAD,CAAM0C,GAAG,2CAAT,uBAIF,SAAC1C,EAAA,OAAD,CAAeC,KAAK,IAApB,mBACA,SAACD,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAXKP,eAuBvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAU4H,GAAuB,SAFpC,cAEX1G,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAoBR,GALf,SAQMZ,IAAAA,IAAA,2CAA8Cc,EAA9C,qBAA+DH,EAA/D,aARN,cAQXI,EARW,OASjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAbT,kBAcV,CAACA,EAAMC,IAdG,4CAAH,sDA4ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACI,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,+BAGA,kBACEmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGlF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACA,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACI,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,KAAT,UACE,oBAAQxD,UAAU,uBAAuBgB,QA3KhC,kBAAM2G,GAAQ,IA2KvB,WACE,cAAG3H,UAAU,qBADf,oBAQN,+BACA,UAAC8H,GAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,EAA3B,WACE,SAACE,GAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,GAAA,QAAD,yCAEF,SAACA,GAAA,OAAD,WAEA,UAAC3D,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACI,SAACmE,EAAA,QAAD,iCACA,SAACA,EAAA,UAAD,CAAchB,KAAK,OAAOI,YAAY,2BAI1C,UAACuE,GAAA,SAAD,YACE,SAACG,GAAA,EAAD,CAAQrH,QAAQ,YAAYI,QAAS4G,EAArC,oBAGA,UAACK,GAAA,EAAD,CAAQrH,QAAQ,UAAUI,QAAS4G,EAAnC,WACA,cAAG5H,UAAU,4BADb,qBAQJ,gBAAKA,UAAU,kCAAf,UACA,SAAC,KAAD,CACMZ,QAASA,EACT+C,KAAMK,EACNiB,YAAU,SCtNtB,IACauG,GAAS,UADNzL,mCACM,iBAEf,SAAS0L,KACd,IAAMxL,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,WAAS,GAAjC,0BAIAO,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,GACA,CACEL,KAAM,QACNC,SAAU,SAACC,GAAD,OAAcA,EAAI2K,OAC5BzK,UAAU,EACVC,UAAW,SAEb,GACA,GACA,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WACE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAQE,SAACC,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,4BAA8B0B,EAAOX,GAAI,CAACyB,SAAS,KAHhE,qBAQA,SAACH,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,6BAA+B0B,EAAOX,GAAI,CAACyB,SAAS,KAHjE,mBAQA,SAACH,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAtBKP,eAiCvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAUoI,GAAY,SAFzB,cAEXlH,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAqBR,GALhB,SAOMZ,IAAAA,IAAA,2CACec,EADf,qBACgCH,EADhC,aAPN,cAOXI,EAPW,OAUjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAdT,kBAeV,CAACA,EAAMC,IAfG,4CAAH,sDA8ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACE,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,oBAGA,kBAAOmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGrF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACE,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,4BAAT,UACE,oBAAQxD,UAAU,uBAAlB,WACE,cAAGA,UAAU,qBADf,oBAQN,gBAAKA,UAAU,kCAAf,UACE,SAAC,KAAD,CAAWZ,QAASA,EAAS+C,KAAMK,EAAMiB,YAAU,SCpK3D,IACauG,GAAS,UADNzL,mCACM,iBAEf,SAAS4L,KACd,IAAO3K,GAAMmE,EAAAA,EAAAA,MAANnE,GACP,EAAkD0C,EAAAA,SAA0B,IAA5E,eAAO0B,EAAP,KAA0BC,EAA1B,KAeA,OAbA3E,EAAAA,EAAAA,YAAU,WACR,IAAM4E,EAAS,mCAAG,wGACOlC,IAAAA,IAAA,UAAaoI,GAAb,oBAAkCxK,IADzC,OACVmD,EADU,OAEVoB,EAA0BpB,EAASR,KAAKA,KACxC6B,EAAwB,CAC5BkG,MAAOnG,EAAMmG,MACbjG,WAAY,IAEdJ,GAAqB,SAACK,GAAD,eAAC,UAAwBA,GAAcF,MAP5C,2CAAH,qDASfF,MACC,CAACF,EAAmBpE,KAGrB,gBAAKQ,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,6BACE,gBAAKA,UAAU,WAAf,UACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,qBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,QACLW,UAAU,kCACV8C,MAAwB,OAAjBc,QAAiB,IAAjBA,GAAAA,EAAmBsG,MAAnB,OAA2BtG,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAmBsG,MAAQ,GAC7D9F,UAAQ,YAKhB,gBAAKpE,UAAU,mDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,gBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gCChDtB,IACagK,GAAS,UADNzL,mCACM,iBAEf,SAAS6L,KACd,IAAM3L,GAAWC,EAAAA,EAAAA,MACVc,GAAMmE,EAAAA,EAAAA,MAANnE,GACP,GAAwCb,EAAAA,EAAAA,UAAS,MAAjD,eAAO2F,EAAP,KACA,GADA,KACwCpC,EAAAA,SAA0B,KAAlE,eAAOqC,EAAP,KAAqBC,EAArB,KACA,EAAkDtC,EAAAA,SAA0B,IAA5E,eAAO0B,EAAP,KAA0BC,EAA1B,MAEA3E,EAAAA,EAAAA,YAAU,WACR,IAAM4E,EAAS,mCAAG,wGACOlC,IAAAA,IAAA,UAAaoI,GAAb,oBAAkCxK,IADzC,OACVmD,EADU,OAEVoB,EAA0BpB,EAASR,KAAKA,KACxC6B,EAAwB,CAC5BkG,MAAOnG,EAAMmG,MACbjG,WAAY,GAEdJ,GAAqB,SAACK,GAAD,eAAC,UAAmBA,GAAcF,MAPvC,2CAAH,qDASfF,MACC,CAACS,EAAc/E,IAElB,IAiBMiF,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbuF,MAAO,IAETtF,SAAS,WAAD,wBAAE,WAAOC,GAAP,gFACJC,EAAW,IAAIC,SACbC,EAAuB,CAC3BkF,MAAmB,OAAZ3F,QAAY,IAAZA,GAAAA,EAAc2F,MACjB3F,EAAa2F,MACI,OAAjBtG,QAAiB,IAAjBA,GAAAA,EAAmBsG,MACnBtG,EAAkBsG,MAClB,GACJjG,WAAY,GARN,kBAWiBrC,IAAAA,IAAA,UAAaoI,GAAb,mBAAiCxK,GAAMwF,GAXxD,uCAaAV,EAbA,wBAcFQ,EAASG,OAAO,mBAAoBX,GAdlC,UAeyB1C,IAAAA,KAAA,UAAcoI,GAAd,mBAAkCxK,GAAMsF,GAfjE,wBAiBA/B,QAAQC,IAAI,0BACZ9B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,gBAAiB,CAACwC,SAAS,KAxBpC,2BA4BJC,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,gBAAiB,CAACwC,SAAS,IAlChC,0DAqCNC,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,0CACPgB,mBAAmB,EACnBC,MAAO,OAETiB,QAAQmC,MAAR,MA3CM,0DAAF,mDAAC,KAgDX,OACE,gBAAKlF,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,kBAAM4E,SAAUH,EAAOU,aAAvB,WACE,gBAAKnF,UAAU,WAAf,UACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,qBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,QACLW,UAAU,kCACVoD,SA7EG,SAACC,GAI1BmB,GAAgB,SAACY,GAAD,eAAC,UACZA,GADW,cAEb/B,EAAMC,OAAOjE,KAAOgE,EAAMC,OAAOR,YAwEdA,MACc,OAAZyB,QAAY,IAAZA,GAAAA,EAAc2F,OAAiC,MAAZ,OAAZ3F,QAAY,IAAZA,OAAA,EAAAA,EAAc2F,OAArC,OACI3F,QADJ,IACIA,OADJ,EACIA,EAAc2F,MACG,OAAjBtG,QAAiB,IAAjBA,GAAAA,EAAmBsG,MAAnB,OACAtG,QADA,IACAA,OADA,EACAA,EAAmBsG,MACnB,aAMd,iBAAKlK,UAAU,mDAAf,WACE,SAAC,KAAD,CAAMwD,GAAG,gBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gBAKF,oBAAQA,UAAU,kBAAkBmD,KAAK,SAAzC,WACE,cAAGnD,UAAU,4BADf,8BCnIpB,IACagK,GAAS,UADNzL,mCACM,iBAEf,SAAS8L,KACd,IAAM5L,GAAWC,EAAAA,EAAAA,MAEjB,EAAwCwD,EAAAA,SAA0B,IAAlE,eAAOqC,EAAP,KAAqBC,EAArB,KAmBMC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbuF,MAAO,IAETtF,SAAS,WAAD,wBAAE,WAAOC,GAAP,kFACR9B,QAAQC,IAAIsB,GACRQ,EAAW,IAAIC,SACbC,EAAuB,CAC3BkF,MAAmB,OAAZ3F,QAAY,IAAZA,GAAAA,EAAc2F,MAAQ3F,EAAa2F,MAAQ,GAClD5E,WAAY,GALN,kBAQiB1D,IAAAA,KAAA,UAAcoI,GAAd,WAAkChF,GARnD,YAQArC,EARA,6BAUA2B,EAVA,wBAWFQ,EAASG,OAAO,mBAAoBX,GAXlC,UAYyB1C,IAAAA,KAAA,UACtBoI,GADsB,wBACGrH,EAASR,KAAKA,KAAKoD,WAC/CT,GAdA,wBAiBA/B,QAAQC,IAAI,0BACZ9B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,gBAAiB,CAACwC,SAAS,KAxBpC,2BA4BJC,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,gBAAiB,CAACwC,SAAS,IAlChC,0DAqCNC,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,0CACPgB,mBAAmB,EACnBC,MAAO,OAETiB,QAAQmC,MAAR,MA3CM,0DAAF,mDAAC,KAgDX,GAAwCvG,EAAAA,EAAAA,UAAS,MAAjD,eAAO2F,EAAP,UAEA,OACE,gBAAKtE,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,kBAAM4E,SAAUH,EAAOU,aAAvB,WACE,gBAAKnF,UAAU,WAAf,UACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,qBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,QACLW,UAAU,kCACVoD,SA/EG,SAACC,GAI1BmB,GAAgB,SAACY,GAAD,eAAC,UACZA,GADW,cAEb/B,EAAMC,OAAOjE,KAAOgE,EAAMC,OAAOR,YA0EdA,MAAK,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAAc2F,gBAK7B,iBAAKlK,UAAU,mDAAf,WACE,SAAC,KAAD,CAAMwD,GAAG,gBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gBAKF,oBAAQA,UAAU,kBAAkBmD,KAAK,SAAzC,WACE,cAAGnD,UAAU,4BADf,8BC5GpB,IACasK,GAAW,UADR/L,mCACQ,mBAEjB,SAASgM,KACd,IAAM9L,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,WAAS,GAAjC,0BAIAO,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAgDMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,GACA,CACEL,KAAM,UACNC,SAAU,SAACC,GAAD,OAAcA,EAAIiL,SAC5B/K,UAAU,EACVC,UAAW,WAEb,GACA,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WACE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAQE,SAACC,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,gCAAkC0B,EAAOX,GAAI,CAACyB,SAAS,KAHpE,qBAQA,SAACH,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,iCAAmC0B,EAAOX,GAAI,CAACyB,SAAS,KAHrE,mBAQA,SAACH,EAAA,OAAD,CAAeE,QAAS,kBAnGvBxB,EAmGuCW,EAAOX,QAlG/D0B,IAAAA,KAAU,CACRL,MAAO,cACPd,KAAM,2BACNoB,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,MACnBC,iBAAkB,WACjBC,KATH,mCASQ,WAAOC,GAAP,2EACFA,EAAOC,YADL,gCAEmBC,IAAAA,OAAA,UAAgB0I,GAAhB,mBAAsC9K,EAAtC,iBAFnB,OAEEmD,EAFF,OAGJI,QAAQC,IAAIL,GACRA,GACFxD,EAAW,GACX+B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,wBACPgB,mBAAmB,EACnBC,MAAO,QAGTZ,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,yCACPgB,mBAAmB,EACnBC,MAAO,OAjBP,2CATR,uDADgB,IAACtC,GAmGD,qBAtBKgB,eAiCvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAU0I,GAAc,SAF3B,cAEXxH,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAqBR,GALhB,SAOMZ,IAAAA,IAAA,2CACec,EADf,qBACgCH,EADhC,aAPN,cAOXI,EAPW,OAUjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAdT,kBAeV,CAACA,EAAMC,IAfG,4CAAH,sDA8ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACE,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,sBAGA,kBAAOmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGrF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACE,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,gCAAT,UACE,oBAAQxD,UAAU,uBAAlB,WACE,cAAGA,UAAU,qBADf,oBAON,gBAAKA,UAAU,kCAAf,UACE,SAAC,KAAD,CAAWZ,QAASA,EAAS+C,KAAMK,EAAMiB,YAAU,SC1M3D,IACa6G,GAAW,UADR/L,mCACQ,mBAEjB,SAASkM,KACd,IAAMhM,GAAWC,EAAAA,EAAAA,MACVc,GAAMmE,EAAAA,EAAAA,MAANnE,GACP,GAAwCb,EAAAA,EAAAA,UAAS,MAAjD,eAAO2F,EAAP,KACA,GADA,KACwCpC,EAAAA,SAA0B,KAAlE,eAAOqC,EAAP,KAAqBC,EAArB,KACA,EAAkDtC,EAAAA,SAA0B,IAA5E,eAAO0B,EAAP,KAA0BC,EAA1B,MAEA3E,EAAAA,EAAAA,YAAU,WACR,IAAM4E,EAAS,mCAAG,wGACOlC,IAAAA,IAAA,UAAa0I,GAAb,oBAAoC9K,IAD3C,OACVmD,EADU,OAEVoB,EAA0BpB,EAASR,KAAKA,KACxC6B,EAAwB,CAC5BwG,QAASzG,EAAMyG,QACfvG,WAAY,GAEdJ,GAAqB,SAACK,GAAD,eAAC,UAAmBA,GAAcF,MAPvC,2CAAH,qDASfF,MACC,CAACS,EAAc/E,IAElB,IAiBMiF,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACb6F,QAAS,IAEX5F,SAAS,WAAD,wBAAE,WAAOC,GAAP,gFACJC,EAAW,IAAIC,SACbC,EAAuB,CAC3BwF,QAAqB,OAAZjG,QAAY,IAAZA,GAAAA,EAAciG,QACnBjG,EAAaiG,QACI,OAAjB5G,QAAiB,IAAjBA,GAAAA,EAAmB4G,QACnB5G,EAAkB4G,QAClB,GACJvG,WAAY,GARN,kBAWiBrC,IAAAA,IAAA,UAAa0I,GAAb,mBAAmC9K,GAAMwF,GAX1D,uCAaAV,EAbA,wBAcFQ,EAASG,OAAO,mBAAoBX,GAdlC,UAeyB1C,IAAAA,KAAA,UAAc0I,GAAd,mBAAoC9K,GAAMsF,GAfnE,wBAiBA/B,QAAQC,IAAI,0BACZ9B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,kBAAmB,CAACwC,SAAS,KAxBtC,2BA4BJC,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,kBAAmB,CAACwC,SAAS,IAlClC,0DAqCNC,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,0CACPgB,mBAAmB,EACnBC,MAAO,OAETiB,QAAQmC,MAAR,MA3CM,0DAAF,mDAAC,KAgDX,OACE,gBAAKlF,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,kBAAM4E,SAAUH,EAAOU,aAAvB,WACE,gBAAKnF,UAAU,WAAf,UACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,uBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,UACLW,UAAU,kCACVoD,SA7EG,SAACC,GAI1BmB,GAAgB,SAACY,GAAD,eAAC,UACZA,GADW,cAEb/B,EAAMC,OAAOjE,KAAOgE,EAAMC,OAAOR,YAwEdA,MACc,OAAZyB,QAAY,IAAZA,GAAAA,EAAciG,SAAqC,MAAd,OAAZjG,QAAY,IAAZA,OAAA,EAAAA,EAAciG,SAAvC,OACIjG,QADJ,IACIA,OADJ,EACIA,EAAciG,QACG,OAAjB5G,QAAiB,IAAjBA,GAAAA,EAAmB4G,QAAnB,OACA5G,QADA,IACAA,OADA,EACAA,EAAmB4G,QACnB,aAMd,iBAAKxK,UAAU,mDAAf,WACE,SAAC,KAAD,CAAMwD,GAAG,kBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gBAKF,oBAAQA,UAAU,kBAAkBmD,KAAK,SAAzC,WACE,cAAGnD,UAAU,4BADf,8BCzHpB,IACasK,GAAW,UADR/L,mCACQ,mBAEjB,SAASmM,KACd,IAAOlL,GAAMmE,EAAAA,EAAAA,MAANnE,GACP,EAAkD0C,EAAAA,SAA0B,IAA5E,eAAO0B,EAAP,KAA0BC,EAA1B,KAeA,OAbA3E,EAAAA,EAAAA,YAAU,WACR,IAAM4E,EAAS,mCAAG,wGACOlC,IAAAA,IAAA,UAAa0I,GAAb,oBAAoC9K,IAD3C,OACVmD,EADU,OAEVoB,EAA0BpB,EAASR,KAAKA,KACxC6B,EAAwB,CAC5BwG,QAASzG,EAAMyG,QACfvG,WAAY,IAEdJ,GAAqB,SAACK,GAAD,eAAC,UAAwBA,GAAcF,MAP5C,2CAAH,qDASfF,MACC,CAACF,EAAmBpE,KAGrB,gBAAKQ,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,6BACE,gBAAKA,UAAU,WAAf,UACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,uBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,UACLW,UAAU,kCACV8C,MAAwB,OAAjBc,QAAiB,IAAjBA,GAAAA,EAAmB4G,QAAnB,OAA6B5G,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAmB4G,QAAU,GACjEpG,UAAQ,YAKhB,gBAAKpE,UAAU,mDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,kBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gCCrDtB,IACasK,GAAW,UADR/L,mCACQ,mBAEjB,SAASoM,KACd,IAAMlM,GAAWC,EAAAA,EAAAA,MAEjB,EAAwCwD,EAAAA,SAA0B,IAAlE,eAAOqC,EAAP,KAAqBC,EAArB,KAmBMC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACb6F,QAAS,IAEX5F,SAAS,WAAD,wBAAE,WAAOC,GAAP,kFACR9B,QAAQC,IAAIsB,GACRQ,EAAW,IAAIC,SACbC,EAAuB,CAC3BwF,QAAqB,OAAZjG,QAAY,IAAZA,GAAAA,EAAciG,QAAUjG,EAAaiG,QAAU,GACxDlF,WAAY,GALN,kBAQiB1D,IAAAA,KAAA,UAAc0I,GAAd,WAAoCtF,GARrD,YAQArC,EARA,6BAUA2B,EAVA,wBAWFQ,EAASG,OAAO,mBAAoBX,GAXlC,UAYyB1C,IAAAA,KAAA,UACtB0I,GADsB,wBACK3H,EAASR,KAAKA,KAAKoD,WACjDT,GAdA,wBAiBA/B,QAAQC,IAAI,0BACZ9B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,kBAAmB,CAACwC,SAAS,KAxBtC,2BA4BJC,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,kBAAmB,CAACwC,SAAS,IAlClC,0DAqCNC,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,0CACPgB,mBAAmB,EACnBC,MAAO,OAETiB,QAAQmC,MAAR,MA3CM,0DAAF,mDAAC,KAgDX,GAAwCvG,EAAAA,EAAAA,UAAS,MAAjD,eAAO2F,EAAP,UAEA,OACE,gBAAKtE,UAAU,sCAAsCR,GAAG,cAAxD,UACE,gBAAKQ,UAAU,uCAAf,UACE,gBAAKR,GAAG,iBAAiBQ,UAAU,gCAAnC,UACE,gBAAKR,GAAG,2BAA2BQ,UAAU,8BAA7C,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,kBAAM4E,SAAUH,EAAOU,aAAvB,WACE,gBAAKnF,UAAU,WAAf,UACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,aAAf,WACE,SAACmE,EAAA,QAAD,uBACA,SAACA,EAAA,UAAD,CACE9E,KAAK,UACLW,UAAU,kCACVoD,SA/EG,SAACC,GAI1BmB,GAAgB,SAACY,GAAD,eAAC,UACZA,GADW,cAEb/B,EAAMC,OAAOjE,KAAOgE,EAAMC,OAAOR,YA0EdA,MAAK,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAAciG,kBAK7B,iBAAKxK,UAAU,mDAAf,WACE,SAAC,KAAD,CAAMwD,GAAG,kBAAT,UACE,oBAAQxD,UAAU,oBAAlB,WACE,cAAGA,UAAU,2BADf,gBAKF,oBAAQA,UAAU,kBAAkBmD,KAAK,SAAzC,WACE,cAAGnD,UAAU,4BADf,8BC7GpB,IACawJ,GAAoB,UADjBjL,mCACiB,qBAE1B,SAASqM,KACd,OAAwBjM,EAAAA,EAAAA,WAAS,GAAjC,eAAO+I,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,KAGlCzI,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,2BACNC,SAAU,SAACC,GAAD,OAAcA,EAAImK,wBAC5BjK,UAAU,EACVC,UAAW,0BAEb,CACEL,KAAM,4BACNC,SAAU,SAACC,GAAD,OAAcA,EAAIoK,yBAC5BlK,UAAU,EACVC,UAAW,2BAEb,CACEL,KAAM,SACNC,SAAU,SAACC,GAAD,OAAcA,EAAIqK,QAC5BnK,UAAU,EACVC,UAAW,UAEb,CACEL,KAAM,UACNC,SAAU,SAACC,GAAD,OAAcA,EAAIsK,SAC5BpK,UAAU,EACVC,UAAW,WAEb,CACEL,KAAM,aACNC,SAAU,SAACC,GAAD,OAAcA,EAAIuK,YAC5BrK,UAAU,EACVC,UAAW,cAEb,CACEL,KAAM,cACNC,SAAU,SAACC,GAAD,OAAcA,EAAIwK,aAC5BtK,UAAU,EACVC,UAAW,eAEb,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WAEE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAOE,SAACC,EAAA,OAAD,WACE,SAAC,KAAD,CAAM0C,GAAG,2CAAT,uBAIF,SAAC1C,EAAA,OAAD,CAAeC,KAAK,IAApB,mBACA,SAACD,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAXKP,eAuBvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAU4H,GAAuB,SAFpC,cAEX1G,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAoBR,GALf,SAQMZ,IAAAA,IAAA,2CAA8Cc,EAA9C,qBAA+DH,EAA/D,aARN,cAQXI,EARW,OASjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAbT,kBAcV,CAACA,EAAMC,IAdG,4CAAH,sDA4ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACI,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,+BAGA,kBACEmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGlF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACA,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACI,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACE,oBAAQxD,UAAU,uBAAuBgB,QA1KhC,kBAAM2G,GAAQ,IA0KvB,WACE,cAAG3H,UAAU,qBADf,oBAQN,+BACA,UAAC8H,GAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,EAA3B,WACE,SAACE,GAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,GAAA,QAAD,yCAEF,SAACA,GAAA,OAAD,WAEA,UAAC3D,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACI,SAACmE,EAAA,QAAD,gCACA,SAACA,EAAA,UAAD,CAAchB,KAAK,OAAOI,YAAY,2BAI1C,UAACuE,GAAA,SAAD,YACE,SAACG,GAAA,EAAD,CAAQrH,QAAQ,YAAYI,QAAS4G,EAArC,oBAGA,UAACK,GAAA,EAAD,CAAQrH,QAAQ,UAAUI,QAAS4G,EAAnC,WACA,cAAG5H,UAAU,4BADb,qBAQJ,gBAAKA,UAAU,kCAAf,UACA,SAAC,KAAD,CACMZ,QAASA,EACT+C,KAAMK,EACNiB,YAAU,SCrNtB,IACaoH,GAAQ,UADLtM,mCACK,0BAEd,SAASuM,KACd,IAAMrM,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,WAAS,GAAjC,0BAIAO,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,GACA,CACEL,KAAM,OACNC,SAAU,SAACC,GAAD,OAAcA,EAAIwL,MAC5BtL,UAAU,EACVC,UAAW,OACXG,MAAO,SAET,GACA,CACER,KAAM,OACNC,SAAU,SAACC,GAAD,OAAcA,EAAIO,MAC5BL,UAAU,EACVC,UAAW,QAEb,GACA,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WACE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAQE,SAACC,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,0BAA4B0B,EAAOX,GAAI,CAC9CyB,SAAS,KAJf,qBAUA,SAACH,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,2BAA6B0B,EAAOX,GAAI,CAC/CyB,SAAS,KAJf,mBAUA,SAACH,EAAA,OAAD,CAAeC,KAAK,IAApB,qBA1BKP,eAqCvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAUiJ,GAAW,SAFxB,cAEX/H,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAqBR,GALhB,SAOMZ,IAAAA,IAAA,2CACec,EADf,qBACgCH,EADhC,aAPN,cAOXI,EAPW,OAUjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAdT,kBAeV,CAACA,EAAMC,IAfG,4CAAH,sDA8ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACE,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,6BAGA,kBAAOmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGrF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACE,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,0BAAT,UACE,oBAAQxD,UAAU,uBAAlB,WACE,cAAGA,UAAU,qBADf,oBAQN,gBAAKA,UAAU,kCAAf,UACE,SAAC,KAAD,CAAWZ,QAASA,EAAS+C,KAAMK,EAAMiB,YAAU,SC3L3D,IACauH,GAAc,UADXzM,mCACW,sBAEpB,SAAS0M,KACd,OAAwBtM,EAAAA,EAAAA,WAAS,GAAjC,eAAO+I,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,KAGlCzI,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,GAEA,CACEL,KAAM,aACNC,SAAU,SAACC,GAAD,OAAcA,EAAI2L,YAC5BzL,UAAU,EACVC,UAAW,cAEb,GAEA,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WAEE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAOE,SAACC,EAAA,OAAD,WACE,SAAC,KAAD,CAAM0C,GAAG,2CAAT,uBAIF,SAAC1C,EAAA,OAAD,CAAeC,KAAK,IAApB,mBACA,SAACD,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAXKP,eAuBvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAUoJ,GAAiB,SAF9B,cAEXlI,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAoBR,GALf,SAQMZ,IAAAA,IAAA,2CAA8Cc,EAA9C,qBAA+DH,EAA/D,aARN,cAQXI,EARW,OASjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAbT,kBAcV,CAACA,EAAMC,IAdG,4CAAH,sDA4ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACI,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,yBAGA,kBACEmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGlF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACA,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACI,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACE,oBAAQxD,UAAU,uBAAuBgB,QAtJhC,kBAAM2G,GAAQ,IAsJvB,WACE,cAAG3H,UAAU,qBADf,oBAQN,+BACA,UAAC8H,GAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,EAA3B,WACE,SAACE,GAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,GAAA,QAAD,mCAEF,SAACA,GAAA,OAAD,WAEA,UAAC3D,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACI,SAACmE,EAAA,QAAD,0BACA,SAACA,EAAA,UAAD,CAAchB,KAAK,OAAOI,YAAY,qBAI1C,UAACuE,GAAA,SAAD,YACE,SAACG,GAAA,EAAD,CAAQrH,QAAQ,YAAYI,QAAS4G,EAArC,oBAGA,UAACK,GAAA,EAAD,CAAQrH,QAAQ,UAAUI,QAAS4G,EAAnC,WACA,cAAG5H,UAAU,4BADb,qBAQJ,gBAAKA,UAAU,kCAAf,UACA,SAAC,KAAD,CACMZ,QAASA,EACT+C,KAAMK,EACNiB,YAAU,S,gBC5LT0H,GAAyB,UADtB5M,mCACsB,iCAM/B,SAAS6M,KACd,OAAwBzM,EAAAA,EAAAA,WAAS,GAAjC,eAAO+I,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,IAE5BlJ,GAAWC,EAAAA,EAAAA,MACjB,EAAwCwD,EAAAA,SAA0B,IAAlE,eAAOqC,EAAP,KAAqBC,EAArB,MAYAtF,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,CACEL,KAAM,OACNC,SAAU,SAACC,GAAD,OAAcA,EAAIO,MAC5BL,UAAU,EACVC,UAAW,OACXC,MAAM,GAER,CACEN,KAAM,UACNC,SAAU,SAACC,GAAD,OAAcA,EAAI8L,SAC5B5L,UAAU,EACVC,UAAW,WACV,CACDL,KAAM,OACNC,SAAU,SAACC,GAAD,OAAcA,EAAIO,MAC5BL,UAAU,EACVC,UAAW,OACXC,MAAM,GAER,CACEN,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WAEE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAOE,SAACC,EAAA,OAAD,WACE,SAAC,KAAD,CAAM0C,GAAG,uBAAT,uBAIF,SAAC1C,EAAA,OAAD,CAAeC,KAAK,IAApB,mBACA,SAACD,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAXKP,eAuBvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KACA,GADA,MACwC5D,EAAAA,EAAAA,UAAS,OAAjD,eAAO2F,EAAP,KACA,GADA,MACwB3F,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAUuJ,GAA4B,SAFzC,cAEXrI,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAqBR,GALhB,SAQMZ,IAAAA,IAAA,2CAA8Cc,EAA9C,qBAA+DH,EAA/D,aARN,cAQXI,EARW,OASjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAbT,kBAcV,CAACA,EAAMC,IAdG,4CAAH,sDAqBVqC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACb0G,QAAS,GACTC,OAAQ,IAEV1G,SAAS,WAAD,wBAAE,WAAOC,GAAP,kFACR9B,QAAQC,IAAIsB,GACRQ,EAAW,IAAIC,SACbC,EAAuB,CAC3BqG,QAAqB,OAAZ9G,QAAY,IAAZA,GAAAA,EAAc8G,QAAU9G,EAAa8G,QAAU,GACxD/F,WAAY,GALN,kBAQiB1D,IAAAA,KAAA,UAAcuJ,GAAd,WAAkDnG,GARnE,YAQArC,EARA,6BAUA2B,EAVA,wBAWFQ,EAASG,OAAO,mBAAoBX,GAXlC,UAYyB1C,IAAAA,KAAA,UACtBuJ,GADsB,wBACmBxI,EAASR,KAAKA,KAAKoD,WAC/DT,GAdA,wBAiBA/B,QAAQC,IAAI,0BACZ9B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,kBAAmB,CAACwC,SAAS,KAxBtC,2BA4BJC,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,kBAAmB,CAACwC,SAAS,IAlClC,0DAqCNC,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,0CACPgB,mBAAmB,EACnBC,MAAO,OAETiB,QAAQmC,MAAR,MA3CM,0DAAF,mDAAC,KAuEX,OACE,iBAAKlF,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACE,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,sBAGA,kBACEmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGhF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACE,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,KAAT,UACE,oBAAQxD,UAAU,uBAAuBgB,QAhOhC,kBAAM2G,GAAQ,IAgOvB,WACE,cAAG3H,UAAU,qBADf,oBAQN,+BACE,UAAC8H,GAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,EAA3B,WACE,SAACE,GAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,GAAA,QAAD,gCAEF,UAACA,GAAA,OAAD,YAEE,UAAC3D,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACE,SAACmE,EAAA,QAAD,uBACA,SAACA,EAAA,UAAD,CAAchB,KAAK,OAAOI,YAAY,gBAGxC,UAACY,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACA,kBAAOA,UAAU,iCAAjB,qBACE,oBACE,eAAa,UACb,mBAAiB,SACjBX,KAAK,SACLW,WAAWuL,EAAAA,GAAAA,GACT,uCACA,CACE,aACE9G,EAAO+G,QAAQF,QAAU7G,EAAOgH,OAAOH,QAE3C,CACE,WACE7G,EAAO+G,QAAQF,SAAW7G,EAAOgH,OAAOH,SAG9ClI,SAjQa,SAACC,GAI1BmB,GAAgB,SAACY,GAAD,eAAC,UACZA,GADW,cAEb/B,EAAMC,OAAOjE,KAAOgE,EAAMC,OAAOR,YA4PxBA,MAAK,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAAc+G,OAhBvB,WAkBE,mBAAQxI,MAAM,GAAd,oBACA,mBAAQA,MAAM,MAAd,kBACA,mBAAQA,MAAM,UAAd,+BAKN,UAACgF,GAAA,SAAD,YACE,SAACG,GAAA,EAAD,CAAQrH,QAAQ,YAAYI,QAAS4G,EAArC,oBAGA,UAACK,GAAA,EAAD,CAAQrH,QAAQ,UAAUI,QAAS4G,EAAnC,WACE,cAAG5H,UAAU,4BADf,qBAQN,gBAAKA,UAAU,kCAAf,UACE,SAAC,KAAD,CACEZ,QAASA,EACT+C,KAAMK,EACNiB,YAAU,SC7SpB,IACaiI,GAAY,UADTnN,mCACS,oBAElB,SAASoN,KACd,OAAwBhN,EAAAA,EAAAA,WAAS,GAAjC,eAAO+I,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,KAIlCzI,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,CACEL,KAAM,WACNC,SAAU,SAACC,GAAD,OAAcA,EAAIqM,UAC5BnM,UAAU,EACVC,UAAW,YAEb,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WAEE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAOE,SAACC,EAAA,OAAD,WACE,SAAC,KAAD,CAAM0C,GAAG,2CAAT,uBAIF,SAAC1C,EAAA,OAAD,CAAeC,KAAK,IAApB,mBACA,SAACD,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAXKP,eAuBvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAW8J,GAAe,SAF7B,cAEX5I,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAoBR,GALf,SAQMZ,IAAAA,IAAA,2CAA8Cc,EAA9C,qBAA+DH,EAA/D,aARN,cAQXI,EARW,OASjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAbT,kBAcV,CAACA,EAAMC,IAdG,4CAAH,sDA4ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACI,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,uBAGA,kBACEmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGlF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACA,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACI,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACE,oBAAQxD,UAAU,uBAAuBgB,QAnJhC,kBAAM2G,GAAQ,IAmJvB,WACE,cAAG3H,UAAU,qBADf,oBAQN,+BACA,UAAC8H,GAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,EAA3B,WACE,SAACE,GAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,GAAA,QAAD,iCAEF,SAACA,GAAA,OAAD,WAEA,UAAC3D,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACI,SAACmE,EAAA,QAAD,wBACA,SAACA,EAAA,UAAD,CAAchB,KAAK,OAAOI,YAAY,mBAI1C,UAACuE,GAAA,SAAD,YACE,SAACG,GAAA,EAAD,CAAQrH,QAAQ,YAAYI,QAAS4G,EAArC,oBAGA,UAACK,GAAA,EAAD,CAAQrH,QAAQ,UAAUI,QAAS4G,EAAnC,WACA,cAAG5H,UAAU,4BADb,qBAQJ,gBAAKA,UAAU,kCAAf,UACA,SAAC,KAAD,CACMZ,QAASA,EACT+C,KAAMK,EACNiB,YAAU,SC9LtB,IACaoI,GAAU,UADPtN,mCACO,kBAEhB,SAASuN,KACd,OAAwBnN,EAAAA,EAAAA,WAAS,GAAjC,eAAO+I,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,KAIlCzI,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,GACA,CACEL,KAAM,SACNC,SAAU,SAACC,GAAD,OAAcA,EAAIwM,QAC5BtM,UAAU,EACVC,UAAW,UAEb,GACA,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WAEE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAOE,SAACC,EAAA,OAAD,WACE,SAAC,KAAD,CAAM0C,GAAG,2CAAT,uBAIF,SAAC1C,EAAA,OAAD,CAAeC,KAAK,IAApB,mBACA,SAACD,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAXKP,eAuBvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAUiK,GAAa,SAF1B,cAEX/I,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAoBR,GALf,SAQMZ,IAAAA,IAAA,2CAA8Cc,EAA9C,qBAA+DH,EAA/D,aARN,cAQXI,EARW,OASjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAbT,kBAcV,CAACA,EAAMC,IAdG,4CAAH,sDA+BhB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACI,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,qBAGA,kBACEmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGlF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACA,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACI,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,KAAT,UACE,oBAAQxD,UAAU,uBAAuBgB,QAxIhC,kBAAM2G,GAAQ,IAwIvB,WACE,cAAG3H,UAAU,qBADf,oBAQN,+BACA,UAAC8H,GAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,EAA3B,WACE,SAACE,GAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,GAAA,QAAD,+BAEF,SAACA,GAAA,OAAD,WAEA,UAAC3D,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACI,SAACmE,EAAA,QAAD,oBACA,SAACA,EAAA,UAAD,CAAchB,KAAK,SAASI,YAAY,iBAI5C,UAACuE,GAAA,SAAD,YACE,SAACG,GAAA,EAAD,CAAQrH,QAAQ,YAAYI,QAAS4G,EAArC,oBAGA,UAACK,GAAA,EAAD,CAAQrH,QAAQ,UAAUI,QAAS4G,EAAnC,WACA,cAAG5H,UAAU,4BADb,qBAQJ,gBAAKA,UAAU,kCAAf,UACA,SAAC,KAAD,CACMZ,QAASA,EACT+C,KAAMK,EACNiB,YAAU,SC/KtB,IACauI,GAAW,UADRzN,mCACQ,mBAMjB,SAAS0N,KACd,OAAwBtN,EAAAA,EAAAA,WAAS,GAAjC,eAAO+I,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,IAE5BlJ,GAAWC,EAAAA,EAAAA,MACjB,EAAwCwD,EAAAA,SAA0B,IAAlE,eAAOqC,EAAP,KAAqBC,EAArB,MAYAtF,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,CACEL,KAAM,OACNC,SAAU,SAACC,GAAD,OAAcA,EAAIO,MAC5BL,UAAU,EACVC,UAAW,OACXC,MAAM,GAER,CACEN,KAAM,UACNC,SAAU,SAACC,GAAD,OAAcA,EAAI8L,SAC5B5L,UAAU,EACVC,UAAW,WACV,CACDL,KAAM,OACNC,SAAU,SAACC,GAAD,OAAcA,EAAIO,MAC5BL,UAAU,EACVC,UAAW,OACXC,MAAM,GAER,CACEN,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WAEE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAOE,SAACC,EAAA,OAAD,WACE,SAAC,KAAD,CAAM0C,GAAG,uBAAT,uBAIF,SAAC1C,EAAA,OAAD,CAAeC,KAAK,IAApB,mBACA,SAACD,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAXKP,eAuBvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KACA,GADA,MACwC5D,EAAAA,EAAAA,UAAS,OAAjD,eAAO2F,EAAP,KACA,GADA,MACwB3F,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAUoK,GAAc,SAF3B,cAEXlJ,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAqBR,GALhB,SAQMZ,IAAAA,IAAA,2CAA8Cc,EAA9C,qBAA+DH,EAA/D,aARN,cAQXI,EARW,OASjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAbT,kBAcV,CAACA,EAAMC,IAdG,4CAAH,sDAqBVqC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACb0G,QAAS,GACTC,OAAQ,IAEV1G,SAAS,WAAD,wBAAE,WAAOC,GAAP,kFACR9B,QAAQC,IAAIsB,GACRQ,EAAW,IAAIC,SACbC,EAAuB,CAC3BqG,QAAqB,OAAZ9G,QAAY,IAAZA,GAAAA,EAAc8G,QAAU9G,EAAa8G,QAAU,GACxD/F,WAAY,GALN,kBAQiB1D,IAAAA,KAAA,UAAcoK,GAAd,WAAoChH,GARrD,YAQArC,EARA,6BAUA2B,EAVA,wBAWFQ,EAASG,OAAO,mBAAoBX,GAXlC,UAYyB1C,IAAAA,KAAA,UACtBoK,GADsB,wBACKrJ,EAASR,KAAKA,KAAKoD,WACjDT,GAdA,wBAiBA/B,QAAQC,IAAI,0BACZ9B,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,kBAAmB,CAACwC,SAAS,KAxBtC,2BA4BJC,IAAAA,KAAU,CACRC,KAAM,UACNN,MAAO,yBACPgB,mBAAmB,EACnBC,MAAO,OAETrD,EAAS,kBAAmB,CAACwC,SAAS,IAlClC,0DAqCNC,IAAAA,KAAU,CACRC,KAAM,QACNN,MAAO,0CACPgB,mBAAmB,EACnBC,MAAO,OAETiB,QAAQmC,MAAR,MA3CM,0DAAF,mDAAC,KAuEX,OACE,iBAAKlF,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACE,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,sBAGA,kBACEmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGhF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACE,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,KAAT,UACE,oBAAQxD,UAAU,uBAAuBgB,QAhOhC,kBAAM2G,GAAQ,IAgOvB,WACE,cAAG3H,UAAU,qBADf,oBAQN,+BACE,UAAC8H,GAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,EAA3B,WACE,SAACE,GAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,GAAA,QAAD,gCAEF,UAACA,GAAA,OAAD,YAEE,UAAC3D,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACE,SAACmE,EAAA,QAAD,uBACA,SAACA,EAAA,UAAD,CAAchB,KAAK,OAAOI,YAAY,gBAGxC,UAACY,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACA,kBAAOA,UAAU,iCAAjB,qBACE,oBACE,eAAa,UACb,mBAAiB,SACjBX,KAAK,SACLW,WAAWuL,EAAAA,GAAAA,GACT,uCACA,CACE,aACE9G,EAAO+G,QAAQF,QAAU7G,EAAOgH,OAAOH,QAE3C,CACE,WACE7G,EAAO+G,QAAQF,SAAW7G,EAAOgH,OAAOH,SAG9ClI,SAjQa,SAACC,GAI1BmB,GAAgB,SAACY,GAAD,eAAC,UACZA,GADW,cAEb/B,EAAMC,OAAOjE,KAAOgE,EAAMC,OAAOR,YA4PxBA,MAAK,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAAc+G,OAhBvB,WAkBE,mBAAQxI,MAAM,GAAd,oBACA,mBAAQA,MAAM,MAAd,kBACA,mBAAQA,MAAM,UAAd,+BAKN,UAACgF,GAAA,SAAD,YACE,SAACG,GAAA,EAAD,CAAQrH,QAAQ,YAAYI,QAAS4G,EAArC,oBAGA,UAACK,GAAA,EAAD,CAAQrH,QAAQ,UAAUI,QAAS4G,EAAnC,WACE,cAAG5H,UAAU,4BADf,qBAQN,gBAAKA,UAAU,kCAAf,UACE,SAAC,KAAD,CACEZ,QAASA,EACT+C,KAAMK,EACNiB,YAAU,SC7SpB,IACa+F,GAAoB,UADjBjL,mCACiB,qBAE1B,SAAS2N,KACd,OAAwBvN,EAAAA,EAAAA,WAAS,GAAjC,eAAO+I,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,KAGlCzI,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,2BACNC,SAAU,SAACC,GAAD,OAAcA,EAAImK,wBAC5BjK,UAAU,EACVC,UAAW,0BAEb,CACEL,KAAM,4BACNC,SAAU,SAACC,GAAD,OAAcA,EAAIoK,yBAC5BlK,UAAU,EACVC,UAAW,2BAEb,CACEL,KAAM,SACNC,SAAU,SAACC,GAAD,OAAcA,EAAIqK,QAC5BnK,UAAU,EACVC,UAAW,UAEb,CACEL,KAAM,UACNC,SAAU,SAACC,GAAD,OAAcA,EAAIsK,SAC5BpK,UAAU,EACVC,UAAW,WAEb,CACEL,KAAM,aACNC,SAAU,SAACC,GAAD,OAAcA,EAAIuK,YAC5BrK,UAAU,EACVC,UAAW,cAEb,CACEL,KAAM,cACNC,SAAU,SAACC,GAAD,OAAcA,EAAIwK,aAC5BtK,UAAU,EACVC,UAAW,eAEb,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WAEE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAOE,SAACC,EAAA,OAAD,WACE,SAAC,KAAD,CAAM0C,GAAG,2CAAT,uBAIF,SAAC1C,EAAA,OAAD,CAAeC,KAAK,IAApB,mBACA,SAACD,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAXKP,eAuBvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAU4H,GAAuB,SAFpC,cAEX1G,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAoBR,GALf,SAQMZ,IAAAA,IAAA,2CAA8Cc,EAA9C,qBAA+DH,EAA/D,aARN,cAQXI,EARW,OASjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAbT,kBAcV,CAACA,EAAMC,IAdG,4CAAH,sDA4ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACI,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,+BAGA,kBACEmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGlF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACA,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACI,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,KAAT,UACE,oBAAQxD,UAAU,uBAAuBgB,QA1KhC,kBAAM2G,GAAQ,IA0KvB,WACE,cAAG3H,UAAU,qBADf,oBAQN,+BACA,UAAC8H,GAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,EAA3B,WACE,SAACE,GAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,GAAA,QAAD,yCAEF,SAACA,GAAA,OAAD,WAEA,UAAC3D,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACI,SAACmE,EAAA,QAAD,gCACA,SAACA,EAAA,UAAD,CAAchB,KAAK,OAAOI,YAAY,2BAI1C,UAACuE,GAAA,SAAD,YACE,SAACG,GAAA,EAAD,CAAQrH,QAAQ,YAAYI,QAAS4G,EAArC,oBAGA,UAACK,GAAA,EAAD,CAAQrH,QAAQ,UAAUI,QAAS4G,EAAnC,WACA,cAAG5H,UAAU,4BADb,qBAQJ,gBAAKA,UAAU,kCAAf,UACA,SAAC,KAAD,CACMZ,QAASA,EACT+C,KAAMK,EACNiB,YAAU,SCnNtB,IACa0I,GAAmB,UADhB5N,mCACgB,0BAEzB,SAAS6N,KACd,OAAwBzN,EAAAA,EAAAA,WAAS,GAAjC,eAAO+I,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,IAE5BlJ,GAAWC,EAAAA,EAAAA,OAEjBQ,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAEb,GACA,CACEL,KAAM,kBACNC,SAAU,SAACC,GAAD,OAAcA,EAAI8M,iBAC5B5M,UAAU,EACVC,UAAW,mBAEb,GACA,GACA,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WACE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAQE,SAACC,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,8CAAgD0B,EAAOX,GAAI,CAACyB,SAAS,KAHlF,qBAQA,SAACH,EAAA,OAAD,CACEC,KAAK,IACLC,QAAS,kBACPvC,EAAS,+CAAiD0B,EAAOX,GAAI,CAACyB,SAAS,KAHnF,mBAQA,SAACH,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAtBKP,eAmCvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAUuK,GAAsB,SAFnC,cAEXrJ,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAoBR,GALf,SAQMZ,IAAAA,IAAA,2CAA8Cc,EAA9C,qBAA+DH,EAA/D,aARN,cAQXI,EARW,OASjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAbT,kBAcV,CAACA,EAAMC,IAdG,4CAAH,sDA4ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACI,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,8BAGA,kBACEmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGlF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACA,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACI,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,KAAT,UACE,oBAAQxD,UAAU,uBAAuBgB,QAjKhC,kBAAM2G,GAAQ,IAiKvB,WACE,cAAG3H,UAAU,qBADf,oBAQN,+BACA,UAAC8H,GAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,EAA3B,WACE,SAACE,GAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,GAAA,QAAD,yCAEF,SAACA,GAAA,OAAD,WAEA,UAAC3D,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACI,SAACmE,EAAA,QAAD,+BACA,SAACA,EAAA,UAAD,CAAchB,KAAK,OAAOI,YAAY,0BAI1C,UAACuE,GAAA,SAAD,YACE,SAACG,GAAA,EAAD,CAAQrH,QAAQ,YAAYI,QAAS4G,EAArC,oBAGA,UAACK,GAAA,EAAD,CAAQrH,QAAQ,UAAUI,QAAS4G,EAAnC,WACA,cAAG5H,UAAU,4BADb,qBAQJ,gBAAKA,UAAU,kCAAf,UACA,SAAC,KAAD,CACMZ,QAASA,EACT+C,KAAMK,EACNiB,YAAU,SC9MtB,IACa6I,GAAc,UADX/N,mCACW,4BAEpB,SAASgO,KACd,OAAwB5N,EAAAA,EAAAA,WAAS,GAAjC,eAAO+I,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,KAGlCzI,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,SAACC,GAAD,OAAcA,EAAIC,IAC5BC,UAAU,EACVC,UAAW,MAGb,CACEL,KAAM,mBACNC,SAAU,SAACC,GAAD,OAAcA,EAAIiN,kBAC5B/M,UAAU,EACVC,UAAW,oBAEb,CACEL,KAAM,OACNC,SAAU,SAACC,GAAD,OAAcA,EAAIO,MAC5BL,UAAU,EACVC,UAAW,QAEb,GAEA,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WAEE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAOE,SAACC,EAAA,OAAD,WACE,SAAC,KAAD,CAAM0C,GAAG,2CAAT,uBAIF,SAAC1C,EAAA,OAAD,CAAeC,KAAK,IAApB,mBACA,SAACD,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAXKP,eAuBvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAU0K,GAAiB,SAF9B,cAEXxJ,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAoBR,GALf,SAQMZ,IAAAA,IAAA,2CAA8Cc,EAA9C,qBAA+DH,EAA/D,aARN,cAQXI,EARW,OASjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAbT,kBAcV,CAACA,EAAMC,IAdG,4CAAH,sDA4ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACI,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,+BAGA,kBACEmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGlF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACA,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACI,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,KAAT,UACE,oBAAQxD,UAAU,uBAAuBgB,QA3JhC,kBAAM2G,GAAQ,IA2JvB,WACE,cAAG3H,UAAU,qBADf,oBAQN,+BACA,UAAC8H,GAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,EAA3B,WACE,SAACE,GAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,GAAA,QAAD,yCAEF,SAACA,GAAA,OAAD,WAEA,UAAC3D,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACI,SAACmE,EAAA,QAAD,gCACA,SAACA,EAAA,UAAD,CAAchB,KAAK,OAAOI,YAAY,2BAI1C,UAACuE,GAAA,SAAD,YACE,SAACG,GAAA,EAAD,CAAQrH,QAAQ,YAAYI,QAAS4G,EAArC,oBAGA,UAACK,GAAA,EAAD,CAAQrH,QAAQ,UAAUI,QAAS4G,EAAnC,WACA,cAAG5H,UAAU,4BADb,qBAQJ,gBAAKA,UAAU,kCAAf,UACA,SAAC,KAAD,CACMZ,QAASA,EACT+C,KAAMK,EACNiB,YAAU,SCtMtB,IACa+F,GAAoB,UADjBjL,mCACiB,qBAE1B,SAASkO,KACd,OAAwB9N,EAAAA,EAAAA,WAAS,GAAjC,eAAO+I,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,KAGlCzI,EAAAA,EAAAA,YAAU,WACRC,EAAW,KACV,IAEH,IAcMC,EAAU,CACd,CACEC,KAAM,2BACNC,SAAU,SAACC,GAAD,OAAcA,EAAImK,wBAC5BjK,UAAU,EACVC,UAAW,0BAEb,CACEL,KAAM,4BACNC,SAAU,SAACC,GAAD,OAAcA,EAAIoK,yBAC5BlK,UAAU,EACVC,UAAW,2BAEb,CACEL,KAAM,SACNC,SAAU,SAACC,GAAD,OAAcA,EAAIqK,QAC5BnK,UAAU,EACVC,UAAW,UAEb,CACEL,KAAM,UACNC,SAAU,SAACC,GAAD,OAAcA,EAAIsK,SAC5BpK,UAAU,EACVC,UAAW,WAEb,CACEL,KAAM,aACNC,SAAU,SAACC,GAAD,OAAcA,EAAIuK,YAC5BrK,UAAU,EACVC,UAAW,cAEb,CACEL,KAAM,cACNC,SAAU,SAACC,GAAD,OAAcA,EAAIwK,aAC5BtK,UAAU,EACVC,UAAW,eAEb,CACEL,KAAM,OACNI,UAAU,EACVM,KAAM,SACNC,UAAW,SACXC,MAAO,OACPC,KAAM,SAACC,GACL,OACE,SAAC,EAAAC,SAAD,WAEE,gBAAKJ,UAAU,OAAf,SACG,CAACK,EAAAA,GAAgBC,KAAI,SAACC,EAAcC,GAAf,OACpB,+BACE,UAACD,EAAD,CACEE,GAAIC,EAAAA,EAEJlB,GAAE,+BAA0BgB,GAC5BG,KAAK,KACLC,QAAQ,QACRC,MAAM,OANR,WAOE,SAACC,EAAA,OAAD,WACE,SAAC,KAAD,CAAM0C,GAAG,2CAAT,uBAIF,SAAC1C,EAAA,OAAD,CAAeC,KAAK,IAApB,mBACA,SAACD,EAAA,OAAD,CAAeC,KAAK,IAApB,qBAXKP,eAuBvB,GAAwB7B,EAAAA,EAAAA,UAAS,IAAjC,eAAOwD,EAAP,KAAaC,EAAb,KACA,GAA8BzD,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0D,GAAhB,WACA,GAAkC1D,EAAAA,EAAAA,UAAS,GAA3C,eAAkB2D,GAAlB,WACA,GAA8B3D,EAAAA,EAAAA,UAAS,IAAvC,eAAO4D,EAAP,KAEA,GAFA,MAEwB5D,EAAAA,EAAAA,UAAS,KAAjC,eAAO6D,EAAP,KAAaC,EAAb,KAEMtD,EAAU,mCAAG,WAAOuD,GAAP,gFACjBL,GAAW,GADM,SAEGT,IAAAA,IAAU4H,GAAuB,SAFpC,cAEX1G,EAFW,OAIjBL,EAAQK,EAAMX,KAAKA,MACnBY,QAAQC,IAAI,oBAAoBR,GALf,SAQMZ,IAAAA,IAAA,2CAA8Cc,EAA9C,qBAA+DH,EAA/D,aARN,cAQXI,EARW,OASjBP,EAAQO,EAASR,KAAKA,MAEtBG,EAAaK,EAASR,KAAKc,OAC3BZ,GAAW,GACXU,QAAQC,IAAI,aAAcb,GAbT,kBAcV,CAACA,EAAMC,IAdG,4CAAH,sDA4ChB,OACE,iBAAKpC,UAAS,OAAd,WAEE,gBAAKA,UAAU,yBAAf,UACI,iBAAKA,UAAU,wCAAf,WACE,kBAAOkD,QAAQ,GAAGlD,UAAU,OAA5B,iCAGA,kBACEmD,KAAK,OAAOnD,UAAU,+CAA+CX,KAAK,eAGlF,iBAAKW,UAAU,yBAAf,WACE,gBAAKA,UAAU,8BAAf,UACA,SAAC,KAAD,CAAMwD,GAAG,IAAT,UACI,oBAAQxD,UAAU,kBAAlB,WACE,cAAGA,UAAU,uBADf,eAOJ,gBAAKA,UAAU,yDAAf,UACE,SAAC,KAAD,CAAMwD,GAAG,KAAT,UACE,oBAAQxD,UAAU,uBAAuBgB,QA1KhC,kBAAM2G,GAAQ,IA0KvB,WACE,cAAG3H,UAAU,qBADf,oBAQN,+BACA,UAAC8H,GAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,EAA3B,WACE,SAACE,GAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,GAAA,QAAD,2CAEF,SAACA,GAAA,OAAD,WAEA,UAAC3D,EAAA,QAAD,CAAYnE,UAAU,0BAAtB,WACI,SAACmE,EAAA,QAAD,kCACA,SAACA,EAAA,UAAD,CAAchB,KAAK,OAAOI,YAAY,uBAI1C,UAACuE,GAAA,SAAD,YACE,SAACG,GAAA,EAAD,CAAQrH,QAAQ,YAAYI,QAAS4G,EAArC,oBAGA,UAACK,GAAA,EAAD,CAAQrH,QAAQ,UAAUI,QAAS4G,EAAnC,WACA,cAAG5H,UAAU,4BADb,qBAQJ,gBAAKA,UAAU,kCAAf,UACA,SAAC,KAAD,CACMZ,QAASA,EACT+C,KAAMK,EACNiB,YAAU,SC/JtB,IAAMiJ,GAAqC,CACzC,CACE7L,MAAO,SACP8L,KAAM,8BACNC,aAAa,EACbC,UAAU,GAEZ,CACEhM,MAAO,GACP8L,KAAM,GACNC,aAAa,EACbC,UAAU,IAkfd,GA9e6B,WAC3B,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CACEC,SACE,+BACE,SAAC,KAAD,MAHN,WAOE,SAAC,KAAD,CACEH,KAAK,OACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,mBACA,SAAClO,EAAD,UAIN,SAAC,KAAD,CACEmO,KAAK,gCACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,+BACA,SAAC5G,EAAD,UAIN,SAAC,KAAD,CACE6G,KAAK,+BACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,8BACA,SAAC7G,EAAD,UAIN,SAAC,KAAD,CACE8G,KAAK,4BACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,+BACA,SAAC1G,EAAD,UAIN,SAAC,KAAD,CACE2G,KAAK,OACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,mBACA,SAAC5B,GAAD,UAIN,SAAC,KAAD,CACE6B,KAAK,UACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,sBACA,SAACnC,GAAD,UAIN,SAAC,KAAD,CACEoC,KAAK,4BACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,6BACA,SAACjC,GAAD,UAIN,SAAC,KAAD,CACEkC,KAAK,2BACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,4BACA,SAAChC,GAAD,UAIN,SAAC,KAAD,CACEiC,KAAK,wBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,6BACA,SAAC/B,GAAD,UAIN,SAAC,KAAD,CACEgC,KAAK,kBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,+BACA,SAAC9B,GAAD,UAIN,SAAC,KAAD,CACE+B,KAAK,WACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,yBACA,SAACf,GAAD,UAIN,SAAC,KAAD,CACEgB,KAAK,uBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,uCACA,SAACtB,GAAD,UAIN,SAAC,KAAD,CACEuB,KAAK,YACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,wBACA,SAACjH,EAAD,UAIN,SAAC,KAAD,CACEkH,KAAK,sBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,0BACA,SAACrI,EAAD,UAIN,SAAC,KAAD,CACEsI,KAAK,qBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,yBACA,SAAChJ,EAAD,UAIN,SAAC,KAAD,CACEiJ,KAAK,kBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,0BACA,SAACrH,EAAD,UAIN,SAAC,KAAD,CACEsH,KAAK,YACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,wBACA,SAACxG,EAAD,UAIN,SAAC,KAAD,CACEyG,KAAK,gCACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,+BACA,SAACpG,EAAD,UAIN,SAAC,KAAD,CACEqG,KAAK,4BACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,+BACA,SAACnG,EAAD,UAIN,SAAC,KAAD,CACEoG,KAAK,+BACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,8BACA,SAACrG,EAAD,UAIN,SAAC,KAAD,CACEsG,KAAK,gBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,8BACA,SAACjG,EAAD,UAIN,SAAC,KAAD,CACEkG,KAAK,wCACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,mCACA,SAAC9F,EAAD,UAIN,SAAC,KAAD,CACE+F,KAAK,oCACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,oCACA,SAAC7F,GAAD,UAIN,SAAC,KAAD,CACE8F,KAAK,uCACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,mCACA,SAAC/F,EAAD,UAIN,SAAC,KAAD,CACEgG,KAAK,gBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,8BACA,SAACvF,GAAD,UAIN,SAAC,KAAD,CACEwF,KAAK,wCACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,oCACA,SAACpF,GAAD,UAIN,SAAC,KAAD,CACEqF,KAAK,uCACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,mCACA,SAACrF,GAAD,UAIN,SAAC,KAAD,CACEsF,KAAK,oCACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,oCACA,SAACnF,GAAD,UAIN,SAAC,KAAD,CACEoF,KAAK,QACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,qBACA,SAACzC,GAAD,UAIN,SAAC,KAAD,CACE0C,KAAK,wBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,2BACA,SAACtC,GAAD,UAIN,SAAC,KAAD,CACEuC,KAAK,uBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,0BACA,SAACvC,GAAD,UAIN,SAAC,KAAD,CACEwC,KAAK,oBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,2BACA,SAACrC,GAAD,UAIN,SAAC,KAAD,CACEsC,KAAK,UACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,wBACA,SAACT,GAAD,UAIN,SAAC,KAAD,CACEU,KAAK,yBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,wBACA,SAACT,GAAD,UAIN,SAAC,KAAD,CACEU,KAAK,6BACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,2BACA,SAACtC,GAAD,UAIN,SAAC,KAAD,CACEuC,KAAK,4BACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,0BACA,SAACvC,GAAD,UAIN,SAAC,KAAD,CACEwC,KAAK,SACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,uBACA,SAACZ,GAAD,UAIN,SAAC,KAAD,CACEa,KAAK,aACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,2BACA,SAACzB,GAAD,UAIN,SAAC,KAAD,CACE0B,KAAK,kBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,iCACA,SAACR,GAAD,UAIN,SAAC,KAAD,CACES,KAAK,mBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,gCACA,SAACjF,GAAD,UAIN,SAAC,KAAD,CACEkF,KAAK,mBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,gCACA,SAACvE,GAAD,UAIN,SAAC,KAAD,CACEwE,KAAK,kBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,+BACA,SAAChE,GAAD,UAIN,SAAC,KAAD,CACEiE,KAAK,oBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,oCACA,SAACpE,GAAD,UAIN,SAAC,KAAD,CACEqE,KAAK,iBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,8BACA,SAACN,GAAD,UAIN,SAAC,KAAD,CACEO,KAAK,kBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,+BACA,SAACH,GAAD,UAIN,SAAC,KAAD,CACEI,KAAK,oBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,iCACA,SAACD,GAAD,UAIN,SAAC,KAAD,CACEE,KAAK,aACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,2BACA,SAAC7D,GAAD,UAIN,SAAC,KAAD,CACE8D,KAAK,kCACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,gCACA,SAAC1D,GAAD,UAIN,SAAC,KAAD,CACE2D,KAAK,iCACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,+BACA,SAAC3D,GAAD,UAIN,SAAC,KAAD,CACE4D,KAAK,8BACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,gCACA,SAACzD,GAAD,UAIN,SAAC,KAAD,CACE0D,KAAK,iBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,8BACA,SAACvD,GAAD,UAIN,SAAC,KAAD,CACEwD,KAAK,eACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,4BACA,SAACpD,GAAD,UAIN,SAAC,KAAD,CACEqD,KAAK,kBACLG,SACE,iCACE,SAAC,KAAD,CAAWC,YAAaL,GAAxB,+BACA,SAACjD,GAAD,UAKN,SAAC,KAAD,CAAOuD,OAAK,EAACF,SAAS,SAAC,KAAD,CAAUtJ,GAAG","sources":["app/modules/master/components/Kota.tsx","app/modules/master/components/Lihat-master/LihatKota.tsx","app/modules/master/components/Update-master/UpdateKota.tsx","app/modules/master/components/Tambah-master/TambahKota.tsx","app/modules/master/components/Kecamatan.tsx","app/modules/master/components/Lihat-master/LihatKecamatan.tsx","app/modules/master/components/Update-master/UpdateKecamatan.tsx","app/modules/master/components/Tambah-master/TambahKecamatan.tsx","app/modules/master/components/Kelurahan.tsx","app/modules/master/components/Lihat-master/LihatKelurahan.tsx","app/modules/master/components/Update-master/UpdateKelurahan.tsx","app/modules/master/components/Tambah-master/TambahKelurahan.tsx","app/modules/master/components/JenisKegiatan.tsx","app/modules/master/components/Lihat-master/LihatJenisKegiatan.tsx","app/modules/master/components/Update-master/UpdateJenisKegiatan.tsx","app/modules/master/components/Tambah-master/TambahJenisKegiatan.tsx","app/modules/master/components/JenisKejadian.tsx","app/modules/master/components/Lihat-master/LihatJenisKejadian.tsx","app/modules/master/components/Update-master/UpdateJenisKejadian.tsx","app/modules/master/components/Tambah-master/TambahJenisKejadian.tsx","app/modules/master/components/JenisPelanggaran.tsx","app/modules/master/components/JenisPertolongan.tsx","app/modules/master/components/JenisPerdaPerkada.tsx","app/modules/master/components/JenisPenindakan.tsx","app/modules/master/components/KorbanJiwa.tsx","app/modules/master/components/Lihat-master/LihatKorbanJiwa.tsx","app/modules/master/components/Update-master/UpdateKorbanJiwa.tsx","app/modules/master/components/Tambah-master/TambahKorbanJiwa.tsx","app/modules/master/components/KorbanMaterial.tsx","app/modules/master/components/JenisBantuan.tsx","app/modules/master/components/InstansiTerkait.tsx","app/modules/master/components/Agama.tsx","app/modules/master/components/Lihat-master/LihatAgama.tsx","app/modules/master/components/Update-master/UpdateAgama.tsx","app/modules/master/components/Tambah-master/TambahAgama.tsx","app/modules/master/components/Pangkat.tsx","app/modules/master/components/Update-master/UpdatePangkat.tsx","app/modules/master/components/Lihat-master/LihatPangkat.tsx","app/modules/master/components/Tambah-master/TambahPangkat.tsx","app/modules/master/components/TempatPelaksana.tsx","app/modules/master/components/SKPD.tsx","app/modules/master/components/Pendidikan.tsx","app/modules/master/components/JenisSaranaPrasarana.tsx","app/modules/master/components/Golongan.tsx","app/modules/master/components/Eselon.tsx","app/modules/master/components/Jabatan.tsx","app/modules/master/components/SumberInformasi.tsx","app/modules/master/components/JenisKekerasan.tsx","app/modules/master/components/JenisPenerbitan.tsx","app/modules/master/components/JenisPenyelesaian.tsx","app/modules/master/MasterPage.tsx"],"sourcesContent":["import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Swal from 'sweetalert2'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\n\nexport interface FormInput {\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/master/kota\n\nexport function Kota() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [valFilterKota, setFilterKota] = useState({val: ''})\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const response = await axios.delete(`${KOTA_URL}/delete/${id},{deleted_by}`)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n      wrap: true,\n    },\n    {\n      name: 'Kota',\n      selector: (row: any) => row.kota,\n      sortable: true,\n      sortField: 'kota',\n      width: '400px',\n      wrap: true,\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n      wrap: true,\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2  mt-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kota/LihatKota/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kota/UpdateKota/' + record.id, {replace: true})\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterKota.val !== '') {\n      uriParam += `&kota=${valFilterKota.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handleChangeInputKota = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterKota({val: event.target.value})\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${KOTA_URL}/findone-by-kota/:kota`)\n      setData(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(KOTA_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek kota:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Kota\n          </label>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='kota'\n            value={valFilterKota.val}\n            onChange={handleChangeInputKota}\n            placeholder='Kota'\n          />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary' onClick={handleFilter}>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/Kota/TambahKota'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        {/* onSubmit: async (values) => {\n      const bodyparam: FormInput = {}\n      valuesFormik?.kota ? (bodyparam.kota = valuesFormik.kota) : delete bodyparam.kota\n\n      try {\n        const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\n        if (response) {\n          fetchUsers(1)\n          handleClose()\n          setValuesFormik({})\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    }, */}\n      </>\n\n      <div className='table-responsive mt-30 ms-30 me-1'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  kota?: string\n  kode?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/sarana-prasarana\n\nexport function LihatKota() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KOTA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kota: jsonD.kota,\n        kode: jsonD.kode,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kota ? valuesFormikExist?.kota : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode</Form.Label>\n                        <Form.Control\n                          name='kode'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kota'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kota?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000//master/kota\n\nexport function UpdateKota() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KOTA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kota: jsonD.kota,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kota: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kota: valuesFormik?.kota\n          ? valuesFormik.kota\n          : valuesFormikExist?.kota\n          ? valuesFormikExist.kota\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${KOTA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${KOTA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Kota', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Kota', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kota || valuesFormik?.kota === ''\n                              ? valuesFormik?.kota\n                              : valuesFormikExist?.kota\n                              ? valuesFormikExist?.kota\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kota'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kota?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/master/kota\n\nexport function TambahKota() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kota: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kota: valuesFormik?.kota ? valuesFormik.kota : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\n        if (response) {\n            if (selectedFile) {\n              formData.append('file_dokumentasi', selectedFile)\n              const responseFile = await axios.post(\n                `${KOTA_URL}/upload-file/${response.data.data.return_id}`,\n                formData\n              )\n              if (responseFile) {\n                console.log('File success uploaded!')\n                Swal.fire({\n                  icon: 'success',\n                  title: 'Data berhasil disimpan',\n                  showConfirmButton: false,\n                  timer: 1500,\n                })\n                navigate('/master/Kota', {replace: true})\n              }\n              return\n            }\n            Swal.fire({\n              icon: 'success',\n              title: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            navigate('/master/Kota', {replace: true})\n          }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kota}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kota'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Swal from 'sweetalert2'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\n\nexport function Kecamatan() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Kode Kecamatan',\n      selector: (row: any) => row.kode_kecamatan,\n      sortable: true,\n      sortField: 'kode_kecamatan',\n      width: '200px',\n    },\n    {\n      name: 'kecamatan',\n      selector: (row: any) => row.kecamatan,\n      sortable: true,\n      sortField: 'kecamatan',\n      width: '250px',\n    },\n    {\n      name: 'Kode Kota',\n      selector: (row: any) => row.kode_kota,\n      sortable: true,\n      sortField: 'kode_kota',\n      width: '150px',\n    },\n    {\n      name: 'kota',\n      selector: (row: any) => row.kota,\n      sortable: true,\n      sortField: 'kota',\n      width: '300px',\n    },\n    {},\n\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kecamatan/LihatKecamatan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kecamatan/UpdateKecamatan/' + record.id, {replace: true})\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#'>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(KECAMATAN_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek response api:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6'>\n          <div className='form-group'>\n            <label htmlFor='' className='mb-3'>\n              Kota\n            </label>\n            <input\n              type='text'\n              className='form-control form-control form-control-solid'\n              name='tags'\n            />\n          </div>\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6'>\n          <div className='form-group'>\n            <label htmlFor='' className='mb-3'>\n              Kecamatan\n            </label>\n            <input\n              type='text'\n              className='form-control form-control form-control-solid'\n              name='tags'\n            />\n          </div>\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/Kecamatan/TambahKecamatan'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  kecamatan?: string\n  kode_kota?: string\n  kode_kecamatan?: string\n  kota?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kecamatan?: string\n  kode_kota?: string\n  kode_kecamatan?: string\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\nexport function LihatKecamatan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KECAMATAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kecamatan: jsonD.kecamatan,\n        kode_kota: jsonD.kode_kota,\n        kode_kecamatan: jsonD.kode_kecamatan,\n        kota: jsonD.kota,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kecamatan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kecamatan ? valuesFormikExist?.kecamatan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kota</Form.Label>\n                        <Form.Control\n                          name='kode_kota'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode_kota ? valuesFormikExist?.kode_kota : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kode_kecamatan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.kode_kecamatan\n                              ? valuesFormikExist?.kode_kecamatan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kota ? valuesFormikExist?.kota : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kecamatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kode_kota?: string\n  kecamatan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode_kota?: string\n  kecamatan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000//master/kecamatan\n\nexport function UpdateKecamatan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KECAMATAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kecamatan: jsonD.kecamatan,\n        kode_kota: jsonD.kode_kota,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kecamatan: '',\n      kode_kota: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kecamatan: valuesFormik?.kecamatan\n          ? valuesFormik.kecamatan\n          : valuesFormikExist?.kecamatan\n          ? valuesFormikExist.kecamatan\n          : '',\n        kode_kota: valuesFormik?.kode_kota\n          ? valuesFormik.kode_kota\n          : valuesFormikExist?.kode_kota\n          ? valuesFormikExist.kode_kota\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${KECAMATAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${KECAMATAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Kecamatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Kecamatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kecamatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kecamatan || valuesFormik?.kecamatan === ''\n                              ? valuesFormik?.kecamatan\n                              : valuesFormikExist?.kecamatan\n                              ? valuesFormikExist?.kecamatan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kota</Form.Label>\n                        <Form.Control\n                          name='kode_kota'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kode_kota || valuesFormik?.kode_kota === ''\n                              ? valuesFormik?.kode_kota\n                              : valuesFormikExist?.kode_kota\n                              ? valuesFormikExist?.kode_kota\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kecamatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kecamatan?: string\n  kode_kota?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\n\nexport function TambahKecamatan() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kecamatan: '',\n      kode_kota: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kecamatan: valuesFormik?.kecamatan ? valuesFormik.kecamatan : '',\n        kode_kota: valuesFormik?.kode_kota ? valuesFormik.kode_kota : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${KECAMATAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${KECAMATAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Kecamatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Kecamatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kecamatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kecamatan}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kota</Form.Label>\n                        <Form.Control\n                          name='kode kota'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kode_kota}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kecamatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\n\nexport function Kelurahan() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Kode Kelurahan',\n      selector: (row: any) => row.kode_kelurahan,\n      sortable: true,\n      sortField: 'kelurahan',\n    },\n    {\n      name: 'Kelurahan',\n      selector: (row: any) => row.kelurahan,\n      sortable: true,\n      sortField: 'kelurahan',\n    },\n    {\n      name: 'Kode Kecamatan',\n      selector: (row: any) => row.kode_kecamatan,\n      sortable: true,\n      sortField: 'Kode kecamatan',\n    },\n    {\n      name: 'Kecamatan',\n      selector: (row: any) => row.kecamatan,\n      sortable: true,\n      sortField: 'kecamatan',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kelurahan/LihatKelurahan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kelurahan/Updatekelurahan/' + record.id, {replace: true})\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#'>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(KELURAHAN_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek response api:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Kecamatan\n          </label>\n          <input type='text' className='form-control form-control form-control-solid' name='tags' />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Kelurahan\n          </label>\n          <input type='text' className='form-control form-control form-control-solid' name='tags' />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/Kelurahan/TambahKelurahan'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  kecamatan?: string\n  kode_kelurahan?: string\n  kode_kecamatan?: string\n  kelurahan?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kecamatan?: string\n  kode_kelurahan?: string\n  kode_kecamatan?: string\n  kelurahan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\nexport function LihatKelurahan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KELURAHAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kecamatan: jsonD.kecamatan,\n        kode_kelurahan: jsonD.kode_kelurahan,\n        kode_kecamatan: jsonD.kode_kecamatan,\n        kelurahan: jsonD.kelurahan,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kecamatan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kecamatan ? valuesFormikExist?.kecamatan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kelurahan</Form.Label>\n                        <Form.Control\n                          name='kode_kelurahan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.kode_kelurahan\n                              ? valuesFormikExist?.kode_kelurahan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kode_kecamatan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.kode_kecamatan\n                              ? valuesFormikExist?.kode_kecamatan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kelurahan</Form.Label>\n                        <Form.Control\n                          name='kelurahan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kelurahan ? valuesFormikExist?.kelurahan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kelurahan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kode_kecamatan?: string\n  kelurahan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode_kecamatan?: string\n  kelurahan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000//master/kelurahan\n\nexport function UpdateKelurahan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KELURAHAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kelurahan: jsonD.kelurahan,\n        kode_kecamatan: jsonD.kode_kecamatan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kelurahan: '',\n      kode_kecamatan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kelurahan: valuesFormik?.kelurahan\n          ? valuesFormik.kelurahan\n          : valuesFormikExist?.kelurahan\n          ? valuesFormikExist.kelurahan\n          : '',\n        kode_kecamatan: valuesFormik?.kode_kecamatan\n          ? valuesFormik.kode_kecamatan\n          : valuesFormikExist?.kode_kecamatan\n          ? valuesFormikExist.kode_kecamatan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${KELURAHAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${KELURAHAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/kelurahan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/kelurahan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>kelurahan</Form.Label>\n                        <Form.Control\n                          name='kelurahan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kelurahan || valuesFormik?.kelurahan === ''\n                              ? valuesFormik?.kelurahan\n                              : valuesFormikExist?.kelurahan\n                              ? valuesFormikExist?.kelurahan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kota</Form.Label>\n                        <Form.Control\n                          name='kode_kecamatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kode_kecamatan || valuesFormik?.kode_kecamatan === ''\n                              ? valuesFormik?.kode_kecamatan\n                              : valuesFormikExist?.kode_kecamatan\n                              ? valuesFormikExist?.kode_kecamatan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/kelurahan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kelurahan?: string\n  kode_kecamatan?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\n\nexport function TambahKelurahan() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kelurahan: '',\n      kode_kecamatan: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kelurahan: valuesFormik?.kelurahan ? valuesFormik.kelurahan : '',\n        kode_kecamatan: valuesFormik?.kode_kecamatan ? valuesFormik.kode_kecamatan : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${KELURAHAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${KELURAHAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/kelurahan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/kelurahan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>kelurahan</Form.Label>\n                        <Form.Control\n                          name='kelurahan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kelurahan}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kode_kecamatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kode_kecamatan}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/kelurahan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/master/jenis-kegiatan\n\nexport function JenisKegiatan() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {},\n    {\n      name: 'Jenis Kegiatan',\n      selector: (row: any) => row.jenis_kegiatan,\n      sortable: true,\n      sortField: 'jenis_kegiatan',\n      width: '300px',\n    },\n    {},\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisKegiatan/LihatJenisKegiatan/' + record.id, {\n                          replace: true,\n                        })\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisKegiatan/UpdateJenisKegiatan/' + record.id, {\n                          replace: true,\n                        })\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#'>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(JENIS_KEGIATAN_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek response api:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Jenis Kegiatan\n          </label>\n          <input type='text' className='form-control form-control form-control-solid' name='tags' />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/JenisKegiatan/TambahJenisKegiatan'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_kegiatan?: string\n  updated_by?: string\n  kode?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_kegiatan?: string\n  kode?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis_kegiatan` //http://localhost:3000/jenis_kegiatan\n\nexport function LihatJenisKegiatan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kegiatan: jsonD.jenis_kegiatan,\n        kode: jsonD.kode,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kegiatan</Form.Label>\n                        <Form.Control\n                          name='jenis kegiatan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_kegiatan\n                              ? valuesFormikExist?.jenis_kegiatan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>kode</Form.Label>\n                        <Form.Control\n                          name='kode'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/jenis_kegiatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kegiatan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  jenis_kegiatan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000//master/jenis-kegiatan\n\nexport function UpdateJenisKegiatan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kegiatan: jsonD.jenis_kegiatan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kegiatan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan\n          ? valuesFormik.jenis_kegiatan\n          : valuesFormikExist?.jenis_kegiatan\n          ? valuesFormikExist.jenis_kegiatan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_KEGIATAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_KEGIATAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKegiatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKegiatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kegiatan</Form.Label>\n                        <Form.Control\n                          name='jenis_kegiatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_kegiatan || valuesFormik?.jenis_kegiatan === ''\n                              ? valuesFormik?.jenis_kegiatan\n                              : valuesFormikExist?.jenis_kegiatan\n                              ? valuesFormikExist?.jenis_kegiatan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKegiatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kegiatan?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/master/jenis_kegiatan\n\nexport function TambahJenisKegiatan() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kegiatan: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan ? valuesFormik.jenis_kegiatan : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_KEGIATAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JENIS_KEGIATAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKegiatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKegiatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kegiatan</Form.Label>\n                        <Form.Control\n                          name='jenis_kegiatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.jenis_kegiatan}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKegiatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Swal from 'sweetalert2'\nimport * as Yup from 'yup'\nimport AsyncSelect from 'react-select/async'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000/master/jenis-kejadian\n\nconst validatorForm = Yup.object().shape({\n  jenis_kejadian: Yup.string().required('Wajib diisi'),\n})\n\nexport function JenisKejadian() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {},\n    {\n      name: 'Jenis Kejadian',\n      selector: (row: any) => row.jenis_kejadian,\n      sortable: true,\n      sortField: 'Jenis Kejadian',\n    },\n    {},\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisKejadian/LihatJenisKejadian/' + record.id, {\n                          replace: true,\n                        })\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisKejadian/UpdateJenisKejadian/' + record.id, {\n                          replace: true,\n                        })\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => konfirDel(record?.id)}>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  const fetchUsers = async (page: number) => {\n    setLoading(true)\n    const value = await axios.get(JENIS_KEJADIAN_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek response api:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const response = await axios.delete(`${JENIS_KEJADIAN_URL}/delete/${id},{deleted_by}`)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Jenis Kejaidan\n          </label>\n          <input type='text' className='form-control form-control form-control-solid' name='tags' />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/JenisKejadian/TambahJenisKejadian'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable columns={columns} data={temp} pagination />\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_kejadian?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_kejadian?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000/jenis-kejadian\n\nexport function LihatJenisKejadian() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kejadian: jsonD.jenis_kejadian,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='jenis_kejadian'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_kejadian\n                              ? valuesFormikExist?.jenis_kejadian\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKejadian'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kejadian?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_kejadian?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000//master/jenis-kejadian\n\nexport function UpdateJenisKejadian() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kejadian: jsonD.jenis_kejadian,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kejadian: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kejadian: valuesFormik?.jenis_kejadian\n          ? valuesFormik.jenis_kejadian\n          : valuesFormikExist?.jenis_kejadian\n          ? valuesFormikExist.jenis_kejadian\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_KEJADIAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_KEJADIAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKejadian', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKejadian', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='jenis_kejadian'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_kejadian || valuesFormik?.jenis_kejadian === ''\n                              ? valuesFormik?.jenis_kejadian\n                              : valuesFormikExist?.jenis_kejadian\n                              ? valuesFormikExist?.jenis_kejadian\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKejadian'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kejadian?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000/master/jenis-kejadian\n\nexport function TambahJenisKejadian() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kejadian: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kejadian: valuesFormik?.jenis_kejadian ? valuesFormik.jenis_kejadian : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_KEJADIAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JENIS_KEJADIAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKejadian', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKejadian', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='jenis_kejadian'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.jenis_kejadian}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKejadian'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PELANGGARAN_URL = `${API_URL}/master/Jenis-pelanggaran` //http://localhost:3000/Jenis-pelanggaran\nexport function JenisPelanggaran() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Jenis Pelanggaran',\n      selector: (row: any) => row.jenis_pelanggaran,\n      sortable: true,\n      sortField: 'jenis_pelanggaran',\n    },\n    {\n    },\n    {\n      \n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_PELANGGARAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Pelanggaran\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Pelanggaran</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Pelanggaran</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Pelanggaran\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` //http://localhost:3000/jenis-pertolongan\n\nexport function JenisPertolongan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Jenis Pertolongan',\n      selector: (row: any) => row.jenis_pertolongan,\n      sortable: true,\n      sortField: 'jenis_pertolongan',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_PERTOLONGAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Pertolongan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Pertolongan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Pertolongan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Pertolongan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERDA_PERKADA_URL = `${API_URL}/master/jenis-perda-perkada` //http://localhost:3000/jenis-perda-perkada\n\nexport function JenisPerdaPerkada() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Judul',\n      selector: (row: any) => row.judul,\n      sortable: true,\n      sortField: 'judul',\n    },\n    {\n      name: 'Deskripsi',\n      selector: (row: any) => row.deskripsi,\n      sortable: true,\n      sortField: 'deskripsi',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_PERDA_PERKADA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Judul Perda / Perkada\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Deskripsi\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Perda / Perkada</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Perda / Perkada</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Perda / Perkada\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` //http://localhost:3000/jenis-penindakan\n\nexport function JenisPenindakan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n      \n    },\n    {\n      name: 'Jenis Penindakan',\n      selector: (row: any) => row.jenis_penindakan,\n      sortable: true,\n      sortField: 'jenis_penindakan',\n    },\n    {\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_PENINDAKAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Kejadian\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n     \n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Penindakan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Penindakan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Penindakan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/jenis-korban-jiwa\n\nexport function KorbanJiwa() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {},\n    {\n      name: 'Jenis Korban Jiwa',\n      selector: (row: any) => row.jenis_korban_jiwa,\n      sortable: true,\n      sortField: 'jenis_korban_jiwa',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/KorbanJiwa/LihatKorbanJiwa/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/KorbanJiwa/UpdateKorbanJiwa/' + record.id, {\n                          replace: true,\n                        })\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#'>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(JENIS_KORBAN_JIWA_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek response api:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Korban Jiwa\n          </label>\n          <input type='text' className='form-control form-control form-control-solid' name='tags' />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/KorbanJiwa/TambahKorbanJiwa'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_korban_jiwa?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_korban_jiwa?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/master/korban_jiwa\n\nexport function LihatKorbanJiwa() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_korban_jiwa: jsonD.jenis_korban_jiwa,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Korban Jiwa</Form.Label>\n                        <Form.Control\n                          name='korban jiwa'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_korban_jiwa\n                              ? valuesFormikExist?.jenis_korban_jiwa\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KorbanJiwa'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_korban_jiwa?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_korban_jiwa?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000//master/jenis_korban_jiwa\n\nexport function UpdateKorbanJiwa() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_korban_jiwa: jsonD.jenis_korban_jiwa,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_korban_jiwa: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa\n          ? valuesFormik.jenis_korban_jiwa\n          : valuesFormikExist?.jenis_korban_jiwa\n          ? valuesFormikExist.jenis_korban_jiwa\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_KORBAN_JIWA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_KORBAN_JIWA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/KorbanJiwa', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/KorbanJiwa', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Korban Jiwa</Form.Label>\n                        <Form.Control\n                          name='jenis_korban_jiwa'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_korban_jiwa ||\n                            valuesFormik?.jenis_korban_jiwa === ''\n                              ? valuesFormik?.jenis_korban_jiwa\n                              : valuesFormikExist?.jenis_korban_jiwa\n                              ? valuesFormikExist?.jenis_korban_jiwa\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KorbanJiwa'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_korban_jiwa?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/master/jenis-korban-jiwa\n\nexport function TambahKorbanJiwa() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_korban_jiwa: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa ? valuesFormik.jenis_korban_jiwa : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_KORBAN_JIWA_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JENIS_KORBAN_JIWA_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/KorbanJiwa', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/KorbanJiwa', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>jenis Korban Jiwa</Form.Label>\n                        <Form.Control\n                          name='jenis_korban_jiwa'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.jenis_korban_jiwa}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KorbanJiwa'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` //http://localhost:3000/jenis-korban-material\n\nexport function KorbanMaterial() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n    },\n    {\n      name: 'Jenis Korban Material',\n      selector: (row: any) => row.jenis_korban_material,\n      sortable: true,\n      sortField: 'jenis_korban_material',\n    },\n    {\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_KORBAN_MATERIAL_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Korban Material\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Korban Material</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Korban Material</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Korban Material\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` //http://localhost:3000/jenis-bantuan\n\nexport function JenisBantuan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n      \n    },\n    {\n      name: 'Jenis Bantuan',\n      selector: (row: any) => row.jenis_bantuan,\n      sortable: true,\n      sortField: 'jenis_bantuan',\n    },\n    {\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_BANTUAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Bantuan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n     \n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Bantuan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Bantuan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis bantuan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function InstansiTerkait() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Instansi Terkait\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Instansi Terkait</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Instansi Terakait</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Instansi Terkait\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/master/agama\n\nexport function Agama() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {},\n    {\n      name: 'Agama',\n      selector: (row: any) => row.agama,\n      sortable: true,\n      sortField: 'agama',\n    },\n    {},\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Agama/LihatAgama/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Agama/UpdateAgama/' + record.id, {replace: true})\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#'>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(AGAMA_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek response api:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Agama\n          </label>\n          <input type='text' className='form-control form-control form-control-solid' name='tags' />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/Agama/TambahAgama'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  agama?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  agama?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/sarana-prasarana\n\nexport function LihatAgama() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${AGAMA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        agama: jsonD.agama,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>agama</Form.Label>\n                        <Form.Control\n                          name='agama'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.agama ? valuesFormikExist?.agama : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Agama'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  agama?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  agama?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000//master/agama\n\nexport function UpdateAgama() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${AGAMA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        agama: jsonD.agama,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      agama: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        agama: valuesFormik?.agama\n          ? valuesFormik.agama\n          : valuesFormikExist?.agama\n          ? valuesFormikExist.agama\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${AGAMA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${AGAMA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Agama', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Agama', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>agama</Form.Label>\n                        <Form.Control\n                          name='agama'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.agama || valuesFormik?.agama === ''\n                              ? valuesFormik?.agama\n                              : valuesFormikExist?.agama\n                              ? valuesFormikExist?.agama\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Agama'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  agama?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/master/agama\n\nexport function TambahAgama() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      agama: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        agama: valuesFormik?.agama ? valuesFormik.agama : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${AGAMA_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${AGAMA_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/agama', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/agama', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>agama</Form.Label>\n                        <Form.Control\n                          name='agama'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.agama}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Agama'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Swal from 'sweetalert2'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\n\nexport function Pangkat() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const response = await axios.delete(`${PANGKAT_URL}/delete/${id},{deletd_by}`)\n        console.log(response);\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {},\n    {\n      name: 'Pangkat',\n      selector: (row: any) => row.pangkat,\n      sortable: true,\n      sortField: 'pangkat',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Pangkat/LihatPangkat/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Pangkat/UpdatePangkat/' + record.id, {replace: true})\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => konfirDel(record.id)} >Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(PANGKAT_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek response api:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Pangkat\n          </label>\n          <input type='text' className='form-control form-control form-control-solid' name='tags' />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/Pangkat/TambahPangkat'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  pangkat?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  pangkat?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000//master/pangkat\n\nexport function UpdatePangkat() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${PANGKAT_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        pangkat: jsonD.pangkat,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      pangkat: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        pangkat: valuesFormik?.pangkat\n          ? valuesFormik.pangkat\n          : valuesFormikExist?.pangkat\n          ? valuesFormikExist.pangkat\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${PANGKAT_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${PANGKAT_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/pangkat', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/pangkat', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>pangkat</Form.Label>\n                        <Form.Control\n                          name='pangkat'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.pangkat || valuesFormik?.pangkat === ''\n                              ? valuesFormik?.pangkat\n                              : valuesFormikExist?.pangkat\n                              ? valuesFormikExist?.pangkat\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/pangkat'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  pangkat?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  pangkat?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\n\nexport function LihatPangkat() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${PANGKAT_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        pangkat: jsonD.pangkat,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Pangkat</Form.Label>\n                        <Form.Control\n                          name='pangkat'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.pangkat ? valuesFormikExist?.pangkat : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/pangkat'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  pangkat?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\n\nexport function TambahPangkat() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      pangkat: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        pangkat: valuesFormik?.pangkat ? valuesFormik.pangkat : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${PANGKAT_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${PANGKAT_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/pangkat', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/pangkat', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>pangkat</Form.Label>\n                        <Form.Control\n                          name='pangkat'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.pangkat}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/pangkat'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function TempatPelaksana() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Tempat Pelaksana\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      \n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Tempat Pelaksana</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Tempat Pelaksana</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Tempat Pelaksana\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SKPD_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/master/jenis-kegiatan\n\nexport function SKPD() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {},\n    {\n      name: 'SKPD',\n      selector: (row: any) => row.skpd,\n      sortable: true,\n      sortField: 'SKPD',\n      width: '300px',\n    },\n    {},\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/SKPD/LihatSKPD/' + record.id, {\n                          replace: true,\n                        })\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/SKPD/UpdateSKPD/' + record.id, {\n                          replace: true,\n                        })\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#'>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(SKPD_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek response api:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Jenis Kegiatan\n          </label>\n          <input type='text' className='form-control form-control form-control-solid' name='tags' />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/SKPD/TambahSKPD'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PENDIDIKAN_URL = `${API_URL}/master/pendidikan` //http://localhost:3000/master/pendidikan\n\nexport function Pendidikan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Pendidikan',\n      selector: (row: any) => row.pendidikan,\n      sortable: true,\n      sortField: 'pendidikan',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(PENDIDIKAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Pendidikan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      \n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Pendidikan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Pendidikan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Pendidikan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n    throw new Error('Function not implemented.');\n  }\n  \nfunction onEdit(record: any) {\nthrow new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { useFormik, FormikHelpers } from 'formik'\nimport { Link, useNavigate } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport clsx from 'clsx'\nimport Swal from 'sweetalert2'\n\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_SARANAPRASARANA_URL = `${API_URL}/master/jenis_saranaprasarana` //http://localhost:3000/master/jenis-sarana-prasarana\nexport interface FormInput {\n  jabatan?: string\n  status?: string\n  created_by?: number\n}\nexport function JenisSaranaPrasarana() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const navigate = useNavigate()\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n  \n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n      wrap: true,\n    },\n    {\n      name: 'Jabatan',\n      selector: (row: any) => row.jabatan,\n      sortable: true,\n      sortField: 'jabatan',\n    }, {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n      wrap: true,\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/master/LihatJabatan\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_SARANAPRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:', temp);\n\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n\n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :', data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      jabatan: '',\n      status: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jabatan: valuesFormik?.jabatan ? valuesFormik.jabatan : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_SARANAPRASARANA_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JENIS_SARANAPRASARANA_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/jabatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/jabatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Jabatan\n          </label>\n          <input\n            type='text' className='form-control form-control form-control-solid' name='tags' />\n        </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah Jabatan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Form.Group className=\"mb-3 form-control-solid\">\n              <Form.Label>Jabatan</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Jabatan\" />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3 form-control-solid\">\n            <label className='required fw-semibold fs-6 mb-2'>Status</label>\n              <select\n                data-control='select2'\n                data-placeholder='Status'\n                name='status'\n                className={clsx(\n                  'form-control form-control-solid mb-1',\n                  {\n                    'is-invalid':\n                      formik.touched.status && formik.errors.status,\n                  },\n                  {\n                    'is-valid':\n                      formik.touched.status && !formik.errors.status,\n                  }\n                )}\n                onChange={handleChangeFormik}\n                value={valuesFormik?.status}\n              >\n                <option value=''>Pilih</option>\n                <option value='JFT'>JFT</option>\n                <option value='Non JFT'>Non JFT</option>\n              </select>\n            </Form.Group>\n\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleClose}>\n              <i className=\"fa-solid fa-paper-plane\"></i>\n              Simpan\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable\n          columns={columns}\n          data={temp}\n          pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const GOLONGAN_URL = `${API_URL}/master/golongan` //http://localhost:3000/sarana-prasarana\n\nexport function Golongan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Golongan',\n      selector: (row: any) => row.golongan,\n      sortable: true,\n      sortField: 'golongan',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get( GOLONGAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Golongan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Golongan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Golongan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Golongan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const ESELON_URL = `${API_URL}/master/eselon` //http://localhost:3000/master/eselon\n\nexport function Eselon() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {},\n    {\n      name: 'Eselon',\n      selector: (row: any) => row.eselon,\n      sortable: true,\n      sortField: 'eselon',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(ESELON_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Eselon\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Eselon</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Kota</Form.Label>\n            <Form.Control type=\"Eselon\" placeholder=\"Eselon\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { useFormik, FormikHelpers } from 'formik'\nimport { Link, useNavigate } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport clsx from 'clsx'\nimport Swal from 'sweetalert2'\n\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JABATAN_URL = `${API_URL}/master/jabatan` //http://localhost:3000/sarana-prasarana\nexport interface FormInput {\n  jabatan?: string\n  status?: string\n  created_by?: number\n}\nexport function Jabatan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const navigate = useNavigate()\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n  \n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n      wrap: true,\n    },\n    {\n      name: 'Jabatan',\n      selector: (row: any) => row.jabatan,\n      sortable: true,\n      sortField: 'jabatan',\n    }, {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n      wrap: true,\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/master/LihatJabatan\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JABATAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:', temp);\n\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n\n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :', data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      jabatan: '',\n      status: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jabatan: valuesFormik?.jabatan ? valuesFormik.jabatan : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JABATAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JABATAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/jabatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/jabatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Jabatan\n          </label>\n          <input\n            type='text' className='form-control form-control form-control-solid' name='tags' />\n        </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah Jabatan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Form.Group className=\"mb-3 form-control-solid\">\n              <Form.Label>Jabatan</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Jabatan\" />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3 form-control-solid\">\n            <label className='required fw-semibold fs-6 mb-2'>Status</label>\n              <select\n                data-control='select2'\n                data-placeholder='Status'\n                name='status'\n                className={clsx(\n                  'form-control form-control-solid mb-1',\n                  {\n                    'is-invalid':\n                      formik.touched.status && formik.errors.status,\n                  },\n                  {\n                    'is-valid':\n                      formik.touched.status && !formik.errors.status,\n                  }\n                )}\n                onChange={handleChangeFormik}\n                value={valuesFormik?.status}\n              >\n                <option value=''>Pilih</option>\n                <option value='JFT'>JFT</option>\n                <option value='Non JFT'>Non JFT</option>\n              </select>\n            </Form.Group>\n\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleClose}>\n              <i className=\"fa-solid fa-paper-plane\"></i>\n              Simpan\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable\n          columns={columns}\n          data={temp}\n          pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function SumberInformasi() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Sumber Informasi\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Sumber Informasi</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Sumber Informasi</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Sumber Informasi\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Swal from 'sweetalert2'\nimport * as Yup from 'yup'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/JenisKekerasan` //http://localhost:3000/JenisKekerasan\n\nexport function JenisKekerasan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {},\n    {\n      name: 'Jenis Kekerasan',\n      selector: (row: any) => row.jenis_kekerasan,\n      sortable: true,\n      sortField: 'Jenis Kekerasan',\n    },\n    {},\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisKekerasan/LihatJenisKekerasan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisKekerasan/UpdateJenisKekerasan/' + record.id, {replace: true})\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#'> \n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_KEKERASAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Kekerasan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      \n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title> Tambah Jenis Kekerasan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Kekerasan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Kekerasan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PENERBITAN_URL = `${API_URL}/master/jenis-penerbitan` //http://localhost:3000/jenis-penerbitan\n\nexport function JenisPenerbitan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n   \n    {\n      name: 'Jenis Penertiban',\n      selector: (row: any) => row.jenis_penertiban,\n      sortable: true,\n      sortField: 'jenis_penertiban',\n    },\n    {\n      name: 'kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(PENERBITAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Penerbitan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Penerbitan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Penerbitan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Penerbitan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function JenisPenyelesaian() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Penyelesaian\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Penyelesaian</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Penyelesaian</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Penyelesaian\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React from 'react'\nimport {Navigate, Route, Routes, Outlet} from 'react-router-dom'\nimport {PageLink, PageTitle} from '../../../_metronic/layout/core'\n\nimport {Kota} from './components/Kota'\nimport {LihatKota} from './components/Lihat-master/LihatKota'\nimport {UpdateKota} from './components/Update-master/UpdateKota'\nimport {TambahKota} from './components/Tambah-master/TambahKota'\n\nimport {Kecamatan} from './components/Kecamatan'\nimport {LihatKecamatan} from './components/Lihat-master/LihatKecamatan'\nimport {UpdateKecamatan} from './components/Update-master/UpdateKecamatan'\nimport {TambahKecamatan} from './components/Tambah-master/TambahKecamatan'\n\nimport {Kelurahan} from './components/Kelurahan'\nimport {LihatKelurahan} from './components/Lihat-master/LihatKelurahan'\nimport {UpdateKelurahan} from './components/Update-master/UpdateKelurahan'\nimport {TambahKelurahan} from './components/Tambah-master/TambahKelurahan'\n\nimport {JenisKegiatan} from './components/JenisKegiatan'\nimport {LihatJenisKegiatan} from './components/Lihat-master/LihatJenisKegiatan'\nimport {UpdateJenisKegiatan} from './components/Update-master/UpdateJenisKegiatan'\nimport {TambahJenisKegiatan} from './components/Tambah-master/TambahJenisKegiatan'\n\nimport {JenisKejadian} from './components/JenisKejadian'\nimport {LihatJenisKejadian} from './components/Lihat-master/LihatJenisKejadian'\nimport {UpdateJenisKejadian} from './components/Update-master/UpdateJenisKejadian'\nimport {TambahJenisKejadian} from './components/Tambah-master/TambahJenisKejadian'\n\nimport {JenisPelanggaran} from './components/JenisPelanggaran'\nimport {JenisPertolongan} from './components/JenisPertolongan'\nimport {JenisPerdaPerkada} from './components/JenisPerdaPerkada'\nimport {JenisPenindakan} from './components/JenisPenindakan'\n\nimport {KorbanJiwa} from './components/KorbanJiwa'\nimport {LihatKorbanJiwa} from './components/Lihat-master/LihatKorbanJiwa'\nimport {UpdateKorbanJiwa} from './components/Update-master/UpdateKorbanJiwa'\nimport {TambahKorbanJiwa} from './components/Tambah-master/TambahKorbanJiwa'\n\nimport {KorbanMaterial} from './components/KorbanMaterial'\nimport {JenisBantuan} from './components/JenisBantuan'\nimport {InstansiTerkait} from './components/InstansiTerkait'\n\nimport {Agama} from './components/Agama'\nimport {LihatAgama} from './components/Lihat-master/LihatAgama'\nimport {UpdateAgama} from './components/Update-master/UpdateAgama'\nimport {TambahAgama} from './components/Tambah-master/TambahAgama'\n\nimport {Pangkat} from './components/Pangkat'\nimport {UpdatePangkat} from './components/Update-master/UpdatePangkat'\nimport {LihatPangkat} from './components/Lihat-master/LihatPangkat'\nimport {TambahPangkat} from './components/Tambah-master/TambahPangkat'\n\nimport {TempatPelaksana} from './components/TempatPelaksana'\nimport {SKPD} from './components/SKPD'\nimport {Pendidikan} from './components/Pendidikan'\nimport {JenisSaranaPrasarana} from './components/JenisSaranaPrasarana'\nimport {Golongan} from './components/Golongan'\nimport {Eselon} from './components/Eselon'\nimport {Jabatan} from './components/Jabatan'\nimport {SumberInformasi} from './components/SumberInformasi'\nimport {JenisKekerasan} from './components/JenisKekerasan'\nimport {JenisPenerbitan} from './components/JenisPenerbitan'\nimport {JenisPenyelesaian} from './components/JenisPenyelesaian'\n\nconst masterBreadCrumbs: Array<PageLink> = [\n  {\n    title: 'Master',\n    path: '/master/InformasiDataMaster',\n    isSeparator: false,\n    isActive: false,\n  },\n  {\n    title: '',\n    path: '',\n    isSeparator: true,\n    isActive: false,\n  },\n]\n\nconst MasterPage: React.FC = () => {\n  return (\n    <Routes>\n      <Route\n        element={\n          <>\n            <Outlet />\n          </>\n        }\n      >\n        <Route\n          path='Kota'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kota</PageTitle>\n              <Kota />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/UpdateKecamatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kecamatan</PageTitle>\n              <UpdateKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/LihatKecamatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kecamatan</PageTitle>\n              <LihatKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/TambahKecamatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kecamatan</PageTitle>\n              <TambahKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='SKPD'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>SKPD</PageTitle>\n              <SKPD />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Pangkat</PageTitle>\n              <Pangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/UpdatePangkat/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Pangkat</PageTitle>\n              <UpdatePangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/LihatPangkat/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Pangkat</PageTitle>\n              <LihatPangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/TambahPangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Pangkat</PageTitle>\n              <TambahPangkat />\n            </>\n          }\n        />\n        <Route\n          path='TempatPelaksana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tempat Pelaksana</PageTitle>\n              <TempatPelaksana />\n            </>\n          }\n        />\n        <Route\n          path='Golongan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Golongan </PageTitle>\n              <Golongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jenis Sarana Prasarana </PageTitle>\n              <JenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kecamatan</PageTitle>\n              <Kecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kota/UpdateKota/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kota</PageTitle>\n              <UpdateKota />\n            </>\n          }\n        />\n        <Route\n          path='Kota/LihatKota/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kota</PageTitle>\n              <LihatKota />\n            </>\n          }\n        />\n        <Route\n          path='Kota/TambahKota'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kota</PageTitle>\n              <TambahKota />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kelurahan</PageTitle>\n              <Kelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/UpdateKelurahan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kelurahan</PageTitle>\n              <UpdateKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/TambahKelurahan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kelurahan</PageTitle>\n              <TambahKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/LihatKelurahan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kelurahan</PageTitle>\n              <LihatKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kegiatan </PageTitle>\n              <JenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/UpdateJenisKegiatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisKegiatan</PageTitle>\n              <UpdateJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/TambahJenisKegiatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Kegiatan</PageTitle>\n              <TambahJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/LihatJenisKegiatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Kegiatan</PageTitle>\n              <LihatJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kejadian </PageTitle>\n              <JenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/UpdateJenisKejadian/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Kejadian</PageTitle>\n              <UpdateJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/LihatJenisKejadian/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Kejadian</PageTitle>\n              <LihatJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/TambahJenisKejadian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Kejadian</PageTitle>\n              <TambahJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='Agama'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Agama</PageTitle>\n              <Agama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/UpdateAgama/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Agama</PageTitle>\n              <UpdateAgama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/LihatAgama/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Agama</PageTitle>\n              <LihatAgama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/TambahAgama'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Agama</PageTitle>\n              <TambahAgama />\n            </>\n          }\n        />\n        <Route\n          path='Jabatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jabatan </PageTitle>\n              <Jabatan />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/tambah-jabatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jabatan </PageTitle>\n              <Jabatan />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/update-jabatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Agama</PageTitle>\n              <UpdateAgama />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/lihat-jabatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Agama</PageTitle>\n              <LihatAgama />\n            </>\n          }\n        />\n        <Route\n          path='Eselon'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Eselon </PageTitle>\n              <Eselon />\n            </>\n          }\n        />\n        <Route\n          path='Pendidikan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Pendidikan </PageTitle>\n              <Pendidikan />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Sumber Informasi </PageTitle>\n              <SumberInformasi />\n            </>\n          }\n        />\n        <Route\n          path='JenisPelanggaran'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pelanggaran</PageTitle>\n              <JenisPelanggaran />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pertolongan</PageTitle>\n              <JenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penindakan</PageTitle>\n              <JenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPerdaPerkada'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Perda / Perkada</PageTitle>\n              <JenisPerdaPerkada />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kekerasan</PageTitle>\n              <JenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenerbitan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penerbitan</PageTitle>\n              <JenisPenerbitan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenyelesaian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penyelesaian</PageTitle>\n              <JenisPenyelesaian />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Jiwa </PageTitle>\n              <KorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/UpdateKorbanJiwa/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update KorbanJiwa</PageTitle>\n              <UpdateKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/LihatKorbanJiwa/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat KorbanJiwa</PageTitle>\n              <LihatKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/TambahKorbanJiwa'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah KorbanJiwa</PageTitle>\n              <TambahKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Material</PageTitle>\n              <KorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Bantuan</PageTitle>\n              <JenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='InstansiTerkait'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Instansi Terkait</PageTitle>\n              <InstansiTerkait />\n            </>\n          }\n        />\n\n        <Route index element={<Navigate to='/master' />} />\n      </Route>\n    </Routes>\n  )\n}\n\nexport default MasterPage\n"],"names":["KOTA_URL","process","Kota","navigate","useNavigate","useState","strparam","qParamFind","setUriFind","val","valFilterKota","setFilterKota","useEffect","fetchUsers","columns","name","selector","row","id","sortable","sortField","wrap","kota","width","kode","text","className","align","cell","record","Fragment","DropdownButton","map","DropdownType","idx","as","ButtonGroup","size","variant","title","Dropdown","href","onClick","replace","Swal","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","axios","showConfirmButton","timer","handleFilter","uriParam","prevState","React","data","setData","setLoading","setTotalRows","perPage","temp","setTemp","page","response","total_data","fetchDT","value","console","log","total","htmlFor","type","onChange","event","target","placeholder","to","pagination","LihatKota","useParams","valuesFormikExist","setValuesFormikExist","fetchData","jsonD","paramValue","updated_by","prevstate","Form","readOnly","UpdateKota","selectedFile","valuesFormik","setValuesFormik","formik","useFormik","initialValues","onSubmit","values","formData","FormData","bodyparam","append","error","handleSubmit","prevValues","TambahKota","created_by","return_id","KECAMATAN_URL","Kecamatan","kode_kecamatan","kecamatan","kode_kota","LihatKecamatan","UpdateKecamatan","handleChangeFormik","TambahKecamatan","KELURAHAN_URL","Kelurahan","kode_kelurahan","kelurahan","LihatKelurahan","UpdateKelurahan","TambahKelurahan","JENIS_KEGIATAN_URL","JenisKegiatan","jenis_kegiatan","LihatJenisKegiatan","UpdateJenisKegiatan","TambahJenisKegiatan","JENIS_KEJADIAN_URL","Yup","shape","jenis_kejadian","required","JenisKejadian","konfirDel","LihatJenisKejadian","UpdateJenisKejadian","TambahJenisKejadian","JENIS_PELANGGARAN_URL","JenisPelanggaran","show","setShow","handleClose","jenis_pelanggaran","Modal","onHide","closeButton","Button","JENIS_PERTOLONGAN_URL","JenisPertolongan","jenis_pertolongan","JENIS_PERDA_PERKADA_URL","JenisPerdaPerkada","judul","deskripsi","JENIS_PENINDAKAN_URL","JenisPenindakan","jenis_penindakan","JENIS_KORBAN_JIWA_URL","KorbanJiwa","jenis_korban_jiwa","LihatKorbanJiwa","UpdateKorbanJiwa","TambahKorbanJiwa","JENIS_KORBAN_MATERIAL_URL","KorbanMaterial","jenis_korban_material","JENIS_BANTUAN_URL","JenisBantuan","jenis_bantuan","SARANA_PRASARANA_URL","InstansiTerkait","jenis_sarana_prasarana","status_sarana_prasarana","jumlah","kondisi","keterangan","dokumentasi","AGAMA_URL","Agama","agama","LihatAgama","UpdateAgama","TambahAgama","PANGKAT_URL","Pangkat","pangkat","UpdatePangkat","LihatPangkat","TambahPangkat","TempatPelaksana","SKPD_URL","SKPD","skpd","PENDIDIKAN_URL","Pendidikan","pendidikan","JENIS_SARANAPRASARANA_URL","JenisSaranaPrasarana","jabatan","status","clsx","touched","errors","GOLONGAN_URL","Golongan","golongan","ESELON_URL","Eselon","eselon","JABATAN_URL","Jabatan","SumberInformasi","JENIS_KEKERASAN_URL","JenisKekerasan","jenis_kekerasan","PENERBITAN_URL","JenisPenerbitan","jenis_penertiban","JenisPenyelesaian","masterBreadCrumbs","path","isSeparator","isActive","element","breadcrumbs","index"],"sourceRoot":""}