{"version":3,"file":"static/js/472.2c2b3f6d.chunk.js","mappings":"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","sources":["app/modules/master/components/Kota.tsx","app/modules/master/components/Lihat-master/LihatKota.tsx","app/modules/master/components/Update-master/UpdateKota.tsx","app/modules/master/components/Tambah-master/TambahKota.tsx","app/modules/master/components/Kecamatan.tsx","app/modules/master/components/Lihat-master/LihatKecamatan.tsx","app/modules/master/components/Update-master/UpdateKecamatan.tsx","app/modules/master/components/Tambah-master/TambahKecamatan.tsx","app/modules/master/components/Kelurahan.tsx","app/modules/master/components/Lihat-master/LihatKelurahan.tsx","app/modules/master/components/Update-master/UpdateKelurahan.tsx","app/modules/master/components/Tambah-master/TambahKelurahan.tsx","app/modules/master/components/JenisKegiatan.tsx","app/modules/master/components/Lihat-master/LihatJenisKegiatan.tsx","app/modules/master/components/Update-master/UpdateJenisKegiatan.tsx","app/modules/master/components/Tambah-master/TambahJenisKegiatan.tsx","app/modules/master/components/JenisKejadian.tsx","app/modules/master/components/Lihat-master/LihatJenisKejadian.tsx","app/modules/master/components/Update-master/UpdateJenisKejadian.tsx","app/modules/master/components/Tambah-master/TambahJenisKejadian.tsx","app/modules/master/components/JenisPelanggaran.tsx","app/modules/master/components/JenisPertolongan.tsx","app/modules/master/components/Lihat-master/LihatJenisPertolongan.tsx","app/modules/master/components/Update-master/UpdateJenisPertolongan.tsx","app/modules/master/components/JenisPerdaPerkada.tsx","app/modules/master/components/JenisPenindakan.tsx","app/modules/master/components/Lihat-master/LihatJenisPenindakan.tsx","app/modules/master/components/Update-master/UpdateJenisPenindakan.tsx","app/modules/master/components/KorbanJiwa.tsx","app/modules/master/components/Lihat-master/LihatKorbanJiwa.tsx","app/modules/master/components/Update-master/UpdateKorbanJiwa.tsx","app/modules/master/components/Tambah-master/TambahKorbanJiwa.tsx","app/modules/master/components/KorbanMaterial.tsx","app/modules/master/components/Lihat-master/LihatKorbanMaterial.tsx","app/modules/master/components/Update-master/UpdateKorbanMaterial.tsx","app/modules/master/components/JenisBantuan.tsx","app/modules/master/components/Lihat-master/LihatJenisBantuan.tsx","app/modules/master/components/Update-master/UpdateJenisBantuan.tsx","app/modules/master/components/InstansiTerkait.tsx","app/modules/master/components/KondisiSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatKondisiSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateKondisiSaranaPrasarana.tsx","app/modules/master/components/StatusSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatStatusSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateStatusSaranaPrasarana.tsx","app/modules/master/components/Agama.tsx","app/modules/master/components/Lihat-master/LihatAgama.tsx","app/modules/master/components/Update-master/UpdateAgama.tsx","app/modules/master/components/Tambah-master/TambahAgama.tsx","app/modules/master/components/Pangkat.tsx","app/modules/master/components/Update-master/UpdatePangkat.tsx","app/modules/master/components/Lihat-master/LihatPangkat.tsx","app/modules/master/components/Tambah-master/TambahPangkat.tsx","app/modules/master/components/TempatPelaksanaan.tsx","app/modules/master/components/Update-master/UpdateTempatPelaksanaan.tsx","app/modules/master/components/Lihat-master/LihatTempatPelaksanaan.tsx","app/modules/master/components/SKPD.tsx","app/modules/master/components/Update-master/UpdateSKPD.tsx","app/modules/master/components/Lihat-master/LihatSKPD.tsx","app/modules/master/components/Pendidikan.tsx","app/modules/master/components/Lihat-master/LihatPendidikan.tsx","app/modules/master/components/JenisSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateJenisSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatJenisSaranaPrasarana.tsx","app/modules/master/components/Golongan.tsx","app/modules/master/components/Eselon.tsx","app/modules/master/components/Update-master/UpdateEselon.tsx","app/modules/master/components/Lihat-master/LihatEselon.tsx","app/modules/master/components/Jabatan.tsx","app/modules/master/components/SumberInformasi.tsx","app/modules/master/components/Update-master/UpdateSumberInformasi.tsx","app/modules/master/components/Lihat-master/LihatSumberInformasi.tsx","app/modules/master/components/JenisKekerasan.tsx","app/modules/master/components/Update-master/UpdateJenisKekerasan.tsx","app/modules/master/components/Lihat-master/LihatJenisKekerasan.tsx","app/modules/master/components/JenisPenertiban.tsx","app/modules/master/components/Update-master/UpdateJenisPenertiban.tsx","app/modules/master/components/Lihat-master/LihatJenisPenertiban.tsx","app/modules/master/components/JenisPenyelesaian.tsx","app/modules/master/MasterPage.tsx"],"sourcesContent":["import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Swal from 'sweetalert2'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\n\nexport interface FormInput {\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/master/kota\n\nexport function Kota() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [valFilterKota, setFilterKota] = useState({val: ''})\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const response = await axios.delete(`${KOTA_URL}/delete/${id},{deleted_by}`)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n      wrap: true,\n    },\n    {\n      name: 'Kota',\n      selector: (row: any) => row.kota,\n      sortable: true,\n      sortField: 'kota',\n      width: '400px',\n      wrap: true,\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n      wrap: true,\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2  mt-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kota/LihatKota/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kota/UpdateKota/' + record.id, {replace: true})\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterKota.val !== '') {\n      uriParam += `&kota=${valFilterKota.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handleChangeInputKota = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterKota({val: event.target.value})\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${KOTA_URL}/findone-by-kota/:kota`)\n      setData(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(KOTA_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek kota:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Kota\n          </label>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='kota'\n            value={valFilterKota.val}\n            onChange={handleChangeInputKota}\n            placeholder='Kota'\n          />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary' onClick={handleFilter}>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/Kota/TambahKota'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        {/* onSubmit: async (values) => {\n      const bodyparam: FormInput = {}\n      valuesFormik?.kota ? (bodyparam.kota = valuesFormik.kota) : delete bodyparam.kota\n\n      try {\n        const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\n        if (response) {\n          fetchUsers(1)\n          handleClose()\n          setValuesFormik({})\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    }, */}\n      </>\n\n      <div className='table-responsive mt-30 ms-30 me-1'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  kota?: string\n  kode?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/sarana-prasarana\n\nexport function LihatKota() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KOTA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kota: jsonD.kota,\n        kode: jsonD.kode,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kota ? valuesFormikExist?.kota : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode</Form.Label>\n                        <Form.Control\n                          name='kode'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kota'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kota?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000//master/kota\n\nexport function UpdateKota() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KOTA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kota: jsonD.kota,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kota: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kota: valuesFormik?.kota\n          ? valuesFormik.kota\n          : valuesFormikExist?.kota\n          ? valuesFormikExist.kota\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${KOTA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${KOTA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Kota', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Kota', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kota || valuesFormik?.kota === ''\n                              ? valuesFormik?.kota\n                              : valuesFormikExist?.kota\n                              ? valuesFormikExist?.kota\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kota'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kota?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/master/kota\n\nexport function TambahKota() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kota: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kota: valuesFormik?.kota ? valuesFormik.kota : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\n        if (response) {\n            if (selectedFile) {\n              formData.append('file_dokumentasi', selectedFile)\n              const responseFile = await axios.post(\n                `${KOTA_URL}/upload-file/${response.data.data.return_id}`,\n                formData\n              )\n              if (responseFile) {\n                console.log('File success uploaded!')\n                Swal.fire({\n                  icon: 'success',\n                  title: 'Data berhasil disimpan',\n                  showConfirmButton: false,\n                  timer: 1500,\n                })\n                navigate('/master/Kota', {replace: true})\n              }\n              return\n            }\n            Swal.fire({\n              icon: 'success',\n              title: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            navigate('/master/Kota', {replace: true})\n          }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kota}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kota'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Swal from 'sweetalert2'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\n\nexport function Kecamatan() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Kode Kecamatan',\n      selector: (row: any) => row.kode_kecamatan,\n      sortable: true,\n      sortField: 'kode_kecamatan',\n      width: '200px',\n    },\n    {\n      name: 'kecamatan',\n      selector: (row: any) => row.kecamatan,\n      sortable: true,\n      sortField: 'kecamatan',\n      width: '250px',\n    },\n    {\n      name: 'Kode Kota',\n      selector: (row: any) => row.kode_kota,\n      sortable: true,\n      sortField: 'kode_kota',\n      width: '150px',\n    },\n    {\n      name: 'kota',\n      selector: (row: any) => row.kota,\n      sortable: true,\n      sortField: 'kota',\n      width: '300px',\n    },\n    {},\n\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kecamatan/LihatKecamatan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kecamatan/UpdateKecamatan/' + record.id, {replace: true})\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(KECAMATAN_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek response api:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${KECAMATAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6'>\n          <div className='form-group'>\n            <label htmlFor='' className='mb-3'>\n              Kota\n            </label>\n            <input\n              type='text'\n              className='form-control form-control form-control-solid'\n              name='tags'\n            />\n          </div>\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6'>\n          <div className='form-group'>\n            <label htmlFor='' className='mb-3'>\n              Kecamatan\n            </label>\n            <input\n              type='text'\n              className='form-control form-control form-control-solid'\n              name='tags'\n            />\n          </div>\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/Kecamatan/TambahKecamatan'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  kecamatan?: string\n  kode_kota?: string\n  kode_kecamatan?: string\n  kota?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kecamatan?: string\n  kode_kota?: string\n  kode_kecamatan?: string\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\nexport function LihatKecamatan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KECAMATAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kecamatan: jsonD.kecamatan,\n        kode_kota: jsonD.kode_kota,\n        kode_kecamatan: jsonD.kode_kecamatan,\n        kota: jsonD.kota,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kecamatan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kecamatan ? valuesFormikExist?.kecamatan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kota</Form.Label>\n                        <Form.Control\n                          name='kode_kota'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode_kota ? valuesFormikExist?.kode_kota : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kode_kecamatan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.kode_kecamatan\n                              ? valuesFormikExist?.kode_kecamatan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kota ? valuesFormikExist?.kota : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kecamatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kode_kota?: string\n  kecamatan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode_kota?: string\n  kecamatan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000//master/kecamatan\n\nexport function UpdateKecamatan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KECAMATAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kecamatan: jsonD.kecamatan,\n        kode_kota: jsonD.kode_kota,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kecamatan: '',\n      kode_kota: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kecamatan: valuesFormik?.kecamatan\n          ? valuesFormik.kecamatan\n          : valuesFormikExist?.kecamatan\n          ? valuesFormikExist.kecamatan\n          : '',\n        kode_kota: valuesFormik?.kode_kota\n          ? valuesFormik.kode_kota\n          : valuesFormikExist?.kode_kota\n          ? valuesFormikExist.kode_kota\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${KECAMATAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${KECAMATAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Kecamatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Kecamatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kecamatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kecamatan || valuesFormik?.kecamatan === ''\n                              ? valuesFormik?.kecamatan\n                              : valuesFormikExist?.kecamatan\n                              ? valuesFormikExist?.kecamatan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kota</Form.Label>\n                        <Form.Control\n                          name='kode_kota'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kode_kota || valuesFormik?.kode_kota === ''\n                              ? valuesFormik?.kode_kota\n                              : valuesFormikExist?.kode_kota\n                              ? valuesFormikExist?.kode_kota\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kecamatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kecamatan?: string\n  kode_kota?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\n\nexport function TambahKecamatan() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kecamatan: '',\n      kode_kota: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kecamatan: valuesFormik?.kecamatan ? valuesFormik.kecamatan : '',\n        kode_kota: valuesFormik?.kode_kota ? valuesFormik.kode_kota : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${KECAMATAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${KECAMATAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Kecamatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Kecamatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kecamatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kecamatan}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kota</Form.Label>\n                        <Form.Control\n                          name='kode kota'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kode_kota}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kecamatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Swal from 'sweetalert2'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\n\nexport function Kelurahan() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Kode Kelurahan',\n      selector: (row: any) => row.kode_kelurahan,\n      sortable: true,\n      sortField: 'kelurahan',\n    },\n    {\n      name: 'Kelurahan',\n      selector: (row: any) => row.kelurahan,\n      sortable: true,\n      sortField: 'kelurahan',\n    },\n    {\n      name: 'Kode Kecamatan',\n      selector: (row: any) => row.kode_kecamatan,\n      sortable: true,\n      sortField: 'Kode kecamatan',\n    },\n    {\n      name: 'Kecamatan',\n      selector: (row: any) => row.kecamatan,\n      sortable: true,\n      sortField: 'kecamatan',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kelurahan/LihatKelurahan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kelurahan/Updatekelurahan/' + record.id, {replace: true})\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(KELURAHAN_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek response api:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${KELURAHAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Kecamatan\n          </label>\n          <input type='text' className='form-control form-control form-control-solid' name='tags' />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Kelurahan\n          </label>\n          <input type='text' className='form-control form-control form-control-solid' name='tags' />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/Kelurahan/TambahKelurahan'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  kecamatan?: string\n  kode_kelurahan?: string\n  kode_kecamatan?: string\n  kelurahan?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kecamatan?: string\n  kode_kelurahan?: string\n  kode_kecamatan?: string\n  kelurahan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\nexport function LihatKelurahan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KELURAHAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kecamatan: jsonD.kecamatan,\n        kode_kelurahan: jsonD.kode_kelurahan,\n        kode_kecamatan: jsonD.kode_kecamatan,\n        kelurahan: jsonD.kelurahan,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kecamatan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kecamatan ? valuesFormikExist?.kecamatan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kelurahan</Form.Label>\n                        <Form.Control\n                          name='kode_kelurahan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.kode_kelurahan\n                              ? valuesFormikExist?.kode_kelurahan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kode_kecamatan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.kode_kecamatan\n                              ? valuesFormikExist?.kode_kecamatan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kelurahan</Form.Label>\n                        <Form.Control\n                          name='kelurahan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kelurahan ? valuesFormikExist?.kelurahan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kelurahan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kode_kecamatan?: string\n  kelurahan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode_kecamatan?: string\n  kelurahan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000//master/kelurahan\n\nexport function UpdateKelurahan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KELURAHAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kelurahan: jsonD.kelurahan,\n        kode_kecamatan: jsonD.kode_kecamatan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kelurahan: '',\n      kode_kecamatan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kelurahan: valuesFormik?.kelurahan\n          ? valuesFormik.kelurahan\n          : valuesFormikExist?.kelurahan\n          ? valuesFormikExist.kelurahan\n          : '',\n        kode_kecamatan: valuesFormik?.kode_kecamatan\n          ? valuesFormik.kode_kecamatan\n          : valuesFormikExist?.kode_kecamatan\n          ? valuesFormikExist.kode_kecamatan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${KELURAHAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${KELURAHAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/kelurahan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/kelurahan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>kelurahan</Form.Label>\n                        <Form.Control\n                          name='kelurahan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kelurahan || valuesFormik?.kelurahan === ''\n                              ? valuesFormik?.kelurahan\n                              : valuesFormikExist?.kelurahan\n                              ? valuesFormikExist?.kelurahan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kota</Form.Label>\n                        <Form.Control\n                          name='kode_kecamatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kode_kecamatan || valuesFormik?.kode_kecamatan === ''\n                              ? valuesFormik?.kode_kecamatan\n                              : valuesFormikExist?.kode_kecamatan\n                              ? valuesFormikExist?.kode_kecamatan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/kelurahan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kelurahan?: string\n  kode_kecamatan?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\n\nexport function TambahKelurahan() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kelurahan: '',\n      kode_kecamatan: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kelurahan: valuesFormik?.kelurahan ? valuesFormik.kelurahan : '',\n        kode_kecamatan: valuesFormik?.kode_kecamatan ? valuesFormik.kode_kecamatan : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${KELURAHAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${KELURAHAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/kelurahan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/kelurahan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>kelurahan</Form.Label>\n                        <Form.Control\n                          name='kelurahan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kelurahan}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kode_kecamatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kode_kecamatan}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/kelurahan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan`\n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  jenis_kegiatan?: string\n}\n\nconst validatorForm = Yup.object().shape({\n  jenis_kegiatan: Yup.string().required('Wajib diisi'),\n})\n\nexport function JenisKegiatan() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterJenisKegiatan, setFilterJenisKegiatan] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterJenisKegiatan.val !== '') {\n      uriParam += `${valFilterJenisKegiatan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterJenisKegiatan({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputJenisKegiatan = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisKegiatan({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {\n      name: 'Jenis Kegiatan',\n      selector: (row: any) => row.jenis_kegiatan,\n      sortable: true,\n      sortField: 'jenis_kegiatan',\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisKegiatan/LihatJenisKegiatan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_KEGIATAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan, //? valuesFormik.jenis_kegiatan : '',\n      }\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_KEGIATAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_KEGIATAN_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_kegiatan: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_KEGIATAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Jenis Kegiatan</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisKegiatan.val} //4\n            onChange={handleChangeInputJenisKegiatan}\n            placeholder='Jenis Kegiatan'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Kegiatan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Jenis Kegiatan</Form.Label>\n                  <Form.Control\n                      name='jenis_kegiatan'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_kegiatan && formik.errors.jenis_kegiatan,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_kegiatan && !formik.errors.jenis_kegiatan,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_kegiatan}\n                    />\n                    {formik.touched.jenis_kegiatan && formik.errors.jenis_kegiatan && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_kegiatan}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_kegiatan?: string\n  updated_by?: string\n  kode?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_kegiatan?: string\n  kode?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/jenis_kegiatan\n\nexport function LihatJenisKegiatan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kegiatan: jsonD.jenis_kegiatan,\n        kode: jsonD.kode,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kegiatan</Form.Label>\n                        <Form.Control\n                          name='jenis kegiatan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_kegiatan\n                              ? valuesFormikExist?.jenis_kegiatan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>kode</Form.Label>\n                        <Form.Control\n                          name='kode'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKegiatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kegiatan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  jenis_kegiatan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000//master/jenis-kegiatan\n\nexport function UpdateJenisKegiatan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kegiatan: jsonD.jenis_kegiatan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kegiatan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan\n          ? valuesFormik.jenis_kegiatan\n          : valuesFormikExist?.jenis_kegiatan\n          ? valuesFormikExist.jenis_kegiatan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_KEGIATAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_KEGIATAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKegiatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKegiatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kegiatan</Form.Label>\n                        <Form.Control\n                          name='jenis_kegiatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_kegiatan || valuesFormik?.jenis_kegiatan === ''\n                              ? valuesFormik?.jenis_kegiatan\n                              : valuesFormikExist?.jenis_kegiatan\n                              ? valuesFormikExist?.jenis_kegiatan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKegiatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kegiatan?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/master/jenis_kegiatan\n\nexport function TambahJenisKegiatan() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kegiatan: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan ? valuesFormik.jenis_kegiatan : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_KEGIATAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JENIS_KEGIATAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKegiatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKegiatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kegiatan</Form.Label>\n                        <Form.Control\n                          name='jenis_kegiatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.jenis_kegiatan}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKegiatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  jenis_kejadian?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  jenis_kejadian: Yup.string().required('Wajib diisi'),\n})\n\nexport function JenisKejadian() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterJenisKejadian, setFilterJenisKejadian] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterJenisKejadian.val !== '') {\n      uriParam += `${valFilterJenisKejadian.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterJenisKejadian({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputJenisKejadian = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisKejadian({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Jenis Kejadian',\n      selector: (row: any) => row.jenis_kejadian,\n      sortable: true,\n      sortField: 'jenis_kejadian',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisKejadian/LihatJenisKejadian/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_KEJADIAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_kejadian: valuesFormik?.jenis_kejadian, //? valuesFormik.jenis_kejadian : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_KEJADIAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_KEJADIAN_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_kejadian: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_KEJADIAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Jenis Kejadian</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisKejadian.val} //4\n            onChange={handleChangeInputJenisKejadian}\n            placeholder='Jenis Kejadian'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Kejadian</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Jenis Kejadian</Form.Label>\n                  <Form.Control\n                      name='jenis_kejadian'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_kejadian && formik.errors.jenis_kejadian,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_kejadian && !formik.errors.jenis_kejadian,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_kejadian}\n                    />\n                    {formik.touched.jenis_kejadian && formik.errors.jenis_kejadian && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_kejadian}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_kejadian?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_kejadian?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000/jenis-kejadian\n\nexport function LihatJenisKejadian() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kejadian: jsonD.jenis_kejadian,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='jenis_kejadian'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_kejadian\n                              ? valuesFormikExist?.jenis_kejadian\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKejadian'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kejadian?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_kejadian?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000//master/jenis-kejadian\n\nexport function UpdateJenisKejadian() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kejadian: jsonD.jenis_kejadian,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kejadian: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kejadian: valuesFormik?.jenis_kejadian\n          ? valuesFormik.jenis_kejadian\n          : valuesFormikExist?.jenis_kejadian\n          ? valuesFormikExist.jenis_kejadian\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_KEJADIAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_KEJADIAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKejadian', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKejadian', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='jenis_kejadian'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_kejadian || valuesFormik?.jenis_kejadian === ''\n                              ? valuesFormik?.jenis_kejadian\n                              : valuesFormikExist?.jenis_kejadian\n                              ? valuesFormikExist?.jenis_kejadian\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKejadian'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kejadian?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000/master/jenis-kejadian\n\nexport function TambahJenisKejadian() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kejadian: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kejadian: valuesFormik?.jenis_kejadian ? valuesFormik.jenis_kejadian : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_KEJADIAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JENIS_KEJADIAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKejadian', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKejadian', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='jenis_kejadian'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.jenis_kejadian}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKejadian'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PELANGGARAN_URL = `${API_URL}/master/Jenis-pelanggaran` //http://localhost:3000/Jenis-pelanggaran\nexport function JenisPelanggaran() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Jenis Pelanggaran',\n      selector: (row: any) => row.jenis_pelanggaran,\n      sortable: true,\n      sortField: 'jenis_pelanggaran',\n    },\n    {\n    },\n    {\n      \n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_PELANGGARAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Pelanggaran\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Pelanggaran</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Pelanggaran</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Pelanggaran\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  jenis_pertolongan?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  jenis_pertolongan: Yup.string().required('Wajib diisi'),\n})\n\nexport function JenisPertolongan() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterJenisPertolongan, setFilterJenisPertolongan] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterJenisPertolongan.val !== '') {\n      uriParam += `${valFilterJenisPertolongan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterJenisPertolongan({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputJenisPertolongan = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisPertolongan({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Jenis Pertolongan',\n      selector: (row: any) => row.jenis_pertolongan,\n      sortable: true,\n      sortField: 'jenis_pertolongan',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisPertolongan/LihatJenisPertolongan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_PERTOLONGAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_pertolongan: valuesFormik?.jenis_pertolongan, //? valuesFormik.jenis_pertolongan : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_PERTOLONGAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_PERTOLONGAN_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_pertolongan: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_PERTOLONGAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Jenis Pertolongan</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisPertolongan.val} //4\n            onChange={handleChangeInputJenisPertolongan}\n            placeholder='Jenis pertolongan'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Pertolongan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Jenis Pertolongan</Form.Label>\n                  <Form.Control\n                      name='jenis_pertolongan'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_pertolongan && formik.errors.jenis_pertolongan,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_pertolongan && !formik.errors.jenis_pertolongan,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_pertolongan}\n                    />\n                    {formik.touched.jenis_pertolongan && formik.errors.jenis_pertolongan && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_pertolongan}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_pertolongan?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_pertolongan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` //http://localhost:3000/sarana-prasarana\n\nexport function LihatJenisPertolongan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_pertolongan: jsonD.jenis_pertolongan,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Pertolongan</Form.Label>\n                        <Form.Control\n                          name='jenis_pertolongan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.jenis_pertolongan ? valuesFormikExist?.jenis_pertolongan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPertolongan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_pertolongan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  jenis_pertolongan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` //http://localhost:3000//master/JenisPertolongan\n\nexport function UpdateJenisPertolongan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_pertolongan: jsonD.jenis_pertolongan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_pertolongan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_pertolongan: valuesFormik?.jenis_pertolongan\n          ? valuesFormik.jenis_pertolongan\n          : valuesFormikExist?.jenis_pertolongan\n          ? valuesFormikExist.jenis_pertolongan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_PERTOLONGAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_PERTOLONGAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisPertolongan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisPertolongan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Pertolongan</Form.Label>\n                        <Form.Control\n                          name='jenis_pertolongan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_pertolongan || valuesFormik?.jenis_pertolongan === ''\n                              ? valuesFormik?.jenis_pertolongan\n                              : valuesFormikExist?.jenis_pertolongan\n                              ? valuesFormikExist?.jenis_pertolongan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPertolongan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERDA_PERKADA_URL = `${API_URL}/master/jenis-perda-perkada` //http://localhost:3000/jenis-perda-perkada\n\nexport function JenisPerdaPerkada() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Judul',\n      selector: (row: any) => row.judul,\n      sortable: true,\n      sortField: 'judul',\n    },\n    {\n      name: 'Deskripsi',\n      selector: (row: any) => row.deskripsi,\n      sortable: true,\n      sortField: 'deskripsi',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_PERDA_PERKADA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Judul Perda / Perkada\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Deskripsi\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Perda / Perkada</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Perda / Perkada</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Perda / Perkada\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  jenis_penindakan?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  jenis_penindakan: Yup.string().required('Wajib diisi'),\n})\n\nexport function JenisPenindakan() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterJenisPenindakan, setFilterJenisPenindakan] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterJenisPenindakan.val !== '') {\n      uriParam += `${valFilterJenisPenindakan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterJenisPenindakan({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputJenisPenindakan = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisPenindakan({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Jenis Penindakan',\n      selector: (row: any) => row.jenis_penindakan,\n      sortable: true,\n      sortField: 'jenis_penindakan',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisPenindakan/LihatJenisPenindakan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_PENINDAKAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_penindakan: valuesFormik?.jenis_penindakan, //? valuesFormik.jenis_penindakan : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_PENINDAKAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_PENINDAKAN_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_penindakan: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_PENINDAKAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Jenis Penindakan</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisPenindakan.val} //4\n            onChange={handleChangeInputJenisPenindakan}\n            placeholder='Jenis Penindakan'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Penindakan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Jenis Penindakan</Form.Label>\n                  <Form.Control\n                      name='jenis_penindakan'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_penindakan && formik.errors.jenis_penindakan,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_penindakan && !formik.errors.jenis_penindakan,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_penindakan}\n                    />\n                    {formik.touched.jenis_penindakan && formik.errors.jenis_penindakan && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_penindakan}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_penindakan?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_penindakan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` //http://localhost:3000/jenis-Penindakan\n\nexport function LihatJenisPenindakan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_penindakan: jsonD.jenis_penindakan,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Penindakan</Form.Label>\n                        <Form.Control\n                          name='jenis_penindakan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_penindakan\n                              ? valuesFormikExist?.jenis_penindakan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Jenispenindakan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_penindakan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_penindakan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` //http://localhost:3000//master/jenis-Penindakan\n\nexport function UpdateJenisPenindakan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_penindakan: jsonD.jenis_penindakan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_penindakan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_penindakan: valuesFormik?.jenis_penindakan\n          ? valuesFormik.jenis_penindakan\n          : valuesFormikExist?.jenis_penindakan\n          ? valuesFormikExist.jenis_penindakan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_PENINDAKAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_PENINDAKAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisPenindakan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisPenindakan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Penindakan</Form.Label>\n                        <Form.Control\n                          name='jenis_penindakan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_penindakan || valuesFormik?.jenis_penindakan === ''\n                              ? valuesFormik?.jenis_penindakan\n                              : valuesFormikExist?.jenis_penindakan\n                              ? valuesFormikExist?.jenis_penindakan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPenindakan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nexport interface FormInput {\n  jenis_korban_jiwa?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  jenis_korban_jiwa: Yup.string().required('Wajib diisi'),\n})\n\nexport function KorbanJiwa() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterKorbanJiwa, setFilterKorbanJiwa] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterKorbanJiwa.val !== '') {\n      uriParam += `${valFilterKorbanJiwa.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterKorbanJiwa({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputKorbanJiwa = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterKorbanJiwa({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Korban Jiwa',\n      selector: (row: any) => row.jenis_korban_jiwa,\n      sortable: true,\n      sortField: 'jenis_korban_jiwa',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    menuPosition=\"top\"\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/KorbanJiwa/LihatKorbanJiwa/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_KORBAN_JIWA_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa, //? valuesFormik.jenis_korban_jiwa : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_KORBAN_JIWA_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_KORBAN_JIWA_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_korban_jiwa: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_KORBAN_JIWA_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>KorbanJiwa</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterKorbanJiwa.val} //4\n            onChange={handleChangeInputKorbanJiwa}\n            placeholder='Korban Jiwa'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Korban Jiwa</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Korban Jiwa</Form.Label>\n                  <Form.Control\n                      name='jenis_korban_jiwa'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_korban_jiwa && formik.errors.jenis_korban_jiwa,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_korban_jiwa && !formik.errors.jenis_korban_jiwa,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_korban_jiwa}\n                    />\n                    {formik.touched.jenis_korban_jiwa && formik.errors.jenis_korban_jiwa && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_korban_jiwa}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_korban_jiwa?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_korban_jiwa?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/master/korban_jiwa\n\nexport function LihatKorbanJiwa() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_korban_jiwa: jsonD.jenis_korban_jiwa,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Korban Jiwa</Form.Label>\n                        <Form.Control\n                          name='korban jiwa'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_korban_jiwa\n                              ? valuesFormikExist?.jenis_korban_jiwa\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KorbanJiwa'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_korban_jiwa?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_korban_jiwa?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000//master/jenis_korban_jiwa\n\nexport function UpdateKorbanJiwa() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_korban_jiwa: jsonD.jenis_korban_jiwa,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_korban_jiwa: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa\n          ? valuesFormik.jenis_korban_jiwa\n          : valuesFormikExist?.jenis_korban_jiwa\n          ? valuesFormikExist.jenis_korban_jiwa\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_KORBAN_JIWA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_KORBAN_JIWA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/KorbanJiwa', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/KorbanJiwa', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Korban Jiwa</Form.Label>\n                        <Form.Control\n                          name='jenis_korban_jiwa'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_korban_jiwa ||\n                            valuesFormik?.jenis_korban_jiwa === ''\n                              ? valuesFormik?.jenis_korban_jiwa\n                              : valuesFormikExist?.jenis_korban_jiwa\n                              ? valuesFormikExist?.jenis_korban_jiwa\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KorbanJiwa'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_korban_jiwa?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/master/jenis-korban-jiwa\n\nexport function TambahKorbanJiwa() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_korban_jiwa: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa ? valuesFormik.jenis_korban_jiwa : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_KORBAN_JIWA_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JENIS_KORBAN_JIWA_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/KorbanJiwa', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/KorbanJiwa', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>jenis Korban Jiwa</Form.Label>\n                        <Form.Control\n                          name='jenis_korban_jiwa'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.jenis_korban_jiwa}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KorbanJiwa'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nexport interface FormInput {\n  jenis_korban_material?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  jenis_korban_material: Yup.string().required('Wajib diisi'),\n})\n\nexport function KorbanMaterial() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterKorbanMaterial, setFilterKorbanMaterial] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterKorbanMaterial.val !== '') {\n      uriParam += `${valFilterKorbanMaterial.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterKorbanMaterial({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputKorbanMaterial = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterKorbanMaterial({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Korban Material',\n      selector: (row: any) => row.jenis_korban_material,\n      sortable: true,\n      sortField: 'jenis_korban_material',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    menuPosition=\"top\"\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/KorbanMaterial/LihatKorbanMaterial/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_korban_material: valuesFormik?.jenis_korban_material, //? valuesFormik.jenis_korban_material : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_KORBAN_MATERIAL_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_KORBAN_MATERIAL_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_korban_material: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_KORBAN_MATERIAL_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Korban Material</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterKorbanMaterial.val} //4\n            onChange={handleChangeInputKorbanMaterial}\n            placeholder='Korban Material'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Korban Material</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Korban Material</Form.Label>\n                  <Form.Control\n                      name='jenis_korban_material'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_korban_material && formik.errors.jenis_korban_material,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_korban_material && !formik.errors.jenis_korban_material,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_korban_material}\n                    />\n                    {formik.touched.jenis_korban_material && formik.errors.jenis_korban_material && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_korban_material}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_korban_material?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_korban_material?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` //http://localhost:3000/master/korban_jiwa\n\nexport function LihatKorbanMaterial() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_korban_material: jsonD.jenis_korban_material,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Korban Material</Form.Label>\n                        <Form.Control\n                          name='jenis_korban_material'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_korban_material\n                              ? valuesFormikExist?.jenis_korban_material\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KorbanJiwa'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_korban_material?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_korban_material?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` //http://localhost:3000/master/korban_jiwa\n\nexport function UpdateKorbanMaterial() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_korban_material: jsonD.jenis_korban_material,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_korban_material: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_korban_material: valuesFormik?.jenis_korban_material\n          ? valuesFormik.jenis_korban_material\n          : valuesFormikExist?.jenis_korban_material\n          ? valuesFormikExist.jenis_korban_material\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_KORBAN_MATERIAL_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_KORBAN_MATERIAL_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/KorbanMaterial', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/KorbanMaterial', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Korban Material</Form.Label>\n                        <Form.Control\n                          name='jenis_korban_material'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_korban_material || valuesFormik?.jenis_korban_material === ''\n                              ? valuesFormik?.jenis_korban_material\n                              : valuesFormikExist?.jenis_korban_material\n                              ? valuesFormikExist?.jenis_korban_material\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KorbanMaterial'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  jenis_bantuan?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  jenis_bantuan: Yup.string().required('Wajib diisi'),\n})\n\nexport function JenisBantuan() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterJenisBantuan, setFilterJenisBantuan] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterJenisBantuan.val !== '') {\n      uriParam += `${valFilterJenisBantuan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterJenisBantuan({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputJenisBantuan = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisBantuan({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Jenis Bantuan',\n      selector: (row: any) => row.jenis_bantuan,\n      sortable: true,\n      sortField: 'jenis_bantuan',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisBantuan/LihatJenisBantuan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_BANTUAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_bantuan: valuesFormik?.jenis_bantuan, //? valuesFormik.jenis_bantuan : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_BANTUAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_BANTUAN_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_bantuan: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_BANTUAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_BANTUAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Jenis Bantuan</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisBantuan.val} //4\n            onChange={handleChangeInputJenisBantuan}\n            placeholder='Jenis Bantuan'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Bantuan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Jenis Bantuan</Form.Label>\n                  <Form.Control\n                      name='jenis_bantuan'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_bantuan && formik.errors.jenis_bantuan,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_bantuan && !formik.errors.jenis_bantuan,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_bantuan}\n                    />\n                    {formik.touched.jenis_bantuan && formik.errors.jenis_bantuan && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_bantuan}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_bantuan?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_bantuan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` //http://localhost:3000/JenisBantuan\n\nexport function LihatJenisBantuan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_bantuan: jsonD.jenis_bantuan,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Bantuan</Form.Label>\n                        <Form.Control\n                          name='jenis_bantuan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_bantuan\n                              ? valuesFormikExist?.jenis_bantuan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisBantuan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_bantuan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_bantuan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` //http://localhost:3000//master/JenisKekerasan\n\nexport function UpdateJenisBantuan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_bantuan: jsonD.jenis_bantuan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_bantuan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_bantuan: valuesFormik?.jenis_bantuan\n          ? valuesFormik.jenis_bantuan\n          : valuesFormikExist?.jenis_bantuan\n          ? valuesFormikExist.jenis_bantuan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_BANTUAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_BANTUAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisBantuan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisBantuan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Bantuan</Form.Label>\n                        <Form.Control\n                          name='jenis_bantuan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_bantuan || valuesFormik?.jenis_bantuan === ''\n                              ? valuesFormik?.jenis_bantuan\n                              : valuesFormikExist?.jenis_bantuan\n                              ? valuesFormikExist?.jenis_bantuan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisBantuan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function InstansiTerkait() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Instansi Terkait\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Instansi Terkait</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Instansi Terakait</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Instansi Terkait\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  kondisi_sarana_prasarana?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  kondisi_sarana_prasarana: Yup.string().required('Wajib diisi'),\n})\n\nexport function KondisiSaranaPrasarana() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterKondisiSaranaPrasarana, setFilterKondisiSaranaPrasarana] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterKondisiSaranaPrasarana.val !== '') {\n      uriParam += `${valFilterKondisiSaranaPrasarana.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterKondisiSaranaPrasarana({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputKondisiSaranaPrasarana = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterKondisiSaranaPrasarana({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Kondisi Sarana Prasarana',\n      selector: (row: any) => row.kondisi_sarana_prasarana,\n      sortable: true,\n      sortField: 'kondisi_sarana_prasarana',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/KondisiSaranaPrasarana/LihatKondisiSaranaPrasarana/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        kondisi_sarana_prasarana: valuesFormik?.kondisi_sarana_prasarana, //? valuesFormik.kondisi_sarana_prasarana : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${KONDISI_SARANA_PRASARANA_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${KONDISI_SARANA_PRASARANA_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      kondisi_sarana_prasarana: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${KONDISI_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Kondisi Sarana Prasarana</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterKondisiSaranaPrasarana.val} //4\n            onChange={handleChangeInputKondisiSaranaPrasarana}\n            placeholder='Kondisi Sarana Prasarana'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Kondisi Sarana Prasarana</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Kondisi Sarana Prasarana</Form.Label>\n                  <Form.Control\n                      name='kondisi_sarana_prasarana'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.kondisi_sarana_prasarana && formik.errors.kondisi_sarana_prasarana,\n                        },\n                        {\n                          'is-valid': formik.touched.kondisi_sarana_prasarana && !formik.errors.kondisi_sarana_prasarana,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.kondisi_sarana_prasarana}\n                    />\n                    {formik.touched.kondisi_sarana_prasarana && formik.errors.kondisi_sarana_prasarana && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.kondisi_sarana_prasarana}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  kondisi_sarana_prasarana?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kondisi_sarana_prasarana?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` //http://localhost:3000/Kondisi-Penindakan\n\nexport function LihatKondisiSaranaPrasarana() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kondisi_sarana_prasarana: jsonD.kondisi_sarana_prasarana,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kondisi Sarana Prasarana</Form.Label>\n                        <Form.Control\n                          name='kondisi_sarana_prasarana'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.kondisi_sarana_prasarana\n                              ? valuesFormikExist?.kondisi_sarana_prasarana\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KondisiSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kondisi_sarana_prasarana?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kondisi_sarana_prasarana?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\n\nexport function UpdateKondisiSaranaPrasarana() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kondisi_sarana_prasarana: jsonD.kondisi_sarana_prasarana,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kondisi_sarana_prasarana: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kondisi_sarana_prasarana: valuesFormik?.kondisi_sarana_prasarana\n          ? valuesFormik.kondisi_sarana_prasarana\n          : valuesFormikExist?.kondisi_sarana_prasarana\n          ? valuesFormikExist.kondisi_sarana_prasarana\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${KONDISI_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${KONDISI_SARANA_PRASARANA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/KondisiSaranaPrasarana', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/KondisiSaranaPrasarana', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kondisi Sarana Prasarana</Form.Label>\n                        <Form.Control\n                          name='kondisi_sarana_prasarana'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kondisi_sarana_prasarana || valuesFormik?.kondisi_sarana_prasarana === ''\n                              ? valuesFormik?.kondisi_sarana_prasarana\n                              : valuesFormikExist?.kondisi_sarana_prasarana\n                              ? valuesFormikExist?.kondisi_sarana_prasarana\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KondisiSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  status_sarana_prasarana?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  status_sarana_prasarana: Yup.string().required('Wajib diisi'),\n})\n\nexport function StatusSaranaPrasarana() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterStatusSaranaPrasarana, setFilterStatusSaranaPrasarana] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterStatusSaranaPrasarana.val !== '') {\n      uriParam += `${valFilterStatusSaranaPrasarana.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterStatusSaranaPrasarana({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputStatusSaranaPrasarana = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterStatusSaranaPrasarana({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Status Sarana Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/StatusSaranaPrasarana/LihatStatusSaranaPrasarana/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        status_sarana_prasarana: valuesFormik?.status_sarana_prasarana, //? valuesFormik.status_sarana_prasarana : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${STATUS_SARANA_PRASARANA_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${STATUS_SARANA_PRASARANA_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      status_sarana_prasarana: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${STATUS_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Status Sarana Prasarana</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterStatusSaranaPrasarana.val} //4\n            onChange={handleChangeInputStatusSaranaPrasarana}\n            placeholder='Status Sarana Prasarana'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Status Sarana Prasarana</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Status Sarana Prasarana</Form.Label>\n                  <Form.Control\n                      name='status_sarana_prasarana'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.status_sarana_prasarana && formik.errors.status_sarana_prasarana,\n                        },\n                        {\n                          'is-valid': formik.touched.status_sarana_prasarana && !formik.errors.status_sarana_prasarana,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.status_sarana_prasarana}\n                    />\n                    {formik.touched.status_sarana_prasarana && formik.errors.status_sarana_prasarana && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.status_sarana_prasarana}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  status_sarana_prasarana?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  status_sarana_prasarana?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` //http://localhost:3000/jenis-Penindakan\n\nexport function LihatStatusSaranaPrasarana() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        status_sarana_prasarana: jsonD.status_sarana_prasarana,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Status Sarana Prasarana</Form.Label>\n                        <Form.Control\n                          name='status_sarana_prasarana'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.status_sarana_prasarana\n                              ? valuesFormikExist?.status_sarana_prasarana\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/StatusSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  status_sarana_prasarana?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  status_sarana_prasarana?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\n\nexport function UpdateStatusSaranaPrasarana() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        status_sarana_prasarana: jsonD.status_sarana_prasarana,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      status_sarana_prasarana: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        status_sarana_prasarana: valuesFormik?.status_sarana_prasarana\n          ? valuesFormik.status_sarana_prasarana\n          : valuesFormikExist?.status_sarana_prasarana\n          ? valuesFormikExist.status_sarana_prasarana\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${STATUS_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${STATUS_SARANA_PRASARANA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/StatusSaranaPrasarana', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/StatusSaranaPrasarana', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Status Sarana Prasarana</Form.Label>\n                        <Form.Control\n                          name='status_sarana_prasarana'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.status_sarana_prasarana || valuesFormik?.status_sarana_prasarana === ''\n                              ? valuesFormik?.status_sarana_prasarana\n                              : valuesFormikExist?.status_sarana_prasarana\n                              ? valuesFormikExist?.status_sarana_prasarana\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/StatusSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const AGAMA_URL = `${API_URL}/master/agama` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nexport interface FormInput {\n  agama?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  agama: Yup.string().required('Wajib diisi'),\n})\n\nexport function Agama() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterAgama, setFilterAgama] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterAgama.val !== '') {\n      uriParam += `${valFilterAgama.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterAgama({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputAgama = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterAgama({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Agama',\n      selector: (row: any) => row.agama,\n      sortable: true,\n      sortField: 'agama',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    menuPosition=\"top\"\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Agama/LihatAgama/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${AGAMA_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${AGAMA_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        agama: valuesFormik?.agama, //? valuesFormik.agama : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${AGAMA_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${AGAMA_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      agama: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${AGAMA_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${AGAMA_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Agama</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterAgama.val} //4\n            onChange={handleChangeInputAgama}\n            placeholder='Agama'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Agama</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Agama</Form.Label>\n                  <Form.Control\n                      name='agama'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.agama && formik.errors.agama,\n                        },\n                        {\n                          'is-valid': formik.touched.agama && !formik.errors.agama,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.agama}\n                    />\n                    {formik.touched.agama && formik.errors.agama && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.agama}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  agama?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  agama?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/sarana-prasarana\n\nexport function LihatAgama() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${AGAMA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        agama: jsonD.agama,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>agama</Form.Label>\n                        <Form.Control\n                          name='agama'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.agama ? valuesFormikExist?.agama : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Agama'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  agama?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  agama?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000//master/agama\n\nexport function UpdateAgama() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${AGAMA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        agama: jsonD.agama,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      agama: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        agama: valuesFormik?.agama\n          ? valuesFormik.agama\n          : valuesFormikExist?.agama\n          ? valuesFormikExist.agama\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${AGAMA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${AGAMA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Agama', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Agama', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>agama</Form.Label>\n                        <Form.Control\n                          name='agama'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.agama || valuesFormik?.agama === ''\n                              ? valuesFormik?.agama\n                              : valuesFormikExist?.agama\n                              ? valuesFormikExist?.agama\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Agama'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  agama?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/master/agama\n\nexport function TambahAgama() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      agama: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        agama: valuesFormik?.agama ? valuesFormik.agama : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${AGAMA_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${AGAMA_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/agama', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/agama', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>agama</Form.Label>\n                        <Form.Control\n                          name='agama'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.agama}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Agama'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nexport interface FormInput {\n  pangkat?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  pangkat: Yup.string().required('Wajib diisi'),\n})\n\nexport function Pangkat() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterPangkat, setFilterPangkat] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterPangkat.val !== '') {\n      uriParam += `${valFilterPangkat.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterPangkat({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputPangkat = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterPangkat({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Pangkat',\n      selector: (row: any) => row.pangkat,\n      sortable: true,\n      sortField: 'pangkat',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    menuPosition=\"top\"\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Pangkat/LihatPangkat/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${PANGKAT_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${PANGKAT_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        pangkat: valuesFormik?.pangkat, //? valuesFormik.pangkat : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${PANGKAT_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${PANGKAT_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      pangkat: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${PANGKAT_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${PANGKAT_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Pangkat</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterPangkat.val} //4\n            onChange={handleChangeInputPangkat}\n            placeholder='Pangkat'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Pangkat</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Pangkat</Form.Label>\n                  <Form.Control\n                      name='pangkat'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.pangkat && formik.errors.pangkat,\n                        },\n                        {\n                          'is-valid': formik.touched.pangkat && !formik.errors.pangkat,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.pangkat}\n                    />\n                    {formik.touched.pangkat && formik.errors.pangkat && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.pangkat}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  pangkat?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  pangkat?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000//master/pangkat\n\nexport function UpdatePangkat() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${PANGKAT_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        pangkat: jsonD.pangkat,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      pangkat: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        pangkat: valuesFormik?.pangkat\n          ? valuesFormik.pangkat\n          : valuesFormikExist?.pangkat\n          ? valuesFormikExist.pangkat\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${PANGKAT_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${PANGKAT_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/pangkat', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/pangkat', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>pangkat</Form.Label>\n                        <Form.Control\n                          name='pangkat'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.pangkat || valuesFormik?.pangkat === ''\n                              ? valuesFormik?.pangkat\n                              : valuesFormikExist?.pangkat\n                              ? valuesFormikExist?.pangkat\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/pangkat'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  pangkat?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  pangkat?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\n\nexport function LihatPangkat() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${PANGKAT_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        pangkat: jsonD.pangkat,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Pangkat</Form.Label>\n                        <Form.Control\n                          name='pangkat'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.pangkat ? valuesFormikExist?.pangkat : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/pangkat'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  pangkat?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\n\nexport function TambahPangkat() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      pangkat: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        pangkat: valuesFormik?.pangkat ? valuesFormik.pangkat : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${PANGKAT_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${PANGKAT_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/pangkat', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/pangkat', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>pangkat</Form.Label>\n                        <Form.Control\n                          name='pangkat'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.pangkat}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/pangkat'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\nimport { TEMPAT_PELAKSANA_URL } from './Lihat-master/LihatTempatPelaksanaan'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const BIDANG_WILAYAH_URL = `${API_URL}/master/bidang-wilayah`\n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  nama?: string\n  kategori?: string\n}\n\nconst validatorForm = Yup.object().shape({\n  kategori: Yup.string().required('Wajib diisi'),\n  nama: Yup.string().required('Wajib diisi'),\n})\n\nexport function TempatPelaksanaan() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterTempatPelaksanaan, setFilterTempatPelaksanaan] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterTempatPelaksanaan.val !== '') {\n      uriParam += `${valFilterTempatPelaksanaan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterTempatPelaksanaan({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputTempatPelaksanaan = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterTempatPelaksanaan({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{row.serial}</div>\n      },\n    },\n    {\n      name: 'Bidang/Wilayah',\n      selector: (row: any) => row.nama,\n      sortable: true,\n      sortField: 'nama',\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {\n      name: 'Kategori',\n      selector: (row: any) => row.kategori,\n      sortable: true,\n      sortField: 'kategori',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/TempatPelaksanaan/LihatTempatPelaksanaan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${BIDANG_WILAYAH_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${BIDANG_WILAYAH_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        nama: valuesFormik?.nama, //? valuesFormik.nama : '',\n        kategori: valuesFormik?.kategori //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${BIDANG_WILAYAH_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${BIDANG_WILAYAH_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      nama: '',\n      kategori: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${BIDANG_WILAYAH_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${BIDANG_WILAYAH_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Tempat Pelaksanaan</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterTempatPelaksanaan.val} //4\n            onChange={handleChangeInputTempatPelaksanaan}\n            placeholder='Bidang/Wilayah'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Tempat Pelaksanaan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Nama Bidang/Wilayah</Form.Label>\n                  <Form.Control\n                      name='nama'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.nama && formik.errors.nama,\n                        },\n                        {\n                          'is-valid': formik.touched.nama && !formik.errors.nama,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.nama}\n                    />\n                    {formik.touched.nama && formik.errors.nama && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.nama}</span>\n                        </div>\n                      </div>\n                    )}\n                  <Form.Label>Kategori</Form.Label>\n                  <select\n                          data-control='select2'\n                          data-placeholder='Jenis Kelamin'\n                          name='kategori'\n                          className={clsx(\n                            'form-control form-control-solid mb-1',\n                            {\n                              'is-invalid':\n                                formik.touched.kategori && formik.errors.kategori,\n                            },\n                            {\n                              'is-valid':\n                                formik.touched.kategori && !formik.errors.kategori,\n                            }\n                          )}\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kategori}\n                        >\n                          <option value=''>Pilih</option>\n                          <option value='Bidang'>Bidang</option>\n                          <option value='Wilayah'>Wilayah</option>\n                        </select>\n                        {formik.touched.kategori && formik.errors.kategori && (\n                          <div className='fv-plugins-message-container'>\n                            <div className='fv-help-block'>\n                              <span role='alert'>{formik.errors.kategori}</span>\n                            </div>\n                          </div>\n                        )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  nama?: string\n  kategori?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  nama?: string\n  kategori?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const BIDANG_WILAYAH_URL = `${API_URL}/master/bidang-wilayah` //http://localhost:3000//master/kota\n\nexport function UpdateTempatPelaksanaan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${BIDANG_WILAYAH_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        nama: jsonD.nama,\n        kategori: jsonD.kategori,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      nama: '',\n      kategori: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        nama : valuesFormik?.nama\n          ? valuesFormik.nama\n          : valuesFormikExist?.nama\n          ? valuesFormikExist.nama\n          : '',\n          kategori: valuesFormik?.kategori\n          ? valuesFormik.kategori\n          : valuesFormikExist?.kategori\n          ? valuesFormikExist.kategori\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${BIDANG_WILAYAH_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${BIDANG_WILAYAH_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/TempatPelaksanaan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/TempatPelaksanaan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Bidang Wilayah</Form.Label>\n                        <Form.Control\n                          name='nama'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.nama || valuesFormik?.nama === ''\n                              ? valuesFormik?.nama\n                              : valuesFormikExist?.nama\n                              ? valuesFormikExist?.nama\n                              : ''\n                          }\n                        />\n                        <Form.Label>Kategori</Form.Label>\n                        <Form.Control\n                          name='kategori'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kategori || valuesFormik?.kategori === ''\n                              ? valuesFormik?.kategori\n                              : valuesFormikExist?.kategori\n                              ? valuesFormikExist?.kategori\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/TempatPelaksanaan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  nama?: string\n  kode?: string\n  updated_by?: string\n  kategori?: string\n}\n\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  nama?: string\n  kategori?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const TEMPAT_PELAKSANA_URL = `${API_URL}/master/bidang-wilayah` //http://localhost:3000/sarana-prasarana\n\nexport function LihatTempatPelaksanaan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${TEMPAT_PELAKSANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        nama: jsonD.nama,\n        kode: jsonD.kode,\n        kategori: jsonD.kategori,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Tempat Pelaksana</Form.Label>\n                        <Form.Control\n                          name='nama'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.nama ? valuesFormikExist?.nama : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode</Form.Label>\n                        <Form.Control\n                          name='kode'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kategori</Form.Label>\n                        <Form.Control\n                          name='kategori'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kategori ? valuesFormikExist?.kategori : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/TempatPelaksanaan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const SKPD_URL = `${API_URL}/master/skpd`\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  skpd?: string\n}\n\nconst validatorForm = Yup.object().shape({\n  skpd: Yup.string().required('Wajib diisi'),\n})\n\nexport function SKPD() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterSKPD, setFilterSKPD] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([]) // Urutan 1\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => {\n    //3\n    let uriParam = ''\n    if (valFilterSKPD.val !== '') {\n      uriParam += `${valFilterSKPD.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handleFilterReset = () => {\n    setFilterSKPD({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputSKPD = (event: {\n    //5\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterSKPD({val: event.target.value})\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  // let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No', // Urutan 2\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{row.serial}</div>\n      },\n    },\n    {\n      name: 'SKPD',\n      selector: (row: any) => row.skpd,\n      sortable: true,\n      sortField: 'skpd',\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/SKPD/LihatSKPD/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${SKPD_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${SKPD_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        skpd: valuesFormik?.skpd, //? valuesFormik.skpd : '',\n      }\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${SKPD_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(`${SKPD_URL}/update/${idEditData.id}`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      skpd: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n\n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${SKPD_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n\n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${SKPD_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>SKPD</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterSKPD.val} //4\n            onChange={handleChangeInputSKPD}\n            placeholder='SKPD'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}>\n            {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} SKPD</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>SKPD</Form.Label>\n                  <Form.Control\n                    name='skpd'\n                    className={clsx(\n                      'form-control form-control-solid mb-1',\n                      {\n                        'is-invalid': formik.touched.skpd && formik.errors.skpd,\n                      },\n                      {\n                        'is-valid': formik.touched.skpd && !formik.errors.skpd,\n                      }\n                    )}\n                    onChange={handleChangeFormik}\n                    value={valuesFormik?.skpd}\n                  />\n                  {formik.touched.skpd && formik.errors.skpd && (\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>\n                        <span role='alert'>{formik.errors.skpd}</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n        {temp?.length > 0 && temp && ( //urutan 4\n          <DataTable\n            columns={columns}\n            data={temp}\n            progressPending={loading}\n            customStyles={customStyles}\n            progressComponent={<LoadingAnimation />}\n            pagination\n            // paginationServer\n            paginationTotalRows={totalRows}\n            //    expandableRowsComponent={(row) => (\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n            // )}\n            // expandableRowsComponent={ExpandedComponent}\n            // onChangeRowsPerPage={handlePerRowsChange}\n            // onChangePage={handlePageChange}\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n            noDataComponent={\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n                <div className='d-flex flex-column'>\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n                </div>\n              </div>\n            }\n          />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  skpd?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  skpd?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SKPD_URL = `${API_URL}/master/skpd` //http://localhost:3000//master/SKPD\n\nexport function UpdateSKPD() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${SKPD_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        skpd: jsonD.skpd,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      skpd: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        skpd: valuesFormik?.skpd\n          ? valuesFormik.skpd\n          : valuesFormikExist?.skpd\n          ? valuesFormikExist.skpd\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${SKPD_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${SKPD_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/SKPD', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/SKPD', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>SKPD</Form.Label>\n                        <Form.Control\n                          name='skpd'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.skpd || valuesFormik?.skpd === ''\n                              ? valuesFormik?.skpd\n                              : valuesFormikExist?.skpd\n                              ? valuesFormikExist?.skpd\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/SKPD'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  skpd?: string\n  kode?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  skpd?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SKPD_URL = `${API_URL}/master/skpd` //http://localhost:3000/sarana-prasarana\n\nexport function LihatSKPD() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${SKPD_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        skpd: jsonD.skpd,\n        kode: jsonD.kode,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>SKPD</Form.Label>\n                        <Form.Control\n                          name='skpd'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.skpd ? valuesFormikExist?.skpd : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode</Form.Label>\n                        <Form.Control\n                          name='kode'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/SKPD'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const PENDIDIKAN_URL = `${API_URL}/master/pendidikan` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nexport interface FormInput {\n  pendidikan?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  pendidikan: Yup.string().required('Wajib diisi'),\n})\n\nexport function Pendidikan() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterPendidikan, setFilterPendidikan] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterPendidikan.val !== '') {\n      uriParam += `${valFilterPendidikan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterPendidikan({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputPendidikan = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterPendidikan({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{row.serial}</div>\n      },\n    },\n    {},\n    {\n      name: 'Pendidikan',\n      selector: (row: any) => row.pendidikan,\n      sortable: true,\n      sortField: 'pendidikan',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    menuPosition=\"top\"\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Pendidikan/LihatPendidikan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${PENDIDIKAN_URL}/filter-pendidikan/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${PENDIDIKAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        pendidikan: valuesFormik?.pendidikan, //? valuesFormik.pendidikan : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${PENDIDIKAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${PENDIDIKAN_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      pendidikan: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${PENDIDIKAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${PENDIDIKAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Pendidikan</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterPendidikan.val} //4\n            onChange={handleChangeInputPendidikan}\n            placeholder='Pendidikan'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Pendidikan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Pendidikan</Form.Label>\n                  <Form.Control\n                      name='pendidikan'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.pendidikan && formik.errors.pendidikan,\n                        },\n                        {\n                          'is-valid': formik.touched.pendidikan && !formik.errors.pendidikan,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.pendidikan}\n                    />\n                    {formik.touched.pendidikan && formik.errors.pendidikan && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.pendidikan}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  pendidikan?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  pendidikan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PENDIDIKAN_URL = `${API_URL}/master/pendidikan` //http://localhost:3000/sarana-prasarana\n\nexport function LihatPendidikan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${PENDIDIKAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        pendidikan: jsonD.pendidikan,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Pendidikan</Form.Label>\n                        <Form.Control\n                          name='pendidikan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.pendidikan ? valuesFormikExist?.pendidikan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Pendidikan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  jenis_sarana_prasarana?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  jenis_sarana_prasarana: Yup.string().required('Wajib diisi'),\n})\n\nexport function JenisSaranaPrasarana() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterJenisSaranaPrasarana, setFilterJenisSaranaPrasarana] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterJenisSaranaPrasarana.val !== '') {\n      uriParam += `${valFilterJenisSaranaPrasarana.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterJenisSaranaPrasarana({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputJenisSaranaPrasarana = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisSaranaPrasarana({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  // let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Jenis Sarana Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisSaranaPrasarana/LihatJenisSaranaPrasarana/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_sarana_prasarana: valuesFormik?.jenis_sarana_prasarana, //? valuesFormik.jenis_sarana_prasarana : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_SARANA_PRASARANA_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_SARANA_PRASARANA_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_sarana_prasarana: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Jenis Sarana Prasarana</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisSaranaPrasarana.val} //4\n            onChange={handleChangeInputJenisSaranaPrasarana}\n            placeholder='Jenis Sarana Prasarana'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Sarana Prasarana</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Jenis Sarana Prasarana</Form.Label>\n                  <Form.Control\n                      name='jenis_sarana_prasarana'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_sarana_prasarana && formik.errors.jenis_sarana_prasarana,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_sarana_prasarana && !formik.errors.jenis_sarana_prasarana,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_sarana_prasarana}\n                    />\n                    {formik.touched.jenis_sarana_prasarana && formik.errors.jenis_sarana_prasarana && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_sarana_prasarana}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n        {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_sarana_prasarana?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_sarana_prasarana?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\n\nexport function UpdateJenisSaranaPrasarana() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_sarana_prasarana: jsonD.jenis_sarana_prasarana,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_sarana_prasarana: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_sarana_prasarana: valuesFormik?.jenis_sarana_prasarana\n          ? valuesFormik.jenis_sarana_prasarana\n          : valuesFormikExist?.jenis_sarana_prasarana\n          ? valuesFormikExist.jenis_sarana_prasarana\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_SARANA_PRASARANA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisSaranaPrasarana', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisSaranaPrasarana', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Sarana Prasarana</Form.Label>\n                        <Form.Control\n                          name='jenis_sarana_prasarana'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_sarana_prasarana || valuesFormik?.jenis_sarana_prasarana === ''\n                              ? valuesFormik?.jenis_sarana_prasarana\n                              : valuesFormikExist?.jenis_sarana_prasarana\n                              ? valuesFormikExist?.jenis_sarana_prasarana\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_sarana_prasarana?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_sarana_prasarana?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` //http://localhost:3000/jenis-Penindakan\n\nexport function LihatJenisSaranaPrasarana() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_sarana_prasarana: jsonD.jenis_sarana_prasarana,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Sarana Prasarana</Form.Label>\n                        <Form.Control\n                          name='jenis_sarana_prasarana'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_sarana_prasarana\n                              ? valuesFormikExist?.jenis_sarana_prasarana\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const GOLONGAN_URL = `${API_URL}/master/golongan` //http://localhost:3000/sarana-prasarana\n\nexport function Golongan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Golongan',\n      selector: (row: any) => row.golongan,\n      sortable: true,\n      sortField: 'golongan',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get( GOLONGAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Golongan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Golongan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Golongan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Golongan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const ESELON_URL = `${API_URL}/master/eselon` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nexport interface FormInput {\n  eselon?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  eselon: Yup.string().required('Wajib diisi'),\n})\n\nexport function Eselon() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterEselon, setFilterEselon] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterEselon.val !== '') {\n      uriParam += `${valFilterEselon.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterEselon({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputEselon = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterEselon({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Eselon',\n      selector: (row: any) => row.eselon,\n      sortable: true,\n      sortField: 'eselon',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    menuPosition=\"top\"\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Eselon/LihatEselon/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${ESELON_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${ESELON_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        eselon: valuesFormik?.eselon, //? valuesFormik.eselon : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${ESELON_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${ESELON_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      eselon: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${ESELON_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${ESELON_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Eselon</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterEselon.val} //4\n            onChange={handleChangeInputEselon}\n            placeholder='Eselon'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Eselon</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Eselon</Form.Label>\n                  <Form.Control\n                      name='eselon'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.eselon && formik.errors.eselon,\n                        },\n                        {\n                          'is-valid': formik.touched.eselon && !formik.errors.eselon,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.eselon}\n                    />\n                    {formik.touched.eselon && formik.errors.eselon && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.eselon}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  eselon?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  eselon?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const ESELON_URL = `${API_URL}/master/eselon` //http://localhost:3000//master/jenis-kejadian\n\nexport function UpdateEselon() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${ESELON_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        eselon: jsonD.eselon,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      eselon: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        eselon: valuesFormik?.eselon\n          ? valuesFormik.eselon\n          : valuesFormikExist?.eselon\n          ? valuesFormikExist.eselon\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${ESELON_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${ESELON_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Eselon', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Eselon', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Eselon</Form.Label>\n                        <Form.Control\n                          name='eselon'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.eselon || valuesFormik?.eselon === ''\n                              ? valuesFormik?.eselon\n                              : valuesFormikExist?.eselon\n                              ? valuesFormikExist?.eselon\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Eselon'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  eselon?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  eselon?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const ESELON_URL = `${API_URL}/master/eselon` //http://localhost:3000/jenis-kejadian\n\nexport function LihatEselon() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${ESELON_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        eselon: jsonD.eselon,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Eselon</Form.Label>\n                        <Form.Control\n                          name='eselon'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.eselon\n                              ? valuesFormikExist?.eselon\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Eselon'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { useFormik, FormikHelpers } from 'formik'\nimport { Link, useNavigate } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport clsx from 'clsx'\nimport Swal from 'sweetalert2'\n\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JABATAN_URL = `${API_URL}/master/jabatan` //http://localhost:3000/sarana-prasarana\nexport interface FormInput {\n  jabatan?: string\n  status?: string\n  created_by?: number\n}\nexport function Jabatan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const navigate = useNavigate()\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n  \n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n      wrap: true,\n    },\n    {\n      name: 'Jabatan',\n      selector: (row: any) => row.jabatan,\n      sortable: true,\n      sortField: 'jabatan',\n    }, {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n      wrap: true,\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/master/LihatJabatan\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JABATAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:', temp);\n\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n\n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :', data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      jabatan: '',\n      status: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jabatan: valuesFormik?.jabatan ? valuesFormik.jabatan : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JABATAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JABATAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/jabatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/jabatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Jabatan\n          </label>\n          <input\n            type='text' className='form-control form-control form-control-solid' name='tags' />\n        </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah Jabatan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Form.Group className=\"mb-3 form-control-solid\">\n              <Form.Label>Jabatan</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Jabatan\" />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3 form-control-solid\">\n            <label className='required fw-semibold fs-6 mb-2'>Status</label>\n              <select\n                data-control='select2'\n                data-placeholder='Status'\n                name='status'\n                className={clsx(\n                  'form-control form-control-solid mb-1',\n                  {\n                    'is-invalid':\n                      formik.touched.status && formik.errors.status,\n                  },\n                  {\n                    'is-valid':\n                      formik.touched.status && !formik.errors.status,\n                  }\n                )}\n                onChange={handleChangeFormik}\n                value={valuesFormik?.status}\n              >\n                <option value=''>Pilih</option>\n                <option value='JFT'>JFT</option>\n                <option value='Non JFT'>Non JFT</option>\n              </select>\n            </Form.Group>\n\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleClose}>\n              <i className=\"fa-solid fa-paper-plane\"></i>\n              Simpan\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable\n          columns={columns}\n          data={temp}\n          pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nexport interface FormInput {\n  sumber_informasi?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  sumber_informasi: Yup.string().required('Wajib diisi'),\n})\n\nexport function SumberInformasi() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterSumberInformasi, setFilterSumberInformasi] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterSumberInformasi.val !== '') {\n      uriParam += `${valFilterSumberInformasi.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterSumberInformasi({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputSumberInformasi = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterSumberInformasi({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Sumber Informasi',\n      selector: (row: any) => row.sumber_informasi,\n      sortable: true,\n      sortField: 'sumber_informasi',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    menuPosition=\"top\"\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/SumberInformasi/LihatSumberInformasi/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${SUMBER_INFORMASI_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        sumber_informasi: valuesFormik?.sumber_informasi, //? valuesFormik.sumber_informasi : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${SUMBER_INFORMASI_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${SUMBER_INFORMASI_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      sumber_informasi: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${SUMBER_INFORMASI_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Sumber Informasi</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterSumberInformasi.val} //4\n            onChange={handleChangeInputSumberInformasi}\n            placeholder='Sumber Informasi'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Sumber Informasi</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Sumber Informasi</Form.Label>\n                  <Form.Control\n                      name='sumber_informasi'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.sumber_informasi && formik.errors.sumber_informasi,\n                        },\n                        {\n                          'is-valid': formik.touched.sumber_informasi && !formik.errors.sumber_informasi,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.sumber_informasi}\n                    />\n                    {formik.touched.sumber_informasi && formik.errors.sumber_informasi && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.sumber_informasi}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  sumber_informasi?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  sumber_informasi?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi` //http://localhost:3000//master/jenis-kejadian\n\nexport function UpdateSumberInformasi() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        sumber_informasi: jsonD.sumber_informasi,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      sumber_informasi: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        sumber_informasi: valuesFormik?.sumber_informasi\n          ? valuesFormik.sumber_informasi\n          : valuesFormikExist?.sumber_informasi\n          ? valuesFormikExist.sumber_informasi\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${SUMBER_INFORMASI_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${SUMBER_INFORMASI_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/SumberInformasi', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/SumberInformasi', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='sumber_informasi'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.sumber_informasi || valuesFormik?.sumber_informasi === ''\n                              ? valuesFormik?.sumber_informasi\n                              : valuesFormikExist?.sumber_informasi\n                              ? valuesFormikExist?.sumber_informasi\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/SumberInformasi'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  sumber_informasi?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  sumber_informasi?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi`//http://localhost:3000/jenis-kejadian\n\nexport function LihatSumberInformasi() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        sumber_informasi: jsonD.sumber_informasi,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='sumber_informasi'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.sumber_informasi\n                              ? valuesFormikExist?.sumber_informasi\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/SumberInformasi'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` \n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  jenis_kekerasan?: string\n}\n\nconst validatorForm = Yup.object().shape({\n\n  jenis_kekerasan: Yup.string().required('Wajib diisi'),\n})\n\nexport function JenisKekerasan() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterJenisKekerasan, setFilterJenisKekerasan] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterJenisKekerasan.val !== '') {\n      uriParam += `${valFilterJenisKekerasan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterJenisKekerasan({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputJenisKekerasan = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisKekerasan({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {},\n    {\n      name: 'Jenis Kekerasan',\n      selector: (row: any) => row.jenis_kekerasan,\n      sortable: true,\n      sortField: 'jenis_kekerasan',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisKekerasan/LihatJenisKekerasan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_KEKERASAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_kekerasan: valuesFormik?.jenis_kekerasan, //? valuesFormik.jenis_kekerasan : '', //? valuesFormik.kategori : '',\n      }\n      \n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_KEKERASAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_KEKERASAN_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_kekerasan: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_KEKERASAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Jenis Kekerasan</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisKekerasan.val} //4\n            onChange={handleChangeInputJenisKekerasan}\n            placeholder='Jenis Kekerasan'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Kekerasan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Jenis Kekerasan</Form.Label>\n                  <Form.Control\n                      name='jenis_kekerasan'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_kekerasan && formik.errors.jenis_kekerasan,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_kekerasan && !formik.errors.jenis_kekerasan,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_kekerasan}\n                    />\n                    {formik.touched.jenis_kekerasan && formik.errors.jenis_kekerasan && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_kekerasan}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kekerasan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_kekerasan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` //http://localhost:3000//master/JenisKekerasan\n\nexport function UpdateJenisKekerasan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kekerasan: jsonD.jenis_kekerasan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kekerasan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kekerasan: valuesFormik?.jenis_kekerasan\n          ? valuesFormik.jenis_kekerasan\n          : valuesFormikExist?.jenis_kekerasan\n          ? valuesFormikExist.jenis_kekerasan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_KEKERASAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_KEKERASAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKekerasan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKekerasan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='jenis_kekerasan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_kekerasan || valuesFormik?.jenis_kekerasan === ''\n                              ? valuesFormik?.jenis_kekerasan\n                              : valuesFormikExist?.jenis_kekerasan\n                              ? valuesFormikExist?.jenis_kekerasan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKekerasan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_kekerasan?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_kekerasan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` //http://localhost:3000/JenisKekerasan\n\nexport function LihatJenisKekerasan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kekerasan: jsonD.jenis_kekerasan,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kekerasan</Form.Label>\n                        <Form.Control\n                          name='jenis_kekerasan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_kekerasan\n                              ? valuesFormikExist?.jenis_kekerasan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKekerasan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const JENIS_PENERTIBAN_URL = `${API_URL}/master/jenis-penertiban`\n\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  jenis_penertiban?: string\n}\n\nconst validatorForm = Yup.object().shape({\n  jenis_penertiban: Yup.string().required('Wajib diisi'),\n})\n\nexport function JenisPenertiban() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterJenisPenertiban, setFilterJenisPenertiban] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => { //3\n    let uriParam = ''\n    if (valFilterJenisPenertiban.val !== '') {\n      uriParam += `${valFilterJenisPenertiban.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleFilterReset = () => {\n    setFilterJenisPenertiban({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputJenisPenertiban = (event: { //5\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisPenertiban({ val: event.target.value })\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\n      },\n    },\n    {\n      name: 'Jenis Penertiban',\n      selector: (row: any) => row.jenis_penertiban,\n      sortable: true,\n      sortField: 'jenis_penertiban',\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisPenertiban/LihatJenisPenertiban/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_PENERTIBAN_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n      }, 100);\n      \n      return () => clearTimeout(timeout)\n      \n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => { //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${JENIS_PENERTIBAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n    Array.from(items).forEach((item: any, index: any) => {\n      item.serial = index + 1\n    })\n    setTemp(items)\n    setLoading(false)\n    }, 50);\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        jenis_penertiban: valuesFormik?.jenis_penertiban, //? valuesFormik.jenis_penertiban : '',\n      }\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JENIS_PENERTIBAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${JENIS_PENERTIBAN_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      jenis_penertiban: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  \n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JENIS_PENERTIBAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  \n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_PENERTIBAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Jenis Penertiban</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisPenertiban.val} //4\n            onChange={handleChangeInputJenisPenertiban}\n            placeholder='Jenis Penertiban'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n          {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah \n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Penertiban</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Jenis Penertiban</Form.Label>\n                  <Form.Control\n                      name='jenis_penertiban'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.jenis_penertiban && formik.errors.jenis_penertiban,\n                        },\n                        {\n                          'is-valid': formik.touched.jenis_penertiban && !formik.errors.jenis_penertiban,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_penertiban}\n                    />\n                    {formik.touched.jenis_penertiban && formik.errors.jenis_penertiban && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.jenis_penertiban}</span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n      {temp?.length > 0 && temp && (\n          <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          \n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_penertiban?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  jenis_penertiban?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PENERTIBAN_URL = `${API_URL}/master/jenis-penertiban` //http://localhost:3000//master/kota\n\nexport function UpdateJenisPenertiban() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PENERTIBAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_penertiban: jsonD.jenis_penertiban,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_penertiban: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_penertiban: valuesFormik?.jenis_penertiban\n          ? valuesFormik.jenis_penertiban\n          : valuesFormikExist?.jenis_penertiban\n          ? valuesFormikExist.jenis_penertiban\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_PENERTIBAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_PENERTIBAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisPenertiban', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisPenertiban', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Penertiban</Form.Label>\n                        <Form.Control\n                          name='jenis_penertiban'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_penertiban || valuesFormik?.jenis_penertiban === ''\n                              ? valuesFormik?.jenis_penertiban\n                              : valuesFormikExist?.jenis_penertiban\n                              ? valuesFormikExist?.jenis_penertiban\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPenertiban'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_penertiban?: string\n  kode?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  jenis_penertiban?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PENERTIBAN_URL = `${API_URL}/master/jenis-penertiban` //http://localhost:3000/sarana-prasarana\n\nexport function LihatJenisPenertiban() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PENERTIBAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_penertiban: jsonD.jenis_penertiban,\n        kode: jsonD.kode,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Penertiban</Form.Label>\n                        <Form.Control\n                          name='jenis_penertiban'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.jenis_penertiban ? valuesFormikExist?.jenis_penertiban : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode</Form.Label>\n                        <Form.Control\n                          name='kode'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPenertiban'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function JenisPenyelesaian() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Penyelesaian\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Penyelesaian</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Penyelesaian</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Penyelesaian\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React from 'react'\nimport { Navigate, Route, Routes, Outlet } from 'react-router-dom'\nimport { PageLink, PageTitle } from '../../../_metronic/layout/core'\n\nimport { Kota } from './components/Kota'\nimport { LihatKota } from './components/Lihat-master/LihatKota'\nimport { UpdateKota } from './components/Update-master/UpdateKota'\nimport { TambahKota } from './components/Tambah-master/TambahKota'\n\nimport { Kecamatan } from './components/Kecamatan'\nimport { LihatKecamatan } from './components/Lihat-master/LihatKecamatan'\nimport { UpdateKecamatan } from './components/Update-master/UpdateKecamatan'\nimport { TambahKecamatan } from './components/Tambah-master/TambahKecamatan'\n\nimport { Kelurahan } from './components/Kelurahan'\nimport { LihatKelurahan } from './components/Lihat-master/LihatKelurahan'\nimport { UpdateKelurahan } from './components/Update-master/UpdateKelurahan'\nimport { TambahKelurahan } from './components/Tambah-master/TambahKelurahan'\n\nimport { JenisKegiatan } from './components/JenisKegiatan'\nimport { LihatJenisKegiatan } from './components/Lihat-master/LihatJenisKegiatan'\nimport { UpdateJenisKegiatan } from './components/Update-master/UpdateJenisKegiatan'\nimport { TambahJenisKegiatan } from './components/Tambah-master/TambahJenisKegiatan'\n\nimport { JenisKejadian } from './components/JenisKejadian'\nimport { LihatJenisKejadian } from './components/Lihat-master/LihatJenisKejadian'\nimport { UpdateJenisKejadian } from './components/Update-master/UpdateJenisKejadian'\nimport { TambahJenisKejadian } from './components/Tambah-master/TambahJenisKejadian'\n\nimport { JenisPelanggaran } from './components/JenisPelanggaran'\n\nimport { JenisPertolongan } from './components/JenisPertolongan'\nimport { LihatJenisPertolongan } from './components/Lihat-master/LihatJenisPertolongan'\nimport { UpdateJenisPertolongan } from './components/Update-master/UpdateJenisPertolongan'\n\nimport { JenisPerdaPerkada } from './components/JenisPerdaPerkada'\n\nimport { JenisPenindakan } from './components/JenisPenindakan'\nimport { LihatJenisPenindakan } from './components/Lihat-master/LihatJenisPenindakan'\nimport { UpdateJenisPenindakan } from './components/Update-master/UpdateJenisPenindakan'\n\nimport { KorbanJiwa } from './components/KorbanJiwa'\nimport { LihatKorbanJiwa } from './components/Lihat-master/LihatKorbanJiwa'\nimport { UpdateKorbanJiwa } from './components/Update-master/UpdateKorbanJiwa'\nimport { TambahKorbanJiwa } from './components/Tambah-master/TambahKorbanJiwa'\n\nimport { KorbanMaterial } from './components/KorbanMaterial'\nimport { LihatKorbanMaterial } from './components/Lihat-master/LihatKorbanMaterial'\nimport { UpdateKorbanMaterial } from './components/Update-master/UpdateKorbanMaterial'\n\nimport { JenisBantuan } from './components/JenisBantuan'\nimport { LihatJenisBantuan } from './components/Lihat-master/LihatJenisBantuan'\nimport { UpdateJenisBantuan } from './components/Update-master/UpdateJenisBantuan'\n\nimport { InstansiTerkait } from './components/InstansiTerkait'\n\nimport { KondisiSaranaPrasarana } from './components/KondisiSaranaPrasarana'\nimport { LihatKondisiSaranaPrasarana } from './components/Lihat-master/LihatKondisiSaranaPrasarana'\nimport { UpdateKondisiSaranaPrasarana } from './components/Update-master/UpdateKondisiSaranaPrasarana'\n\n\nimport { StatusSaranaPrasarana } from './components/StatusSaranaPrasarana'\nimport { LihatStatusSaranaPrasarana } from './components/Lihat-master/LihatStatusSaranaPrasarana'\nimport { UpdateStatusSaranaPrasarana } from './components/Update-master/UpdateStatusSaranaPrasarana'\n\nimport { Agama } from './components/Agama'\nimport { LihatAgama } from './components/Lihat-master/LihatAgama'\nimport { UpdateAgama } from './components/Update-master/UpdateAgama'\nimport { TambahAgama } from './components/Tambah-master/TambahAgama'\n\nimport { Pangkat } from './components/Pangkat'\nimport { UpdatePangkat } from './components/Update-master/UpdatePangkat'\nimport { LihatPangkat } from './components/Lihat-master/LihatPangkat'\nimport { TambahPangkat } from './components/Tambah-master/TambahPangkat'\n\nimport { TempatPelaksanaan } from './components/TempatPelaksanaan'\nimport { UpdateTempatPelaksanaan } from './components/Update-master/UpdateTempatPelaksanaan'\nimport { LihatTempatPelaksanaan } from './components/Lihat-master/LihatTempatPelaksanaan'\n\nimport { SKPD } from './components/SKPD'\nimport { UpdateSKPD } from './components/Update-master/UpdateSKPD'\nimport { LihatSKPD } from './components/Lihat-master/LihatSKPD'\n\nimport { Pendidikan } from './components/Pendidikan'\nimport { LihatPendidikan } from './components/Lihat-master/LihatPendidikan'\n\n\nimport { JenisSaranaPrasarana } from './components/JenisSaranaPrasarana'\nimport { UpdateJenisSaranaPrasarana } from './components/Update-master/UpdateJenisSaranaPrasarana'\nimport { LihatJenisSaranaPrasarana } from './components/Lihat-master/LihatJenisSaranaPrasarana'\n\nimport { Golongan } from './components/Golongan'\n\nimport { Eselon } from './components/Eselon'\nimport { UpdateEselon } from './components/Update-master/UpdateEselon'\nimport { LihatEselon } from './components/Lihat-master/LihatEselon'\n\nimport { Jabatan } from './components/Jabatan'\n\nimport { SumberInformasi } from './components/SumberInformasi'\nimport { UpdateSumberInformasi } from './components/Update-master/UpdateSumberInformasi'\nimport { LihatSumberInformasi } from './components/Lihat-master/LihatSumberInformasi'\n\nimport { JenisKekerasan } from './components/JenisKekerasan'\nimport { UpdateJenisKekerasan } from './components/Update-master/UpdateJenisKekerasan'\nimport { LihatJenisKekerasan } from './components/Lihat-master/LihatJenisKekerasan'\n\nimport { JenisPenertiban } from './components/JenisPenertiban'\nimport { UpdateJenisPenertiban } from './components/Update-master/UpdateJenisPenertiban'\nimport { LihatJenisPenertiban } from './components/Lihat-master/LihatJenisPenertiban'\n\nimport { JenisPenyelesaian } from './components/JenisPenyelesaian'\n\nconst masterBreadCrumbs: Array<PageLink> = [\n  {\n    title: 'Master',\n    path: '/master/InformasiDataMaster',\n    isSeparator: false,\n    isActive: false,\n  },\n  {\n    title: '',\n    path: '',\n    isSeparator: true,\n    isActive: false,\n  },\n]\n\nconst MasterPage: React.FC = () => {\n  return (\n    <Routes>\n      <Route\n        element={\n          <>\n            <Outlet />\n          </>\n        }\n      >\n        <Route\n          path='Kota'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kota</PageTitle>\n              <Kota />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/UpdateKecamatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kecamatan</PageTitle>\n              <UpdateKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/LihatKecamatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kecamatan</PageTitle>\n              <LihatKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/TambahKecamatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kecamatan</PageTitle>\n              <TambahKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='SKPD'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>SKPD</PageTitle>\n              <SKPD />\n            </>\n          }\n        />\n        <Route\n          path='SKPD/UpdateSKPD/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update SKPD</PageTitle>\n              <UpdateSKPD />\n            </>\n          }\n        />\n        <Route\n          path='SKPD/LihatSKPD/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat SKPD</PageTitle>\n              <LihatSKPD />\n            </>\n          }\n        />\n        <Route\n          path='Pendidikan/LihatPendidikan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Pendidikan</PageTitle>\n              <LihatPendidikan />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Pangkat</PageTitle>\n              <Pangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/UpdatePangkat/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Pangkat</PageTitle>\n              <UpdatePangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/LihatPangkat/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Pangkat</PageTitle>\n              <LihatPangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/TambahPangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Pangkat</PageTitle>\n              <TambahPangkat />\n            </>\n          }\n        />\n\n        <Route\n          path='TempatPelaksanaan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tempat Pelaksanaan</PageTitle>\n              <TempatPelaksanaan />\n            </>\n          }\n        />\n\n<Route\n          path='TempatPelaksanaan/UpdateTempatPelaksanaan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update TempatPelaksanaan</PageTitle>\n              <UpdateTempatPelaksanaan />\n            </>\n          }\n        />\n        <Route\n          path='TempatPelaksanaan/LihatTempatPelaksanaan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat TempatPelaksanaan</PageTitle>\n              <LihatTempatPelaksanaan />\n            </>\n          }\n        />\n\n        <Route\n          path='Golongan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Golongan </PageTitle>\n              <Golongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jenis Sarana Prasarana </PageTitle>\n              <JenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana/UpdateJenisSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Sarana Prasarana</PageTitle>\n              <UpdateJenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana/LihatJenisSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Sarana Prasarana</PageTitle>\n              <LihatJenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='KondisiSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Kondisi Sarana Prasarana </PageTitle>\n              <KondisiSaranaPrasarana />\n            </>\n          }\n        />\n         <Route\n          path='KondisiSaranaPrasarana/UpdateKondisiSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kondisi Sarana Prasarana</PageTitle>\n              <UpdateKondisiSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='KondisiSaranaPrasarana/LihatKondisiSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kondisi Sarana Prasarana</PageTitle>\n              <LihatKondisiSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='StatusSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Status Sarana Prasarana </PageTitle>\n              <StatusSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='StatusSaranaPrasarana/UpdateStatusSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Status Sarana Prasarana</PageTitle>\n              <UpdateStatusSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='StatusSaranaPrasarana/LihatStatusSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Status Sarana Prasarana</PageTitle>\n              <LihatStatusSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kecamatan</PageTitle>\n              <Kecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kota/UpdateKota/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kota</PageTitle>\n              <UpdateKota />\n            </>\n          }\n        />\n        <Route\n          path='Kota/LihatKota/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kota</PageTitle>\n              <LihatKota />\n            </>\n          }\n        />\n        <Route\n          path='Kota/TambahKota'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kota</PageTitle>\n              <TambahKota />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kelurahan</PageTitle>\n              <Kelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/UpdateKelurahan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kelurahan</PageTitle>\n              <UpdateKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/TambahKelurahan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kelurahan</PageTitle>\n              <TambahKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/LihatKelurahan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kelurahan</PageTitle>\n              <LihatKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kegiatan </PageTitle>\n              <JenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/UpdateJenisKegiatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisKegiatan</PageTitle>\n              <UpdateJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/TambahJenisKegiatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Kegiatan</PageTitle>\n              <TambahJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/LihatJenisKegiatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Kegiatan</PageTitle>\n              <LihatJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kejadian </PageTitle>\n              <JenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/UpdateJenisKejadian/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Kejadian</PageTitle>\n              <UpdateJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/LihatJenisKejadian/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Kejadian</PageTitle>\n              <LihatJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/TambahJenisKejadian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Kejadian</PageTitle>\n              <TambahJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='Agama'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Agama</PageTitle>\n              <Agama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/UpdateAgama/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Agama</PageTitle>\n              <UpdateAgama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/LihatAgama/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Agama</PageTitle>\n              <LihatAgama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/TambahAgama'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Agama</PageTitle>\n              <TambahAgama />\n            </>\n          }\n        />\n        <Route\n          path='Jabatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jabatan </PageTitle>\n              <Jabatan />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/tambah-jabatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jabatan </PageTitle>\n              <Jabatan />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/update-jabatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Agama</PageTitle>\n              <UpdateAgama />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/lihat-jabatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Agama</PageTitle>\n              <LihatAgama />\n            </>\n          }\n        />\n        <Route\n          path='Eselon'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Eselon </PageTitle>\n              <Eselon />\n            </>\n          }\n        />\n        <Route\n          path='Eselon/UpdateEselon/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Eselon</PageTitle>\n              <UpdateEselon />\n            </>\n          }\n        />\n        <Route\n          path='Eselon/LihatEselon/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Eselon</PageTitle>\n              <LihatEselon />\n            </>\n          }\n        />\n\n        <Route\n          path='Pendidikan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Pendidikan </PageTitle>\n              <Pendidikan />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Sumber Informasi </PageTitle>\n              <SumberInformasi />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi/UpdateSumberInformasi/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Sumber Informasi</PageTitle>\n              <UpdateSumberInformasi />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi/LihatSumberInformasi/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Sumber Informasi</PageTitle>\n              <LihatSumberInformasi />\n            </>\n          }\n        />\n        {/* <Route\n          path='SumberInformasi/TambahSumberInformasi/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Sumber Informasi</PageTitle>\n              <TambahSumberInformasi />\n            </>\n          }\n        /> */}\n        <Route\n          path='JenisPelanggaran'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pelanggaran</PageTitle>\n              <JenisPelanggaran />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pertolongan</PageTitle>\n              <JenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan/UpdateJenisPertolongan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Pertolongan</PageTitle>\n              <UpdateJenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan/LihatJenisPertolongan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Pertolongan</PageTitle>\n              <LihatJenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penindakan</PageTitle>\n              <JenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan/UpdateJenisPenindakan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Penindakan</PageTitle>\n              <UpdateJenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan/LihatJenisPenindakan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Penindakan</PageTitle>\n              <LihatJenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPerdaPerkada'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Perda / Perkada</PageTitle>\n              <JenisPerdaPerkada />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kekerasan</PageTitle>\n              <JenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan/UpdateJenisKekerasan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisKekerasan</PageTitle>\n              <UpdateJenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan/LihatJenisKekerasan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat JenisKekerasan</PageTitle>\n              <LihatJenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenertiban'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penertiban</PageTitle>\n              <JenisPenertiban />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenertiban/UpdateJenisPenertiban/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Penertiban</PageTitle>\n              <UpdateJenisPenertiban />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenertiban/LihatJenisPenertiban/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Penertiban</PageTitle>\n              <LihatJenisPenertiban />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenyelesaian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penyelesaian</PageTitle>\n              <JenisPenyelesaian />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Jiwa </PageTitle>\n              <KorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/UpdateKorbanJiwa/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update KorbanJiwa</PageTitle>\n              <UpdateKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/LihatKorbanJiwa/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat KorbanJiwa</PageTitle>\n              <LihatKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/TambahKorbanJiwa'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah KorbanJiwa</PageTitle>\n              <TambahKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Material</PageTitle>\n              <KorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial/UpdateKorbanMaterial/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update KorbanMaterial</PageTitle>\n              <UpdateKorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial/LihatKorbanMaterial/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat KorbanMaterial</PageTitle>\n              <LihatKorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Bantuan</PageTitle>\n              <JenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan/UpdateJenisBantuan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisBantuan</PageTitle>\n              <UpdateJenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan/LihatJenisBantuan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat JenisBantuan</PageTitle>\n              <LihatJenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='InstansiTerkait'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Instansi Terkait</PageTitle>\n              <InstansiTerkait />\n            </>\n          }\n        />\n\n        <Route index element={<Navigate to='/master' />} />\n      </Route>\n    </Routes>\n  )\n}\n\nexport default MasterPage\n"],"names":["KOTA_URL","process","Kota","navigate","useNavigate","useState","strparam","qParamFind","setUriFind","val","valFilterKota","setFilterKota","useEffect","fetchUsers","columns","name","selector","row","id","sortable","sortField","wrap","kota","width","kode","text","className","align","cell","record","Fragment","DropdownButton","map","DropdownType","idx","as","ButtonGroup","size","variant","title","Dropdown","href","onClick","replace","Swal","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","axios","showConfirmButton","timer","handleFilter","uriParam","prevState","React","data","setData","setLoading","setTotalRows","perPage","temp","setTemp","page","response","total_data","fetchDT","value","console","log","total","htmlFor","type","onChange","event","target","placeholder","to","pagination","LihatKota","useParams","valuesFormikExist","setValuesFormikExist","fetchData","jsonD","paramValue","updated_by","prevstate","Form","readOnly","UpdateKota","selectedFile","valuesFormik","setValuesFormik","formik","useFormik","initialValues","onSubmit","values","formData","FormData","bodyparam","append","error","handleSubmit","prevValues","TambahKota","created_by","return_id","KECAMATAN_URL","Kecamatan","kode_kecamatan","kecamatan","kode_kota","konfirDel","bodyParam","deleted_by","LihatKecamatan","UpdateKecamatan","handleChangeFormik","TambahKecamatan","KELURAHAN_URL","Kelurahan","kode_kelurahan","kelurahan","LihatKelurahan","UpdateKelurahan","TambahKelurahan","JENIS_KEGIATAN_URL","createTheme","primary","secondary","background","default","context","divider","action","button","hover","disabled","systemMode","ThemeModeComponent","customStyles","rows","style","minHeight","headCells","paddingLeft","paddingRight","cells","validatorForm","Yup","shape","jenis_kegiatan","required","JenisKegiatan","mode","useThemeMode","calculatedMode","valFilterJenisKegiatan","setFilterJenisKegiatan","loading","show","setShow","handleClose","totalRows","LoadingAnimation","props","serial","doEdit","timeout","setTimeout","items","Array","from","forEach","item","index","clearTimeout","aksi","setAksi","validationSchema","enableReinitialize","setSubmitting","idEditData","setIdEditData","getDetail","idparam","parseInt","color","path","Modal","onHide","backdrop","keyboard","centered","closeButton","clsx","touched","errors","role","length","progressPending","progressComponent","paginationTotalRows","theme","noDataComponent","LihatJenisKegiatan","UpdateJenisKegiatan","TambahJenisKegiatan","JENIS_KEJADIAN_URL","jenis_kejadian","JenisKejadian","valFilterJenisKejadian","setFilterJenisKejadian","LihatJenisKejadian","UpdateJenisKejadian","TambahJenisKejadian","JENIS_PELANGGARAN_URL","JenisPelanggaran","jenis_pelanggaran","Button","JENIS_PERTOLONGAN_URL","jenis_pertolongan","JenisPertolongan","valFilterJenisPertolongan","setFilterJenisPertolongan","LihatJenisPertolongan","UpdateJenisPertolongan","JENIS_PERDA_PERKADA_URL","JenisPerdaPerkada","judul","deskripsi","JENIS_PENINDAKAN_URL","jenis_penindakan","JenisPenindakan","valFilterJenisPenindakan","setFilterJenisPenindakan","LihatJenisPenindakan","UpdateJenisPenindakan","JENIS_KORBAN_JIWA_URL","jenis_korban_jiwa","KorbanJiwa","valFilterKorbanJiwa","setFilterKorbanJiwa","menuPosition","LihatKorbanJiwa","UpdateKorbanJiwa","TambahKorbanJiwa","JENIS_KORBAN_MATERIAL_URL","jenis_korban_material","KorbanMaterial","valFilterKorbanMaterial","setFilterKorbanMaterial","LihatKorbanMaterial","UpdateKorbanMaterial","JENIS_BANTUAN_URL","jenis_bantuan","JenisBantuan","valFilterJenisBantuan","setFilterJenisBantuan","LihatJenisBantuan","UpdateJenisBantuan","SARANA_PRASARANA_URL","InstansiTerkait","jenis_sarana_prasarana","status_sarana_prasarana","jumlah","kondisi","keterangan","dokumentasi","KONDISI_SARANA_PRASARANA_URL","kondisi_sarana_prasarana","KondisiSaranaPrasarana","valFilterKondisiSaranaPrasarana","setFilterKondisiSaranaPrasarana","LihatKondisiSaranaPrasarana","UpdateKondisiSaranaPrasarana","STATUS_SARANA_PRASARANA_URL","StatusSaranaPrasarana","valFilterStatusSaranaPrasarana","setFilterStatusSaranaPrasarana","LihatStatusSaranaPrasarana","UpdateStatusSaranaPrasarana","AGAMA_URL","agama","Agama","valFilterAgama","setFilterAgama","LihatAgama","UpdateAgama","TambahAgama","PANGKAT_URL","pangkat","Pangkat","valFilterPangkat","setFilterPangkat","UpdatePangkat","LihatPangkat","TambahPangkat","BIDANG_WILAYAH_URL","kategori","nama","TempatPelaksanaan","valFilterTempatPelaksanaan","setFilterTempatPelaksanaan","UpdateTempatPelaksanaan","TEMPAT_PELAKSANA_URL","LihatTempatPelaksanaan","SKPD_URL","skpd","SKPD","valFilterSKPD","setFilterSKPD","UpdateSKPD","LihatSKPD","PENDIDIKAN_URL","pendidikan","Pendidikan","valFilterPendidikan","setFilterPendidikan","LihatPendidikan","JENIS_SARANA_PRASARANA_URL","JenisSaranaPrasarana","valFilterJenisSaranaPrasarana","setFilterJenisSaranaPrasarana","UpdateJenisSaranaPrasarana","LihatJenisSaranaPrasarana","GOLONGAN_URL","Golongan","golongan","ESELON_URL","eselon","Eselon","valFilterEselon","setFilterEselon","UpdateEselon","LihatEselon","JABATAN_URL","Jabatan","jabatan","status","SUMBER_INFORMASI_URL","sumber_informasi","SumberInformasi","valFilterSumberInformasi","setFilterSumberInformasi","UpdateSumberInformasi","LihatSumberInformasi","JENIS_KEKERASAN_URL","jenis_kekerasan","JenisKekerasan","valFilterJenisKekerasan","setFilterJenisKekerasan","UpdateJenisKekerasan","LihatJenisKekerasan","JENIS_PENERTIBAN_URL","jenis_penertiban","JenisPenertiban","valFilterJenisPenertiban","setFilterJenisPenertiban","UpdateJenisPenertiban","LihatJenisPenertiban","JenisPenyelesaian","masterBreadCrumbs","isSeparator","isActive","element","breadcrumbs"],"sourceRoot":""}