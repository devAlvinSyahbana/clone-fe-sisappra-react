{"version":3,"file":"static/js/937.a62b8c0c.chunk.js","mappings":"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","sources":["app/modules/master/components/Kota.tsx","app/modules/master/components/Lihat-master/LihatKota.tsx","app/modules/master/components/Update-master/UpdateKota.tsx","app/modules/master/components/Tambah-master/TambahKota.tsx","app/modules/master/components/Kecamatan.tsx","app/modules/master/components/Lihat-master/LihatKecamatan.tsx","app/modules/master/components/Update-master/UpdateKecamatan.tsx","app/modules/master/components/Tambah-master/TambahKecamatan.tsx","app/modules/master/components/Kelurahan.tsx","app/modules/master/components/Lihat-master/LihatKelurahan.tsx","app/modules/master/components/Update-master/UpdateKelurahan.tsx","app/modules/master/components/Tambah-master/TambahKelurahan.tsx","app/modules/master/components/JenisKegiatan.tsx","app/modules/master/components/Lihat-master/LihatJenisKegiatan.tsx","app/modules/master/components/Update-master/UpdateJenisKegiatan.tsx","app/modules/master/components/Tambah-master/TambahJenisKegiatan.tsx","app/modules/master/components/JenisKejadian.tsx","app/modules/master/components/Lihat-master/LihatJenisKejadian.tsx","app/modules/master/components/Update-master/UpdateJenisKejadian.tsx","app/modules/master/components/Tambah-master/TambahJenisKejadian.tsx","app/modules/master/components/JenisPelanggaran.tsx","app/modules/master/components/Lihat-master/LihatJenisPelanggaran.tsx","app/modules/master/components/JenisPertolongan.tsx","app/modules/master/components/Lihat-master/LihatJenisPertolongan.tsx","app/modules/master/components/Update-master/UpdateJenisPertolongan.tsx","app/modules/master/components/JenisPerdaPerkada.tsx","app/modules/master/components/Lihat-master/LihatJenisPerdaPerkada.tsx","app/modules/master/components/Update-master/UpdateJenisPerdaPerkada.tsx","app/modules/master/components/Tambah-master/TambahJenisPerdaPerkada.tsx","app/modules/master/components/JenisPenindakan.tsx","app/modules/master/components/Lihat-master/LihatJenisPenindakan.tsx","app/modules/master/components/Update-master/UpdateJenisPenindakan.tsx","app/modules/master/components/KorbanJiwa.tsx","app/modules/master/components/Lihat-master/LihatKorbanJiwa.tsx","app/modules/master/components/Update-master/UpdateKorbanJiwa.tsx","app/modules/master/components/Tambah-master/TambahKorbanJiwa.tsx","app/modules/master/components/KorbanMaterial.tsx","app/modules/master/components/Lihat-master/LihatKorbanMaterial.tsx","app/modules/master/components/Update-master/UpdateKorbanMaterial.tsx","app/modules/master/components/JenisBantuan.tsx","app/modules/master/components/Lihat-master/LihatJenisBantuan.tsx","app/modules/master/components/Update-master/UpdateJenisBantuan.tsx","app/modules/master/components/InstansiTerkait.tsx","app/modules/master/components/KondisiSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatKondisiSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateKondisiSaranaPrasarana.tsx","app/modules/master/components/StatusSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatStatusSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateStatusSaranaPrasarana.tsx","app/modules/master/components/Agama.tsx","app/modules/master/components/Lihat-master/LihatAgama.tsx","app/modules/master/components/Update-master/UpdateAgama.tsx","app/modules/master/components/Tambah-master/TambahAgama.tsx","app/modules/master/components/Pangkat.tsx","app/modules/master/components/Update-master/UpdatePangkat.tsx","app/modules/master/components/Lihat-master/LihatPangkat.tsx","app/modules/master/components/Tambah-master/TambahPangkat.tsx","app/modules/master/components/TempatPelaksanaan.tsx","app/modules/master/components/Update-master/UpdateTempatPelaksanaan.tsx","app/modules/master/components/Lihat-master/LihatTempatPelaksanaan.tsx","app/modules/master/components/SKPD.tsx","app/modules/master/components/Update-master/UpdateSKPD.tsx","app/modules/master/components/Lihat-master/LihatSKPD.tsx","app/modules/master/components/Pendidikan.tsx","app/modules/master/components/Lihat-master/LihatPendidikan.tsx","app/modules/master/components/JenisSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateJenisSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatJenisSaranaPrasarana.tsx","app/modules/master/components/Golongan.tsx","app/modules/master/components/Eselon.tsx","app/modules/master/components/Update-master/UpdateEselon.tsx","app/modules/master/components/Lihat-master/LihatEselon.tsx","app/modules/master/components/Jabatan.tsx","app/modules/master/components/Lihat-master/LihatJabatan.tsx","app/modules/master/components/Tambah-master/TambahJabatan.tsx","app/modules/master/components/SumberInformasi.tsx","app/modules/master/components/Update-master/UpdateSumberInformasi.tsx","app/modules/master/components/Lihat-master/LihatSumberInformasi.tsx","app/modules/master/components/JenisKekerasan.tsx","app/modules/master/components/Update-master/UpdateJenisKekerasan.tsx","app/modules/master/components/Lihat-master/LihatJenisKekerasan.tsx","app/modules/master/components/JenisPenyelesaian.tsx","app/modules/master/components/StatusKenaikanPangkat.tsx","app/modules/master/components/Lihat-master/LihatStatusKenaikanPangkat.tsx","app/modules/master/MasterPage.tsx"],"sourcesContent":["import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const KOTA_URL = `${API_URL}/master/kota`\r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  kota?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  kota: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function Kota() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterKota, setFilterKota] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterKota.val !== '') {\r\n      uriParam += `${valFilterKota.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterKota({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputKota = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterKota({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Kota',\r\n      selector: (row: any) => row.kota,\r\n      sortable: true,\r\n      sortField: 'kota',\r\n    },\r\n    {\r\n      name: 'Kode',\r\n      selector: (row: any) => row.kode,\r\n      sortable: true,\r\n      sortField: 'kode',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kota/LihatKota/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${KOTA_URL}/filter-kota/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${KOTA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        kota: valuesFormik?.kota, //? valuesFormik.kota : '',\r\n      }\r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${KOTA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      kota: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${KOTA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${KOTA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Kota</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterKota.val} //4\r\n            onChange={handleChangeInputKota}\r\n            placeholder='Kota'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Kota</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Kota</Form.Label>\r\n                  <Form.Control\r\n                      name='kota'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.kota && formik.errors.kota,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.kota && !formik.errors.kota,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.kota}\r\n                    />\r\n                    {formik.touched.kota && formik.errors.kota && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.kota}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  kota?: string\r\n  kode?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  kota?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatKota() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KOTA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kota: jsonD.kota,\r\n        kode: jsonD.kode,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kota'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kota ? valuesFormikExist?.kota : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode</Form.Label>\r\n                        <Form.Control\r\n                          name='kode'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kota'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kota?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  kota?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000//master/kota\r\n\r\nexport function UpdateKota() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KOTA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kota: jsonD.kota,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kota: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kota: valuesFormik?.kota\r\n          ? valuesFormik.kota\r\n          : valuesFormikExist?.kota\r\n          ? valuesFormikExist.kota\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${KOTA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${KOTA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Kota', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Kota', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kota'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kota || valuesFormik?.kota === ''\r\n                              ? valuesFormik?.kota\r\n                              : valuesFormikExist?.kota\r\n                              ? valuesFormikExist?.kota\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kota'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kota?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/master/kota\r\n\r\nexport function TambahKota() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kota: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kota: valuesFormik?.kota ? valuesFormik.kota : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\r\n        if (response) {\r\n            if (selectedFile) {\r\n              formData.append('file_dokumentasi', selectedFile)\r\n              const responseFile = await axios.post(\r\n                `${KOTA_URL}/upload-file/${response.data.data.return_id}`,\r\n                formData\r\n              )\r\n              if (responseFile) {\r\n                console.log('File success uploaded!')\r\n                Swal.fire({\r\n                  icon: 'success',\r\n                  title: 'Data berhasil disimpan',\r\n                  showConfirmButton: false,\r\n                  timer: 1500,\r\n                })\r\n                navigate('/master/Kota', {replace: true})\r\n              }\r\n              return\r\n            }\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            navigate('/master/Kota', {replace: true})\r\n          }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kota'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kota}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kota'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Swal from 'sweetalert2'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\r\n\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nexport function Kecamatan() {\r\n  const navigate = useNavigate()\r\n\r\n  const [show, setShow] = useState(false)\r\n  const [valFilterKota, setFilterKota] = useState({val: ''})\r\n  const [valFilterKecamatan, setFilterKecamatan] = useState({val: ''})\r\n  const [data, setData] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n \r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n  const handleFilter = async () => {\r\n    let uriParam = ''\r\n    if (valFilterKota.val !== '') {\r\n      uriParam += `kota=${valFilterKota.val}`\r\n    }\r\n    if (valFilterKecamatan.val !== '') {\r\n      uriParam += `&kecamatan=${valFilterKecamatan.val}`\r\n    }\r\n    \r\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\r\n  }\r\n\r\n  const handleChangeInputKota = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterKota({val: event.target.value})\r\n  }\r\n  const handleChangeInputKecamatan = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterKecamatan({val: event.target.value})\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      sortField: 'no',\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Kode Kecamatan',\r\n      selector: (row: any) => row.kode_kecamatan,\r\n      sortable: true,\r\n      sortField: 'kode_kecamatan',\r\n      width: '200px',\r\n    },\r\n    {\r\n      name: 'Kecamatan',\r\n      selector: (row: any) => row.kecamatan,\r\n      sortable: true,\r\n      sortField: 'kecamatan',\r\n      width: '250px',\r\n    },\r\n    {\r\n      name: 'Kode Kota',\r\n      selector: (row: any) => row.kode_kota,\r\n      sortable: true,\r\n      sortField: 'kode_kota',\r\n      width: '150px',\r\n    },\r\n    {\r\n      name: 'Kota',\r\n      selector: (row: any) => row.kota,\r\n      sortable: true,\r\n      sortField: 'kota',\r\n      width: '300px',\r\n    },\r\n    {},\r\n\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      align: 'left',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kecamatan/LihatKecamatan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kecamatan/UpdateKecamatan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Ubah\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n\r\n\r\n  const [temp, setTemp] = useState([])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      console.log(qParamFind)\r\n      const response = await axios.get(\r\n        `${KECAMATAN_URL}/findone-by-kecamatan?${qParamFind.strparam}`\r\n      )\r\n      console.log(response.data.data)\r\n      // setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n  //}\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true)\r\n    const value = await axios.get(KECAMATAN_URL + '/find')\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n\r\n  const handlePageChange = (page: any) => {\r\n    fetchUsers(page)\r\n  }\r\n\r\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n    setLoading(true)\r\n\r\n    const response = await axios.get(\r\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\r\n    )\r\n\r\n    setData(response.data.data)\r\n    setPerPage(newPerPage)\r\n    setLoading(false)\r\n  }\r\n\r\n  const handleSort = (column: any, sortDirection: any) => {\r\n    // simulate server sort\r\n    console.log(column, sortDirection)\r\n    setLoading(true)\r\n\r\n    // instead of setTimeout this is where you would handle your API call.\r\n    setTimeout(() => {\r\n      setData(orderBy(data, column.sortField, sortDirection))\r\n      setLoading(false)\r\n    }, 100)\r\n  }\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      title: 'Anda yakin?',\r\n      text: 'Ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${KECAMATAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6'>\r\n          <div className='form-group'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Kota\r\n            </label>\r\n            <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='kota'\r\n            value={valFilterKota.val}\r\n            onChange={handleChangeInputKota}\r\n            placeholder='Kota'\r\n          />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6'>\r\n          <div className='form-group'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Kecamatan\r\n            </label>\r\n            <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='kecamatan'\r\n            value={valFilterKecamatan.val}\r\n            onChange={handleChangeInputKecamatan}\r\n            placeholder='Kecamatan'\r\n          />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n          <Link onClick={handleFilter} to='#'>\r\n            <button className='btn btn-primary'>\r\n              <i className='fa-solid fa-search'></i>\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='/master/Kecamatan/TambahKecamatan'>\r\n            <button className='btn btn-primary me-5'>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n        {/* <DataTable columns={columns} data={temp} pagination /> */}\r\n        {/* <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          paginationTotalRows={totalRows}\r\n        /> */}\r\n        {temp?.length > 0 && temp && ( //urutan 4\r\n          <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.')\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.')\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  kecamatan?: string\r\n  kode_kota?: string\r\n  kode_kecamatan?: string\r\n  kota?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kecamatan?: string\r\n  kode_kota?: string\r\n  kode_kecamatan?: string\r\n  kota?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\r\nexport function LihatKecamatan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KECAMATAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kecamatan: jsonD.kecamatan,\r\n        kode_kota: jsonD.kode_kota,\r\n        kode_kecamatan: jsonD.kode_kecamatan,\r\n        kota: jsonD.kota,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kecamatan ? valuesFormikExist?.kecamatan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kota'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode_kota ? valuesFormikExist?.kode_kota : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.kode_kecamatan\r\n                              ? valuesFormikExist?.kode_kecamatan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kota'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kota ? valuesFormikExist?.kota : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kecamatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kode_kota?: string\r\n  kecamatan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode_kota?: string\r\n  kecamatan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000//master/kecamatan\r\n\r\nexport function UpdateKecamatan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KECAMATAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kecamatan: jsonD.kecamatan,\r\n        kode_kota: jsonD.kode_kota,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value.toUpperCase(),\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kecamatan: '',\r\n      kode_kota: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kecamatan: valuesFormik?.kecamatan\r\n          ? valuesFormik.kecamatan\r\n          : valuesFormikExist?.kecamatan\r\n          ? valuesFormikExist.kecamatan\r\n          : '',\r\n        kode_kota: valuesFormik?.kode_kota\r\n          ? valuesFormik.kode_kota\r\n          : valuesFormikExist?.kode_kota\r\n          ? valuesFormikExist.kode_kota\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${KECAMATAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${KECAMATAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Kecamatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Kecamatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kecamatan || valuesFormik?.kecamatan === ''\r\n                              ? valuesFormik?.kecamatan\r\n                              : valuesFormikExist?.kecamatan\r\n                              ? valuesFormikExist?.kecamatan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kota'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kode_kota || valuesFormik?.kode_kota === ''\r\n                              ? valuesFormik?.kode_kota\r\n                              : valuesFormikExist?.kode_kota\r\n                              ? valuesFormikExist?.kode_kota\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kecamatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kecamatan?: string\r\n  kode_kota?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\r\n\r\nexport function TambahKecamatan() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value.toUpperCase(),\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kecamatan: '',\r\n      kode_kota: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kecamatan: valuesFormik?.kecamatan ? valuesFormik.kecamatan : '',\r\n        kode_kota: valuesFormik?.kode_kota ? valuesFormik.kode_kota : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${KECAMATAN_URL}/create`, bodyparam)\r\n        console.log(response.data, valuesFormik)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${KECAMATAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Kecamatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Kecamatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kecamatan}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kota'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kode_kota}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kecamatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Swal from 'sweetalert2'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {Kecamatan} from './Kecamatan'\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\r\n\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nexport function Kelurahan() {\r\n  // STATE SECTION\r\n  const navigate = useNavigate()\r\n  const [valFilterKelurahan, setFilterKelurahan] = useState({val: ''})\r\n  const [valFilterKecamatan, setFilterKecamatan] = useState({val: ''})\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [loading, setLoading] = useState(false)\r\n  const [perPage, setPerPage] = useState(10)\r\n  const [temp, setTemp] = useState([])\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n  // const [data, setData] = useState([])\r\n\r\n  // END STATE SECTION\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const handleFilter = async () => {\r\n    let uriParam = ''\r\n    if (valFilterKecamatan.val !== '') {\r\n      uriParam += `kecamatan=${valFilterKecamatan.val}`\r\n    }\r\n    if (valFilterKelurahan.val !== '') {\r\n      uriParam += `&kelurahan=${valFilterKelurahan.val}`\r\n    }\r\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\r\n  }\r\n\r\n  const handleChangeInputKelurahan = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterKelurahan({val: event.target.value})\r\n  }\r\n  const handleChangeInputKecamatan = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterKecamatan({val: event.target.value})\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      sortField: 'no',\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Kode Kelurahan',\r\n      selector: (row: any) => row.kode_kelurahan,\r\n      sortable: true,\r\n      sortField: 'kelurahan',\r\n    },\r\n    {\r\n      name: 'Kelurahan',\r\n      selector: (row: any) => row.kelurahan,\r\n      sortable: true,\r\n      sortField: 'kelurahan',\r\n    },\r\n    {\r\n      name: 'Kode Kecamatan',\r\n      selector: (row: any) => row.kode_kecamatan,\r\n      sortable: true,\r\n      sortField: 'Kode kecamatan',\r\n    },\r\n    {\r\n      name: 'Kecamatan',\r\n      selector: (row: any) => row.kecamatan,\r\n      sortable: true,\r\n      sortField: 'kecamatan',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      align: 'left',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kelurahan/LihatKelurahan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kelurahan/Updatekelurahan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Ubah\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  //if(valFilterKecamatan.val ? valFilterKecamatan.val : '' || valFilterKelurahan.val ? valFilterKelurahan.val : ''){\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      console.log(qParamFind)\r\n      const response = await axios.get(\r\n        `${KELURAHAN_URL}/findone-by-kelurahan?${qParamFind.strparam}`\r\n      )\r\n      console.log(response.data.data)\r\n      // setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n  //}\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true)\r\n    const value = await axios.get(KELURAHAN_URL + '/find')\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n\r\n  // const handlePageChange = (page: any) => {\r\n  //   fetchUsers(page)\r\n  // }\r\n\r\n  // const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n  //   setLoading(true)\r\n\r\n  //   const response = await axios.get(\r\n  //     `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\r\n  //   )\r\n\r\n  //   setData(response.data.data)\r\n  //   setPerPage(newPerPage)\r\n  //   setLoading(false)\r\n  // }\r\n\r\n  // const handleSort = (column: any, sortDirection: any) => {\r\n  //   // simulate server sort\r\n  //   console.log(column, sortDirection)\r\n  //   setLoading(true)\r\n\r\n  //   // instead of setTimeout this is where you would handle your API call.\r\n  //   setTimeout(() => {\r\n  //     setData(orderBy(data, column.sortField, sortDirection))\r\n  //     setLoading(false)\r\n  //   }, 100)\r\n  // }\r\n\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      title: 'Anda yakin?',\r\n      text: 'Ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${KELURAHAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        {/* {valFilterKecamatan.val === 'PNS' || valFilterKecamatan.val === '' ? ( */}\r\n        <div className='col-xxl-6 col-lg-6 col-md-6 col-sm-12'>\r\n          <label htmlFor='' className='mb-3'>\r\n            Kecamatan\r\n          </label>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='kecamatan'\r\n            value={valFilterKecamatan.val}\r\n            onChange={handleChangeInputKecamatan}\r\n            placeholder='Kecamatan'\r\n          />\r\n        </div>\r\n        {/* ) : null} */}\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        {/* {valFilterKelurahan.val === 'PNS' || valFilterKelurahan.val === '' ? ( */}\r\n        <div className='col-xxl-6 col-lg-6 col-md-6 col-sm-12'>\r\n          <label htmlFor='' className='mb-3'>\r\n            Kelurahan\r\n          </label>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='kelurahan'\r\n            value={valFilterKelurahan.val}\r\n            onChange={handleChangeInputKelurahan}\r\n            placeholder='Kelurahan'\r\n          />\r\n        </div>\r\n        {/* ) : null} */}\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#'>\r\n            <button onClick={handleFilter} className='btn btn-primary'>\r\n              <i className='fa-solid fa-search'></i>\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='/master/Kelurahan/TambahKelurahan'>\r\n            <button className='btn btn-primary me-5'>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n        {/* <DataTable columns={columns} data={temp} pagination /> */}\r\n        {/* <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          paginationTotalRows={totalRows}\r\n        /> */}\r\n        {temp?.length > 0 && temp && ( //urutan 4\r\n          <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.')\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.')\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  kecamatan?: string\r\n  kode_kelurahan?: string\r\n  kode_kecamatan?: string\r\n  kelurahan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kecamatan?: string\r\n  kode_kelurahan?: string\r\n  kode_kecamatan?: string\r\n  kelurahan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\r\nexport function LihatKelurahan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KELURAHAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kecamatan: jsonD.kecamatan,\r\n        kode_kelurahan: jsonD.kode_kelurahan,\r\n        kode_kecamatan: jsonD.kode_kecamatan,\r\n        kelurahan: jsonD.kelurahan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kecamatan ? valuesFormikExist?.kecamatan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kelurahan</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kelurahan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.kode_kelurahan\r\n                              ? valuesFormikExist?.kode_kelurahan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.kode_kecamatan\r\n                              ? valuesFormikExist?.kode_kecamatan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kelurahan</Form.Label>\r\n                        <Form.Control\r\n                          name='kelurahan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kelurahan ? valuesFormikExist?.kelurahan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kelurahan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kode_kecamatan?: string\r\n  kelurahan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode_kecamatan?: string\r\n  kelurahan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000//master/kelurahan\r\n\r\nexport function UpdateKelurahan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KELURAHAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kelurahan: jsonD.kelurahan,\r\n        kode_kecamatan: jsonD.kode_kecamatan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value.toUpperCase(),\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kelurahan: '',\r\n      kode_kecamatan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kelurahan: valuesFormik?.kelurahan\r\n          ? valuesFormik.kelurahan\r\n          : valuesFormikExist?.kelurahan\r\n          ? valuesFormikExist.kelurahan\r\n          : '',\r\n        kode_kecamatan: valuesFormik?.kode_kecamatan\r\n          ? valuesFormik.kode_kecamatan\r\n          : valuesFormikExist?.kode_kecamatan\r\n          ? valuesFormikExist.kode_kecamatan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${KELURAHAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${KELURAHAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/kelurahan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/kelurahan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>kelurahan</Form.Label>\r\n                        <Form.Control\r\n                          name='kelurahan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kelurahan || valuesFormik?.kelurahan === ''\r\n                              ? valuesFormik?.kelurahan\r\n                              : valuesFormikExist?.kelurahan\r\n                              ? valuesFormikExist?.kelurahan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kode_kecamatan || valuesFormik?.kode_kecamatan === ''\r\n                              ? valuesFormik?.kode_kecamatan\r\n                              : valuesFormikExist?.kode_kecamatan\r\n                              ? valuesFormikExist?.kode_kecamatan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/kelurahan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kelurahan?: string\r\n  kode_kecamatan?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\r\n\r\nexport function TambahKelurahan() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value.toUpperCase(),\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kelurahan: '',\r\n      kode_kecamatan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kelurahan: valuesFormik?.kelurahan ? valuesFormik.kelurahan : '',\r\n        kode_kecamatan: valuesFormik?.kode_kecamatan ? valuesFormik.kode_kecamatan : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${KELURAHAN_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${KELURAHAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/kelurahan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/kelurahan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>kelurahan</Form.Label>\r\n                        <Form.Control\r\n                          name='kelurahan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kelurahan}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kode_kecamatan}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/kelurahan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL\r\nexport const JENIS_KEGIATAN_URL = `${API_URL}/jenis-kegiatan`\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_kegiatan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  jenis_kegiatan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisKegiatan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisKegiatan, setFilterJenisKegiatan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [filterTemp, setFilterTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => {\r\n    console.log('tes1', valFilterJenisKegiatan.val)\r\n    setUriFind((prevState) => ({...prevState, strparam: valFilterJenisKegiatan.val}))\r\n    const filterData: any = temp.filter(\r\n      (i: any) => i.nama.toLowerCase() === valFilterJenisKegiatan.val.toLowerCase()\r\n    )\r\n    setFilterTemp(filterData)\r\n  }\r\n\r\n  // const handleFilter = async () => {\r\n  // let uriParam = '';\r\n  // if (valFilterJenisKegiatan.val !== '') {\r\n  //   uriParam += valFilterJenisKegiatan.val;\r\n  // }\r\n  // await setUriFind((prevState) => ({...prevState, strparam: uriParam}));\r\n  // console.log('tes1', qParamFind.strparam)\r\n  // if (qParamFind.strparam) {\r\n  //   console.log('tes if', qParamFind.strparam)\r\n  //   const filterData: any = temp.filter(\r\n  //     (i: any) => i.nama.toLowerCase() === qParamFind.strparam.toLowerCase()\r\n  //     );\r\n  //     setFilterTemp(filterData);\r\n  //   }\r\n  // };\r\n\r\n  // const handleFilter = async () => { //3\r\n  //   let uriParam = ''\r\n  //   if (valFilterJenisKegiatan.val !== '') {\r\n  //     uriParam += `${valFilterJenisKegiatan.val}`\r\n  //   }\r\n  //   await setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  //   const filterData: any = temp.filter(\r\n  //     (i: any) => i.nama.toLowerCase() === qParamFind.strparam.toLowerCase()\r\n  //   )\r\n  //   const timeout = setTimeout(() => {\r\n  //     setFilterTemp(filterData)\r\n  //   }, 500)\r\n\r\n  //   return () => clearTimeout(timeout)\r\n  // }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisKegiatan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisKegiatan = (event: {\r\n    //5\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterJenisKegiatan({val: event.target.value})\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Jenis Kegiatan',\r\n      selector: (row: any) => row.nama,\r\n      sortable: true,\r\n      sortField: 'jenis_kegiatan',\r\n    },\r\n    {\r\n      name: 'Kode',\r\n      selector: (row: any) => row.kode,\r\n      sortable: true,\r\n      sortField: 'kode',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisKegiatan/LihatJenisKegiatan/' + record.id, {\r\n                          replace: true,\r\n                        })\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/?%24top=20`)\r\n      console.log(response.data)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    // fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KEGIATAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan, //? valuesFormik.jenis_kegiatan : '',\r\n      }\r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KEGIATAN_URL}/create`)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            // fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KEGIATAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            // fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_kegiatan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n\r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n\r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KEGIATAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          // fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Kegiatan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisKegiatan.val} //4\r\n            onChange={handleChangeInputJenisKegiatan}\r\n            placeholder='Jenis Kegiatan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}>\r\n            {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Kegiatan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Kegiatan</Form.Label>\r\n                  <Form.Control\r\n                    name='jenis_kegiatan'\r\n                    className={clsx(\r\n                      'form-control form-control-solid mb-1',\r\n                      {\r\n                        'is-invalid': formik.touched.jenis_kegiatan && formik.errors.jenis_kegiatan,\r\n                      },\r\n                      {\r\n                        'is-valid': formik.touched.jenis_kegiatan && !formik.errors.jenis_kegiatan,\r\n                      }\r\n                    )}\r\n                    onChange={handleChangeFormik}\r\n                    value={valuesFormik?.jenis_kegiatan}\r\n                  />\r\n                  {formik.touched.jenis_kegiatan && formik.errors.jenis_kegiatan && (\r\n                    <div className='fv-plugins-message-container'>\r\n                      <div className='fv-help-block'>\r\n                        <span role='alert'>{formik.errors.jenis_kegiatan}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n        {temp?.length > 0 && temp && (\r\n          <DataTable\r\n            columns={columns}\r\n            data={qParamFind.strparam ? filterTemp : temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_kegiatan?: string\r\n  updated_by?: string\r\n  kode?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kegiatan?: string\r\n  kode?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/jenis_kegiatan\r\n\r\nexport function LihatJenisKegiatan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kegiatan: jsonD.jenis_kegiatan,\r\n        kode: jsonD.kode,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kegiatan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis kegiatan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_kegiatan\r\n                              ? valuesFormikExist?.jenis_kegiatan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>kode</Form.Label>\r\n                        <Form.Control\r\n                          name='kode'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKegiatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kegiatan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  jenis_kegiatan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000//master/jenis-kegiatan\r\n\r\nexport function UpdateJenisKegiatan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kegiatan: jsonD.jenis_kegiatan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kegiatan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan\r\n          ? valuesFormik.jenis_kegiatan\r\n          : valuesFormikExist?.jenis_kegiatan\r\n          ? valuesFormikExist.jenis_kegiatan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KEGIATAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KEGIATAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKegiatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKegiatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kegiatan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kegiatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_kegiatan || valuesFormik?.jenis_kegiatan === ''\r\n                              ? valuesFormik?.jenis_kegiatan\r\n                              : valuesFormikExist?.jenis_kegiatan\r\n                              ? valuesFormikExist?.jenis_kegiatan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKegiatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kegiatan?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/master/jenis_kegiatan\r\n\r\nexport function TambahJenisKegiatan() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kegiatan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan ? valuesFormik.jenis_kegiatan : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${JENIS_KEGIATAN_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${JENIS_KEGIATAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKegiatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKegiatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kegiatan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kegiatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.jenis_kegiatan}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKegiatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL\r\nexport const JENIS_KEJADIAN_URL = `${API_URL}/jenis-kejadian` \r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_kejadian?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  jenis_kejadian: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisKejadian() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisKejadian, setFilterJenisKejadian] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [filterTemp, setFilterTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => {\r\n    console.log('tes1', valFilterJenisKejadian.val)\r\n    setUriFind((prevState) => ({...prevState, strparam: valFilterJenisKejadian.val}))\r\n    const filterData: any = temp.filter(\r\n      (i: any) => i.nama.toLowerCase() === valFilterJenisKejadian.val.toLowerCase()\r\n    )\r\n    setFilterTemp(filterData)\r\n  }\r\n\r\n  // const handleFilter = async () => {//3\r\n  //   let uriParam = ''\r\n  //   if (valFilterJenisKejadian.val !== '') {\r\n  //     uriParam += `${valFilterJenisKejadian.val}`\r\n  //   }\r\n  //   setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  //   const filterData: any = temp.filter(\r\n  //     (i: any) => i.nama.toLowerCase() === qParamFind.strparam.toLowerCase()\r\n  //   )\r\n  //   const timeout = setTimeout(() => {\r\n  //     setFilterTemp(filterData)\r\n  //   }, 500)\r\n\r\n  //   return () => clearTimeout(timeout)\r\n  // }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisKejadian({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisKejadian = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisKejadian({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      width: '200px',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Kejadian',\r\n      selector: (row: any) => row.nama,\r\n      sortable: true,\r\n      sortField: 'jenis_kejadian',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisKejadian/LihatJenisKejadian/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/?%24top=20`)\r\n      console.log(response.data)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    // fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KEJADIAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_kejadian: valuesFormik?.jenis_kejadian, //? valuesFormik.jenis_kejadian : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KEJADIAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KEJADIAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            // fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_kejadian: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KEJADIAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Kejadian</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisKejadian.val} //4\r\n            onChange={handleChangeInputJenisKejadian}\r\n            placeholder='Jenis Kejadian'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}>\r\n            {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Kejadian</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Kejadian</Form.Label>\r\n                  <Form.Control\r\n                    name='jenis_kejadian'\r\n                    className={clsx(\r\n                      'form-control form-control-solid mb-1',\r\n                      {\r\n                        'is-invalid': formik.touched.jenis_kejadian && formik.errors.jenis_kejadian,\r\n                      },\r\n                      {\r\n                        'is-valid': formik.touched.jenis_kejadian && !formik.errors.jenis_kejadian,\r\n                      }\r\n                    )}\r\n                    onChange={handleChangeFormik}\r\n                    value={valuesFormik?.jenis_kejadian}\r\n                  />\r\n                  {formik.touched.jenis_kejadian && formik.errors.jenis_kejadian && (\r\n                    <div className='fv-plugins-message-container'>\r\n                      <div className='fv-help-block'>\r\n                        <span role='alert'>{formik.errors.jenis_kejadian}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n        {temp?.length > 0 && temp && (\r\n          <DataTable\r\n            columns={columns}\r\n            data={qParamFind.strparam ? filterTemp : temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_kejadian?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kejadian?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL //http://localhost:3001\r\nexport const JENIS_KEJADIAN_URL = `${API_URL}/jenis-kejadian` //http://localhost:3001/jenis-kejadian\r\n\r\nexport function LihatJenisKejadian() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kejadian: jsonD.jenis_kejadian,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kejadian'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_kejadian\r\n                              ? valuesFormikExist?.jenis_kejadian\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKejadian'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kejadian?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kejadian?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000//master/jenis-kejadian\r\n\r\nexport function UpdateJenisKejadian() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kejadian: jsonD.jenis_kejadian,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kejadian: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kejadian: valuesFormik?.jenis_kejadian\r\n          ? valuesFormik.jenis_kejadian\r\n          : valuesFormikExist?.jenis_kejadian\r\n          ? valuesFormikExist.jenis_kejadian\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KEJADIAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KEJADIAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKejadian', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKejadian', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kejadian'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_kejadian || valuesFormik?.jenis_kejadian === ''\r\n                              ? valuesFormik?.jenis_kejadian\r\n                              : valuesFormikExist?.jenis_kejadian\r\n                              ? valuesFormikExist?.jenis_kejadian\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKejadian'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kejadian?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000/master/jenis-kejadian\r\n\r\nexport function TambahJenisKejadian() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kejadian: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kejadian: valuesFormik?.jenis_kejadian ? valuesFormik.jenis_kejadian : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${JENIS_KEJADIAN_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${JENIS_KEJADIAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKejadian', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKejadian', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kejadian'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.jenis_kejadian}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKejadian'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport DataTable, { createTheme } from 'react-data-table-component';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport clsx from 'clsx'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PELANGGARAN_URL = `${API_URL}/master/Jenis-pelanggaran` //http://localhost:3000/Jenis-pelanggaran\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  jenis_pelanggaran?: string\r\n  kode_penertiban?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_pelanggaran: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisPelanggaran() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisPelanggaran, setFilterJenisPelanggaran] = useState({val: ''})\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n  // const handleShow = () => setShow(true);\r\n\r\n  const handleFilter = async () => {\r\n    //3\r\n    let uriParam = ''\r\n    if (valFilterJenisPelanggaran.val !== '') {\r\n      uriParam += `${valFilterJenisPelanggaran.val}`\r\n    }\r\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisPelanggaran({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisPelanggaran = (event: {\r\n    //5\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterJenisPelanggaran({val: event.target.value})\r\n  }\r\n\r\n  // START : CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  // Column Table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      width: '150px',\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n      // sortField: 'id',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Pelanggaran',\r\n      selector: (row: any) => row.jenis_pelanggaran,\r\n      sortable: true,\r\n      sortField: 'jenis_pelanggaran',\r\n      width: '200px',\r\n    },\r\n    {},\r\n    // {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      align: 'left',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisPelanggaran/LihatJenisPelanggaran/' + record.id, {\r\n                          replace: true,\r\n                        })\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START : VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_PELANGGARAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_PELANGGARAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n\r\n  // END : VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_pelanggaran: valuesFormik?.jenis_pelanggaran,\r\n        kode_penertiban: '', //? valuesFormik.jenis_pelanggaran : '', //? valuesFormik.kategori : '',\r\n      }\r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_PELANGGARAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_PELANGGARAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_pelanggaran: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n\r\n  //  GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_PELANGGARAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n\r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_PELANGGARAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END : CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-xxl- col-lg-6 col-md-3 col-sm-10'>\r\n          <label htmlFor='' className='mb-3'>\r\n            Jenis Pelanggaran\r\n          </label>\r\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'></div>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='tags'\r\n            value={valFilterJenisPelanggaran.val}\r\n            onChange={handleChangeInputJenisPelanggaran}\r\n            placeholder='Jenis Pelanggaran'\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}>\r\n            <button className='btn btn-primary'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#'>\r\n            <button className='btn btn-primary me-5' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Pelanggaran</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Pelanggaran</Form.Label>\r\n                  <Form.Control\r\n                    name='jenis_pelanggaran'\r\n                    className={clsx(\r\n                      'form-control form-control-solid mb-1',\r\n                      {\r\n                        'is-invalid':\r\n                          formik.touched.jenis_pelanggaran && formik.errors.jenis_pelanggaran,\r\n                      },\r\n                      {\r\n                        'is-valid':\r\n                          formik.touched.jenis_pelanggaran && !formik.errors.jenis_pelanggaran,\r\n                      }\r\n                    )}\r\n                    onChange={handleChangeFormik}\r\n                    value={valuesFormik?.jenis_pelanggaran}\r\n                  />\r\n                  {formik.touched.jenis_pelanggaran && formik.errors.jenis_pelanggaran && (\r\n                    <div className='fv-plugins-message-container'>\r\n                      <div className='fv-help-block'>\r\n                        <span role='alert'>{formik.errors.jenis_pelanggaran}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n        {temp?.length > 0 && temp && (\r\n          <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n  // const handlePageChange = (page: any) => {\r\n  //   fetchUsers(page);\r\n  // };\r\n\r\n  // const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n  //   setLoading(true);\r\n\r\n  //   const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\r\n\r\n  //   setData(response.data.data);\r\n  //   setPerPage(newPerPage);\r\n  //   setLoading(false);\r\n  // };\r\n\r\n  // const handleSort = (column: any, sortDirection: any) => {\r\n  //   // simulate server sort\r\n  //   console.log(column, sortDirection);\r\n  //   setLoading(true);\r\n\r\n  //   // instead of setTimeout this is where you would handle your API call.\r\n  //   setTimeout(() => {\r\n  //     setData(orderBy(data, column.sortField, sortDirection));\r\n  //     setLoading(false);\r\n  //   }, 100);\r\n  // };\r\n\r\n// function orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n//   throw new Error('Function not implemented.');\r\n// }\r\n\r\n// function onEdit(record: any) {\r\n//   throw new Error('Function not implemented.');\r\n// }\r\n\r\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_pelanggaran?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_pelanggaran?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PELANGGARAN_URL = `${API_URL}/master/Jenis-pelanggaran` //http://localhost:3000/sarana-prasarana\n\nexport function LihatJenisPelanggaran() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PELANGGARAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_pelanggaran: jsonD.jenis_pelanggaran,\n        updated_by: '',\n    }\n    setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    // console.log('respon data', valuesFormikExist)\n}\nfetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-8'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Pelanggaran</Form.Label>\n                        <Form.Control\n                          name='jenis_pelanggaran'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.jenis_pelanggaran ? valuesFormikExist?.jenis_pelanggaran : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPelanggaran'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_pertolongan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_pertolongan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisPertolongan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisPertolongan, setFilterJenisPertolongan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisPertolongan.val !== '') {\r\n      uriParam += `${valFilterJenisPertolongan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisPertolongan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisPertolongan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisPertolongan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Pertolongan',\r\n      selector: (row: any) => row.jenis_pertolongan,\r\n      sortable: true,\r\n      sortField: 'jenis_pertolongan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisPertolongan/LihatJenisPertolongan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_PERTOLONGAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_pertolongan: valuesFormik?.jenis_pertolongan, //? valuesFormik.jenis_pertolongan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_PERTOLONGAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_PERTOLONGAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_pertolongan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_PERTOLONGAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Pertolongan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisPertolongan.val} //4\r\n            onChange={handleChangeInputJenisPertolongan}\r\n            placeholder='Jenis pertolongan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Pertolongan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Pertolongan</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_pertolongan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_pertolongan && formik.errors.jenis_pertolongan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_pertolongan && !formik.errors.jenis_pertolongan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_pertolongan}\r\n                    />\r\n                    {formik.touched.jenis_pertolongan && formik.errors.jenis_pertolongan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_pertolongan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_pertolongan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_pertolongan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatJenisPertolongan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_pertolongan: jsonD.jenis_pertolongan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Pertolongan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_pertolongan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.jenis_pertolongan ? valuesFormikExist?.jenis_pertolongan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPertolongan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_pertolongan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  jenis_pertolongan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` //http://localhost:3000//master/JenisPertolongan\r\n\r\nexport function UpdateJenisPertolongan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_pertolongan: jsonD.jenis_pertolongan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_pertolongan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_pertolongan: valuesFormik?.jenis_pertolongan\r\n          ? valuesFormik.jenis_pertolongan\r\n          : valuesFormikExist?.jenis_pertolongan\r\n          ? valuesFormikExist.jenis_pertolongan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_PERTOLONGAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_PERTOLONGAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisPertolongan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisPertolongan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Pertolongan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_pertolongan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_pertolongan || valuesFormik?.jenis_pertolongan === ''\r\n                              ? valuesFormik?.jenis_pertolongan\r\n                              : valuesFormikExist?.jenis_pertolongan\r\n                              ? valuesFormikExist?.jenis_pertolongan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPertolongan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport DataTable, { createTheme } from 'react-data-table-component';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\nimport clsx from 'clsx'\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL //http://localhost:3001\r\nexport const JENIS_PERDA_PERKADA_URL = `${API_URL}/jenis-perda-perkada` //http://localhost:3000/jenis-perda-perkada\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  judul?: string\r\n  deskripsi?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  jenis_perda_perkada: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisPerdaPerkada() {\r\n  const {mode} = useThemeMode()\r\n  const navigate = useNavigate();\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJudul, setFilterJudul] = useState({val: ''})\r\n  const [valFilterDeskripsi, setFilterDeskripsi] = useState({val: ''})\r\n  \r\n  const [data, setData] = useState([]);\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const handleShow = () => setShow(true);\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  const handleFilter = async () => {\r\n    let uriParam = ''\r\n    if (valFilterJudul.val !== '') {\r\n      uriParam += `judul=${valFilterJudul.val}`\r\n    }\r\n    if (valFilterDeskripsi.val !== '') {\r\n      uriParam += `&deskripsi=${valFilterDeskripsi.val}`\r\n    }\r\n\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  // const handleFilterReset = () => {\r\n  //   setFilterJudul({val: ''})\r\n  //   setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  // }\r\n\r\n  const handleChangeInputJenisPerdaPerkada = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJudul({ val: event.target.value })\r\n  }\r\n  const handleChangeInputDeskripsi = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterDeskripsi({ val: event.target.value })\r\n  }\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\r\n          <div className=\"d-flex flex-column\">\r\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  // let number = 1\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.id,\r\n      sortable: true,\r\n      sortField: 'id',\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      }\r\n    },\r\n    {\r\n    },\r\n    {\r\n      name: 'Judul',\r\n      selector: (row: any) => row.judul,\r\n      sortable: true,\r\n      sortField: 'judul',\r\n      width: '300px'\r\n    },\r\n    {\r\n      name: 'Deskripsi',\r\n      selector: (row: any) => row.deskripsi,\r\n      sortable: true,\r\n      sortField: 'deskripsi',\r\n    },\r\n    {\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: \"Action\",\r\n      className: \"action\",\r\n      align: \"left\",\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n\r\n            <div className=\"mb-2\">\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size=\"sm\"\r\n                    variant=\"light\"\r\n                    title=\"Aksi\">\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisPerdaPerkada/LihatJenisPerdaPerkada/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisPerdaPerkada/UpdateJenisPerdaPerkada/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Ubah\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\" onClick={() => konfirDel(record.id)}>Hapus</Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n\r\n  ]\r\n\r\n  useEffect(() => {\r\n      async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      console.log(qParamFind)\r\n      const response = await axios.get(\r\n        `${JENIS_PERDA_PERKADA_URL}${qParamFind.strparam}`\r\n      )\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100)\r\n\r\n    // setTemp(value.data.data);\r\n    // console.log('cek response api:',temp);\r\n   \r\n    // setTotalRows(response.data.total);\r\n    // console.log('cek ahhh :' ,data);\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_PERDA_PERKADA_URL}`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n\r\n  // const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n  //   setLoading(true);\r\n\r\n  //   const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\r\n\r\n  //   setData(response.data.data);\r\n  //   setPerPage(newPerPage);\r\n  //   setLoading(false);\r\n  // };\r\n\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // const handleSort = (column: any, sortDirection: any) => {\r\n  //   // simulate server sort\r\n  //   console.log(column, sortDirection);\r\n  //   setLoading(true);\r\n\r\n  //   // instead of setTimeout this is where you would handle your API call.\r\n  //   setTimeout(() => {\r\n  //     setData(orderBy(data, column.sortField, sortDirection));\r\n  //     setLoading(false);\r\n  //   }, 100);\r\n  // };\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        judul: valuesFormik?.judul,\r\n        deskripsi: valuesFormik?.deskripsi,\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_PERDA_PERKADA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_PERDA_PERKADA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      judul: '',\r\n      // deskripsi: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_PERDA_PERKADA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_PERDA_PERKADA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\r\n            <label htmlFor='' className='mb-3'>\r\n              <h3>Judul Perda / Perkada</h3>\r\n            </label>\r\n            <input\r\n              type='text' \r\n              className='form-control form-control form-control-solid' \r\n              name='q'\r\n              value={valFilterJudul.val}\r\n              onChange={handleChangeInputJenisPerdaPerkada}\r\n              placeholder='Jenis Perda / Perkada'\r\n            />\r\n          </div>\r\n      </div>\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\r\n            <label htmlFor='' className='mb-3'>\r\n              <h3>Deskripsi</h3>\r\n            </label>\r\n            <input\r\n              type='text' \r\n              className='form-control form-control form-control-solid' \r\n              name='q'\r\n              value={valFilterDeskripsi.val}\r\n              onChange={handleChangeInputDeskripsi}\r\n              placeholder='Deskripsi'\r\n            />\r\n          </div>\r\n      </div>\r\n\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n          <Link onClick={handleFilter} to='#'>\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\r\n          <Link to='/master/JenisPerdaPerkada/TambahJenisPerdaPerkada'>\r\n            <button className='btn btn-primary me-5'>\r\n              <i className=\"fa-solid fa-plus\"></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n\r\n      <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Perda / Perkada</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className='row mt-2 '>\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <div className='form-group'>\r\n                <Form.Label>Jenis Perda / Perkada</Form.Label>\r\n                <Form.Control\r\n                  name='jenis_perda_perkada'\r\n                  className={clsx(\r\n                    'form-control form-control-solid mb-1',\r\n                    {\r\n                      'is-invalid': formik.touched.judul && formik.errors.judul,\r\n                    },\r\n                    {\r\n                      'is-valid': formik.touched.judul && !formik.errors.judul,\r\n                    }\r\n                  )}\r\n                  onChange={handleChangeFormik}\r\n                  value={valuesFormik?.judul}\r\n                />\r\n                {formik.touched.judul && formik.errors.judul && (\r\n                  <div className='fv-plugins-message-container'>\r\n                    <div className='fv-help-block'>\r\n                      <span role='alert'>{formik.errors.judul}</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n            </div>\r\n\r\n        {/* <Form.Group className=\"mb-3 form-control-solid\">\r\n            <Form.Label>Perda / Perkada</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Perda / Perkada\" />\r\n        </Form.Group> */}\r\n\r\n            <div className='p-0 mt-6'>\r\n              <div className='text-center'>\r\n                <button\r\n                  className='float-none btn btn-light align-self-center m-1'\r\n                  onClick={handleClose}\r\n                  type='button'\r\n                >\r\n                  <i className='fa fa-close'></i>\r\n                  Batal\r\n                </button>\r\n                <button\r\n                  className='float-none btn btn-primary align-self-center m-1'\r\n                  type='submit'\r\n                >\r\n                  <i className='fa-solid fa-paper-plane'></i>\r\n                  Simpan\r\n                </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n    <div className='table-responsive mt-5 ms-5 me-5'>\r\n    {temp?.length > 0 && temp && (\r\n    <DataTable\r\n      columns={columns}\r\n      data={temp}\r\n      pagination\r\n      progressPending={loading}\r\n      customStyles={customStyles}\r\n      paginationTotalRows={totalRows}\r\n      progressComponent={<LoadingAnimation />}\r\n      theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n      noDataComponent={\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n          </div>\r\n        </div>\r\n      }\r\n    />\r\n    )}\r\n    </div>\r\n    {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.');\r\n}","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  judul?: string\n  deskripsi?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  judul?: string\n  deskripsi?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERDA_PERKADA_URL = `${API_URL}/master/jenis-perda-perkada` //http://localhost:3000/jenis-perda-perkada\n\nexport function LihatJenisPerdaPerkada() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PERDA_PERKADA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        judul: jsonD.judul,\n        deskripsi: jsonD.deskripsi,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Perda / Perkada</Form.Label>\n                        <Form.Control\n                          name='judul'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.judul\n                              ? valuesFormikExist?.judul\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Deskripsi</Form.Label>\n                        <Form.Control\n                          name='deskripsi'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.deskripsi\n                              ? valuesFormikExist?.deskripsi\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPerdaPerkada'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  judul?: string\n  deskripsi?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  judul?: string\n  deskripsi?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERDA_PERKADA_URL = `${API_URL}/master/jenis-perda-perkada` //http://localhost:3000//master/jenis-perda-perkada\n\nexport function UpdateJenisPerdaPerkada() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PERDA_PERKADA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        judul: jsonD.judul,\n        deskripsi: jsonD.deskripsi,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  // const handleChangeFormikSelect = (value: any, name: string) => {\n  //   setValuesFormik((prevValues: any) => ({\n  //     ...prevValues,\n  //     [name]: value,\n  //   }))\n  // }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      judul: '',\n      deskripsi: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        judul: valuesFormik?.judul\n          ? valuesFormik.judul\n          : valuesFormikExist?.judul\n          ? valuesFormikExist.judul\n          : '',\n        deskripsi: valuesFormik?.deskripsi\n          ? valuesFormik.deskripsi\n          : valuesFormikExist?.deskripsi\n          ? valuesFormikExist.deskripsi\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_PERDA_PERKADA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_PERDA_PERKADA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisPerdaPerkada', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisPerdaPerkada', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Perda / Perkada</Form.Label>\n                        <Form.Control\n                          name='judul'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.judul || valuesFormik?.judul === ''\n                              ? valuesFormik?.judul\n                              : valuesFormikExist?.judul\n                              ? valuesFormikExist?.judul\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Deskripsi</Form.Label>\n                        <Form.Control\n                          name='deskripsi'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.deskripsi || valuesFormik?.deskripsi === ''\n                              ? valuesFormik?.deskripsi\n                              : valuesFormikExist?.deskripsi\n                              ? valuesFormikExist?.deskripsi\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPerdaPerkada'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  judul?: string\n  deskripsi?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL //http://localhost:3001\nexport const JENIS_PERDA_PERKADA_URL = `${API_URL}/jenis-perda-perkada` //http://localhost:3000/master/jenis-perda-perkada\n\nexport function TambahJenisPerdaPerkada() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value.toUpperCase(),\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      judul: '',\n      deskripsi: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        judul: valuesFormik?.judul ? valuesFormik.judul : '',\n        deskripsi: valuesFormik?.deskripsi ? valuesFormik.deskripsi : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_PERDA_PERKADA_URL}/create`, bodyparam)\n        console.log(response.data, valuesFormik)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JENIS_PERDA_PERKADA_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisPerdaPerkada', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisPerdaPerkada', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Judul</Form.Label>\n                        <Form.Control\n                          name='judul'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.judul}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Deskripsi</Form.Label>\n                        <Form.Control\n                          name='deskripsi'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.deskripsi}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPerdaPerkada'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_penindakan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_penindakan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisPenindakan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisPenindakan, setFilterJenisPenindakan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisPenindakan.val !== '') {\r\n      uriParam += `${valFilterJenisPenindakan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisPenindakan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisPenindakan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisPenindakan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Penindakan',\r\n      selector: (row: any) => row.jenis_penindakan,\r\n      sortable: true,\r\n      sortField: 'jenis_penindakan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisPenindakan/LihatJenisPenindakan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_PENINDAKAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_penindakan: valuesFormik?.jenis_penindakan, //? valuesFormik.jenis_penindakan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_PENINDAKAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_PENINDAKAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_penindakan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_PENINDAKAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Penindakan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisPenindakan.val} //4\r\n            onChange={handleChangeInputJenisPenindakan}\r\n            placeholder='Jenis Penindakan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Penindakan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Penindakan</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_penindakan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_penindakan && formik.errors.jenis_penindakan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_penindakan && !formik.errors.jenis_penindakan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_penindakan}\r\n                    />\r\n                    {formik.touched.jenis_penindakan && formik.errors.jenis_penindakan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_penindakan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_penindakan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_penindakan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` //http://localhost:3000/jenis-Penindakan\r\n\r\nexport function LihatJenisPenindakan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_penindakan: jsonD.jenis_penindakan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Penindakan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_penindakan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_penindakan\r\n                              ? valuesFormikExist?.jenis_penindakan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPenindakan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_penindakan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_penindakan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` //http://localhost:3000//master/jenis-Penindakan\r\n\r\nexport function UpdateJenisPenindakan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_penindakan: jsonD.jenis_penindakan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_penindakan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_penindakan: valuesFormik?.jenis_penindakan\r\n          ? valuesFormik.jenis_penindakan\r\n          : valuesFormikExist?.jenis_penindakan\r\n          ? valuesFormikExist.jenis_penindakan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_PENINDAKAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_PENINDAKAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisPenindakan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisPenindakan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Penindakan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_penindakan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_penindakan || valuesFormik?.jenis_penindakan === ''\r\n                              ? valuesFormik?.jenis_penindakan\r\n                              : valuesFormikExist?.jenis_penindakan\r\n                              ? valuesFormikExist?.jenis_penindakan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPenindakan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  jenis_korban_jiwa?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_korban_jiwa: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function KorbanJiwa() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterKorbanJiwa, setFilterKorbanJiwa] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterKorbanJiwa.val !== '') {\r\n      uriParam += `${valFilterKorbanJiwa.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterKorbanJiwa({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputKorbanJiwa = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterKorbanJiwa({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Korban Jiwa',\r\n      selector: (row: any) => row.jenis_korban_jiwa,\r\n      sortable: true,\r\n      sortField: 'jenis_korban_jiwa',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/KorbanJiwa/LihatKorbanJiwa/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KORBAN_JIWA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa, //? valuesFormik.jenis_korban_jiwa : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KORBAN_JIWA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KORBAN_JIWA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_korban_jiwa: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KORBAN_JIWA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>KorbanJiwa</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterKorbanJiwa.val} //4\r\n            onChange={handleChangeInputKorbanJiwa}\r\n            placeholder='Korban Jiwa'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Korban Jiwa</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Korban Jiwa</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_korban_jiwa'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_korban_jiwa && formik.errors.jenis_korban_jiwa,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_korban_jiwa && !formik.errors.jenis_korban_jiwa,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_korban_jiwa}\r\n                    />\r\n                    {formik.touched.jenis_korban_jiwa && formik.errors.jenis_korban_jiwa && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_korban_jiwa}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_jiwa?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_korban_jiwa?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/master/korban_jiwa\r\n\r\nexport function LihatKorbanJiwa() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_korban_jiwa: jsonD.jenis_korban_jiwa,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Korban Jiwa</Form.Label>\r\n                        <Form.Control\r\n                          name='korban jiwa'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_korban_jiwa\r\n                              ? valuesFormikExist?.jenis_korban_jiwa\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanJiwa'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_jiwa?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_korban_jiwa?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000//master/jenis_korban_jiwa\r\n\r\nexport function UpdateKorbanJiwa() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_korban_jiwa: jsonD.jenis_korban_jiwa,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_korban_jiwa: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa\r\n          ? valuesFormik.jenis_korban_jiwa\r\n          : valuesFormikExist?.jenis_korban_jiwa\r\n          ? valuesFormikExist.jenis_korban_jiwa\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KORBAN_JIWA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KORBAN_JIWA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/KorbanJiwa', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/KorbanJiwa', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Korban Jiwa</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_korban_jiwa'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_korban_jiwa ||\r\n                            valuesFormik?.jenis_korban_jiwa === ''\r\n                              ? valuesFormik?.jenis_korban_jiwa\r\n                              : valuesFormikExist?.jenis_korban_jiwa\r\n                              ? valuesFormikExist?.jenis_korban_jiwa\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanJiwa'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_jiwa?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/master/jenis-korban-jiwa\r\n\r\nexport function TambahKorbanJiwa() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_korban_jiwa: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa ? valuesFormik.jenis_korban_jiwa : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${JENIS_KORBAN_JIWA_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${JENIS_KORBAN_JIWA_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/KorbanJiwa', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/KorbanJiwa', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>jenis Korban Jiwa</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_korban_jiwa'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.jenis_korban_jiwa}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanJiwa'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  jenis_korban_material?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_korban_material: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function KorbanMaterial() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterKorbanMaterial, setFilterKorbanMaterial] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterKorbanMaterial.val !== '') {\r\n      uriParam += `${valFilterKorbanMaterial.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterKorbanMaterial({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputKorbanMaterial = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterKorbanMaterial({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Korban Material',\r\n      selector: (row: any) => row.jenis_korban_material,\r\n      sortable: true,\r\n      sortField: 'jenis_korban_material',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/KorbanMaterial/LihatKorbanMaterial/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_material: valuesFormik?.jenis_korban_material, //? valuesFormik.jenis_korban_material : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KORBAN_MATERIAL_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KORBAN_MATERIAL_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_korban_material: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KORBAN_MATERIAL_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Korban Material</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterKorbanMaterial.val} //4\r\n            onChange={handleChangeInputKorbanMaterial}\r\n            placeholder='Korban Material'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Korban Material</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Korban Material</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_korban_material'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_korban_material && formik.errors.jenis_korban_material,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_korban_material && !formik.errors.jenis_korban_material,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_korban_material}\r\n                    />\r\n                    {formik.touched.jenis_korban_material && formik.errors.jenis_korban_material && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_korban_material}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_material?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_korban_material?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` //http://localhost:3000/master/korban_jiwa\r\n\r\nexport function LihatKorbanMaterial() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_korban_material: jsonD.jenis_korban_material,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Korban Material</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_korban_material'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_korban_material\r\n                              ? valuesFormikExist?.jenis_korban_material\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanMaterial'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_material?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_korban_material?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` //http://localhost:3000/master/korban_jiwa\r\n\r\nexport function UpdateKorbanMaterial() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_korban_material: jsonD.jenis_korban_material,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_korban_material: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_material: valuesFormik?.jenis_korban_material\r\n          ? valuesFormik.jenis_korban_material\r\n          : valuesFormikExist?.jenis_korban_material\r\n          ? valuesFormikExist.jenis_korban_material\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KORBAN_MATERIAL_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KORBAN_MATERIAL_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/KorbanMaterial', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/KorbanMaterial', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Korban Material</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_korban_material'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_korban_material || valuesFormik?.jenis_korban_material === ''\r\n                              ? valuesFormik?.jenis_korban_material\r\n                              : valuesFormikExist?.jenis_korban_material\r\n                              ? valuesFormikExist?.jenis_korban_material\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanMaterial'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_bantuan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_bantuan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisBantuan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisBantuan, setFilterJenisBantuan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisBantuan.val !== '') {\r\n      uriParam += `${valFilterJenisBantuan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisBantuan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisBantuan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisBantuan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Bantuan',\r\n      selector: (row: any) => row.jenis_bantuan,\r\n      sortable: true,\r\n      sortField: 'jenis_bantuan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisBantuan/LihatJenisBantuan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_BANTUAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_bantuan: valuesFormik?.jenis_bantuan, //? valuesFormik.jenis_bantuan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_BANTUAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_BANTUAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_bantuan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_BANTUAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_BANTUAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Bantuan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisBantuan.val} //4\r\n            onChange={handleChangeInputJenisBantuan}\r\n            placeholder='Jenis Bantuan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Bantuan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Bantuan</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_bantuan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_bantuan && formik.errors.jenis_bantuan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_bantuan && !formik.errors.jenis_bantuan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_bantuan}\r\n                    />\r\n                    {formik.touched.jenis_bantuan && formik.errors.jenis_bantuan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_bantuan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_bantuan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_bantuan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` //http://localhost:3000/JenisBantuan\r\n\r\nexport function LihatJenisBantuan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_bantuan: jsonD.jenis_bantuan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Bantuan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_bantuan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_bantuan\r\n                              ? valuesFormikExist?.jenis_bantuan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisBantuan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_bantuan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_bantuan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateJenisBantuan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_bantuan: jsonD.jenis_bantuan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_bantuan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_bantuan: valuesFormik?.jenis_bantuan\r\n          ? valuesFormik.jenis_bantuan\r\n          : valuesFormikExist?.jenis_bantuan\r\n          ? valuesFormikExist.jenis_bantuan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_BANTUAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_BANTUAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisBantuan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisBantuan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Bantuan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_bantuan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_bantuan || valuesFormik?.jenis_bantuan === ''\r\n                              ? valuesFormik?.jenis_bantuan\r\n                              : valuesFormikExist?.jenis_bantuan\r\n                              ? valuesFormikExist?.jenis_bantuan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisBantuan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function InstansiTerkait() {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1);\r\n  }, []);\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\r\n          <div className=\"d-flex flex-column\">\r\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'Jenis Sarana & Prasarana',\r\n      selector: (row: any) => row.jenis_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'jenis_sarana_prasarana',\r\n    },\r\n    {\r\n      name: 'Status Sarana & Prasarana',\r\n      selector: (row: any) => row.status_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'status_sarana_prasarana',\r\n    },\r\n    {\r\n      name: 'Jumlah',\r\n      selector: (row: any) => row.jumlah,\r\n      sortable: true,\r\n      sortField: 'jumlah',\r\n    },\r\n    {\r\n      name: 'Kondisi',\r\n      selector: (row: any) => row.kondisi,\r\n      sortable: true,\r\n      sortField: 'kondisi',\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: (row: any) => row.keterangan,\r\n      sortable: true,\r\n      sortField: 'keterangan',\r\n    },\r\n    {\r\n      name: 'Dokumentasi',\r\n      selector: (row: any) => row.dokumentasi,\r\n      sortable: true,\r\n      sortField: 'dokumentasi',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: \"Action\",\r\n      className: \"action\",\r\n      align: \"left\",\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n\r\n            <div className=\"mb-2\">\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size=\"sm\"\r\n                    variant=\"light\"\r\n                    title=\"Aksi\">\r\n                    <Dropdown.Item>\r\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\r\n                        Detail\r\n                      </Link>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n\r\n  ];\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n   \r\n  const [temp, setTemp] = useState([]);\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true);\r\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\r\n\r\n    setTemp(value.data.data);\r\n    console.log('cek response api:',temp);\r\n\r\n    \r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\r\n    setData(response.data.data);\r\n   \r\n    setTotalRows(response.data.total);\r\n    setLoading(false);\r\n    console.log('cek ahhh :' ,data);\r\n    return [data, setData] as const;\r\n  };\r\n\r\n  const handlePageChange = (page: any) => {\r\n    fetchUsers(page);\r\n  };\r\n\r\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n    setLoading(true);\r\n\r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\r\n\r\n    setData(response.data.data);\r\n    setPerPage(newPerPage);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSort = (column: any, sortDirection: any) => {\r\n    // simulate server sort\r\n    console.log(column, sortDirection);\r\n    setLoading(true);\r\n\r\n    // instead of setTimeout this is where you would handle your API call.\r\n    setTimeout(() => {\r\n      setData(orderBy(data, column.sortField, sortDirection));\r\n      setLoading(false);\r\n    }, 100);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Instansi Terkait\r\n            </label>\r\n            <input\r\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\r\n          </div>\r\n      </div>\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n        <Link to='#'>\r\n            <button className='btn btn-primary'>\r\n              <i className='fa-solid fa-search'></i>\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-5' onClick={handleShow}>\r\n              <i className=\"fa-solid fa-plus\"></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tambah Instansi Terkait</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\r\n        <Form.Group className=\"mb-3 form-control-solid\">\r\n            <Form.Label>Instansi Terakait</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Instansi Terkait\" />\r\n        </Form.Group>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n          <i className=\"fa-solid fa-paper-plane\"></i>\r\n            Simpan\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n      <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            pagination\r\n        />\r\n        {/* <DataTable\r\n          columns={columns}\r\n          data={data}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          sortServer\r\n          onSort={handleSort}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n        /> */}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  kondisi_sarana_prasarana?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  kondisi_sarana_prasarana: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function KondisiSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterKondisiSaranaPrasarana, setFilterKondisiSaranaPrasarana] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterKondisiSaranaPrasarana.val !== '') {\r\n      uriParam += `${valFilterKondisiSaranaPrasarana.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterKondisiSaranaPrasarana({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputKondisiSaranaPrasarana = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterKondisiSaranaPrasarana({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Kondisi Sarana Prasarana',\r\n      selector: (row: any) => row.kondisi_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'kondisi_sarana_prasarana',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/KondisiSaranaPrasarana/LihatKondisiSaranaPrasarana/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        kondisi_sarana_prasarana: valuesFormik?.kondisi_sarana_prasarana, //? valuesFormik.kondisi_sarana_prasarana : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${KONDISI_SARANA_PRASARANA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${KONDISI_SARANA_PRASARANA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      kondisi_sarana_prasarana: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${KONDISI_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Kondisi Sarana Prasarana</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterKondisiSaranaPrasarana.val} //4\r\n            onChange={handleChangeInputKondisiSaranaPrasarana}\r\n            placeholder='Kondisi Sarana Prasarana'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Kondisi Sarana Prasarana</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Kondisi Sarana Prasarana</Form.Label>\r\n                  <Form.Control\r\n                      name='kondisi_sarana_prasarana'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.kondisi_sarana_prasarana && formik.errors.kondisi_sarana_prasarana,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.kondisi_sarana_prasarana && !formik.errors.kondisi_sarana_prasarana,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.kondisi_sarana_prasarana}\r\n                    />\r\n                    {formik.touched.kondisi_sarana_prasarana && formik.errors.kondisi_sarana_prasarana && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.kondisi_sarana_prasarana}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  kondisi_sarana_prasarana?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kondisi_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` //http://localhost:3000/Kondisi-Penindakan\r\n\r\nexport function LihatKondisiSaranaPrasarana() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kondisi_sarana_prasarana: jsonD.kondisi_sarana_prasarana,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kondisi Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='kondisi_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.kondisi_sarana_prasarana\r\n                              ? valuesFormikExist?.kondisi_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KondisiSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kondisi_sarana_prasarana?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kondisi_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateKondisiSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kondisi_sarana_prasarana: jsonD.kondisi_sarana_prasarana,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kondisi_sarana_prasarana: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kondisi_sarana_prasarana: valuesFormik?.kondisi_sarana_prasarana\r\n          ? valuesFormik.kondisi_sarana_prasarana\r\n          : valuesFormikExist?.kondisi_sarana_prasarana\r\n          ? valuesFormikExist.kondisi_sarana_prasarana\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${KONDISI_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${KONDISI_SARANA_PRASARANA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/KondisiSaranaPrasarana', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/KondisiSaranaPrasarana', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kondisi Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='kondisi_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kondisi_sarana_prasarana || valuesFormik?.kondisi_sarana_prasarana === ''\r\n                              ? valuesFormik?.kondisi_sarana_prasarana\r\n                              : valuesFormikExist?.kondisi_sarana_prasarana\r\n                              ? valuesFormikExist?.kondisi_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KondisiSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  status_sarana_prasarana?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  status_sarana_prasarana: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function StatusSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterStatusSaranaPrasarana, setFilterStatusSaranaPrasarana] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterStatusSaranaPrasarana.val !== '') {\r\n      uriParam += `${valFilterStatusSaranaPrasarana.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterStatusSaranaPrasarana({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputStatusSaranaPrasarana = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterStatusSaranaPrasarana({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Status Sarana Prasarana',\r\n      selector: (row: any) => row.status_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'status_sarana_prasarana',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/StatusSaranaPrasarana/LihatStatusSaranaPrasarana/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        status_sarana_prasarana: valuesFormik?.status_sarana_prasarana, //? valuesFormik.status_sarana_prasarana : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${STATUS_SARANA_PRASARANA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${STATUS_SARANA_PRASARANA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      status_sarana_prasarana: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${STATUS_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Status Sarana Prasarana</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterStatusSaranaPrasarana.val} //4\r\n            onChange={handleChangeInputStatusSaranaPrasarana}\r\n            placeholder='Status Sarana Prasarana'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Status Sarana Prasarana</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Status Sarana Prasarana</Form.Label>\r\n                  <Form.Control\r\n                      name='status_sarana_prasarana'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.status_sarana_prasarana && formik.errors.status_sarana_prasarana,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.status_sarana_prasarana && !formik.errors.status_sarana_prasarana,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.status_sarana_prasarana}\r\n                    />\r\n                    {formik.touched.status_sarana_prasarana && formik.errors.status_sarana_prasarana && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.status_sarana_prasarana}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  status_sarana_prasarana?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  status_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` //http://localhost:3000/jenis-Penindakan\r\n\r\nexport function LihatStatusSaranaPrasarana() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        status_sarana_prasarana: jsonD.status_sarana_prasarana,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Status Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='status_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.status_sarana_prasarana\r\n                              ? valuesFormikExist?.status_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/StatusSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  status_sarana_prasarana?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  status_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateStatusSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        status_sarana_prasarana: jsonD.status_sarana_prasarana,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      status_sarana_prasarana: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        status_sarana_prasarana: valuesFormik?.status_sarana_prasarana\r\n          ? valuesFormik.status_sarana_prasarana\r\n          : valuesFormikExist?.status_sarana_prasarana\r\n          ? valuesFormikExist.status_sarana_prasarana\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${STATUS_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${STATUS_SARANA_PRASARANA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/StatusSaranaPrasarana', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/StatusSaranaPrasarana', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Status Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='status_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.status_sarana_prasarana || valuesFormik?.status_sarana_prasarana === ''\r\n                              ? valuesFormik?.status_sarana_prasarana\r\n                              : valuesFormikExist?.status_sarana_prasarana\r\n                              ? valuesFormikExist?.status_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/StatusSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const AGAMA_URL = `${API_URL}/master/agama` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  agama?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  agama: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function Agama() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterAgama, setFilterAgama] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterAgama.val !== '') {\r\n      uriParam += `${valFilterAgama.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterAgama({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputAgama = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterAgama({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Agama',\r\n      selector: (row: any) => row.agama,\r\n      sortable: true,\r\n      sortField: 'agama',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Agama/LihatAgama/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${AGAMA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${AGAMA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        agama: valuesFormik?.agama, //? valuesFormik.agama : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${AGAMA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${AGAMA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      agama: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${AGAMA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${AGAMA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Agama</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterAgama.val} //4\r\n            onChange={handleChangeInputAgama}\r\n            placeholder='Agama'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Agama</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Agama</Form.Label>\r\n                  <Form.Control\r\n                      name='agama'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.agama && formik.errors.agama,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.agama && !formik.errors.agama,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.agama}\r\n                    />\r\n                    {formik.touched.agama && formik.errors.agama && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.agama}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  agama?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  agama?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatAgama() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${AGAMA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        agama: jsonD.agama,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>agama</Form.Label>\r\n                        <Form.Control\r\n                          name='agama'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.agama ? valuesFormikExist?.agama : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Agama'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  agama?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  agama?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000//master/agama\r\n\r\nexport function UpdateAgama() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${AGAMA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        agama: jsonD.agama,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      agama: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        agama: valuesFormik?.agama\r\n          ? valuesFormik.agama\r\n          : valuesFormikExist?.agama\r\n          ? valuesFormikExist.agama\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${AGAMA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${AGAMA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Agama', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Agama', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>agama</Form.Label>\r\n                        <Form.Control\r\n                          name='agama'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.agama || valuesFormik?.agama === ''\r\n                              ? valuesFormik?.agama\r\n                              : valuesFormikExist?.agama\r\n                              ? valuesFormikExist?.agama\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Agama'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  agama?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/master/agama\r\n\r\nexport function TambahAgama() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      agama: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        agama: valuesFormik?.agama ? valuesFormik.agama : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${AGAMA_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${AGAMA_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/agama', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/agama', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>agama</Form.Label>\r\n                        <Form.Control\r\n                          name='agama'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.agama}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Agama'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const PANGKAT_URL = `${API_URL}/master/pangkat`\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nexport interface FormInput {\n  pangkat?: string\n}\n\nconst validatorForm = Yup.object().shape({\n  pangkat: Yup.string().required('Wajib diisi'),\n})\n\nexport function Pangkat() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterPangkat, setFilterPangkat] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => {\n    //3\n    let uriParam = ''\n    if (valFilterPangkat.val !== '') {\n      uriParam += `${valFilterPangkat.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handleFilterReset = () => {\n    setFilterPangkat({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputPangkat = (event: {\n    //5\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterPangkat({val: event.target.value})\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{row.serial}</div>\n      },\n    },\n    {},\n    {\n      name: 'Pangkat',\n      selector: (row: any) => row.pangkat,\n      sortable: true,\n      sortField: 'pangkat',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    menuposition='top'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Pangkat/LihatPangkat/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${PANGKAT_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n        Array.from(items).forEach((item: any, index: any) => {\n          item.serial = index + 1\n        })\n        setTemp(items)\n        setLoading(false)\n      }, 100)\n\n      return () => clearTimeout(timeout)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => {\n    //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${PANGKAT_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n    }, 50)\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        pangkat: valuesFormik?.pangkat, //? valuesFormik.pangkat : '', //? valuesFormik.kategori : '',\n      }\n\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${PANGKAT_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(`${PANGKAT_URL}/update/${idEditData.id}`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      pangkat: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n\n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${PANGKAT_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n\n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${PANGKAT_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Pangkat</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterPangkat.val} //4\n            onChange={handleChangeInputPangkat}\n            placeholder='Pangkat'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}>\n            {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Pangkat</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Pangkat</Form.Label>\n                  <Form.Control\n                    name='pangkat'\n                    className={clsx(\n                      'form-control form-control-solid mb-1',\n                      {\n                        'is-invalid': formik.touched.pangkat && formik.errors.pangkat,\n                      },\n                      {\n                        'is-valid': formik.touched.pangkat && !formik.errors.pangkat,\n                      }\n                    )}\n                    onChange={handleChangeFormik}\n                    value={valuesFormik?.pangkat}\n                  />\n                  {formik.touched.pangkat && formik.errors.pangkat && (\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>\n                        <span role='alert'>{formik.errors.pangkat}</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n        {temp?.length > 0 && temp && (\n          <DataTable\n            columns={columns}\n            data={temp}\n            progressPending={loading}\n            customStyles={customStyles}\n            progressComponent={<LoadingAnimation />}\n            pagination\n            // paginationServer\n            paginationTotalRows={totalRows}\n            //    expandableRowsComponent={(row) => (\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n            // )}\n            // expandableRowsComponent={ExpandedComponent}\n            // onChangeRowsPerPage={handlePerRowsChange}\n            // onChangePage={handlePageChange}\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n            noDataComponent={\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n                <div className='d-flex flex-column'>\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n                </div>\n              </div>\n            }\n          />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  pangkat?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  pangkat?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000//master/pangkat\r\n\r\nexport function UpdatePangkat() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${PANGKAT_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        pangkat: jsonD.pangkat,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      pangkat: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        pangkat: valuesFormik?.pangkat\r\n          ? valuesFormik.pangkat\r\n          : valuesFormikExist?.pangkat\r\n          ? valuesFormikExist.pangkat\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${PANGKAT_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${PANGKAT_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/pangkat', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/pangkat', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>pangkat</Form.Label>\r\n                        <Form.Control\r\n                          name='pangkat'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.pangkat || valuesFormik?.pangkat === ''\r\n                              ? valuesFormik?.pangkat\r\n                              : valuesFormikExist?.pangkat\r\n                              ? valuesFormikExist?.pangkat\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/pangkat'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  pangkat?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  pangkat?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\r\n\r\nexport function LihatPangkat() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${PANGKAT_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        pangkat: jsonD.pangkat,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Pangkat</Form.Label>\r\n                        <Form.Control\r\n                          name='pangkat'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.pangkat ? valuesFormikExist?.pangkat : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/pangkat'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  pangkat?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\r\n\r\nexport function TambahPangkat() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      pangkat: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        pangkat: valuesFormik?.pangkat ? valuesFormik.pangkat : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${PANGKAT_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${PANGKAT_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/pangkat', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/pangkat', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>pangkat</Form.Label>\r\n                        <Form.Control\r\n                          name='pangkat'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.pangkat}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/pangkat'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\nimport { TEMPAT_PELAKSANA_URL } from './Lihat-master/LihatTempatPelaksanaan'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const BIDANG_WILAYAH_URL = `${API_URL}/master/bidang-wilayah`\r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  nama?: string\r\n  kategori?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  kategori: Yup.string().required('Wajib diisi'),\r\n  nama: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function TempatPelaksanaan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterTempatPelaksanaan, setFilterTempatPelaksanaan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterTempatPelaksanaan.val !== '') {\r\n      uriParam += `${valFilterTempatPelaksanaan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterTempatPelaksanaan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputTempatPelaksanaan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterTempatPelaksanaan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Bidang/Wilayah',\r\n      selector: (row: any) => row.nama,\r\n      sortable: true,\r\n      sortField: 'nama',\r\n    },\r\n    {\r\n      name: 'Kode',\r\n      selector: (row: any) => row.kode,\r\n      sortable: true,\r\n      sortField: 'kode',\r\n    },\r\n    {\r\n      name: 'Kategori',\r\n      selector: (row: any) => row.kategori,\r\n      sortable: true,\r\n      sortField: 'kategori',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/TempatPelaksanaan/LihatTempatPelaksanaan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${BIDANG_WILAYAH_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${BIDANG_WILAYAH_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        nama: valuesFormik?.nama, //? valuesFormik.nama : '',\r\n        kategori: valuesFormik?.kategori //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${BIDANG_WILAYAH_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${BIDANG_WILAYAH_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      nama: '',\r\n      kategori: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${BIDANG_WILAYAH_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${BIDANG_WILAYAH_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Tempat Pelaksanaan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterTempatPelaksanaan.val} //4\r\n            onChange={handleChangeInputTempatPelaksanaan}\r\n            placeholder='Bidang/Wilayah'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Tempat Pelaksanaan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Nama Bidang/Wilayah</Form.Label>\r\n                  <Form.Control\r\n                      name='nama'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.nama && formik.errors.nama,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.nama && !formik.errors.nama,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.nama}\r\n                    />\r\n                    {formik.touched.nama && formik.errors.nama && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.nama}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  <Form.Label>Kategori</Form.Label>\r\n                  <select\r\n                          data-control='select2'\r\n                          data-placeholder='Jenis Kelamin'\r\n                          name='kategori'\r\n                          className={clsx(\r\n                            'form-control form-control-solid mb-1',\r\n                            {\r\n                              'is-invalid':\r\n                                formik.touched.kategori && formik.errors.kategori,\r\n                            },\r\n                            {\r\n                              'is-valid':\r\n                                formik.touched.kategori && !formik.errors.kategori,\r\n                            }\r\n                          )}\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kategori}\r\n                        >\r\n                          <option value=''>Pilih</option>\r\n                          <option value='Bidang'>Bidang</option>\r\n                          <option value='Wilayah'>Wilayah</option>\r\n                        </select>\r\n                        {formik.touched.kategori && formik.errors.kategori && (\r\n                          <div className='fv-plugins-message-container'>\r\n                            <div className='fv-help-block'>\r\n                              <span role='alert'>{formik.errors.kategori}</span>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  nama?: string\r\n  kategori?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  nama?: string\r\n  kategori?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const BIDANG_WILAYAH_URL = `${API_URL}/master/bidang-wilayah` //http://localhost:3000//master/kota\r\n\r\nexport function UpdateTempatPelaksanaan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${BIDANG_WILAYAH_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        nama: jsonD.nama,\r\n        kategori: jsonD.kategori,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      nama: '',\r\n      kategori: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        nama : valuesFormik?.nama\r\n          ? valuesFormik.nama\r\n          : valuesFormikExist?.nama\r\n          ? valuesFormikExist.nama\r\n          : '',\r\n          kategori: valuesFormik?.kategori\r\n          ? valuesFormik.kategori\r\n          : valuesFormikExist?.kategori\r\n          ? valuesFormikExist.kategori\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${BIDANG_WILAYAH_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${BIDANG_WILAYAH_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/TempatPelaksanaan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/TempatPelaksanaan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Bidang Wilayah</Form.Label>\r\n                        <Form.Control\r\n                          name='nama'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.nama || valuesFormik?.nama === ''\r\n                              ? valuesFormik?.nama\r\n                              : valuesFormikExist?.nama\r\n                              ? valuesFormikExist?.nama\r\n                              : ''\r\n                          }\r\n                        />\r\n                        <Form.Label>Kategori</Form.Label>\r\n                        <Form.Control\r\n                          name='kategori'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kategori || valuesFormik?.kategori === ''\r\n                              ? valuesFormik?.kategori\r\n                              : valuesFormikExist?.kategori\r\n                              ? valuesFormikExist?.kategori\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/TempatPelaksanaan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  nama?: string\r\n  kode?: string\r\n  updated_by?: string\r\n  kategori?: string\r\n}\r\n\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  nama?: string\r\n  kategori?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const TEMPAT_PELAKSANA_URL = `${API_URL}/master/bidang-wilayah` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatTempatPelaksanaan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${TEMPAT_PELAKSANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        nama: jsonD.nama,\r\n        kode: jsonD.kode,\r\n        kategori: jsonD.kategori,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Tempat Pelaksana</Form.Label>\r\n                        <Form.Control\r\n                          name='nama'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.nama ? valuesFormikExist?.nama : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode</Form.Label>\r\n                        <Form.Control\r\n                          name='kode'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kategori</Form.Label>\r\n                        <Form.Control\r\n                          name='kategori'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kategori ? valuesFormikExist?.kategori : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/TempatPelaksanaan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const SKPD_URL = `${API_URL}/master/skpd`\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  skpd?: string\n}\n\nconst validatorForm = Yup.object().shape({\n  skpd: Yup.string().required('Wajib diisi'),\n})\n\nexport function SKPD() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterSKPD, setFilterSKPD] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([]) // Urutan 1\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => {\n    //3\n    let uriParam = ''\n    if (valFilterSKPD.val !== '') {\n      uriParam += `${valFilterSKPD.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handleFilterReset = () => {\n    setFilterSKPD({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputSKPD = (event: {\n    //5\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterSKPD({val: event.target.value})\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  // let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{row.serial}</div>\n      },\n    },\n    {\n      name: 'SKPD',\n      selector: (row: any) => row.skpd,\n      sortable: true,\n      sortField: 'skpd',\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/SKPD/LihatSKPD/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${SKPD_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n        Array.from(items).forEach((item: any, index: any) => {\n          item.serial = index + 1\n        })\n        setTemp(items)\n        setLoading(false)\n      }, 100)\n\n      return () => clearTimeout(timeout)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => {\n    //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${SKPD_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n    }, 50)\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        skpd: valuesFormik?.skpd, //? valuesFormik.skpd : '',\n      }\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${SKPD_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(`${SKPD_URL}/update/${idEditData.id}`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      skpd: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n\n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${SKPD_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n\n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${SKPD_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>SKPD</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterSKPD.val} //4\n            onChange={handleChangeInputSKPD}\n            placeholder='SKPD'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}>\n            {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} SKPD</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>SKPD</Form.Label>\n                  <Form.Control\n                    name='skpd'\n                    className={clsx(\n                      'form-control form-control-solid mb-1',\n                      {\n                        'is-invalid': formik.touched.skpd && formik.errors.skpd,\n                      },\n                      {\n                        'is-valid': formik.touched.skpd && !formik.errors.skpd,\n                      }\n                    )}\n                    onChange={handleChangeFormik}\n                    value={valuesFormik?.skpd}\n                  />\n                  {formik.touched.skpd && formik.errors.skpd && (\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>\n                        <span role='alert'>{formik.errors.skpd}</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n        <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n      </div>\n\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  skpd?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  skpd?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SKPD_URL = `${API_URL}/master/skpd` //http://localhost:3000//master/SKPD\r\n\r\nexport function UpdateSKPD() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${SKPD_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        skpd: jsonD.skpd,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      skpd: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        skpd: valuesFormik?.skpd\r\n          ? valuesFormik.skpd\r\n          : valuesFormikExist?.skpd\r\n          ? valuesFormikExist.skpd\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${SKPD_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${SKPD_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/SKPD', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/SKPD', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>SKPD</Form.Label>\r\n                        <Form.Control\r\n                          name='skpd'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.skpd || valuesFormik?.skpd === ''\r\n                              ? valuesFormik?.skpd\r\n                              : valuesFormikExist?.skpd\r\n                              ? valuesFormikExist?.skpd\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/SKPD'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  skpd?: string\r\n  kode?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  skpd?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SKPD_URL = `${API_URL}/master/skpd` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatSKPD() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${SKPD_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        skpd: jsonD.skpd,\r\n        kode: jsonD.kode,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>SKPD</Form.Label>\r\n                        <Form.Control\r\n                          name='skpd'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.skpd ? valuesFormikExist?.skpd : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode</Form.Label>\r\n                        <Form.Control\r\n                          name='kode'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/SKPD'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const PENDIDIKAN_URL = `${API_URL}/master/pendidikan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  pendidikan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  pendidikan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function Pendidikan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterPendidikan, setFilterPendidikan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterPendidikan.val !== '') {\r\n      uriParam += `${valFilterPendidikan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterPendidikan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputPendidikan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterPendidikan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Pendidikan',\r\n      selector: (row: any) => row.pendidikan,\r\n      sortable: true,\r\n      sortField: 'pendidikan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Pendidikan/LihatPendidikan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${PENDIDIKAN_URL}/filter-pendidikan/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${PENDIDIKAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        pendidikan: valuesFormik?.pendidikan, //? valuesFormik.pendidikan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${PENDIDIKAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${PENDIDIKAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      pendidikan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${PENDIDIKAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${PENDIDIKAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Pendidikan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterPendidikan.val} //4\r\n            onChange={handleChangeInputPendidikan}\r\n            placeholder='Pendidikan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Pendidikan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Pendidikan</Form.Label>\r\n                  <Form.Control\r\n                      name='pendidikan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.pendidikan && formik.errors.pendidikan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.pendidikan && !formik.errors.pendidikan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.pendidikan}\r\n                    />\r\n                    {formik.touched.pendidikan && formik.errors.pendidikan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.pendidikan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  pendidikan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  pendidikan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const PENDIDIKAN_URL = `${API_URL}/master/pendidikan` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatPendidikan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${PENDIDIKAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        pendidikan: jsonD.pendidikan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Pendidikan</Form.Label>\r\n                        <Form.Control\r\n                          name='pendidikan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.pendidikan ? valuesFormikExist?.pendidikan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Pendidikan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_sarana_prasarana?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_sarana_prasarana: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisSaranaPrasarana, setFilterJenisSaranaPrasarana] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisSaranaPrasarana.val !== '') {\r\n      uriParam += `${valFilterJenisSaranaPrasarana.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisSaranaPrasarana({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisSaranaPrasarana = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisSaranaPrasarana({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  // let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Sarana Prasarana',\r\n      selector: (row: any) => row.jenis_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'jenis_sarana_prasarana',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisSaranaPrasarana/LihatJenisSaranaPrasarana/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_sarana_prasarana: valuesFormik?.jenis_sarana_prasarana, //? valuesFormik.jenis_sarana_prasarana : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_SARANA_PRASARANA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_SARANA_PRASARANA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_sarana_prasarana: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Sarana Prasarana</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisSaranaPrasarana.val} //4\r\n            onChange={handleChangeInputJenisSaranaPrasarana}\r\n            placeholder='Jenis Sarana Prasarana'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Sarana Prasarana</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Sarana Prasarana</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_sarana_prasarana'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_sarana_prasarana && formik.errors.jenis_sarana_prasarana,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_sarana_prasarana && !formik.errors.jenis_sarana_prasarana,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_sarana_prasarana}\r\n                    />\r\n                    {formik.touched.jenis_sarana_prasarana && formik.errors.jenis_sarana_prasarana && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_sarana_prasarana}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n        {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_sarana_prasarana?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateJenisSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_sarana_prasarana: jsonD.jenis_sarana_prasarana,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_sarana_prasarana: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_sarana_prasarana: valuesFormik?.jenis_sarana_prasarana\r\n          ? valuesFormik.jenis_sarana_prasarana\r\n          : valuesFormikExist?.jenis_sarana_prasarana\r\n          ? valuesFormikExist.jenis_sarana_prasarana\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_SARANA_PRASARANA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisSaranaPrasarana', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisSaranaPrasarana', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_sarana_prasarana || valuesFormik?.jenis_sarana_prasarana === ''\r\n                              ? valuesFormik?.jenis_sarana_prasarana\r\n                              : valuesFormikExist?.jenis_sarana_prasarana\r\n                              ? valuesFormikExist?.jenis_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_sarana_prasarana?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` //http://localhost:3000/jenis-Penindakan\r\n\r\nexport function LihatJenisSaranaPrasarana() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_sarana_prasarana: jsonD.jenis_sarana_prasarana,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_sarana_prasarana\r\n                              ? valuesFormikExist?.jenis_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const GOLONGAN_URL = `${API_URL}/master/golongan`\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  golongan?: string\n}\n\nconst validatorForm = Yup.object().shape({\n  golongan: Yup.string().required('Wajib diisi'),\n})\n\nexport function Golongan() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterGolongan, setFilterGolongan] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => {\n    //3\n    let uriParam = ''\n    if (valFilterGolongan.val !== '') {\n      uriParam += `${valFilterGolongan.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handleFilterReset = () => {\n    setFilterGolongan({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputGolongan = (event: {\n    //5\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterGolongan({val: event.target.value})\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n    },\n    {},\n    {\n      name: 'Golongan',\n      selector: (row: any) => row.golongan,\n      sortable: true,\n      sortField: 'golongan',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item onClick={() => doDetail(record.id)}>Detail</Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${GOLONGAN_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n        Array.from(items).forEach((item: any, index: any) => {\n          item.serial = index + 1\n        })\n        setTemp(items)\n        setLoading(false)\n      }, 100)\n\n      return () => clearTimeout(timeout)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => {\n    //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${GOLONGAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n    }, 50)\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        golongan: valuesFormik?.golongan, //? valuesFormik.golongan : '', //? valuesFormik.kategori : '',\n      }\n\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${GOLONGAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(`${GOLONGAN_URL}/update/${idEditData.id}`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      golongan: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n\n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${GOLONGAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n\n  const doDetail = (id: any) => {\n    setShow(true)\n    setAksi(2)\n    getDetail(id)\n  }\n\n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${GOLONGAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Golongan</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterGolongan.val} //4\n            onChange={handleChangeInputGolongan}\n            placeholder='Cari Golongan'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}>\n            {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n\n          <Link to='#' onClick={handleFilterReset}>\n            <button className='btn btn-light-primary me-2'>\n              <i className='fa-solid fa-arrows-rotate svg-icon-2'></i>\n              Reset\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>\n              {aksi === 0 ? 'Tambah' : aksi === 1 ? 'Ubah' : 'Detail'} Golongan\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Golongan</Form.Label>\n                  {aksi === 0 || aksi === 1 ? (\n                    <Form.Control\n                      name='golongan'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.golongan && formik.errors.golongan,\n                        },\n                        {\n                          'is-valid': formik.touched.golongan && !formik.errors.golongan,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.golongan}\n                      placeholder='Masukkan Golongan'\n                    />\n                  ) : (\n                    <Form.Control\n                      name='golongan'\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.golongan}\n                      disabled\n                    />\n                  )}\n                  {formik.touched.golongan && formik.errors.golongan && (\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>\n                        <span role='alert'>{formik.errors.golongan}</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa-solid fa-arrow-left' />\n                      Kembali\n                    </button>\n                    {aksi === 0 || aksi === 1 ? (\n                      <button\n                        className='float-none btn btn-primary align-self-center m-1'\n                        type='submit'\n                      >\n                        <i className='fa-solid fa-paper-plane'></i>\n                        Simpan\n                      </button>\n                    ) : null}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n        {temp?.length > 0 && temp && (\n          <DataTable\n            columns={columns}\n            data={temp}\n            progressPending={loading}\n            customStyles={customStyles}\n            progressComponent={<LoadingAnimation />}\n            pagination\n            paginationTotalRows={totalRows}\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n            noDataComponent={\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n                <div className='d-flex flex-column'>\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n                </div>\n              </div>\n            }\n          />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const ESELON_URL = `${API_URL}/master/eselon` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  eselon?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  eselon: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function Eselon() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterEselon, setFilterEselon] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterEselon.val !== '') {\r\n      uriParam += `${valFilterEselon.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterEselon({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputEselon = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterEselon({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Eselon',\r\n      selector: (row: any) => row.eselon,\r\n      sortable: true,\r\n      sortField: 'eselon',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Eselon/LihatEselon/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${ESELON_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${ESELON_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        eselon: valuesFormik?.eselon, //? valuesFormik.eselon : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${ESELON_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${ESELON_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      eselon: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${ESELON_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${ESELON_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Eselon</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterEselon.val} //4\r\n            onChange={handleChangeInputEselon}\r\n            placeholder='Eselon'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Eselon</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Eselon</Form.Label>\r\n                  <Form.Control\r\n                      name='eselon'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.eselon && formik.errors.eselon,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.eselon && !formik.errors.eselon,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.eselon}\r\n                    />\r\n                    {formik.touched.eselon && formik.errors.eselon && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.eselon}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  eselon?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  eselon?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const ESELON_URL = `${API_URL}/master/eselon` //http://localhost:3000//master/jenis-kejadian\r\n\r\nexport function UpdateEselon() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${ESELON_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        eselon: jsonD.eselon,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      eselon: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        eselon: valuesFormik?.eselon\r\n          ? valuesFormik.eselon\r\n          : valuesFormikExist?.eselon\r\n          ? valuesFormikExist.eselon\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${ESELON_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${ESELON_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Eselon', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Eselon', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Eselon</Form.Label>\r\n                        <Form.Control\r\n                          name='eselon'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.eselon || valuesFormik?.eselon === ''\r\n                              ? valuesFormik?.eselon\r\n                              : valuesFormikExist?.eselon\r\n                              ? valuesFormikExist?.eselon\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Eselon'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  eselon?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  eselon?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const ESELON_URL = `${API_URL}/master/eselon` //http://localhost:3000/jenis-kejadian\r\n\r\nexport function LihatEselon() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${ESELON_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        eselon: jsonD.eselon,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Eselon</Form.Label>\r\n                        <Form.Control\r\n                          name='eselon'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.eselon\r\n                              ? valuesFormikExist?.eselon\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Eselon'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {useFormik, FormikHelpers} from 'formik'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport clsx from 'clsx'\nimport Swal from 'sweetalert2'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport * as Yup from 'yup'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JABATAN_URL = `${API_URL}/master/jabatan` //http://localhost:3000/sarana-prasarana\nexport interface FormInput {\n  nama?: string\n  status?: string\n  created_by?: number\n}\nconst validatorForm = Yup.object().shape({\n  nama: Yup.string().required('Wajib diisi'),\n  status: Yup.string().required('Wajib diisi'),\n})\nexport function Jabatan() {\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n  const navigate = useNavigate()\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [perPage, setPerPage] = useState(10)\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [temp, setTemp] = useState([])\n  const [aksi, setAksi] = useState(0)\n  const [valFilterJabatan, setFilterJabatan] = useState({val: ''})\n\n  useEffect(() => {\n    async function fetchUsers(page: number) {\n      setLoading(true)\n      const response = await axios.get(\n        `${JABATAN_URL}/find?limit=${perPage}&offset=${page}${qParamFind.strparam}`\n      )\n      setData(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n  }, [qParamFind, perPage])\n\n  const fetchData = async (page: number) => {\n    setLoading(true)\n    const response = await axios.get(\n      `${JABATAN_URL}/find?limit=${perPage}&offset=${page}${qParamFind.strparam}`\n    )\n    setData(response.data.data)\n    setTotalRows(response.data.total_data)\n    setLoading(false)\n\n    return [data, setData] as const\n  }\n  const handlePerRowsChange = async (newPerPage: number, page: number) => {\n    setLoading(true)\n    const response = await axios.get(\n      `${JABATAN_URL}/find?limit=${newPerPage}&offset=${page}${qParamFind.strparam}`\n    )\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterJabatan.val !== '') {\n      uriParam += `&nama=${valFilterJabatan.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handlePageChange = (page: number) => {\n    fetchData(page)\n  }\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const handleChangeInputJabatan = (event: {\n    //5\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterJabatan({val: event.target.value})\n  }\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n  let no = 1\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n      minWidth: '30px',\n      cell: (record: any) => {\n        return <div className='mt-2 mb-2'>{no++}</div>\n      },\n    },\n    {\n      name: 'Jabatan',\n      selector: (row: any) => row.jabatan,\n      sortable: true,\n      sortField: 'jabatan',\n      minWidth: '100px',\n    },\n    {\n      name: 'Status',\n      selector: (row: any) => row.status,\n      sortable: true,\n      sortField: 'status',\n      wrap: true,\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n      wrap: true,\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/jabatan/lihat-jabatan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        nama: valuesFormik?.nama,\n        status: valuesFormik?.status,\n      }\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JABATAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchData(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(`${JABATAN_URL}/update/${idEditData.id}`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchData(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  // UPDATE\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JABATAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n      nama: data.data.jabatan,\n    }))\n  }\n  //End UPDATE\n  //Detail\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      nama: '',\n      status: '',\n    })\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  //End Detail\n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JABATAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n          fetchData(1)\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END DELETE\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='row g-8 mt-2 ms-5 me-5'>\n          <label>\n            <h3>Jabatan</h3>\n          </label>\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n            <input\n              type='text'\n              className='form-control form-control form-control-solid'\n              name='nama'\n              value={valFilterJabatan.val}\n              onChange={handleChangeInputJabatan}\n              placeholder='Jabatan'\n            />\n          </div>\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n            <Link to='#' onClick={handleFilter}>\n              {/* 1 */}\n              <button className='btn btn-light-primary me-2'>\n                <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n                Cari\n              </button>\n            </Link>\n          </div>\n          <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n            <Link to='/master/Jabatan/TambahJabatan'>\n              <button className='btn btn-primary me-2'>\n                <i className='fa-solid fa-plus'></i>\n                Tambah\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <form onSubmit={formik.handleSubmit}>\n            <Modal.Header closeButton>\n              <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'}Tambah Jabatan</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className='mb-3 form-control-solid'>\n                <div className='form-group'>\n                  <Form.Label>Jabatan</Form.Label>\n                  <Form.Control\n                    name='nama'\n                    className='form-control form-control-solid'\n                    onChange={handleChangeFormik}\n                    value={valuesFormik?.nama}\n                    placeholder='Jabatan'\n                  />\n                </div>\n              </div>\n              <Form.Group className='mb-3 form-control-solid'>\n                <label className='required fw-semibold fs-6 mb-2'>Status</label>\n                <select\n                  data-control='select2'\n                  data-placeholder='Status'\n                  name='status'\n                  className={clsx(\n                    'form-control form-control-solid mb-1',\n                    {\n                      'is-invalid': formik.touched.status && formik.errors.status,\n                    },\n                    {\n                      'is-valid': formik.touched.status && !formik.errors.status,\n                    }\n                  )}\n                  onChange={handleChangeFormik}\n                  value={valuesFormik?.status}\n                >\n                  <option value=''>Pilih</option>\n                  <option value='JFT'>JFT</option>\n                  <option value='Non JFT'>Non JFT</option>\n                </select>\n              </Form.Group>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant='secondary' onClick={handleClose}>\n                Batal\n              </Button>\n              <Button variant='primary' type='submit'>\n                <i className='fa-solid fa-paper-plane'></i>\n                Simpan\n              </Button>\n            </Modal.Footer>\n          </form>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          customStyles={customStyles}\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        />\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jabatan?: string\n  status?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jabatan?: string\n  status?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JABATAN_URL = `${API_URL}/master/jabatan` //http://localhost:3000/jabatan\n\nexport function LihatJabatan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JABATAN_URL}/findone/${id}`)\n      console.log(fetchData)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jabatan: jsonD.jabatan,\n        status: jsonD.status,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jabatan</Form.Label>\n                        <Form.Control\n                          name='jabatan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.jabatan ? valuesFormikExist?.jabatan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Status</Form.Label>\n                        <Form.Control\n                          name='status'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.status ? valuesFormikExist?.status : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Jabatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect, Fragment, useState} from 'react'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport Swal from 'sweetalert2'\r\nimport DataTable, {createTheme} from 'react-data-table-component'\r\nimport {ThemeModeComponent} from '../../../../../_metronic/assets/ts/layout'\r\n\r\nimport {KTSVG} from '../../../../../_metronic/helpers'\r\nimport {useParams} from 'react-router-dom'\r\nimport {ButtonGroup, Dropdown, DropdownButton, Modal} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport {useFormik, FormikHelpers} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport clsx from 'clsx'\r\nimport {useThemeMode} from '../../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JABATAN_URL = `${API_URL}/master/jabatan` //http://localhost:3000/master/jabatan\r\n\r\n// createTheme creates a new theme named solarized that overrides the build in dark theme\r\ncreateTheme(\r\n    'darkMetro',\r\n    {\r\n      text: {\r\n        primary: '#92929f',\r\n        secondary: '#92929f',\r\n      },\r\n      background: {\r\n        default: '#1e1e2e',\r\n      },\r\n      context: {\r\n        background: '#cb4b16',\r\n        text: '#FFFFFF',\r\n      },\r\n      divider: {\r\n        default: '#2b2c41',\r\n      },\r\n      action: {\r\n        button: 'rgba(0,0,0,.54)',\r\n        hover: 'rgba(0,0,0,.08)',\r\n        disabled: 'rgba(0,0,0,.12)',\r\n      },\r\n    },\r\n    'dark'\r\n  )\r\n  const systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nexport interface FormInput {\r\n    jabatan?: string\r\n    status?: string\r\n    created_by?: number\r\n}\r\n\r\n// const validatorForm = Yup.object().shape({\r\n//     hubungan: Yup.string().required('Wajib diisi'),\r\n//     nama: Yup.string().required('Wajib diisi'),\r\n//     jenis_kelamin: Yup.string().required('Wajib diisi'),\r\n//   })\r\n\r\nexport function TambahJabatan() {\r\n  const navigate = useNavigate()\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [aksi, setAksi] = useState(0)\r\n//   const [valuesFormik, setValuesFormik] = useState<FormInput>()\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jabatan: '',\r\n      status: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jabatan: valuesFormik?.jabatan ? valuesFormik.jabatan : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${JABATAN_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${JABATAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Jabatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Jabatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n          size='lg'\r\n          show={show}\r\n          onHide={handleClose}\r\n          aria-labelledby='example-modal-sizes-title-lg'\r\n          backdrop='static'\r\n          keyboard={false}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id='example-modal-sizes-title-lg'>\r\n              {aksi === 0 ? 'Tambah' : 'Ubah'} Jabatan\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <form className='form' onSubmit={formik.handleSubmit}>\r\n              <div\r\n                className='d-flex flex-column scroll-y me-n7 pe-7'\r\n                id='kt_modal_add_user_scroll'\r\n                data-kt-scroll='true'\r\n                data-kt-scroll-activate='{default: false, lg: true}'\r\n                data-kt-scroll-max-height='auto'\r\n                data-kt-scroll-dependencies='#kt_modal_add_user_header'\r\n                data-kt-scroll-wrappers='#kt_modal_add_user_scroll'\r\n                data-kt-scroll-offset='300px'\r\n              >\r\n                <div className='fv-row mb-7'>\r\n                  <label className='required fw-semibold fs-6 mb-2'>jabatan</label>\r\n                  <input\r\n                    type='text'\r\n                    name='jabatan'\r\n                    placeholder='Jabatan'\r\n                    className={clsx(\r\n                      'form-control form-control-solid mb-1',\r\n                      {\r\n                        'is-invalid': formik.touched.jabatan && formik.errors.jabatan,\r\n                      },\r\n                      {\r\n                        'is-valid': formik.touched.jabatan && !formik.errors.jabatan,\r\n                      }\r\n                    )}\r\n                    onChange={handleChangeFormik}\r\n                    value={valuesFormik?.jabatan}\r\n                  />\r\n                  {formik.touched.jabatan && formik.errors.jabatan && (\r\n                    <div className='fv-plugins-message-container'>\r\n                      <div className='fv-help-block'>\r\n                        <span role='alert'>{formik.errors.jabatan}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='fv-row mb-7'>\r\n                  <div id='kt_docs_repeater_basic'>\r\n                    <div className='fv-row mb-7 mt-7'>\r\n                      <label className='required fw-semibold fs-6 mb-2'>Status</label>\r\n                      <select\r\n                        data-control='select2'\r\n                        data-placeholder='Status'\r\n                        name='status'\r\n                        className={clsx(\r\n                          'form-control form-control-solid mb-1',\r\n                          {\r\n                            'is-invalid':\r\n                              formik.touched.status && formik.errors.status,\r\n                          },\r\n                          {\r\n                            'is-valid':\r\n                              formik.touched.status && !formik.errors.status,\r\n                          }\r\n                        )}\r\n                        onChange={handleChangeFormik}\r\n                        value={valuesFormik?.status}\r\n                      >\r\n                        <option value=''>Pilih</option>\r\n                        <option value='JFT'>JFT</option>\r\n                        <option value='Non JFT'>Non JFT</option>\r\n                      </select>\r\n                      {formik.touched.status && formik.errors.status && (\r\n                        <div className='fv-plugins-message-container'>\r\n                          <div className='fv-help-block'>\r\n                            <span role='alert'>{formik.errors.status}</span>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='p-0 mt-6'>\r\n                <div className='text-center'>\r\n                  <button\r\n                    type='button'\r\n                    onClick={handleClose}\r\n                    className='float-none btn btn-light align-self-center m-1'\r\n                  >\r\n                    Tutup\r\n                  </button>\r\n                  <button\r\n                    type='submit'\r\n                    className='float-none btn btn-primary align-self-center m-1'\r\n                    disabled={formik.isSubmitting || !formik.isValid}\r\n                  >\r\n                    Simpan\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </Modal.Body>\r\n        </Modal>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  sumber_informasi?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  sumber_informasi: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function SumberInformasi() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterSumberInformasi, setFilterSumberInformasi] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterSumberInformasi.val !== '') {\r\n      uriParam += `${valFilterSumberInformasi.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterSumberInformasi({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputSumberInformasi = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterSumberInformasi({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Sumber Informasi',\r\n      selector: (row: any) => row.sumber_informasi,\r\n      sortable: true,\r\n      sortField: 'sumber_informasi',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/SumberInformasi/LihatSumberInformasi/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${SUMBER_INFORMASI_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        sumber_informasi: valuesFormik?.sumber_informasi, //? valuesFormik.sumber_informasi : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${SUMBER_INFORMASI_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${SUMBER_INFORMASI_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      sumber_informasi: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${SUMBER_INFORMASI_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Sumber Informasi</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterSumberInformasi.val} //4\r\n            onChange={handleChangeInputSumberInformasi}\r\n            placeholder='Sumber Informasi'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Sumber Informasi</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Sumber Informasi</Form.Label>\r\n                  <Form.Control\r\n                      name='sumber_informasi'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.sumber_informasi && formik.errors.sumber_informasi,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.sumber_informasi && !formik.errors.sumber_informasi,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.sumber_informasi}\r\n                    />\r\n                    {formik.touched.sumber_informasi && formik.errors.sumber_informasi && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.sumber_informasi}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  sumber_informasi?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  sumber_informasi?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi` //http://localhost:3000//master/jenis-kejadian\r\n\r\nexport function UpdateSumberInformasi() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        sumber_informasi: jsonD.sumber_informasi,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      sumber_informasi: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        sumber_informasi: valuesFormik?.sumber_informasi\r\n          ? valuesFormik.sumber_informasi\r\n          : valuesFormikExist?.sumber_informasi\r\n          ? valuesFormikExist.sumber_informasi\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${SUMBER_INFORMASI_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${SUMBER_INFORMASI_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/SumberInformasi', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/SumberInformasi', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='sumber_informasi'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.sumber_informasi || valuesFormik?.sumber_informasi === ''\r\n                              ? valuesFormik?.sumber_informasi\r\n                              : valuesFormikExist?.sumber_informasi\r\n                              ? valuesFormikExist?.sumber_informasi\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/SumberInformasi'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  sumber_informasi?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  sumber_informasi?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi`//http://localhost:3000/jenis-kejadian\r\n\r\nexport function LihatSumberInformasi() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        sumber_informasi: jsonD.sumber_informasi,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='sumber_informasi'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.sumber_informasi\r\n                              ? valuesFormikExist?.sumber_informasi\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/SumberInformasi'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_kekerasan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_kekerasan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisKekerasan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisKekerasan, setFilterJenisKekerasan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisKekerasan.val !== '') {\r\n      uriParam += `${valFilterJenisKekerasan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisKekerasan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisKekerasan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisKekerasan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Kekerasan',\r\n      selector: (row: any) => row.jenis_kekerasan,\r\n      sortable: true,\r\n      sortField: 'jenis_kekerasan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisKekerasan/LihatJenisKekerasan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KEKERASAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_kekerasan: valuesFormik?.jenis_kekerasan, //? valuesFormik.jenis_kekerasan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KEKERASAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KEKERASAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_kekerasan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KEKERASAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Kekerasan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisKekerasan.val} //4\r\n            onChange={handleChangeInputJenisKekerasan}\r\n            placeholder='Jenis Kekerasan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Kekerasan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Kekerasan</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_kekerasan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_kekerasan && formik.errors.jenis_kekerasan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_kekerasan && !formik.errors.jenis_kekerasan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_kekerasan}\r\n                    />\r\n                    {formik.touched.jenis_kekerasan && formik.errors.jenis_kekerasan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_kekerasan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kekerasan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kekerasan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateJenisKekerasan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kekerasan: jsonD.jenis_kekerasan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kekerasan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kekerasan: valuesFormik?.jenis_kekerasan\r\n          ? valuesFormik.jenis_kekerasan\r\n          : valuesFormikExist?.jenis_kekerasan\r\n          ? valuesFormikExist.jenis_kekerasan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KEKERASAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KEKERASAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKekerasan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKekerasan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kekerasan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_kekerasan || valuesFormik?.jenis_kekerasan === ''\r\n                              ? valuesFormik?.jenis_kekerasan\r\n                              : valuesFormikExist?.jenis_kekerasan\r\n                              ? valuesFormikExist?.jenis_kekerasan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKekerasan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_kekerasan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kekerasan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` //http://localhost:3000/JenisKekerasan\r\n\r\nexport function LihatJenisKekerasan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kekerasan: jsonD.jenis_kekerasan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kekerasan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kekerasan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_kekerasan\r\n                              ? valuesFormikExist?.jenis_kekerasan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKekerasan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function JenisPenyelesaian() {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1);\r\n  }, []);\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\r\n          <div className=\"d-flex flex-column\">\r\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'Jenis Sarana & Prasarana',\r\n      selector: (row: any) => row.jenis_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'jenis_sarana_prasarana',\r\n    },\r\n    {\r\n      name: 'Status Sarana & Prasarana',\r\n      selector: (row: any) => row.status_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'status_sarana_prasarana',\r\n    },\r\n    {\r\n      name: 'Jumlah',\r\n      selector: (row: any) => row.jumlah,\r\n      sortable: true,\r\n      sortField: 'jumlah',\r\n    },\r\n    {\r\n      name: 'Kondisi',\r\n      selector: (row: any) => row.kondisi,\r\n      sortable: true,\r\n      sortField: 'kondisi',\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: (row: any) => row.keterangan,\r\n      sortable: true,\r\n      sortField: 'keterangan',\r\n    },\r\n    {\r\n      name: 'Dokumentasi',\r\n      selector: (row: any) => row.dokumentasi,\r\n      sortable: true,\r\n      sortField: 'dokumentasi',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: \"Action\",\r\n      className: \"action\",\r\n      align: \"left\",\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n\r\n            <div className=\"mb-2\">\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size=\"sm\"\r\n                    variant=\"light\"\r\n                    title=\"Aksi\">\r\n                    <Dropdown.Item>\r\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\r\n                        Detail\r\n                      </Link>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n\r\n  ];\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n   \r\n  const [temp, setTemp] = useState([]);\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true);\r\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\r\n\r\n    setTemp(value.data.data);\r\n    console.log('cek response api:',temp);\r\n\r\n    \r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\r\n    setData(response.data.data);\r\n   \r\n    setTotalRows(response.data.total);\r\n    setLoading(false);\r\n    console.log('cek ahhh :' ,data);\r\n    return [data, setData] as const;\r\n  };\r\n\r\n  const handlePageChange = (page: any) => {\r\n    fetchUsers(page);\r\n  };\r\n\r\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n    setLoading(true);\r\n\r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\r\n\r\n    setData(response.data.data);\r\n    setPerPage(newPerPage);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSort = (column: any, sortDirection: any) => {\r\n    // simulate server sort\r\n    console.log(column, sortDirection);\r\n    setLoading(true);\r\n\r\n    // instead of setTimeout this is where you would handle your API call.\r\n    setTimeout(() => {\r\n      setData(orderBy(data, column.sortField, sortDirection));\r\n      setLoading(false);\r\n    }, 100);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Jenis Penyelesaian\r\n            </label>\r\n            <input\r\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\r\n          </div>\r\n      </div>\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n        <Link to='#'>\r\n            <button className='btn btn-primary'>\r\n              <i className='fa-solid fa-search'></i>\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-5' onClick={handleShow}>\r\n              <i className=\"fa-solid fa-plus\"></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tambah Jenis Penyelesaian</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\r\n        <Form.Group className=\"mb-3 form-control-solid\">\r\n            <Form.Label>Jenis Penyelesaian</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Penyelesaian\" />\r\n        </Form.Group>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n          <i className=\"fa-solid fa-paper-plane\"></i>\r\n            Simpan\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n      <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            pagination\r\n        />\r\n        {/* <DataTable\r\n          columns={columns}\r\n          data={data}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          sortServer\r\n          onSort={handleSort}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n        /> */}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {useFormik, FormikHelpers} from 'formik'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport Swal from 'sweetalert2'\nimport * as Yup from 'yup'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {KTSVG} from '../../../../_metronic/helpers'\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const STATUS_KENAIKAN_PANGKAT_URL = `${API_URL}/master/status_kenaikan_pangkat`\nexport interface FormInput {\n  status_kenaikan_pangkat?: string\n  created_by?: number\n}\nconst validatorForm = Yup.object().shape({\n  status_kenaikan_pangkat: Yup.string().required('Wajib diisi'),\n})\nexport function StatusKenaikanPangkat() {\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n  const navigate = useNavigate()\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [perPage, setPerPage] = useState(10)\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [temp, setTemp] = useState([])\n  const [aksi, setAksi] = useState(0)\n  const [valFilterPangkat, setFilterPangkat] = useState({val: ''})\n\n  useEffect(() => {\n    async function fetchUsers(page: number) {\n      setLoading(true)\n      const response = await axios.get(\n        `${STATUS_KENAIKAN_PANGKAT_URL}/filter/${qParamFind.strparam}`\n      )\n      setData(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n  }, [qParamFind, perPage])\n\n  const fetchData = async (page: number) => {\n    setLoading(true)\n    const response = await axios.get(`${STATUS_KENAIKAN_PANGKAT_URL}/filter/${qParamFind.strparam}`)\n    setData(response.data.data)\n    setTotalRows(response.data.total_data)\n    setLoading(false)\n\n    return [data, setData] as const\n  }\n  const handlePerRowsChange = async (newPerPage: number, page: number) => {\n    setLoading(true)\n    const response = await axios.get(`${STATUS_KENAIKAN_PANGKAT_URL}/filter/${qParamFind.strparam}`)\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterPangkat.val !== '') {\n      uriParam += `${valFilterPangkat.val}`\n    }\n\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handlePageChange = (page: number) => {\n    fetchData(page)\n  }\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const handleChangeInputPangkat = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterPangkat({val: event.target.value})\n  }\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n  let no = 1\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n      minWidth: '30px',\n      cell: (record: any) => {\n        return <div className='mt-2 mb-2'>{no++}</div>\n      },\n    },\n    {\n      name: 'Status Kenaikan Pangkat',\n      selector: (row: any) => row.status_kenaikan_pangkat,\n      sortable: true,\n      sortField: 'status_kenaikan_pangkat',\n      minWidth: '100px',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate(\n                          '/master/statuskenaikanpangkat/lihat-status-kenaikan-pangkat/' +\n                            record.id,\n                          {replace: true}\n                        )\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        status_kenaikan_pangkat: valuesFormik?.status_kenaikan_pangkat,\n      }\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${STATUS_KENAIKAN_PANGKAT_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchData(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${STATUS_KENAIKAN_PANGKAT_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchData(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  // UPDATE\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${STATUS_KENAIKAN_PANGKAT_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n  //End UPDATE\n  //Detail\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      status_kenaikan_pangkat: '',\n    })\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  //End Detail\n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(\n          `${STATUS_KENAIKAN_PANGKAT_URL}/delete/${id}`,\n          bodyParam\n        )\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n          fetchData(1)\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END DELET\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='row g-8 mt-2 ms-5 me-5'>\n          <label>\n            <h3> Status Kenaikan Pangkat</h3>\n          </label>\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n            <input\n              type='text'\n              className='form-control form-control form-control-solid'\n              name='q'\n              value={valFilterPangkat.val}\n              onChange={handleChangeInputPangkat}\n              placeholder='Status Kenaikan Pangkat'\n            />\n          </div>\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n            <Link to='#' onClick={handleFilter}>\n              {/* 1 */}\n              <button className='btn btn-light-primary me-2'>\n                <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n                Cari\n              </button>\n            </Link>\n          </div>\n          <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n            <Link to='#i'>\n              <button className='btn btn-primary me-2' onClick={doAdd}>\n                <i className='fa-solid fa-plus'></i>\n                Tambah\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <form onSubmit={formik.handleSubmit}>\n            <Modal.Header closeButton>\n              {/* <Modal.Title {aksi === 0 ? 'Tambah' : 'Ubah'}>Tambah Pangkat</Modal.Title> */}\n            </Modal.Header>\n            <Modal.Body>\n              <div className='mb-3 form-control-solid'>\n                <div className='form-group'>\n                  <Form.Label>Status Kenaikan Pangkat</Form.Label>\n                  <Form.Control\n                    name='status_kenaikan_pangkat'\n                    className='form-control form-control-solid'\n                    onChange={handleChangeFormik}\n                    value={valuesFormik?.status_kenaikan_pangkat}\n                    placeholder='Status Kenaikan Pangkat'\n                  />\n                </div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant='secondary' onClick={handleClose}>\n                Close\n              </Button>\n              <Button variant='primary' type='submit'>\n                <i className='fa-solid fa-paper-plane'></i>\n                Simpan\n              </Button>\n            </Modal.Footer>\n          </form>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          customStyles={customStyles}\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n        />\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  status_kenaikan_pangkat?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  status_kenaikan_pangkat?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const STATUS_KENAIKAN_PANGKAT_URL = `${API_URL}/master/status_kenaikan_pangkat`\n\nexport function LihatStatusKenaikanPangkat() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${STATUS_KENAIKAN_PANGKAT_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        status_kenaikan_pangkat: jsonD.status_kenaikan_pangkat,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='status_kenaikan_pangkat'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.status_kenaikan_pangkat\n                              ? valuesFormikExist?.status_kenaikan_pangkat\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/StatusKenaikanPangkat'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport {Navigate, Route, Routes, Outlet} from 'react-router-dom'\nimport {PageLink, PageTitle} from '../../../_metronic/layout/core'\n\nimport {Kota} from './components/Kota'\nimport {LihatKota} from './components/Lihat-master/LihatKota'\nimport {UpdateKota} from './components/Update-master/UpdateKota'\nimport {TambahKota} from './components/Tambah-master/TambahKota'\n\nimport {Kecamatan} from './components/Kecamatan'\nimport {LihatKecamatan} from './components/Lihat-master/LihatKecamatan'\nimport {UpdateKecamatan} from './components/Update-master/UpdateKecamatan'\nimport {TambahKecamatan} from './components/Tambah-master/TambahKecamatan'\n\nimport {Kelurahan} from './components/Kelurahan'\nimport {LihatKelurahan} from './components/Lihat-master/LihatKelurahan'\nimport {UpdateKelurahan} from './components/Update-master/UpdateKelurahan'\nimport {TambahKelurahan} from './components/Tambah-master/TambahKelurahan'\n\nimport {JenisKegiatan} from './components/JenisKegiatan'\nimport {LihatJenisKegiatan} from './components/Lihat-master/LihatJenisKegiatan'\nimport {UpdateJenisKegiatan} from './components/Update-master/UpdateJenisKegiatan'\nimport {TambahJenisKegiatan} from './components/Tambah-master/TambahJenisKegiatan'\n\nimport {JenisKejadian} from './components/JenisKejadian'\nimport {LihatJenisKejadian} from './components/Lihat-master/LihatJenisKejadian'\nimport {UpdateJenisKejadian} from './components/Update-master/UpdateJenisKejadian'\nimport {TambahJenisKejadian} from './components/Tambah-master/TambahJenisKejadian'\n\nimport {JenisPelanggaran} from './components/JenisPelanggaran'\nimport {LihatJenisPelanggaran} from './components/Lihat-master/LihatJenisPelanggaran'\n\nimport {JenisPertolongan} from './components/JenisPertolongan'\nimport {LihatJenisPertolongan} from './components/Lihat-master/LihatJenisPertolongan'\nimport {UpdateJenisPertolongan} from './components/Update-master/UpdateJenisPertolongan'\n\nimport {JenisPerdaPerkada} from './components/JenisPerdaPerkada'\nimport {LihatJenisPerdaPerkada} from './components/Lihat-master/LihatJenisPerdaPerkada'\nimport {UpdateJenisPerdaPerkada} from './components/Update-master/UpdateJenisPerdaPerkada'\nimport {TambahJenisPerdaPerkada} from './components/Tambah-master/TambahJenisPerdaPerkada'\n\nimport {JenisPenindakan} from './components/JenisPenindakan'\nimport {LihatJenisPenindakan} from './components/Lihat-master/LihatJenisPenindakan'\nimport {UpdateJenisPenindakan} from './components/Update-master/UpdateJenisPenindakan'\n\nimport {KorbanJiwa} from './components/KorbanJiwa'\nimport {LihatKorbanJiwa} from './components/Lihat-master/LihatKorbanJiwa'\nimport {UpdateKorbanJiwa} from './components/Update-master/UpdateKorbanJiwa'\nimport {TambahKorbanJiwa} from './components/Tambah-master/TambahKorbanJiwa'\n\nimport {KorbanMaterial} from './components/KorbanMaterial'\nimport {LihatKorbanMaterial} from './components/Lihat-master/LihatKorbanMaterial'\nimport {UpdateKorbanMaterial} from './components/Update-master/UpdateKorbanMaterial'\n\nimport {JenisBantuan} from './components/JenisBantuan'\nimport {LihatJenisBantuan} from './components/Lihat-master/LihatJenisBantuan'\nimport {UpdateJenisBantuan} from './components/Update-master/UpdateJenisBantuan'\n\nimport {InstansiTerkait} from './components/InstansiTerkait'\n\nimport {KondisiSaranaPrasarana} from './components/KondisiSaranaPrasarana'\nimport {LihatKondisiSaranaPrasarana} from './components/Lihat-master/LihatKondisiSaranaPrasarana'\nimport {UpdateKondisiSaranaPrasarana} from './components/Update-master/UpdateKondisiSaranaPrasarana'\n\nimport {StatusSaranaPrasarana} from './components/StatusSaranaPrasarana'\nimport {LihatStatusSaranaPrasarana} from './components/Lihat-master/LihatStatusSaranaPrasarana'\nimport {UpdateStatusSaranaPrasarana} from './components/Update-master/UpdateStatusSaranaPrasarana'\n\nimport {Agama} from './components/Agama'\nimport {LihatAgama} from './components/Lihat-master/LihatAgama'\nimport {UpdateAgama} from './components/Update-master/UpdateAgama'\nimport {TambahAgama} from './components/Tambah-master/TambahAgama'\n\nimport {Pangkat} from './components/Pangkat'\nimport {UpdatePangkat} from './components/Update-master/UpdatePangkat'\nimport {LihatPangkat} from './components/Lihat-master/LihatPangkat'\nimport {TambahPangkat} from './components/Tambah-master/TambahPangkat'\n\nimport {TempatPelaksanaan} from './components/TempatPelaksanaan'\nimport {UpdateTempatPelaksanaan} from './components/Update-master/UpdateTempatPelaksanaan'\nimport {LihatTempatPelaksanaan} from './components/Lihat-master/LihatTempatPelaksanaan'\n\nimport {SKPD} from './components/SKPD'\nimport {UpdateSKPD} from './components/Update-master/UpdateSKPD'\nimport {LihatSKPD} from './components/Lihat-master/LihatSKPD'\n\nimport {Pendidikan} from './components/Pendidikan'\nimport {LihatPendidikan} from './components/Lihat-master/LihatPendidikan'\n\nimport {JenisSaranaPrasarana} from './components/JenisSaranaPrasarana'\nimport {UpdateJenisSaranaPrasarana} from './components/Update-master/UpdateJenisSaranaPrasarana'\nimport {LihatJenisSaranaPrasarana} from './components/Lihat-master/LihatJenisSaranaPrasarana'\n\nimport {Golongan} from './components/Golongan'\n\nimport {Eselon} from './components/Eselon'\nimport {UpdateEselon} from './components/Update-master/UpdateEselon'\nimport {LihatEselon} from './components/Lihat-master/LihatEselon'\n\nimport {Jabatan} from './components/Jabatan'\nimport {LihatJabatan} from './components/Lihat-master/LihatJabatan'\nimport {TambahJabatan} from './components/Tambah-master/TambahJabatan'\n\nimport {SumberInformasi} from './components/SumberInformasi'\nimport {UpdateSumberInformasi} from './components/Update-master/UpdateSumberInformasi'\nimport {LihatSumberInformasi} from './components/Lihat-master/LihatSumberInformasi'\n\nimport {JenisKekerasan} from './components/JenisKekerasan'\nimport {UpdateJenisKekerasan} from './components/Update-master/UpdateJenisKekerasan'\nimport {LihatJenisKekerasan} from './components/Lihat-master/LihatJenisKekerasan'\n\n// import {JenisPenertiban} from './components/JenisPenertiban'\n// import {UpdateJenisPenertiban} from './components/Update-master/UpdateJenisPenertiban'\n// import {LihatJenisPenertiban} from './components/Lihat-master/LihatJenisPenertiban'\n\nimport {JenisPenyelesaian} from './components/JenisPenyelesaian'\n\nimport {StatusKenaikanPangkat} from './components/StatusKenaikanPangkat'\nimport {LihatStatusKenaikanPangkat} from './components/Lihat-master/LihatStatusKenaikanPangkat'\n\nconst masterBreadCrumbs: Array<PageLink> = [\n  {\n    title: 'Master',\n    path: '/master/InformasiDataMaster',\n    isSeparator: false,\n    isActive: false,\n  },\n  {\n    title: '',\n    path: '',\n    isSeparator: true,\n    isActive: false,\n  },\n]\n\nconst MasterPage: React.FC = () => {\n  return (\n    <Routes>\n      <Route\n        element={\n          <>\n            <Outlet />\n          </>\n        }\n      >\n        <Route\n          path='Kota'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kota</PageTitle>\n              <Kota />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/UpdateKecamatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kecamatan</PageTitle>\n              <UpdateKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/LihatKecamatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kecamatan</PageTitle>\n              <LihatKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/TambahKecamatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kecamatan</PageTitle>\n              <TambahKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='SKPD'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>SKPD</PageTitle>\n              <SKPD />\n            </>\n          }\n        />\n        <Route\n          path='SKPD/UpdateSKPD/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update SKPD</PageTitle>\n              <UpdateSKPD />\n            </>\n          }\n        />\n        <Route\n          path='SKPD/LihatSKPD/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat SKPD</PageTitle>\n              <LihatSKPD />\n            </>\n          }\n        />\n        <Route\n          path='Pendidikan/LihatPendidikan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Pendidikan</PageTitle>\n              <LihatPendidikan />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Pangkat</PageTitle>\n              <Pangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/UpdatePangkat/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Pangkat</PageTitle>\n              <UpdatePangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/LihatPangkat/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Pangkat</PageTitle>\n              <LihatPangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/TambahPangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Pangkat</PageTitle>\n              <TambahPangkat />\n            </>\n          }\n        />\n\n        <Route\n          path='TempatPelaksanaan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tempat Pelaksanaan</PageTitle>\n              <TempatPelaksanaan />\n            </>\n          }\n        />\n\n        <Route\n          path='TempatPelaksanaan/UpdateTempatPelaksanaan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update TempatPelaksanaan</PageTitle>\n              <UpdateTempatPelaksanaan />\n            </>\n          }\n        />\n        <Route\n          path='TempatPelaksanaan/LihatTempatPelaksanaan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat TempatPelaksanaan</PageTitle>\n              <LihatTempatPelaksanaan />\n            </>\n          }\n        />\n\n        <Route\n          path='Golongan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Golongan </PageTitle>\n              <Golongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jenis Sarana Prasarana </PageTitle>\n              <JenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana/UpdateJenisSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Sarana Prasarana</PageTitle>\n              <UpdateJenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana/LihatJenisSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Sarana Prasarana</PageTitle>\n              <LihatJenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='KondisiSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Kondisi Sarana Prasarana </PageTitle>\n              <KondisiSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='KondisiSaranaPrasarana/UpdateKondisiSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kondisi Sarana Prasarana</PageTitle>\n              <UpdateKondisiSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='KondisiSaranaPrasarana/LihatKondisiSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kondisi Sarana Prasarana</PageTitle>\n              <LihatKondisiSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='StatusSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Status Sarana Prasarana </PageTitle>\n              <StatusSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='StatusSaranaPrasarana/UpdateStatusSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Status Sarana Prasarana</PageTitle>\n              <UpdateStatusSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='StatusSaranaPrasarana/LihatStatusSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Status Sarana Prasarana</PageTitle>\n              <LihatStatusSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kecamatan</PageTitle>\n              <Kecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kota/UpdateKota/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kota</PageTitle>\n              <UpdateKota />\n            </>\n          }\n        />\n        <Route\n          path='Kota/LihatKota/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kota</PageTitle>\n              <LihatKota />\n            </>\n          }\n        />\n        <Route\n          path='Kota/TambahKota'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kota</PageTitle>\n              <TambahKota />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kelurahan</PageTitle>\n              <Kelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/UpdateKelurahan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kelurahan</PageTitle>\n              <UpdateKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/TambahKelurahan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kelurahan</PageTitle>\n              <TambahKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/LihatKelurahan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kelurahan</PageTitle>\n              <LihatKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kegiatan </PageTitle>\n              <JenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/UpdateJenisKegiatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisKegiatan</PageTitle>\n              <UpdateJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/TambahJenisKegiatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Kegiatan</PageTitle>\n              <TambahJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/LihatJenisKegiatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Kegiatan</PageTitle>\n              <LihatJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kejadian </PageTitle>\n              <JenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/UpdateJenisKejadian/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Kejadian</PageTitle>\n              <UpdateJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/LihatJenisKejadian/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Kejadian</PageTitle>\n              <LihatJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/TambahJenisKejadian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Kejadian</PageTitle>\n              <TambahJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='Agama'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Agama</PageTitle>\n              <Agama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/UpdateAgama/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Agama</PageTitle>\n              <UpdateAgama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/LihatAgama/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Agama</PageTitle>\n              <LihatAgama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/TambahAgama'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Agama</PageTitle>\n              <TambahAgama />\n            </>\n          }\n        />\n        <Route\n          path='Jabatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jabatan </PageTitle>\n              <Jabatan />\n            </>\n          }\n        />\n        <Route\n          path='Jabatan/TambahJabatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jabatan </PageTitle>\n              <TambahJabatan />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/update-jabatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Agama</PageTitle>\n              <UpdateAgama />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/lihat-jabatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jabatan</PageTitle>\n              <LihatJabatan />\n            </>\n          }\n        />\n        <Route\n          path='StatusKenaikanPangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Status Kenaikan Pangkat </PageTitle>\n              <StatusKenaikanPangkat />\n            </>\n          }\n        />\n        <Route\n          path='statuskenaikanpangkat/lihat-status-kenaikan-pangkat/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat StatusKenaikanPangkat</PageTitle>\n              <LihatStatusKenaikanPangkat />\n            </>\n          }\n        />\n        <Route\n          path='Eselon'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Eselon </PageTitle>\n              <Eselon />\n            </>\n          }\n        />\n        <Route\n          path='Eselon/UpdateEselon/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Eselon</PageTitle>\n              <UpdateEselon />\n            </>\n          }\n        />\n        <Route\n          path='Eselon/LihatEselon/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Eselon</PageTitle>\n              <LihatEselon />\n            </>\n          }\n        />\n\n        <Route\n          path='Pendidikan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Pendidikan </PageTitle>\n              <Pendidikan />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Sumber Informasi </PageTitle>\n              <SumberInformasi />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi/UpdateSumberInformasi/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Sumber Informasi</PageTitle>\n              <UpdateSumberInformasi />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi/LihatSumberInformasi/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Sumber Informasi</PageTitle>\n              <LihatSumberInformasi />\n            </>\n          }\n        />\n        {/* <Route\n          path='SumberInformasi/TambahSumberInformasi/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Sumber Informasi</PageTitle>\n              <TambahSumberInformasi />\n            </>\n          }\n        /> */}\n        <Route\n          path='JenisPelanggaran'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pelanggaran</PageTitle>\n              <JenisPelanggaran />\n            </>\n          }\n        />\n        <Route\n          path='JenisPelanggaran/LihatJenisPelanggaran/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Pelanggaran</PageTitle>\n              <LihatJenisPelanggaran />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pertolongan</PageTitle>\n              <JenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan/UpdateJenisPertolongan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Pertolongan</PageTitle>\n              <UpdateJenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan/LihatJenisPertolongan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Pertolongan</PageTitle>\n              <LihatJenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penindakan</PageTitle>\n              <JenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan/UpdateJenisPenindakan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Penindakan</PageTitle>\n              <UpdateJenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan/LihatJenisPenindakan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Penindakan</PageTitle>\n              <LihatJenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPerdaPerkada'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Perda / Perkada</PageTitle>\n              <JenisPerdaPerkada />\n            </>\n          }\n        />\n        <Route\n          path='JenisPerdaPerkada/LihatJenisPerdaPerkada/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Perda / Perkada</PageTitle>\n              <LihatJenisPerdaPerkada />\n            </>\n          }\n        />\n        <Route\n          path='JenisPerdaPerkada/UpdateJenisPerdaPerkada/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Perda / Perkada</PageTitle>\n              <UpdateJenisPerdaPerkada />\n            </>\n          }\n        />\n        <Route\n          path='JenisPerdaPerkada/TambahJenisPerdaPerkada'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Perda / Perkada</PageTitle>\n              <TambahJenisPerdaPerkada />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kekerasan</PageTitle>\n              <JenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan/UpdateJenisKekerasan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisKekerasan</PageTitle>\n              <UpdateJenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan/LihatJenisKekerasan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat JenisKekerasan</PageTitle>\n              <LihatJenisKekerasan />\n            </>\n          }\n        />\n        {/* <Route\n          path='JenisPenertiban'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penertiban</PageTitle>\n              <JenisPenertiban />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenertiban/UpdateJenisPenertiban/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Penertiban</PageTitle>\n              <UpdateJenisPenertiban />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenertiban/LihatJenisPenertiban/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Penertiban</PageTitle>\n              <LihatJenisPenertiban />\n            </>\n          }\n        /> */}\n        <Route\n          path='JenisPenyelesaian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penyelesaian</PageTitle>\n              <JenisPenyelesaian />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Jiwa </PageTitle>\n              <KorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/UpdateKorbanJiwa/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update KorbanJiwa</PageTitle>\n              <UpdateKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/LihatKorbanJiwa/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat KorbanJiwa</PageTitle>\n              <LihatKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/TambahKorbanJiwa'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah KorbanJiwa</PageTitle>\n              <TambahKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Material</PageTitle>\n              <KorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial/UpdateKorbanMaterial/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update KorbanMaterial</PageTitle>\n              <UpdateKorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial/LihatKorbanMaterial/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat KorbanMaterial</PageTitle>\n              <LihatKorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Bantuan</PageTitle>\n              <JenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan/UpdateJenisBantuan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisBantuan</PageTitle>\n              <UpdateJenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan/LihatJenisBantuan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat JenisBantuan</PageTitle>\n              <LihatJenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='InstansiTerkait'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Instansi Terkait</PageTitle>\n              <InstansiTerkait />\n            </>\n          }\n        />\n\n        <Route index element={<Navigate to='/master' />} />\n      </Route>\n    </Routes>\n  )\n}\n\nexport default MasterPage"],"names":["KOTA_URL","process","createTheme","text","primary","secondary","background","default","context","divider","action","button","hover","disabled","systemMode","ThemeModeComponent","customStyles","rows","style","minHeight","headCells","paddingLeft","paddingRight","cells","validatorForm","Yup","shape","kota","required","Kota","navigate","useNavigate","mode","useThemeMode","calculatedMode","useState","val","valFilterKota","setFilterKota","temp","setTemp","loading","setLoading","strparam","qParamFind","setUriFind","show","setShow","handleClose","totalRows","setTotalRows","perPage","handleFilter","uriParam","prevState","LoadingAnimation","props","className","columns","name","selector","row","serial","sortable","cell","sortField","kode","record","Fragment","DropdownButton","map","DropdownType","idx","as","ButtonGroup","id","size","variant","title","Dropdown","href","onClick","replace","doEdit","konfirDel","useEffect","fetchUsers","page","axios","response","data","total_data","timeout","setTimeout","items","Array","from","forEach","item","index","clearTimeout","fetchDT","value","React","valuesFormik","setValuesFormik","aksi","setAksi","formik","useFormik","initialValues","validationSchema","enableReinitialize","onSubmit","values","setSubmitting","bodyparam","Swal","icon","showConfirmButton","timer","idEditData","console","error","setIdEditData","getDetail","idparam","parseInt","prevstate","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","color","then","result","isConfirmed","bodyParam","deleted_by","type","onChange","event","target","placeholder","to","path","Modal","onHide","backdrop","keyboard","centered","closeButton","handleSubmit","Form","clsx","touched","errors","prevValues","role","length","progressPending","progressComponent","pagination","paginationTotalRows","theme","noDataComponent","LihatKota","useParams","valuesFormikExist","setValuesFormikExist","fetchData","jsonD","paramValue","updated_by","readOnly","UpdateKota","selectedFile","formData","FormData","append","log","TambahKota","created_by","return_id","KECAMATAN_URL","Kecamatan","valFilterKecamatan","setFilterKecamatan","kode_kecamatan","width","kecamatan","kode_kota","align","htmlFor","LihatKecamatan","UpdateKecamatan","handleChangeFormik","toUpperCase","TambahKecamatan","KELURAHAN_URL","Kelurahan","valFilterKelurahan","setFilterKelurahan","kode_kelurahan","kelurahan","LihatKelurahan","UpdateKelurahan","TambahKelurahan","JENIS_KEGIATAN_URL","jenis_kegiatan","JenisKegiatan","valFilterJenisKegiatan","setFilterJenisKegiatan","filterTemp","setFilterTemp","filterData","filter","i","nama","toLowerCase","LihatJenisKegiatan","UpdateJenisKegiatan","TambahJenisKegiatan","JENIS_KEJADIAN_URL","jenis_kejadian","JenisKejadian","valFilterJenisKejadian","setFilterJenisKejadian","LihatJenisKejadian","UpdateJenisKejadian","TambahJenisKejadian","JENIS_PELANGGARAN_URL","jenis_pelanggaran","JenisPelanggaran","valFilterJenisPelanggaran","setFilterJenisPelanggaran","kode_penertiban","LihatJenisPelanggaran","JENIS_PERTOLONGAN_URL","jenis_pertolongan","JenisPertolongan","valFilterJenisPertolongan","setFilterJenisPertolongan","LihatJenisPertolongan","UpdateJenisPertolongan","JENIS_PERDA_PERKADA_URL","jenis_perda_perkada","JenisPerdaPerkada","valFilterJudul","setFilterJudul","valFilterDeskripsi","setFilterDeskripsi","judul","deskripsi","LihatJenisPerdaPerkada","UpdateJenisPerdaPerkada","TambahJenisPerdaPerkada","JENIS_PENINDAKAN_URL","jenis_penindakan","JenisPenindakan","valFilterJenisPenindakan","setFilterJenisPenindakan","LihatJenisPenindakan","UpdateJenisPenindakan","JENIS_KORBAN_JIWA_URL","jenis_korban_jiwa","KorbanJiwa","valFilterKorbanJiwa","setFilterKorbanJiwa","menuPosition","LihatKorbanJiwa","UpdateKorbanJiwa","TambahKorbanJiwa","JENIS_KORBAN_MATERIAL_URL","jenis_korban_material","KorbanMaterial","valFilterKorbanMaterial","setFilterKorbanMaterial","LihatKorbanMaterial","UpdateKorbanMaterial","JENIS_BANTUAN_URL","jenis_bantuan","JenisBantuan","valFilterJenisBantuan","setFilterJenisBantuan","LihatJenisBantuan","UpdateJenisBantuan","SARANA_PRASARANA_URL","InstansiTerkait","jenis_sarana_prasarana","status_sarana_prasarana","jumlah","kondisi","keterangan","dokumentasi","setData","total","Button","KONDISI_SARANA_PRASARANA_URL","kondisi_sarana_prasarana","KondisiSaranaPrasarana","valFilterKondisiSaranaPrasarana","setFilterKondisiSaranaPrasarana","LihatKondisiSaranaPrasarana","UpdateKondisiSaranaPrasarana","STATUS_SARANA_PRASARANA_URL","StatusSaranaPrasarana","valFilterStatusSaranaPrasarana","setFilterStatusSaranaPrasarana","LihatStatusSaranaPrasarana","UpdateStatusSaranaPrasarana","AGAMA_URL","agama","Agama","valFilterAgama","setFilterAgama","LihatAgama","UpdateAgama","TambahAgama","PANGKAT_URL","pangkat","Pangkat","valFilterPangkat","setFilterPangkat","menuposition","UpdatePangkat","LihatPangkat","TambahPangkat","BIDANG_WILAYAH_URL","kategori","TempatPelaksanaan","valFilterTempatPelaksanaan","setFilterTempatPelaksanaan","UpdateTempatPelaksanaan","TEMPAT_PELAKSANA_URL","LihatTempatPelaksanaan","SKPD_URL","skpd","SKPD","valFilterSKPD","setFilterSKPD","UpdateSKPD","LihatSKPD","PENDIDIKAN_URL","pendidikan","Pendidikan","valFilterPendidikan","setFilterPendidikan","LihatPendidikan","JENIS_SARANA_PRASARANA_URL","JenisSaranaPrasarana","valFilterJenisSaranaPrasarana","setFilterJenisSaranaPrasarana","UpdateJenisSaranaPrasarana","LihatJenisSaranaPrasarana","GOLONGAN_URL","golongan","Golongan","valFilterGolongan","setFilterGolongan","doDetail","ESELON_URL","eselon","Eselon","valFilterEselon","setFilterEselon","UpdateEselon","LihatEselon","JABATAN_URL","status","Jabatan","setPerPage","valFilterJabatan","setFilterJabatan","handlePerRowsChange","newPerPage","no","minWidth","jabatan","wrap","paginationServer","sortServer","onSort","column","sortDirection","Error","orderBy","onChangeRowsPerPage","onChangePage","LihatJabatan","TambahJabatan","isSubmitting","isValid","SUMBER_INFORMASI_URL","sumber_informasi","SumberInformasi","valFilterSumberInformasi","setFilterSumberInformasi","UpdateSumberInformasi","LihatSumberInformasi","JENIS_KEKERASAN_URL","jenis_kekerasan","JenisKekerasan","valFilterJenisKekerasan","setFilterJenisKekerasan","UpdateJenisKekerasan","LihatJenisKekerasan","JenisPenyelesaian","STATUS_KENAIKAN_PANGKAT_URL","status_kenaikan_pangkat","StatusKenaikanPangkat","LihatStatusKenaikanPangkat","masterBreadCrumbs","isSeparator","isActive","element","breadcrumbs"],"sourceRoot":""}