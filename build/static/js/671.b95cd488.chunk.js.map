{"version":3,"file":"static/js/671.b95cd488.chunk.js","mappings":"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","sources":["app/modules/master/components/Kota.tsx","app/modules/master/components/Lihat-master/LihatKota.tsx","app/modules/master/components/Update-master/UpdateKota.tsx","app/modules/master/components/Tambah-master/TambahKota.tsx","app/modules/master/components/Kecamatan.tsx","app/modules/master/components/Lihat-master/LihatKecamatan.tsx","app/modules/master/components/Update-master/UpdateKecamatan.tsx","app/modules/master/components/Tambah-master/TambahKecamatan.tsx","app/modules/master/components/Kelurahan.tsx","app/modules/master/components/Lihat-master/LihatKelurahan.tsx","app/modules/master/components/Update-master/UpdateKelurahan.tsx","app/modules/master/components/Tambah-master/TambahKelurahan.tsx","app/modules/master/components/JenisKegiatan.tsx","app/modules/master/components/Lihat-master/LihatJenisKegiatan.tsx","app/modules/master/components/Update-master/UpdateJenisKegiatan.tsx","app/modules/master/components/Tambah-master/TambahJenisKegiatan.tsx","app/modules/master/components/JenisKejadian.tsx","app/modules/master/components/Lihat-master/LihatJenisKejadian.tsx","app/modules/master/components/Update-master/UpdateJenisKejadian.tsx","app/modules/master/components/Tambah-master/TambahJenisKejadian.tsx","app/modules/master/components/JenisPelanggaran.tsx","app/modules/master/components/JenisPertolongan.tsx","app/modules/master/components/Lihat-master/LihatJenisPertolongan.tsx","app/modules/master/components/Update-master/UpdateJenisPertolongan.tsx","app/modules/master/components/JenisPerdaPerkada.tsx","app/modules/master/components/JenisPenindakan.tsx","app/modules/master/components/Lihat-master/LihatJenisPenindakan.tsx","app/modules/master/components/Update-master/UpdateJenisPenindakan.tsx","app/modules/master/components/KorbanJiwa.tsx","app/modules/master/components/Lihat-master/LihatKorbanJiwa.tsx","app/modules/master/components/Update-master/UpdateKorbanJiwa.tsx","app/modules/master/components/Tambah-master/TambahKorbanJiwa.tsx","app/modules/master/components/KorbanMaterial.tsx","app/modules/master/components/Lihat-master/LihatKorbanMaterial.tsx","app/modules/master/components/Update-master/UpdateKorbanMaterial.tsx","app/modules/master/components/JenisBantuan.tsx","app/modules/master/components/Lihat-master/LihatJenisBantuan.tsx","app/modules/master/components/Update-master/UpdateJenisBantuan.tsx","app/modules/master/components/InstansiTerkait.tsx","app/modules/master/components/KondisiSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatKondisiSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateKondisiSaranaPrasarana.tsx","app/modules/master/components/StatusSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatStatusSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateStatusSaranaPrasarana.tsx","app/modules/master/components/Agama.tsx","app/modules/master/components/Lihat-master/LihatAgama.tsx","app/modules/master/components/Update-master/UpdateAgama.tsx","app/modules/master/components/Tambah-master/TambahAgama.tsx","app/modules/master/components/Pangkat.tsx","app/modules/master/components/Update-master/UpdatePangkat.tsx","app/modules/master/components/Lihat-master/LihatPangkat.tsx","app/modules/master/components/Tambah-master/TambahPangkat.tsx","app/modules/master/components/TempatPelaksanaan.tsx","app/modules/master/components/Update-master/UpdateTempatPelaksanaan.tsx","app/modules/master/components/Lihat-master/LihatTempatPelaksanaan.tsx","app/modules/master/components/SKPD.tsx","app/modules/master/components/Update-master/UpdateSKPD.tsx","app/modules/master/components/Lihat-master/LihatSKPD.tsx","app/modules/master/components/Pendidikan.tsx","app/modules/master/components/JenisSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateJenisSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatJenisSaranaPrasarana.tsx","app/modules/master/components/Golongan.tsx","app/modules/master/components/Eselon.tsx","app/modules/master/components/Update-master/UpdateEselon.tsx","app/modules/master/components/Lihat-master/LihatEselon.tsx","app/modules/master/components/Jabatan.tsx","app/modules/master/components/SumberInformasi.tsx","app/modules/master/components/Update-master/UpdateSumberInformasi.tsx","app/modules/master/components/Lihat-master/LihatSumberInformasi.tsx","app/modules/master/components/JenisKekerasan.tsx","app/modules/master/components/Update-master/UpdateJenisKekerasan.tsx","app/modules/master/components/Lihat-master/LihatJenisKekerasan.tsx","app/modules/master/components/JenisPenertiban.tsx","app/modules/master/components/Update-master/UpdateJenisPenertiban.tsx","app/modules/master/components/Lihat-master/LihatJenisPenertiban.tsx","app/modules/master/components/JenisPenyelesaian.tsx","app/modules/master/MasterPage.tsx"],"sourcesContent":["import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Swal from 'sweetalert2'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\n\nexport interface FormInput {\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/master/kota\n\nexport function Kota() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [valFilterKota, setFilterKota] = useState({val: ''})\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const response = await axios.delete(`${KOTA_URL}/delete/${id},{deleted_by}`)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n      wrap: true,\n    },\n    {\n      name: 'Kota',\n      selector: (row: any) => row.kota,\n      sortable: true,\n      sortField: 'kota',\n      width: '400px',\n      wrap: true,\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n      wrap: true,\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2  mt-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kota/LihatKota/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kota/UpdateKota/' + record.id, {replace: true})\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterKota.val !== '') {\n      uriParam += `&kota=${valFilterKota.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handleChangeInputKota = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterKota({val: event.target.value})\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${KOTA_URL}/findone-by-kota/:kota`)\n      setData(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(KOTA_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek kota:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Kota\n          </label>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='kota'\n            value={valFilterKota.val}\n            onChange={handleChangeInputKota}\n            placeholder='Kota'\n          />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary' onClick={handleFilter}>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/Kota/TambahKota'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        {/* onSubmit: async (values) => {\n      const bodyparam: FormInput = {}\n      valuesFormik?.kota ? (bodyparam.kota = valuesFormik.kota) : delete bodyparam.kota\n\n      try {\n        const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\n        if (response) {\n          fetchUsers(1)\n          handleClose()\n          setValuesFormik({})\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    }, */}\n      </>\n\n      <div className='table-responsive mt-30 ms-30 me-1'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  kota?: string\n  kode?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/sarana-prasarana\n\nexport function LihatKota() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KOTA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kota: jsonD.kota,\n        kode: jsonD.kode,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kota ? valuesFormikExist?.kota : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode</Form.Label>\n                        <Form.Control\n                          name='kode'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kota'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kota?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000//master/kota\n\nexport function UpdateKota() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KOTA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kota: jsonD.kota,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kota: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kota: valuesFormik?.kota\n          ? valuesFormik.kota\n          : valuesFormikExist?.kota\n          ? valuesFormikExist.kota\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${KOTA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${KOTA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Kota', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Kota', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kota || valuesFormik?.kota === ''\n                              ? valuesFormik?.kota\n                              : valuesFormikExist?.kota\n                              ? valuesFormikExist?.kota\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kota'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kota?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/master/kota\n\nexport function TambahKota() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kota: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kota: valuesFormik?.kota ? valuesFormik.kota : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\n        if (response) {\n            if (selectedFile) {\n              formData.append('file_dokumentasi', selectedFile)\n              const responseFile = await axios.post(\n                `${KOTA_URL}/upload-file/${response.data.data.return_id}`,\n                formData\n              )\n              if (responseFile) {\n                console.log('File success uploaded!')\n                Swal.fire({\n                  icon: 'success',\n                  title: 'Data berhasil disimpan',\n                  showConfirmButton: false,\n                  timer: 1500,\n                })\n                navigate('/master/Kota', {replace: true})\n              }\n              return\n            }\n            Swal.fire({\n              icon: 'success',\n              title: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            navigate('/master/Kota', {replace: true})\n          }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kota}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kota'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Swal from 'sweetalert2'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\n\nexport function Kecamatan() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Kode Kecamatan',\n      selector: (row: any) => row.kode_kecamatan,\n      sortable: true,\n      sortField: 'kode_kecamatan',\n      width: '200px',\n    },\n    {\n      name: 'kecamatan',\n      selector: (row: any) => row.kecamatan,\n      sortable: true,\n      sortField: 'kecamatan',\n      width: '250px',\n    },\n    {\n      name: 'Kode Kota',\n      selector: (row: any) => row.kode_kota,\n      sortable: true,\n      sortField: 'kode_kota',\n      width: '150px',\n    },\n    {\n      name: 'kota',\n      selector: (row: any) => row.kota,\n      sortable: true,\n      sortField: 'kota',\n      width: '300px',\n    },\n    {},\n\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kecamatan/LihatKecamatan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kecamatan/UpdateKecamatan/' + record.id, {replace: true})\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(KECAMATAN_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek response api:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${KECAMATAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6'>\n          <div className='form-group'>\n            <label htmlFor='' className='mb-3'>\n              Kota\n            </label>\n            <input\n              type='text'\n              className='form-control form-control form-control-solid'\n              name='tags'\n            />\n          </div>\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6'>\n          <div className='form-group'>\n            <label htmlFor='' className='mb-3'>\n              Kecamatan\n            </label>\n            <input\n              type='text'\n              className='form-control form-control form-control-solid'\n              name='tags'\n            />\n          </div>\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/Kecamatan/TambahKecamatan'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  kecamatan?: string\n  kode_kota?: string\n  kode_kecamatan?: string\n  kota?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kecamatan?: string\n  kode_kota?: string\n  kode_kecamatan?: string\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\nexport function LihatKecamatan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KECAMATAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kecamatan: jsonD.kecamatan,\n        kode_kota: jsonD.kode_kota,\n        kode_kecamatan: jsonD.kode_kecamatan,\n        kota: jsonD.kota,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kecamatan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kecamatan ? valuesFormikExist?.kecamatan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kota</Form.Label>\n                        <Form.Control\n                          name='kode_kota'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode_kota ? valuesFormikExist?.kode_kota : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kode_kecamatan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.kode_kecamatan\n                              ? valuesFormikExist?.kode_kecamatan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kota ? valuesFormikExist?.kota : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kecamatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kode_kota?: string\n  kecamatan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode_kota?: string\n  kecamatan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000//master/kecamatan\n\nexport function UpdateKecamatan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KECAMATAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kecamatan: jsonD.kecamatan,\n        kode_kota: jsonD.kode_kota,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kecamatan: '',\n      kode_kota: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kecamatan: valuesFormik?.kecamatan\n          ? valuesFormik.kecamatan\n          : valuesFormikExist?.kecamatan\n          ? valuesFormikExist.kecamatan\n          : '',\n        kode_kota: valuesFormik?.kode_kota\n          ? valuesFormik.kode_kota\n          : valuesFormikExist?.kode_kota\n          ? valuesFormikExist.kode_kota\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${KECAMATAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${KECAMATAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Kecamatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Kecamatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kecamatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kecamatan || valuesFormik?.kecamatan === ''\n                              ? valuesFormik?.kecamatan\n                              : valuesFormikExist?.kecamatan\n                              ? valuesFormikExist?.kecamatan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kota</Form.Label>\n                        <Form.Control\n                          name='kode_kota'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kode_kota || valuesFormik?.kode_kota === ''\n                              ? valuesFormik?.kode_kota\n                              : valuesFormikExist?.kode_kota\n                              ? valuesFormikExist?.kode_kota\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kecamatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kecamatan?: string\n  kode_kota?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\n\nexport function TambahKecamatan() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kecamatan: '',\n      kode_kota: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kecamatan: valuesFormik?.kecamatan ? valuesFormik.kecamatan : '',\n        kode_kota: valuesFormik?.kode_kota ? valuesFormik.kode_kota : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${KECAMATAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${KECAMATAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Kecamatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Kecamatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kecamatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kecamatan}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kota</Form.Label>\n                        <Form.Control\n                          name='kode kota'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kode_kota}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kecamatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Swal from 'sweetalert2'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\n\nexport function Kelurahan() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Kode Kelurahan',\n      selector: (row: any) => row.kode_kelurahan,\n      sortable: true,\n      sortField: 'kelurahan',\n    },\n    {\n      name: 'Kelurahan',\n      selector: (row: any) => row.kelurahan,\n      sortable: true,\n      sortField: 'kelurahan',\n    },\n    {\n      name: 'Kode Kecamatan',\n      selector: (row: any) => row.kode_kecamatan,\n      sortable: true,\n      sortField: 'Kode kecamatan',\n    },\n    {\n      name: 'Kecamatan',\n      selector: (row: any) => row.kecamatan,\n      sortable: true,\n      sortField: 'kecamatan',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kelurahan/LihatKelurahan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kelurahan/Updatekelurahan/' + record.id, {replace: true})\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(KELURAHAN_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek response api:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${KELURAHAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Kecamatan\n          </label>\n          <input type='text' className='form-control form-control form-control-solid' name='tags' />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Kelurahan\n          </label>\n          <input type='text' className='form-control form-control form-control-solid' name='tags' />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/Kelurahan/TambahKelurahan'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  kecamatan?: string\n  kode_kelurahan?: string\n  kode_kecamatan?: string\n  kelurahan?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kecamatan?: string\n  kode_kelurahan?: string\n  kode_kecamatan?: string\n  kelurahan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\nexport function LihatKelurahan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KELURAHAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kecamatan: jsonD.kecamatan,\n        kode_kelurahan: jsonD.kode_kelurahan,\n        kode_kecamatan: jsonD.kode_kecamatan,\n        kelurahan: jsonD.kelurahan,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kecamatan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kecamatan ? valuesFormikExist?.kecamatan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kelurahan</Form.Label>\n                        <Form.Control\n                          name='kode_kelurahan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.kode_kelurahan\n                              ? valuesFormikExist?.kode_kelurahan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kode_kecamatan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.kode_kecamatan\n                              ? valuesFormikExist?.kode_kecamatan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kelurahan</Form.Label>\n                        <Form.Control\n                          name='kelurahan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kelurahan ? valuesFormikExist?.kelurahan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kelurahan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kode_kecamatan?: string\n  kelurahan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode_kecamatan?: string\n  kelurahan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000//master/kelurahan\n\nexport function UpdateKelurahan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KELURAHAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kelurahan: jsonD.kelurahan,\n        kode_kecamatan: jsonD.kode_kecamatan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kelurahan: '',\n      kode_kecamatan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kelurahan: valuesFormik?.kelurahan\n          ? valuesFormik.kelurahan\n          : valuesFormikExist?.kelurahan\n          ? valuesFormikExist.kelurahan\n          : '',\n        kode_kecamatan: valuesFormik?.kode_kecamatan\n          ? valuesFormik.kode_kecamatan\n          : valuesFormikExist?.kode_kecamatan\n          ? valuesFormikExist.kode_kecamatan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${KELURAHAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${KELURAHAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/kelurahan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/kelurahan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>kelurahan</Form.Label>\n                        <Form.Control\n                          name='kelurahan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kelurahan || valuesFormik?.kelurahan === ''\n                              ? valuesFormik?.kelurahan\n                              : valuesFormikExist?.kelurahan\n                              ? valuesFormikExist?.kelurahan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kota</Form.Label>\n                        <Form.Control\n                          name='kode_kecamatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kode_kecamatan || valuesFormik?.kode_kecamatan === ''\n                              ? valuesFormik?.kode_kecamatan\n                              : valuesFormikExist?.kode_kecamatan\n                              ? valuesFormikExist?.kode_kecamatan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/kelurahan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kelurahan?: string\n  kode_kecamatan?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\n\nexport function TambahKelurahan() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kelurahan: '',\n      kode_kecamatan: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kelurahan: valuesFormik?.kelurahan ? valuesFormik.kelurahan : '',\n        kode_kecamatan: valuesFormik?.kode_kecamatan ? valuesFormik.kode_kecamatan : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${KELURAHAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${KELURAHAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/kelurahan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/kelurahan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>kelurahan</Form.Label>\n                        <Form.Control\n                          name='kelurahan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kelurahan}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode Kecamatan</Form.Label>\n                        <Form.Control\n                          name='kode_kecamatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kode_kecamatan}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/kelurahan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Swal from 'sweetalert2'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/master/jenis-kegiatan\n\nexport interface FormInput {\n  kota?: string\n  created_by?: number\n}\n\nexport function JenisKegiatan() {\n  const navigate = useNavigate()\n\n  const handleKataClose = () => setShowKata(false)\n  const [showKata, setShowKata] = useState(false)\n  const [qParamFind, setUriFind] = useState({ strparam: '' })\n  const [valFilterJenisKegiatan, setFilterJenisKegiatan] = useState({ val: '' }) //3\n  const handleKataShow = () => setShowKata(true)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [perPage, setPerPage] = useState(10)\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/filter/${qParamFind.strparam}`)\n      setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const handleChangeInputJenisKegiatan = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisKegiatan({ val: event.target.value })\n  }\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterJenisKegiatan.val !== '') {\n      uriParam += `${valFilterJenisKegiatan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {},\n    {\n      name: 'Jenis Kegiatan',\n      selector: (row: any) => row.jenis_kegiatan,\n      sortable: true,\n      sortField: 'jenis_kegiatan',\n      width: '300px',\n    },\n    {},\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisKegiatan/LihatJenisKegiatan/' + record.id, {\n                          replace: true,\n                        })\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisKegiatan/UpdateJenisKegiatan/' + record.id, {\n                          replace: true,\n                        })\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  \n\n  const [temp, setTemp] = useState([])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(JENIS_KEGIATAN_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek response api:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_KEGIATAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Jenis Kegiatan\n          </label>\n          <input type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisKegiatan.val}\n            onChange={handleChangeInputJenisKegiatan} //5\n            placeholder='Jenis Kegiatan' />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/JenisKegiatan/TambahJenisKegiatan'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_kegiatan?: string\n  updated_by?: string\n  kode?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_kegiatan?: string\n  kode?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/jenis_kegiatan\n\nexport function LihatJenisKegiatan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kegiatan: jsonD.jenis_kegiatan,\n        kode: jsonD.kode,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kegiatan</Form.Label>\n                        <Form.Control\n                          name='jenis kegiatan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_kegiatan\n                              ? valuesFormikExist?.jenis_kegiatan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>kode</Form.Label>\n                        <Form.Control\n                          name='kode'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKegiatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kegiatan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  jenis_kegiatan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000//master/jenis-kegiatan\n\nexport function UpdateJenisKegiatan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kegiatan: jsonD.jenis_kegiatan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kegiatan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan\n          ? valuesFormik.jenis_kegiatan\n          : valuesFormikExist?.jenis_kegiatan\n          ? valuesFormikExist.jenis_kegiatan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_KEGIATAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_KEGIATAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKegiatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKegiatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kegiatan</Form.Label>\n                        <Form.Control\n                          name='jenis_kegiatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_kegiatan || valuesFormik?.jenis_kegiatan === ''\n                              ? valuesFormik?.jenis_kegiatan\n                              : valuesFormikExist?.jenis_kegiatan\n                              ? valuesFormikExist?.jenis_kegiatan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKegiatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kegiatan?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/master/jenis_kegiatan\n\nexport function TambahJenisKegiatan() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kegiatan: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan ? valuesFormik.jenis_kegiatan : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_KEGIATAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JENIS_KEGIATAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKegiatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKegiatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kegiatan</Form.Label>\n                        <Form.Control\n                          name='jenis_kegiatan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.jenis_kegiatan}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKegiatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link, useNavigate } from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Swal from 'sweetalert2'\nimport * as Yup from 'yup'\nimport AsyncSelect from 'react-select/async'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000/master/jenis-kejadian\n\nconst validatorForm = Yup.object().shape({\n  jenis_kejadian: Yup.string().required('Wajib diisi'),\n})\n\nexport function JenisKejadian() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n  const [qParamFind, setUriFind] = useState({ strparam: '' })\n  const [perPage, setPerPage] = useState(10)\n  const [valFilterJenisKejadian, setFilterJenisKejadian] = useState({ val: '' })\n  \n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterJenisKejadian.val !== '') {\n      uriParam += `${valFilterJenisKejadian.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleChangeInputJenisKejadian = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisKejadian({ val: event.target.value })\n  } \n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/filter/${qParamFind.strparam}`)\n      setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n  var num=1;\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n      wrap: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{row.jenis_kejadian !== 'Jumlah Keseluruhan' ? num++ : ''}</div>\n      },\n    },\n    {},\n    {\n      name: 'Jenis Kejadian',\n      selector: (row: any) => row.jenis_kejadian,\n      sortable: true,\n      sortField: 'Jenis Kejadian',\n    },\n    {},\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisKejadian/LihatJenisKejadian/' + record.id, {\n                          replace: true,\n                        })\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisKejadian/UpdateJenisKejadian/' + record.id, {\n                          replace: true,\n                        })\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => konfirDel(record?.id)}>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n \n\n  const [temp, setTemp] = useState([])\n\n  const fetchUsers = async (page: number) => {\n    setLoading(true)\n    const value = await axios.get(JENIS_KEJADIAN_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek response api:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_KEJADIAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Jenis Kejaidan\n          </label>\n          <input type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisKejadian.val}\n            onChange={handleChangeInputJenisKejadian} //5\n            placeholder='JenisKejadian' />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#' onClick={handleFilter}>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/JenisKejadian/TambahJenisKejadian'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable columns={columns} data={temp} pagination />\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_kejadian?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_kejadian?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000/jenis-kejadian\n\nexport function LihatJenisKejadian() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kejadian: jsonD.jenis_kejadian,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='jenis_kejadian'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_kejadian\n                              ? valuesFormikExist?.jenis_kejadian\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKejadian'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kejadian?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_kejadian?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000//master/jenis-kejadian\n\nexport function UpdateJenisKejadian() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kejadian: jsonD.jenis_kejadian,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kejadian: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kejadian: valuesFormik?.jenis_kejadian\n          ? valuesFormik.jenis_kejadian\n          : valuesFormikExist?.jenis_kejadian\n          ? valuesFormikExist.jenis_kejadian\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_KEJADIAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_KEJADIAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKejadian', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKejadian', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='jenis_kejadian'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_kejadian || valuesFormik?.jenis_kejadian === ''\n                              ? valuesFormik?.jenis_kejadian\n                              : valuesFormikExist?.jenis_kejadian\n                              ? valuesFormikExist?.jenis_kejadian\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKejadian'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kejadian?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000/master/jenis-kejadian\n\nexport function TambahJenisKejadian() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kejadian: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kejadian: valuesFormik?.jenis_kejadian ? valuesFormik.jenis_kejadian : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_KEJADIAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JENIS_KEJADIAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKejadian', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKejadian', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='jenis_kejadian'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.jenis_kejadian}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKejadian'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PELANGGARAN_URL = `${API_URL}/master/Jenis-pelanggaran` //http://localhost:3000/Jenis-pelanggaran\nexport function JenisPelanggaran() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Jenis Pelanggaran',\n      selector: (row: any) => row.jenis_pelanggaran,\n      sortable: true,\n      sortField: 'jenis_pelanggaran',\n    },\n    {\n    },\n    {\n      \n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_PELANGGARAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Pelanggaran\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Pelanggaran</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Pelanggaran</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Pelanggaran\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link, useNavigate } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Swal from 'sweetalert2'\nimport { useFormik } from 'formik'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` //http://localhost:3000/jenis-pertolongan\n\nexport interface FormInput {\n  jenis_pertolongan?: string\n  created_by?: number\n}\n\n\nexport function JenisPertolongan() {\n  const navigate = useNavigate()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n  const [show, setShow] = useState(false)\n  const handleKataClose = () => setShowKata(false)\n  const [showKata, setShowKata] = useState(false)\n  const [qParamFind, setUriFind] = useState({ strparam: '' })\n  const [valFilterJenisPertolongan, setFilterJenisPertolongan] = useState({ val: '' }) //3\n  const handleKataShow = () => setShowKata(true)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [perPage, setPerPage] = useState(10);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n \n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/filter/${qParamFind.strparam}`)\n      setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_pertolongan: '',\n      id_modul_permission: 0,\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_pertolongan: valuesFormik?.jenis_pertolongan ? valuesFormik.jenis_pertolongan : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_PERTOLONGAN_URL}/create`, bodyparam)\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisPertolongan', { replace: true })\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Jenis Pertolongan',\n      selector: (row: any) => row.jenis_pertolongan,\n      sortable: true,\n      sortField: 'jenis_pertolongan',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisPertolongan/LihatJenisPertolongan/' + record.id, { replace: true })\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisPertolongan/UpdateJenisPertolongan/' + record.id, { replace: true })\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => konfirDel(record?.id)}>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  \n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_PERTOLONGAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_PERTOLONGAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterJenisPertolongan.val !== '') {\n      uriParam += `${valFilterJenisPertolongan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n  const handleChangeInputJenisPertolongan = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisPertolongan({ val: event.target.value })\n  } //4\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Pertolongan\n            </label>\n            <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisPertolongan.val}\n            onChange={handleChangeInputJenisPertolongan} //5\n            placeholder='JenisPertolongan'\n          />\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#' onClick={handleFilter}> \n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleKataShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={showKata} onHide={handleKataClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah Jenis Pertolongan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={formik.handleSubmit}>\n              <div className='row mt-2'>\n                <div className='col-12 mb-6'>\n                  <div className='form-group'>\n                    <Form.Label>Jenis Pertolongan</Form.Label>\n                    <br />\n                    <Form.Control\n                      name='jenis_pertolongan'\n                      className='form-control form-control-solid'\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_pertolongan}\n                    />\n                  </div>\n                </div>\n              </div>\n              <Modal.Footer>\n              <div className='d-grid gap-2 d-md-flex justify-content-md-left'>\n                <Link to='master/JenisPertolongan' >\n                  <button className='btn btn-secondary' >\n                    <i className='fa fa-close'></i>\n                    Batal\n                  </button>\n                </Link>\n                <button className='btn btn-primary' type='submit'>\n                  <i className='fa-solid fa-paper-plane'></i>\n                  Simpan\n                </button>\n              </div>\n              </Modal.Footer>\n            </form>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_pertolongan?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_pertolongan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` //http://localhost:3000/sarana-prasarana\n\nexport function LihatJenisPertolongan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_pertolongan: jsonD.jenis_pertolongan,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Pertolongan</Form.Label>\n                        <Form.Control\n                          name='jenis_pertolongan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.jenis_pertolongan ? valuesFormikExist?.jenis_pertolongan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPertolongan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_pertolongan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  jenis_pertolongan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` //http://localhost:3000//master/JenisPertolongan\n\nexport function UpdateJenisPertolongan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_pertolongan: jsonD.jenis_pertolongan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_pertolongan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_pertolongan: valuesFormik?.jenis_pertolongan\n          ? valuesFormik.jenis_pertolongan\n          : valuesFormikExist?.jenis_pertolongan\n          ? valuesFormikExist.jenis_pertolongan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_PERTOLONGAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_PERTOLONGAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisPertolongan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisPertolongan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Pertolongan</Form.Label>\n                        <Form.Control\n                          name='jenis_pertolongan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_pertolongan || valuesFormik?.jenis_pertolongan === ''\n                              ? valuesFormik?.jenis_pertolongan\n                              : valuesFormikExist?.jenis_pertolongan\n                              ? valuesFormikExist?.jenis_pertolongan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPertolongan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERDA_PERKADA_URL = `${API_URL}/master/jenis-perda-perkada` //http://localhost:3000/jenis-perda-perkada\n\nexport function JenisPerdaPerkada() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Judul',\n      selector: (row: any) => row.judul,\n      sortable: true,\n      sortField: 'judul',\n    },\n    {\n      name: 'Deskripsi',\n      selector: (row: any) => row.deskripsi,\n      sortable: true,\n      sortField: 'deskripsi',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_PERDA_PERKADA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Judul Perda / Perkada\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Deskripsi\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Perda / Perkada</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Perda / Perkada</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Perda / Perkada\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Swal from 'sweetalert2'\nimport {Link, useNavigate} from 'react-router-dom'\nimport { useFormik } from 'formik'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` //http://localhost:3000/jenis-penindakan\n\nexport interface FormInput {\n  jenis_penindakan?: string\n  created_by?: number\n}\n\nexport function JenisPenindakan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const navigate = useNavigate()\n  const handleKataClose = () => setShowKata(false)\n  const [showKata, setShowKata] = useState(false)\n  const [qParamFind, setUriFind] = useState({ strparam: '' })\n  const [valFilterJenisPenindakan, setFilterJenisPenindakan] = useState({ val: '' }) //3\n  const handleKataShow = () => setShowKata(true)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [perPage, setPerPage] = useState(10);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n      \n    },\n    {\n      name: 'Jenis Penindakan',\n      selector: (row: any) => row.jenis_penindakan,\n      sortable: true,\n      sortField: 'jenis_penindakan',\n    },\n    {\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisPenindakan/LihatJenisPenindakan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisPenindakan/UpdateJenisPenindakan/' + record.id, {replace: true})\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_PENINDAKAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_PENINDAKAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n  \n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterJenisPenindakan.val !== '') {\n      uriParam += `${valFilterJenisPenindakan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n  const handleChangeInputJenisPenindakan = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisPenindakan({ val: event.target.value })\n  }\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/filter/${qParamFind.strparam}`)\n      setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_penindakan: '',\n      id_modul_permission: 0,\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_penindakan: valuesFormik?.jenis_penindakan ? valuesFormik.jenis_penindakan : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_PENINDAKAN_URL}/create`, bodyparam)\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisPenindakan', { replace: true })\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Penindakan\n            </label>\n            <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisPenindakan.val}\n            onChange={handleChangeInputJenisPenindakan} //5\n            placeholder='Jenis Penindakan'\n          />\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#' onClick={handleFilter}> \n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n        <Link to='#' onClick={handleKataShow}>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n     \n      <>\n      <Modal show={showKata} onHide={handleKataClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah jenis penindakan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={formik.handleSubmit}>\n              <div className='row mt-2'>\n                <div className='col-12 mb-6'>\n                  <div className='form-group'>\n                    <Form.Label>jenis penindakan</Form.Label>\n                    <br />\n                    <Form.Control\n                      name='jenis_penindakan'\n                      className='form-control form-control-solid'\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_penindakan}\n                    />\n                  </div>\n                </div>\n              </div>\n              <Modal.Footer>\n              <div className='d-grid gap-2 d-md-flex justify-content-md-left'>\n                <Link to='/apps/detail-hak-akses/DetailHakAkses' >\n                  <button className='btn btn-secondary' >\n                    <i className='fa fa-close'></i>\n                    Batal\n                  </button>\n                </Link>\n                <button className='btn btn-primary' type='submit'>\n                  <i className='fa-solid fa-paper-plane'></i>\n                  Simpan\n                </button>\n              </div>\n              </Modal.Footer>\n            </form>\n          </Modal.Body>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_penindakan?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_penindakan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` //http://localhost:3000/jenis-Penindakan\n\nexport function LihatJenisPenindakan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_penindakan: jsonD.jenis_penindakan,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Penindakan</Form.Label>\n                        <Form.Control\n                          name='jenis_penindakan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_penindakan\n                              ? valuesFormikExist?.jenis_penindakan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Jenispenindakan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_penindakan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_penindakan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` //http://localhost:3000//master/jenis-Penindakan\n\nexport function UpdateJenisPenindakan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_penindakan: jsonD.jenis_penindakan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_penindakan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_penindakan: valuesFormik?.jenis_penindakan\n          ? valuesFormik.jenis_penindakan\n          : valuesFormikExist?.jenis_penindakan\n          ? valuesFormikExist.jenis_penindakan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_PENINDAKAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_PENINDAKAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisPenindakan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisPenindakan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Penindakan</Form.Label>\n                        <Form.Control\n                          name='jenis_penindakan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_penindakan || valuesFormik?.jenis_penindakan === ''\n                              ? valuesFormik?.jenis_penindakan\n                              : valuesFormikExist?.jenis_penindakan\n                              ? valuesFormikExist?.jenis_penindakan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPenindakan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Swal from 'sweetalert2'\nimport { useFormik } from 'formik'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/jenis-korban-jiwa\n\nexport interface FormInput {\n  jenis_korban_jiwa?: string\n  created_by?: number\n}\n\nexport function KorbanJiwa() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n  const handleKataClose = () => setShowKata(false)\n  const [showKata, setShowKata] = useState(false)\n  const [qParamFind, setUriFind] = useState({ strparam: '' })\n  const [valFilterKorbanJiwa, setFilterKorbanJiwa] = useState({ val: '' }) //3\n  const handleKataShow = () => setShowKata(true)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [perPage, setPerPage] = useState(10)\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/filter/${qParamFind.strparam}`)\n      setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n\n  const handleChangeInputKorbanJiwa = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterKorbanJiwa({ val: event.target.value })\n  } //4\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterKorbanJiwa.val !== '') {\n      uriParam += `${valFilterKorbanJiwa.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n  \n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {},\n    {\n      name: 'Jenis Korban Jiwa',\n      selector: (row: any) => row.jenis_korban_jiwa,\n      sortable: true,\n      sortField: 'jenis_korban_jiwa',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/KorbanJiwa/LihatKorbanJiwa/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/KorbanJiwa/UpdateKorbanJiwa/' + record.id, {\n                          replace: true,\n                        })\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n\n  const [temp, setTemp] = useState([])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(JENIS_KORBAN_JIWA_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek response api:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_KORBAN_JIWA_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Korban Jiwa\n          </label>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterKorbanJiwa.val}\n            onChange={handleChangeInputKorbanJiwa} //5\n            placeholder='Korban Jiwa'\n          />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/KorbanJiwa/TambahKorbanJiwa'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_korban_jiwa?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_korban_jiwa?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/master/korban_jiwa\n\nexport function LihatKorbanJiwa() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_korban_jiwa: jsonD.jenis_korban_jiwa,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Korban Jiwa</Form.Label>\n                        <Form.Control\n                          name='korban jiwa'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_korban_jiwa\n                              ? valuesFormikExist?.jenis_korban_jiwa\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KorbanJiwa'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_korban_jiwa?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_korban_jiwa?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000//master/jenis_korban_jiwa\n\nexport function UpdateKorbanJiwa() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_korban_jiwa: jsonD.jenis_korban_jiwa,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_korban_jiwa: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa\n          ? valuesFormik.jenis_korban_jiwa\n          : valuesFormikExist?.jenis_korban_jiwa\n          ? valuesFormikExist.jenis_korban_jiwa\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_KORBAN_JIWA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_KORBAN_JIWA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/KorbanJiwa', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/KorbanJiwa', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Korban Jiwa</Form.Label>\n                        <Form.Control\n                          name='jenis_korban_jiwa'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_korban_jiwa ||\n                            valuesFormik?.jenis_korban_jiwa === ''\n                              ? valuesFormik?.jenis_korban_jiwa\n                              : valuesFormikExist?.jenis_korban_jiwa\n                              ? valuesFormikExist?.jenis_korban_jiwa\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KorbanJiwa'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_korban_jiwa?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/master/jenis-korban-jiwa\n\nexport function TambahKorbanJiwa() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_korban_jiwa: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa ? valuesFormik.jenis_korban_jiwa : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_KORBAN_JIWA_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JENIS_KORBAN_JIWA_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/KorbanJiwa', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/KorbanJiwa', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>jenis Korban Jiwa</Form.Label>\n                        <Form.Control\n                          name='jenis_korban_jiwa'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.jenis_korban_jiwa}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KorbanJiwa'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link, useNavigate } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Swal from 'sweetalert2'\nimport { useFormik } from 'formik'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` //http://localhost:3000/jenis-korban-material\n\nexport interface FormInput {\n  jenis_korban_material?: string\n  created_by?: number\n}\n\nexport function KorbanMaterial() {\n  const navigate = useNavigate()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n  const [show, setShow] = useState(false)\n  const handleKataClose = () => setShowKata(false)\n  const [showKata, setShowKata] = useState(false)\n  const [qParamFind, setUriFind] = useState({ strparam: '' })\n  const [valFilterKorbanMaterial, setFilterKorbanMaterial] = useState({ val: '' })\n  const handleKataShow = () => setShowKata(true)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [inputValTugas, setDataTugas] = useState({ label: '', value: null })\n  const [perPage, setPerPage] = useState(10);\n\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/filter/${qParamFind.strparam}`)\n      setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Jenis Korban Material',\n      selector: (row: any) => row.jenis_korban_material,\n      sortable: true,\n      sortField: 'jenis_korban_material',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/KorbanMaterial/LihatKorbanMaterial/' + record.id, { replace: true })\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/KorbanMaterial/UpdateKorbanMaterial/' + record.id, { replace: true })\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_KORBAN_MATERIAL_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_KORBAN_MATERIAL_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n  const formik = useFormik({\n    initialValues: {\n      jenis_korban_material: '',\n      kategori: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_korban_material: valuesFormik?.jenis_korban_material ? valuesFormik.jenis_korban_material : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_KORBAN_MATERIAL_URL}/create`, bodyparam)\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/KorbanMaterial', { replace: true })\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterKorbanMaterial.val !== '') {\n      uriParam += `${valFilterKorbanMaterial.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n  const handleChangeInputKorbanMaterial = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterKorbanMaterial({ val: event.target.value })\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Korban Material\n            </label>\n            <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterKorbanMaterial.val}\n            onChange={handleChangeInputKorbanMaterial}\n            placeholder='Korban Material'\n          />\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#' onClick={handleFilter}>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n        <Link to='#' onClick={handleKataShow}>\n            <button className='btn btn-primary me-5'>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={showKata} onHide={handleKataClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah Korban Material</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={formik.handleSubmit}>\n              <div className='row mt-2'>\n                <div className='col-12 mb-6'>\n                  <div className='form-group'>\n                    <Form.Label>Korban Material</Form.Label>\n                    <br />\n                    <Form.Control\n                      name='jenis_korban_material'\n                      className='form-control form-control-solid'\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_korban_material}\n                    />\n                  </div>\n                </div>\n              </div>\n              <Modal.Footer>\n                <div className='d-grid gap-2 d-md-flex justify-content-md-left'>\n                  <Link to='master/KorbanMaterial' >\n                    <button className='btn btn-secondary' >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                  </Link>\n                  <button className='btn btn-primary' type='submit'>\n                    <i className='fa-solid fa-paper-plane'></i>\n                    Simpan\n                  </button>\n                </div>\n              </Modal.Footer>\n            </form>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_korban_material?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_korban_material?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` //http://localhost:3000/master/korban_jiwa\n\nexport function LihatKorbanMaterial() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_korban_material: jsonD.jenis_korban_material,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Korban Material</Form.Label>\n                        <Form.Control\n                          name='jenis_korban_material'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_korban_material\n                              ? valuesFormikExist?.jenis_korban_material\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KorbanJiwa'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_korban_material?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_korban_material?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` //http://localhost:3000/master/korban_jiwa\n\nexport function UpdateKorbanMaterial() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_korban_material: jsonD.jenis_korban_material,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_korban_material: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_korban_material: valuesFormik?.jenis_korban_material\n          ? valuesFormik.jenis_korban_material\n          : valuesFormikExist?.jenis_korban_material\n          ? valuesFormikExist.jenis_korban_material\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_KORBAN_MATERIAL_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_KORBAN_MATERIAL_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/KorbanMaterial', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/KorbanMaterial', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Korban Material</Form.Label>\n                        <Form.Control\n                          name='jenis_korban_material'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_korban_material || valuesFormik?.jenis_korban_material === ''\n                              ? valuesFormik?.jenis_korban_material\n                              : valuesFormikExist?.jenis_korban_material\n                              ? valuesFormikExist?.jenis_korban_material\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KorbanMaterial'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link, useNavigate } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Swal from 'sweetalert2'\nimport { useFormik } from 'formik'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` //http://localhost:3000/jenis-korban-material\n\nexport interface FormInput {\n  jenis_bantuan?: string\n  created_by?: number\n}\n\nexport function JenisBantuan() {\n  const navigate = useNavigate()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n  const [show, setShow] = useState(false)\n  const handleKataClose = () => setShowKata(false)\n  const [showKata, setShowKata] = useState(false)\n  const [qParamFind, setUriFind] = useState({ strparam: '' })\n  const [valFilterJenisBantuan, setFilterJenisBantuan] = useState({ val: '' })\n  const handleKataShow = () => setShowKata(true)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [inputValTugas, setDataTugas] = useState({ label: '', value: null })\n  const [perPage, setPerPage] = useState(10);\n\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/filter/${qParamFind.strparam}`)\n      setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Jenis bantuan',\n      selector: (row: any) => row.jenis_bantuan,\n      sortable: true,\n      sortField: 'jenis_bantuan',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisBantuan/LihatJenisBantuan/' + record.id, { replace: true })\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisBantuan/UpdateJenisBantuan/' + record.id, { replace: true })\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_BANTUAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_BANTUAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n  const formik = useFormik({\n    initialValues: {\n      jenis_bantuan: '',\n      kategori: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_bantuan: valuesFormik?.jenis_bantuan ? valuesFormik.jenis_bantuan : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_BANTUAN_URL}/create`, bodyparam)\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisBantuan', { replace: true })\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterJenisBantuan.val !== '') {\n      uriParam += `${valFilterJenisBantuan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n  const handleChangeInputJenisBantuan = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisBantuan({ val: event.target.value })\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis bantuan\n            </label>\n            <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisBantuan.val}\n            onChange={handleChangeInputJenisBantuan}\n            placeholder='Jenis bantuan'\n          />\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#' onClick={handleFilter}>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n        <Link to='#' onClick={handleKataShow}>\n            <button className='btn btn-primary me-5'>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={showKata} onHide={handleKataClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah Jenis bantuan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={formik.handleSubmit}>\n              <div className='row mt-2'>\n                <div className='col-12 mb-6'>\n                  <div className='form-group'>\n                    <Form.Label>Jenis bantuan</Form.Label>\n                    <br />\n                    <Form.Control\n                      name='jenis_bantuan'\n                      className='form-control form-control-solid'\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_bantuan}\n                    />\n                  </div>\n                </div>\n              </div>\n              <Modal.Footer>\n                <div className='d-grid gap-2 d-md-flex justify-content-md-left'>\n                  <Link to='master/JenisBantuan' >\n                    <button className='btn btn-secondary' >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                  </Link>\n                  <button className='btn btn-primary' type='submit'>\n                    <i className='fa-solid fa-paper-plane'></i>\n                    Simpan\n                  </button>\n                </div>\n              </Modal.Footer>\n            </form>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_bantuan?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_bantuan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` //http://localhost:3000/JenisBantuan\n\nexport function LihatJenisBantuan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_bantuan: jsonD.jenis_bantuan,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Bantuan</Form.Label>\n                        <Form.Control\n                          name='jenis_bantuan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_bantuan\n                              ? valuesFormikExist?.jenis_bantuan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisBantuan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_bantuan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_bantuan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` //http://localhost:3000//master/JenisKekerasan\n\nexport function UpdateJenisBantuan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_bantuan: jsonD.jenis_bantuan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_bantuan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_bantuan: valuesFormik?.jenis_bantuan\n          ? valuesFormik.jenis_bantuan\n          : valuesFormikExist?.jenis_bantuan\n          ? valuesFormikExist.jenis_bantuan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_BANTUAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_BANTUAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisBantuan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisBantuan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Bantuan</Form.Label>\n                        <Form.Control\n                          name='jenis_bantuan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_bantuan || valuesFormik?.jenis_bantuan === ''\n                              ? valuesFormik?.jenis_bantuan\n                              : valuesFormikExist?.jenis_bantuan\n                              ? valuesFormikExist?.jenis_bantuan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisBantuan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function InstansiTerkait() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Instansi Terkait\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Instansi Terkait</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Instansi Terakait</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Instansi Terkait\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link, useNavigate } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Swal from 'sweetalert2'\nimport { useFormik } from 'formik'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` //http://localhost:3000/kondisi-sarana-prasarana\n\nexport interface FormInput {\n  kondisi_sarana_prasarana?: string\n  created_by?: number\n}\n\n\nexport function KondisiSaranaPrasarana() {\n  const navigate = useNavigate()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n  const [show, setShow] = useState(false)\n  const handleKataClose = () => setShowKata(false)\n  const [showKata, setShowKata] = useState(false)\n  const [qParamFind, setUriFind] = useState({ strparam: '' })\n  const [valFilterKondisiSaranaPrasarana, setFilterKondisiSaranaPrasarana] = useState({ val: '' }) //3\n  const handleKataShow = () => setShowKata(true)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [perPage, setPerPage] = useState(10);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n \n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\n      setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const formik = useFormik({\n    initialValues: {\n      kondisi_sarana_prasarana: '',\n      id_modul_permission: 0,\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kondisi_sarana_prasarana: valuesFormik?.kondisi_sarana_prasarana ? valuesFormik.kondisi_sarana_prasarana : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${KONDISI_SARANA_PRASARANA_URL}/create`, bodyparam)\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/KondisiSaranaPrasarana', { replace: true })\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'kondisi SaranaPrasarana',\n      selector: (row: any) => row.kondisi_sarana_prasarana,\n      sortable: true,\n      sortField: 'kondisi_sarana_prasarana',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/KondisiSaranaPrasarana/LihatKondisiSaranaPrasarana/' + record.id, { replace: true })\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/KondisiSaranaPrasarana/UpdateKondisiSaranaPrasarana/' + record.id, { replace: true })\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => konfirDel(record?.id)}>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  \n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(KONDISI_SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${KONDISI_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterKondisiSaranaPrasarana.val !== '') {\n      uriParam += `${valFilterKondisiSaranaPrasarana.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n  const handleChangeInputKondisiSaranaPrasarana = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterKondisiSaranaPrasarana({ val: event.target.value })\n  } //4\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Kondisi Sarana Prasarana\n            </label>\n            <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterKondisiSaranaPrasarana.val}\n            onChange={handleChangeInputKondisiSaranaPrasarana} //5\n            placeholder='KondisiSaranaPrasarana'\n          />\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#' onClick={handleFilter}> \n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleKataShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={showKata} onHide={handleKataClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah Kondisi Sarana Prasarana</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={formik.handleSubmit}>\n              <div className='row mt-2'>\n                <div className='col-12 mb-6'>\n                  <div className='form-group'>\n                    <Form.Label>Kondisi Sarana Prasarana</Form.Label>\n                    <br />\n                    <Form.Control\n                      name='kondisi_sarana_prasarana'\n                      className='form-control form-control-solid'\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.kondisi_sarana_prasarana}\n                    />\n                  </div>\n                </div>\n              </div>\n              <Modal.Footer>\n              <div className='d-grid gap-2 d-md-flex justify-content-md-left'>\n                <Link to='master/KondisiSaranaPrasarana' >\n                  <button className='btn btn-secondary' >\n                    <i className='fa fa-close'></i>\n                    Batal\n                  </button>\n                </Link>\n                <button className='btn btn-primary' type='submit'>\n                  <i className='fa-solid fa-paper-plane'></i>\n                  Simpan\n                </button>\n              </div>\n              </Modal.Footer>\n            </form>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  kondisi_sarana_prasarana?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kondisi_sarana_prasarana?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` //http://localhost:3000/Kondisi-Penindakan\n\nexport function LihatKondisiSaranaPrasarana() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kondisi_sarana_prasarana: jsonD.kondisi_sarana_prasarana,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kondisi Sarana Prasarana</Form.Label>\n                        <Form.Control\n                          name='kondisi_sarana_prasarana'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.kondisi_sarana_prasarana\n                              ? valuesFormikExist?.kondisi_sarana_prasarana\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KondisiSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kondisi_sarana_prasarana?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kondisi_sarana_prasarana?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\n\nexport function UpdateKondisiSaranaPrasarana() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kondisi_sarana_prasarana: jsonD.kondisi_sarana_prasarana,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kondisi_sarana_prasarana: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kondisi_sarana_prasarana: valuesFormik?.kondisi_sarana_prasarana\n          ? valuesFormik.kondisi_sarana_prasarana\n          : valuesFormikExist?.kondisi_sarana_prasarana\n          ? valuesFormikExist.kondisi_sarana_prasarana\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${KONDISI_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${KONDISI_SARANA_PRASARANA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/KondisiSaranaPrasarana', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/KondisiSaranaPrasarana', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kondisi Sarana Prasarana</Form.Label>\n                        <Form.Control\n                          name='kondisi_sarana_prasarana'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kondisi_sarana_prasarana || valuesFormik?.kondisi_sarana_prasarana === ''\n                              ? valuesFormik?.kondisi_sarana_prasarana\n                              : valuesFormikExist?.kondisi_sarana_prasarana\n                              ? valuesFormikExist?.kondisi_sarana_prasarana\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/KondisiSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link, useNavigate } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Swal from 'sweetalert2'\nimport { useFormik } from 'formik'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` //http://localhost:3000/jenis-sarana-prasarana\n\nexport interface FormInput {\n  status_sarana_prasarana?: string\n  created_by?: number\n}\n\n\nexport function StatusSaranaPrasarana() {\n  const navigate = useNavigate()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n  const [show, setShow] = useState(false)\n  const handleKataClose = () => setShowKata(false)\n  const [showKata, setShowKata] = useState(false)\n  const [qParamFind, setUriFind] = useState({ strparam: '' })\n  const [valFilterStatusSaranaPrasarana, setFilterStatusSaranaPrasarana] = useState({ val: '' }) //3\n  const handleKataShow = () => setShowKata(true)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [perPage, setPerPage] = useState(10);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n \n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\n      setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const formik = useFormik({\n    initialValues: {\n      status_sarana_prasarana: '',\n      id_modul_permission: 0,\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        status_sarana_prasarana: valuesFormik?.status_sarana_prasarana ? valuesFormik.status_sarana_prasarana : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${STATUS_SARANA_PRASARANA_URL}/create`, bodyparam)\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/StatusSaranaPrasarana', { replace: true })\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Status SaranaPrasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/StatusSaranaPrasarana/LihatStatusSaranaPrasarana/' + record.id, { replace: true })\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/StatusSaranaPrasarana/UpdateStatusSaranaPrasarana/' + record.id, { replace: true })\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => konfirDel(record?.id)}>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  \n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(STATUS_SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${STATUS_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterStatusSaranaPrasarana.val !== '') {\n      uriParam += `${valFilterStatusSaranaPrasarana.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n  const handleChangeInputStatusSaranaPrasarana = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterStatusSaranaPrasarana({ val: event.target.value })\n  } //4\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Status Sarana Prasarana\n            </label>\n            <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterStatusSaranaPrasarana.val}\n            onChange={handleChangeInputStatusSaranaPrasarana} //5\n            placeholder='StatusSaranaPrasarana'\n          />\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#' onClick={handleFilter}> \n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleKataShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={showKata} onHide={handleKataClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah Status Sarana Prasarana</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={formik.handleSubmit}>\n              <div className='row mt-2'>\n                <div className='col-12 mb-6'>\n                  <div className='form-group'>\n                    <Form.Label>Status Sarana Prasarana</Form.Label>\n                    <br />\n                    <Form.Control\n                      name='status_sarana_prasarana'\n                      className='form-control form-control-solid'\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.status_sarana_prasarana}\n                    />\n                  </div>\n                </div>\n              </div>\n              <Modal.Footer>\n              <div className='d-grid gap-2 d-md-flex justify-content-md-left'>\n                <Link to='master/StatusSaranaPrasarana' >\n                  <button className='btn btn-secondary' >\n                    <i className='fa fa-close'></i>\n                    Batal\n                  </button>\n                </Link>\n                <button className='btn btn-primary' type='submit'>\n                  <i className='fa-solid fa-paper-plane'></i>\n                  Simpan\n                </button>\n              </div>\n              </Modal.Footer>\n            </form>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  status_sarana_prasarana?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  status_sarana_prasarana?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` //http://localhost:3000/jenis-Penindakan\n\nexport function LihatStatusSaranaPrasarana() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        status_sarana_prasarana: jsonD.status_sarana_prasarana,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Status Sarana Prasarana</Form.Label>\n                        <Form.Control\n                          name='status_sarana_prasarana'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.status_sarana_prasarana\n                              ? valuesFormikExist?.status_sarana_prasarana\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/StatusSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  status_sarana_prasarana?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  status_sarana_prasarana?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\n\nexport function UpdateStatusSaranaPrasarana() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        status_sarana_prasarana: jsonD.status_sarana_prasarana,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      status_sarana_prasarana: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        status_sarana_prasarana: valuesFormik?.status_sarana_prasarana\n          ? valuesFormik.status_sarana_prasarana\n          : valuesFormikExist?.status_sarana_prasarana\n          ? valuesFormikExist.status_sarana_prasarana\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${STATUS_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${STATUS_SARANA_PRASARANA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/StatusSaranaPrasarana', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/StatusSaranaPrasarana', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Status Sarana Prasarana</Form.Label>\n                        <Form.Control\n                          name='status_sarana_prasarana'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.status_sarana_prasarana || valuesFormik?.status_sarana_prasarana === ''\n                              ? valuesFormik?.status_sarana_prasarana\n                              : valuesFormikExist?.status_sarana_prasarana\n                              ? valuesFormikExist?.status_sarana_prasarana\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/StatusSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Swal from 'sweetalert2'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/master/agama\n\nexport interface FormInput {\n  agama?: string\n  created_by?: number\n}\n\nexport function Agama() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n  const handleKataClose = () => setShowKata(false)\n  const [showKata, setShowKata] = useState(false)\n  const [qParamFind, setUriFind] = useState({ strparam: '' })\n  const [valFilterAgama, setFilterAgama] = useState({ val: '' }) //3\n  const handleKataShow = () => setShowKata(true)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [perPage, setPerPage] = useState(10)\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${AGAMA_URL}/filter/${qParamFind.strparam}`)\n      setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n  \n  const handleChangeInputAgama = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterAgama({ val: event.target.value })\n  } //4\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterAgama.val !== '') {\n      uriParam += `${valFilterAgama.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {},\n    {\n      name: 'Agama',\n      selector: (row: any) => row.agama,\n      sortable: true,\n      sortField: 'agama',\n    },\n    {},\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Agama/LihatAgama/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Agama/UpdateAgama/' + record.id, {replace: true})\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => konfirDel(record?.id)}>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n\n\n  const [temp, setTemp] = useState([])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(AGAMA_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek response api:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${AGAMA_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Agama\n          </label>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterAgama.val}\n            onChange={handleChangeInputAgama} //5\n            placeholder='Agama'\n          />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/Agama/TambahAgama'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  agama?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  agama?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/sarana-prasarana\n\nexport function LihatAgama() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${AGAMA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        agama: jsonD.agama,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>agama</Form.Label>\n                        <Form.Control\n                          name='agama'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.agama ? valuesFormikExist?.agama : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Agama'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  agama?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  agama?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000//master/agama\n\nexport function UpdateAgama() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${AGAMA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        agama: jsonD.agama,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      agama: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        agama: valuesFormik?.agama\n          ? valuesFormik.agama\n          : valuesFormikExist?.agama\n          ? valuesFormikExist.agama\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${AGAMA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${AGAMA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Agama', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Agama', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>agama</Form.Label>\n                        <Form.Control\n                          name='agama'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.agama || valuesFormik?.agama === ''\n                              ? valuesFormik?.agama\n                              : valuesFormikExist?.agama\n                              ? valuesFormikExist?.agama\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Agama'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  agama?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/master/agama\n\nexport function TambahAgama() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      agama: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        agama: valuesFormik?.agama ? valuesFormik.agama : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${AGAMA_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${AGAMA_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/agama', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/agama', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>agama</Form.Label>\n                        <Form.Control\n                          name='agama'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.agama}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Agama'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Swal from 'sweetalert2'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\n\nexport interface FormInput {\n  pangkat?: string\n  created_by?: number\n}\n\nexport function Pangkat() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n  const handleKataClose = () => setShowKata(false)\n  const [showKata, setShowKata] = useState(false)\n  const [qParamFind, setUriFind] = useState({ strparam: '' })\n  const [valFilterPangkat, setFilterPangkat] = useState({ val: '' }) //3\n  const handleKataShow = () => setShowKata(true)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterPangkat.val !== '') {\n      uriParam += `${valFilterPangkat.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${PANGKAT_URL}/filter/${qParamFind.strparam}`)\n      setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const handleChangeInputPangkat = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterPangkat({ val: event.target.value })\n  } //4\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {},\n    {\n      name: 'Pangkat',\n      selector: (row: any) => row.pangkat,\n      sortable: true,\n      sortField: 'pangkat',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Pangkat/LihatPangkat/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Pangkat/UpdatePangkat/' + record.id, {replace: true})\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => konfirDel(record.id)} >Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n\n  const [temp, setTemp] = useState([])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(PANGKAT_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek response api:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${PANGKAT_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n  \n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Pangkat\n          </label>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterPangkat.val}\n            onChange={handleChangeInputPangkat} //5\n            placeholder='Pangkat'\n          />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#' onClick={handleFilter}> \n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/Pangkat/TambahPangkat'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  pangkat?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  pangkat?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000//master/pangkat\n\nexport function UpdatePangkat() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${PANGKAT_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        pangkat: jsonD.pangkat,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      pangkat: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        pangkat: valuesFormik?.pangkat\n          ? valuesFormik.pangkat\n          : valuesFormikExist?.pangkat\n          ? valuesFormikExist.pangkat\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${PANGKAT_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${PANGKAT_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/pangkat', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/pangkat', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>pangkat</Form.Label>\n                        <Form.Control\n                          name='pangkat'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.pangkat || valuesFormik?.pangkat === ''\n                              ? valuesFormik?.pangkat\n                              : valuesFormikExist?.pangkat\n                              ? valuesFormikExist?.pangkat\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/pangkat'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  pangkat?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  pangkat?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\n\nexport function LihatPangkat() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${PANGKAT_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        pangkat: jsonD.pangkat,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Pangkat</Form.Label>\n                        <Form.Control\n                          name='pangkat'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.pangkat ? valuesFormikExist?.pangkat : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/pangkat'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  pangkat?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\n\nexport function TambahPangkat() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      pangkat: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        pangkat: valuesFormik?.pangkat ? valuesFormik.pangkat : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${PANGKAT_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${PANGKAT_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/pangkat', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/pangkat', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>pangkat</Form.Label>\n                        <Form.Control\n                          name='pangkat'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.pangkat}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/pangkat'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link, useNavigate } from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Swal from 'sweetalert2'\nimport Form from 'react-bootstrap/Form'\nimport clsx from 'clsx'\nimport AsyncSelect from 'react-select/async'\nimport { useFormik } from 'formik'\n\nexport interface FormInput {\n  nama?: string\n  kategori?: string\n  created_by?: number\n}\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\n//export const name_URL = `${API_URL}/master/tempat-pelaksanaan` //http://localhost:3000/master/kota\nexport const BIDANG_WILAYAH_URL = `${API_URL}/master/bidang-wilayah`\n\nexport function TempatPelaksanaan() {\n  const navigate = useNavigate()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n  const [show, setShow] = useState(false)\n  const handleKataClose = () => setShowKata(false)\n  const [showKata, setShowKata] = useState(false)\n  const [qParamFind, setUriFind] = useState({ strparam: '' })\n  const [valFilterTempatPelaksanaan, setFilterTempatPelaksanaan] = useState({ val: '' })\n  const handleKataShow = () => setShowKata(true)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [inputValTugas, setDataTugas] = useState({ label: '', value: null })\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n  const formik = useFormik({\n    initialValues: {\n      nama: '',\n      kategori: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        nama: valuesFormik?.nama ? valuesFormik.nama : '',\n        kategori: valuesFormik?.kategori ? valuesFormik.kategori : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${BIDANG_WILAYAH_URL}/create`, bodyparam)\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/TempatPelaksanaan', { replace: true })\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${BIDANG_WILAYAH_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n  var num = 1;\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n      wrap: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{row.nama !== 'Jumlah Keseluruhan' ? num++ : ''}</div>\n      },\n    },\n    {\n      name: 'Wilayah/Bidang',\n      selector: (row: any) => row.nama,\n      sortable: true,\n      sortField: 'name',\n      width: '400px',\n      wrap: true,\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n      wrap: true,\n    },\n    {\n      name: 'Kategori',\n      selector: (row: any) => row.kategori,\n      sortable: true,\n      sortField: 'kategori',\n      wrap: true,\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2  mt-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/TempatPelaksanaan/LihatTempatPelaksanaan/' + record.id, { replace: true })\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/TempatPelaksanaan/UpdateTempatPelaksanaan/' + record.id, { replace: true })\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const handleChangeInputTempatPelaksana = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterTempatPelaksanaan({ val: event.target.value })\n  }\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n  \n  const filterTugas = async (inputValue: string) => {\n    const response = await axios.get(`${BIDANG_WILAYAH_URL}/filter/${inputValue}`)\n    const json = await response.data.data\n    return json.map((i: any) => ({ label: i.nama, value: i.id }))\n  }\n  const loadOptionsTugas = (inputValue: string, callback: (options: SelectOption[]) => void) => {\n    setTimeout(async () => {\n      callback(await filterTugas(inputValue))\n    }, 1000)\n  }\n  const handleInputTugas = async (newValue: any) => {\n    setDataTugas((prevstate: any) => ({ ...prevstate, ...newValue }))\n  }\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${BIDANG_WILAYAH_URL}/filter/${qParamFind.strparam}`)\n      setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterTempatPelaksanaan.val !== '') {\n      uriParam += `${valFilterTempatPelaksanaan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(`${BIDANG_WILAYAH_URL}/find`)\n\n    setTemp(value.data.data)\n    console.log('cek kota:', temp)\n\n    return [data, setTemp] as const\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Wilayah/Bidang\n          </label>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterTempatPelaksanaan.val}\n            onChange={handleChangeInputTempatPelaksana}\n            placeholder='TempatPelaksana'\n          />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#' onClick={handleFilter}>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#' onClick={handleKataShow}>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        {/* onSubmit: async (values) => {\n      const bodyparam: FormInput = {}\n      valuesFormik?.kota ? (bodyparam.kota = valuesFormik.kota) : delete bodyparam.kota\n\n      try {\n        const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\n        if (response) {\n          fetchUsers(1)\n          handleClose()\n          setValuesFormik({})\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    }, */}\n      </>\n      <>\n        <Modal show={showKata} onHide={handleKataClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah Wilayah/Bidang</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={formik.handleSubmit}>\n              <div className='row mt-2'>\n                <div className='col-12 mb-6'>\n                  <div className='form-group'>\n                    <Form.Label>Wilayah/Bidang</Form.Label>\n                    <br />\n                    <Form.Control\n                      name='nama'\n                      className='form-control form-control-solid'\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.nama}\n                    />\n                    <Form.Label>Kategori</Form.Label>\n                    <br />\n                    <Form.Control\n                      name='kategori'\n                      className='form-control form-control-solid'\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.kategori}\n                    />\n                  </div>\n                </div>\n              </div>\n              <Modal.Footer>\n                <div className='d-grid gap-2 d-md-flex justify-content-md-left'>\n                  <Link to='/apps/detail-hak-akses/DetailHakAkses' >\n                    <button className='btn btn-secondary' >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                  </Link>\n                  <button className='btn btn-primary' type='submit'>\n                    <i className='fa-solid fa-paper-plane'></i>\n                    Simpan\n                  </button>\n                </div>\n              </Modal.Footer>\n            </form>\n          </Modal.Body>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-30 ms-30 me-1'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  nama?: string\n  kategori?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  nama?: string\n  kategori?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const BIDANG_WILAYAH_URL = `${API_URL}/master/bidang-wilayah` //http://localhost:3000//master/kota\n\nexport function UpdateTempatPelaksanaan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${BIDANG_WILAYAH_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        nama: jsonD.nama,\n        kategori: jsonD.kategori,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      nama: '',\n      kategori: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        nama : valuesFormik?.nama\n          ? valuesFormik.nama\n          : valuesFormikExist?.nama\n          ? valuesFormikExist.nama\n          : '',\n          kategori: valuesFormik?.kategori\n          ? valuesFormik.kategori\n          : valuesFormikExist?.kategori\n          ? valuesFormikExist.kategori\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${BIDANG_WILAYAH_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${BIDANG_WILAYAH_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/TempatPelaksanaan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/TempatPelaksanaan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Bidang Wilayah</Form.Label>\n                        <Form.Control\n                          name='nama'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.nama || valuesFormik?.nama === ''\n                              ? valuesFormik?.nama\n                              : valuesFormikExist?.nama\n                              ? valuesFormikExist?.nama\n                              : ''\n                          }\n                        />\n                        <Form.Label>Kategori</Form.Label>\n                        <Form.Control\n                          name='kategori'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kategori || valuesFormik?.kategori === ''\n                              ? valuesFormik?.kategori\n                              : valuesFormikExist?.kategori\n                              ? valuesFormikExist?.kategori\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/TempatPelaksanaan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  nama?: string\n  kode?: string\n  updated_by?: string\n  kategori?: string\n}\n\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  nama?: string\n  kategori?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const TEMPAT_PELAKSANA_URL = `${API_URL}/master/bidang-wilayah` //http://localhost:3000/sarana-prasarana\n\nexport function LihatTempatPelaksanaan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${TEMPAT_PELAKSANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        nama: jsonD.nama,\n        kode: jsonD.kode,\n        kategori: jsonD.kategori,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Tempat Pelaksana</Form.Label>\n                        <Form.Control\n                          name='nama'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.nama ? valuesFormikExist?.nama : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode</Form.Label>\n                        <Form.Control\n                          name='kode'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kategori</Form.Label>\n                        <Form.Control\n                          name='kategori'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kategori ? valuesFormikExist?.kategori : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/TempatPelaksanaan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Swal from 'sweetalert2'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport { useFormik } from 'formik'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SKPD_URL = `${API_URL}/master/skpd` //http://localhost:3000/master/jenis-kegiatan\n\nexport interface FormInput {\n  skpd?: string\n  created_by?: number\n}\n\nexport function SKPD() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [showKata, setShowKata] = useState(false)\n  const handleKataShow = () => setShowKata(true)\n  const handleKataClose = () => setShowKata(false)\n  const [valFilterSKPD, setFilterSKPD] = useState({ val: '' })\n  const [qParamFind, setUriFind] = useState({ strparam: '' }) \n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [perPage, setPerPage] = useState(10)\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${SKPD_URL}/filter/${qParamFind.strparam}`)\n      setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterSKPD.val !== '') {\n      uriParam += `${valFilterSKPD.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const handleChangeInputSKPD = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterSKPD({ val: event.target.value })\n  }\n  \n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {},\n    {\n      name: 'SKPD',\n      selector: (row: any) => row.skpd,\n      sortable: true,\n      sortField: 'SKPD',\n      width: '300px',\n    },\n    {},\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/SKPD/LihatSKPD/' + record.id, {\n                          replace: true,\n                        })\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/SKPD/UpdateSKPD/' + record.id, {\n                          replace: true,\n                        })\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  \n\n  const [temp, setTemp] = useState([])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(SKPD_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek response api:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      skpd: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        skpd: valuesFormik?.skpd ? valuesFormik.skpd : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${SKPD_URL}/create`, bodyparam)\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/SKPD', { replace: true })\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${SKPD_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            SKPD\n          </label>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterSKPD.val}\n            onChange={handleChangeInputSKPD} //5\n            placeholder='SKPD'\n          />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          {/* 1 */}\n          <Link to='#' onClick={handleFilter}> \n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#' onClick={handleKataShow}>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        {/* onSubmit: async (values) => {\n      const bodyparam: FormInput = {}\n      valuesFormik?.kota ? (bodyparam.kota = valuesFormik.kota) : delete bodyparam.kota\n\n      try {\n        const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\n        if (response) {\n          fetchUsers(1)\n          handleClose()\n          setValuesFormik({})\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    }, */}\n      </>\n      <>\n        <Modal show={showKata} onHide={handleKataClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah SKPD</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={formik.handleSubmit}>\n              <div className='row mt-2'>\n                <div className='col-12 mb-6'>\n                  <div className='form-group'>\n                    <Form.Label>SKPD</Form.Label>\n                    <br />\n                    <Form.Control\n                      name='skpd'\n                      className='form-control form-control-solid'\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.skpd}\n                    />\n                  </div>\n                </div>\n              </div>\n              <Modal.Footer>\n              <div className='d-grid gap-2 d-md-flex justify-content-md-left'>\n                <Link to='/apps/detail-hak-akses/DetailHakAkses' >\n                  <button className='btn btn-secondary' >\n                    <i className='fa fa-close'></i>\n                    Batal\n                  </button>\n                </Link>\n                <button className='btn btn-primary' type='submit'>\n                  <i className='fa-solid fa-paper-plane'></i>\n                  Simpan\n                </button>\n              </div>\n              </Modal.Footer>\n            </form>\n          </Modal.Body>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-30 ms-30 me-1'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  skpd?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  skpd?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SKPD_URL = `${API_URL}/master/skpd` //http://localhost:3000//master/SKPD\n\nexport function UpdateSKPD() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${SKPD_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        skpd: jsonD.skpd,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      skpd: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        skpd: valuesFormik?.skpd\n          ? valuesFormik.skpd\n          : valuesFormikExist?.skpd\n          ? valuesFormikExist.skpd\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${SKPD_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${SKPD_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/SKPD', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/SKPD', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>SKPD</Form.Label>\n                        <Form.Control\n                          name='skpd'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.skpd || valuesFormik?.skpd === ''\n                              ? valuesFormik?.skpd\n                              : valuesFormikExist?.skpd\n                              ? valuesFormikExist?.skpd\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/SKPD'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  skpd?: string\n  kode?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  skpd?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SKPD_URL = `${API_URL}/master/skpd` //http://localhost:3000/sarana-prasarana\n\nexport function LihatSKPD() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${SKPD_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        skpd: jsonD.skpd,\n        kode: jsonD.kode,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>SKPD</Form.Label>\n                        <Form.Control\n                          name='skpd'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.skpd ? valuesFormikExist?.skpd : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode</Form.Label>\n                        <Form.Control\n                          name='kode'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/SKPD'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PENDIDIKAN_URL = `${API_URL}/master/pendidikan` //http://localhost:3000/master/pendidikan\n\nexport function Pendidikan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Pendidikan',\n      selector: (row: any) => row.pendidikan,\n      sortable: true,\n      sortField: 'pendidikan',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n\n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(PENDIDIKAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:', temp);\n\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n\n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :', data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Pendidikan\n          </label>\n          <input\n            type='text' className='form-control form-control form-control-solid' name='tags' />\n        </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah Pendidikan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Form.Group className=\"mb-3 form-control-solid\">\n              <Form.Label>Pendidikan</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Pendidikan\" />\n            </Form.Group>\n\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleClose}>\n              <i className=\"fa-solid fa-paper-plane\"></i>\n              Simpan\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable\n          columns={columns}\n          data={temp}\n          pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link, useNavigate } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Swal from 'sweetalert2'\nimport { useFormik } from 'formik'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` //http://localhost:3000/jenis-sarana-prasarana\n\nexport interface FormInput {\n  jenis_sarana_prasarana?: string\n  created_by?: number\n}\n\n\nexport function JenisSaranaPrasarana() {\n  const navigate = useNavigate()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n  const [show, setShow] = useState(false)\n  const handleKataClose = () => setShowKata(false)\n  const [showKata, setShowKata] = useState(false)\n  const [qParamFind, setUriFind] = useState({ strparam: '' })\n  const [valFilterJenisSaranaPrasarana, setFilterJenisSaranaPrasarana] = useState({ val: '' }) //3\n  const handleKataShow = () => setShowKata(true)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [perPage, setPerPage] = useState(10);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n \n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\n      setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_sarana_prasarana: '',\n      id_modul_permission: 0,\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_sarana_prasarana: valuesFormik?.jenis_sarana_prasarana ? valuesFormik.jenis_sarana_prasarana : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_SARANA_PRASARANA_URL}/create`, bodyparam)\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisSaranaPrasarana', { replace: true })\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Jenis SaranaPrasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisSaranaPrasarana/LihatJenisSaranaPrasarana/' + record.id, { replace: true })\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisSaranaPrasarana/UpdateJenisSaranaPrasarana/' + record.id, { replace: true })\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => konfirDel(record?.id)}>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  \n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterJenisSaranaPrasarana.val !== '') {\n      uriParam += `${valFilterJenisSaranaPrasarana.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n  const handleChangeInputJenisSaranaPrasarana = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisSaranaPrasarana({ val: event.target.value })\n  } //4\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Sarana Prasarana\n            </label>\n            <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisSaranaPrasarana.val}\n            onChange={handleChangeInputJenisSaranaPrasarana} //5\n            placeholder='JenisSaranaPrasarana'\n          />\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#' onClick={handleFilter}> \n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleKataShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={showKata} onHide={handleKataClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah Jenis Sarana Prasarana</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={formik.handleSubmit}>\n              <div className='row mt-2'>\n                <div className='col-12 mb-6'>\n                  <div className='form-group'>\n                    <Form.Label>Jenis Sarana Prasarana</Form.Label>\n                    <br />\n                    <Form.Control\n                      name='jenis_sarana_prasarana'\n                      className='form-control form-control-solid'\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_sarana_prasarana}\n                    />\n                  </div>\n                </div>\n              </div>\n              <Modal.Footer>\n              <div className='d-grid gap-2 d-md-flex justify-content-md-left'>\n                <Link to='master/JenisSaranaPrasarana' >\n                  <button className='btn btn-secondary' >\n                    <i className='fa fa-close'></i>\n                    Batal\n                  </button>\n                </Link>\n                <button className='btn btn-primary' type='submit'>\n                  <i className='fa-solid fa-paper-plane'></i>\n                  Simpan\n                </button>\n              </div>\n              </Modal.Footer>\n            </form>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_sarana_prasarana?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_sarana_prasarana?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\n\nexport function UpdateJenisSaranaPrasarana() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_sarana_prasarana: jsonD.jenis_sarana_prasarana,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_sarana_prasarana: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_sarana_prasarana: valuesFormik?.jenis_sarana_prasarana\n          ? valuesFormik.jenis_sarana_prasarana\n          : valuesFormikExist?.jenis_sarana_prasarana\n          ? valuesFormikExist.jenis_sarana_prasarana\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_SARANA_PRASARANA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisSaranaPrasarana', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisSaranaPrasarana', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Sarana Prasarana</Form.Label>\n                        <Form.Control\n                          name='jenis_sarana_prasarana'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_sarana_prasarana || valuesFormik?.jenis_sarana_prasarana === ''\n                              ? valuesFormik?.jenis_sarana_prasarana\n                              : valuesFormikExist?.jenis_sarana_prasarana\n                              ? valuesFormikExist?.jenis_sarana_prasarana\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_sarana_prasarana?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_sarana_prasarana?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` //http://localhost:3000/jenis-Penindakan\n\nexport function LihatJenisSaranaPrasarana() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_sarana_prasarana: jsonD.jenis_sarana_prasarana,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Sarana Prasarana</Form.Label>\n                        <Form.Control\n                          name='jenis_sarana_prasarana'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_sarana_prasarana\n                              ? valuesFormikExist?.jenis_sarana_prasarana\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisSaranaPrasarana'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const GOLONGAN_URL = `${API_URL}/master/golongan` //http://localhost:3000/sarana-prasarana\n\nexport function Golongan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Golongan',\n      selector: (row: any) => row.golongan,\n      sortable: true,\n      sortField: 'golongan',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get( GOLONGAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Golongan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Golongan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Golongan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Golongan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link, useNavigate } from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Swal from 'sweetalert2'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup'\nimport clsx from 'clsx'\n\nexport interface FormInput {\n  eselon?: string\n  created_by?: number\n}\n\nconst validatorForm = Yup.object().shape({\n  eselon: Yup.string().required('Wajib diisi'),\n})\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const ESELON_URL = `${API_URL}/master/eselon` //http://localhost:3000/master/kota\n\nexport function Eselon() {\n  const navigate = useNavigate()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n  const [show, setShow] = useState(false)\n  const handleKataClose = () => setShowKata(false)\n  const [showKata, setShowKata] = useState(false)\n  const [qParamFind, setUriFind] = useState({ strparam: '' })\n  const [valFilterEselon, setFilterEselon] = useState({ val: '' }) //3\n  const handleKataShow = () => setShowKata(true)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        eselon: valuesFormik?.eselon,\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${ESELON_URL}/create`, bodyparam)\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          // navigate('/master/Kota', { replace: true })\n          fetchUsers(1)\n          setValuesFormik((prevValues: any) => ({\n            ...prevValues,\n            eselon: '',\n          }))\n          handleKataClose()\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${ESELON_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\nvar num =1\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n      wrap: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{row.eselon !== 'Jumlah Keseluruhan' ? num++ : ''}</div>\n      },\n    },\n    {\n      name: 'Eselon',\n      selector: (row: any) => row.eselon,\n      sortable: true,\n      sortField: 'eselon',\n      width: '400px',\n      wrap: true,\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2  mt-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Eselon/LihatEselon/' + record.id, { replace: true })\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Eselon/UpdateEselon/' + record.id, { replace: true })\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const handleChangeInputEselon = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterEselon({ val: event.target.value })\n  } //4\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    console.log(event.target)\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${ESELON_URL}/filter/${qParamFind.strparam}`)\n      setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  //2\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterEselon.val !== '') {\n      uriParam += `${valFilterEselon.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(`${ESELON_URL}/find`)\n\n    setTemp(value.data.data)\n    console.log('cek kota:', temp)\n\n    return [data, setTemp] as const\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Eselon\n          </label>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterEselon.val}\n            onChange={handleChangeInputEselon} //5\n            placeholder='Eselon'\n          />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          {/* 1 */}\n          <Link to='#' onClick={handleFilter}> \n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#' onClick={handleKataShow}>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        {/* onSubmit: async (values) => {\n      const bodyparam: FormInput = {}\n      valuesFormik?.kota ? (bodyparam.kota = valuesFormik.kota) : delete bodyparam.kota\n\n      try {\n        const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\n        if (response) {\n          fetchUsers(1)\n          handleClose()\n          setValuesFormik({})\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    }, */}\n      </>\n      <>\n        <Modal show={showKata} onHide={handleKataClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah Eselon</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={formik.handleSubmit}>\n              <div className='row mt-2'>\n                <div className='col-12 mb-6'>\n                  <div className='form-group'>\n                    <Form.Label>Eselon</Form.Label>\n                    <br />\n                    <Form.Control\n                      name='eselon'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.eselon && formik.errors.eselon,\n                        },\n                        {\n                          'is-valid': formik.touched.eselon && !formik.errors.eselon,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.eselon}\n                    />\n                    {formik.touched.eselon && formik.errors.eselon && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.eselon}</span>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <Modal.Footer>\n              <div className='d-grid gap-2 d-md-flex justify-content-md-left'>\n                <Link to='/apps/detail-hak-akses/DetailHakAkses' >\n                  <button className='btn btn-secondary' >\n                    <i className='fa fa-close'></i>\n                    Batal\n                  </button>\n                </Link>\n                <button className='btn btn-primary' type='submit'>\n                  <i className='fa-solid fa-paper-plane'></i>\n                  Simpan\n                </button>\n              </div>\n              </Modal.Footer>\n            </form>\n          </Modal.Body>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-30 ms-30 me-1'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          // onSort={handleSort}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  eselon?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  eselon?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const ESELON_URL = `${API_URL}/master/eselon` //http://localhost:3000//master/jenis-kejadian\n\nexport function UpdateEselon() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${ESELON_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        eselon: jsonD.eselon,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      eselon: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        eselon: valuesFormik?.eselon\n          ? valuesFormik.eselon\n          : valuesFormikExist?.eselon\n          ? valuesFormikExist.eselon\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${ESELON_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${ESELON_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Eselon', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Eselon', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Eselon</Form.Label>\n                        <Form.Control\n                          name='eselon'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.eselon || valuesFormik?.eselon === ''\n                              ? valuesFormik?.eselon\n                              : valuesFormikExist?.eselon\n                              ? valuesFormikExist?.eselon\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Eselon'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  eselon?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  eselon?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const ESELON_URL = `${API_URL}/master/eselon` //http://localhost:3000/jenis-kejadian\n\nexport function LihatEselon() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${ESELON_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        eselon: jsonD.eselon,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Eselon</Form.Label>\n                        <Form.Control\n                          name='eselon'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.eselon\n                              ? valuesFormikExist?.eselon\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Eselon'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { useFormik, FormikHelpers } from 'formik'\nimport { Link, useNavigate } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport clsx from 'clsx'\nimport Swal from 'sweetalert2'\n\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JABATAN_URL = `${API_URL}/master/jabatan` //http://localhost:3000/sarana-prasarana\nexport interface FormInput {\n  jabatan?: string\n  status?: string\n  created_by?: number\n}\nexport function Jabatan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const navigate = useNavigate()\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n  \n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n      wrap: true,\n    },\n    {\n      name: 'Jabatan',\n      selector: (row: any) => row.jabatan,\n      sortable: true,\n      sortField: 'jabatan',\n    }, {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n      wrap: true,\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/master/LihatJabatan\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JABATAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:', temp);\n\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n\n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :', data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      jabatan: '',\n      status: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jabatan: valuesFormik?.jabatan ? valuesFormik.jabatan : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JABATAN_URL}/create`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JABATAN_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/jabatan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/jabatan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Jabatan\n          </label>\n          <input\n            type='text' className='form-control form-control form-control-solid' name='tags' />\n        </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah Jabatan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Form.Group className=\"mb-3 form-control-solid\">\n              <Form.Label>Jabatan</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Jabatan\" />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3 form-control-solid\">\n            <label className='required fw-semibold fs-6 mb-2'>Status</label>\n              <select\n                data-control='select2'\n                data-placeholder='Status'\n                name='status'\n                className={clsx(\n                  'form-control form-control-solid mb-1',\n                  {\n                    'is-invalid':\n                      formik.touched.status && formik.errors.status,\n                  },\n                  {\n                    'is-valid':\n                      formik.touched.status && !formik.errors.status,\n                  }\n                )}\n                onChange={handleChangeFormik}\n                value={valuesFormik?.status}\n              >\n                <option value=''>Pilih</option>\n                <option value='JFT'>JFT</option>\n                <option value='Non JFT'>Non JFT</option>\n              </select>\n            </Form.Group>\n\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleClose}>\n              <i className=\"fa-solid fa-paper-plane\"></i>\n              Simpan\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable\n          columns={columns}\n          data={temp}\n          pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link, useNavigate } from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Swal from 'sweetalert2'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup'\nimport clsx from 'clsx'\n\nexport interface FormInput {\n  sumber_informasi?: string\n  created_by?: number\n}\n\nconst validatorForm = Yup.object().shape({\n  sumber_informasi: Yup.string().required('Wajib diisi'),\n})\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi` //http://localhost:3000/master/kota\n\nexport function SumberInformasi() {\n  const navigate = useNavigate()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n  const [show, setShow] = useState(false)\n  const handleKataClose = () => setShowKata(false)\n  const [showKata, setShowKata] = useState(false)\n  const [qParamFind, setUriFind] = useState({ strparam: '' })\n  const [valFilterSumberInformasi, setFilterSumberInformasi] = useState({ val: '' }) //3\n  const handleKataShow = () => setShowKata(true)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        sumber_informasi: valuesFormik?.sumber_informasi,\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${SUMBER_INFORMASI_URL}/create`, bodyparam)\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          // navigate('/master/Kota', { replace: true })\n          fetchUsers(1)\n          setValuesFormik((prevValues: any) => ({\n            ...prevValues,\n            sumber_informasi: '',\n          }))\n          handleKataClose()\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${SUMBER_INFORMASI_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\nvar num =1\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n      wrap: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{row.sumber_informasi !== 'Jumlah Keseluruhan' ? num++ : ''}</div>\n      },\n    },\n    {\n      name: 'Sumber Informasi',\n      selector: (row: any) => row.sumber_informasi,\n      sortable: true,\n      sortField: 'sumber_informasi',\n      width: '400px',\n      wrap: true,\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2  mt-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/SumberInformasi/LihatSumberInformasi/' + record.id, { replace: true })\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/SumberInformasi/UpdateSumberInformasi/' + record.id, { replace: true })\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const handleChangeInputSumberInformasi = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterSumberInformasi({ val: event.target.value })\n  } //4\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    console.log(event.target)\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/filter/${qParamFind.strparam}`)\n      setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  //2\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterSumberInformasi.val !== '') {\n      uriParam += `${valFilterSumberInformasi.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(`${SUMBER_INFORMASI_URL}/find`)\n\n    setTemp(value.data.data)\n    console.log('cek kota:', temp)\n\n    return [data, setTemp] as const\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            SumberInformasi\n          </label>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterSumberInformasi.val}\n            onChange={handleChangeInputSumberInformasi} //5\n            placeholder='Sumber Informasi'\n          />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          {/* 1 */}\n          <Link to='#' onClick={handleFilter}> \n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#' onClick={handleKataShow}>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        {/* onSubmit: async (values) => {\n      const bodyparam: FormInput = {}\n      valuesFormik?.kota ? (bodyparam.kota = valuesFormik.kota) : delete bodyparam.kota\n\n      try {\n        const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\n        if (response) {\n          fetchUsers(1)\n          handleClose()\n          setValuesFormik({})\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    }, */}\n      </>\n      <>\n        <Modal show={showKata} onHide={handleKataClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah Sumber Informasi</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={formik.handleSubmit}>\n              <div className='row mt-2'>\n                <div className='col-12 mb-6'>\n                  <div className='form-group'>\n                    <Form.Label>Sumber Informasi</Form.Label>\n                    <br />\n                    <Form.Control\n                      name='sumber_informasi'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.sumber_informasi && formik.errors.sumber_informasi,\n                        },\n                        {\n                          'is-valid': formik.touched.sumber_informasi && !formik.errors.sumber_informasi,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.sumber_informasi}\n                    />\n                    {formik.touched.sumber_informasi && formik.errors.sumber_informasi && (\n                      <div className='fv-plugins-message-container'>\n                        <div className='fv-help-block'>\n                          <span role='alert'>{formik.errors.sumber_informasi}</span>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <Modal.Footer>\n              <div className='d-grid gap-2 d-md-flex justify-content-md-left'>\n                <Link to='/apps/detail-hak-akses/DetailHakAkses' >\n                  <button className='btn btn-secondary' >\n                    <i className='fa fa-close'></i>\n                    Batal\n                  </button>\n                </Link>\n                <button className='btn btn-primary' type='submit'>\n                  <i className='fa-solid fa-paper-plane'></i>\n                  Simpan\n                </button>\n              </div>\n              </Modal.Footer>\n            </form>\n          </Modal.Body>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-30 ms-30 me-1'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          // onSort={handleSort}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  sumber_informasi?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  sumber_informasi?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi` //http://localhost:3000//master/jenis-kejadian\n\nexport function UpdateSumberInformasi() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        sumber_informasi: jsonD.sumber_informasi,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      sumber_informasi: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        sumber_informasi: valuesFormik?.sumber_informasi\n          ? valuesFormik.sumber_informasi\n          : valuesFormikExist?.sumber_informasi\n          ? valuesFormikExist.sumber_informasi\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${SUMBER_INFORMASI_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${SUMBER_INFORMASI_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/SumberInformasi', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/SumberInformasi', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='sumber_informasi'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.sumber_informasi || valuesFormik?.sumber_informasi === ''\n                              ? valuesFormik?.sumber_informasi\n                              : valuesFormikExist?.sumber_informasi\n                              ? valuesFormikExist?.sumber_informasi\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/SumberInformasi'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  sumber_informasi?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  sumber_informasi?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi`//http://localhost:3000/jenis-kejadian\n\nexport function LihatSumberInformasi() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        sumber_informasi: jsonD.sumber_informasi,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='sumber_informasi'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.sumber_informasi\n                              ? valuesFormikExist?.sumber_informasi\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/SumberInformasi'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link, useNavigate } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Swal from 'sweetalert2'\nimport { useFormik } from 'formik'\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` //http://localhost:3000/jenis-korban-material\n\nexport interface FormInput {\n  jenis_kekerasan?: string\n  created_by?: number\n}\n\nexport function JenisKekerasan() {\n  const navigate = useNavigate()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n  const [show, setShow] = useState(false)\n  const handleKataClose = () => setShowKata(false)\n  const [showKata, setShowKata] = useState(false)\n  const [qParamFind, setUriFind] = useState({ strparam: '' })\n  const [valFilterJenisKekerasan, setFilterJenisKekerasan] = useState({ val: '' })\n  const handleKataShow = () => setShowKata(true)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [inputValTugas, setDataTugas] = useState({ label: '', value: null })\n  const [perPage, setPerPage] = useState(10);\n\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/filter/${qParamFind.strparam}`)\n      setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Jenis Kekerasan',\n      selector: (row: any) => row.jenis_kekerasan,\n      sortable: true,\n      sortField: 'jenis_kekerasan',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisKekerasan/LihatJenisKekerasan/' + record.id, { replace: true })\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/JenisKekerasan/UpdateJenisKekerasan/' + record.id, { replace: true })\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_KEKERASAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JENIS_KEKERASAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n  const formik = useFormik({\n    initialValues: {\n      jenis_kekerasan: '',\n      kategori: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kekerasan: valuesFormik?.jenis_kekerasan ? valuesFormik.jenis_kekerasan : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_KEKERASAN_URL}/create`, bodyparam)\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKekerasan', { replace: true })\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterJenisKekerasan.val !== '') {\n      uriParam += `${valFilterJenisKekerasan.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n  const handleChangeInputJenisKekerasan = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisKekerasan({ val: event.target.value })\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Kekerasan\n            </label>\n            <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisKekerasan.val}\n            onChange={handleChangeInputJenisKekerasan}\n            placeholder='Jenis Kekerasan'\n          />\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#' onClick={handleFilter}>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n        <Link to='#' onClick={handleKataShow}>\n            <button className='btn btn-primary me-5'>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={showKata} onHide={handleKataClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah Jenis Kekerasan</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={formik.handleSubmit}>\n              <div className='row mt-2'>\n                <div className='col-12 mb-6'>\n                  <div className='form-group'>\n                    <Form.Label>Jenis Kekerasan</Form.Label>\n                    <br />\n                    <Form.Control\n                      name='jenis_kekerasan'\n                      className='form-control form-control-solid'\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_kekerasan}\n                    />\n                  </div>\n                </div>\n              </div>\n              <Modal.Footer>\n                <div className='d-grid gap-2 d-md-flex justify-content-md-left'>\n                  <Link to='master/JenisKekerasan' >\n                    <button className='btn btn-secondary' >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                  </Link>\n                  <button className='btn btn-primary' type='submit'>\n                    <i className='fa-solid fa-paper-plane'></i>\n                    Simpan\n                  </button>\n                </div>\n              </Modal.Footer>\n            </form>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_kekerasan?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_kekerasan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` //http://localhost:3000//master/JenisKekerasan\n\nexport function UpdateJenisKekerasan() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kekerasan: jsonD.jenis_kekerasan,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_kekerasan: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_kekerasan: valuesFormik?.jenis_kekerasan\n          ? valuesFormik.jenis_kekerasan\n          : valuesFormikExist?.jenis_kekerasan\n          ? valuesFormikExist.jenis_kekerasan\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_KEKERASAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_KEKERASAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisKekerasan', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisKekerasan', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kejadian</Form.Label>\n                        <Form.Control\n                          name='jenis_kekerasan'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_kekerasan || valuesFormik?.jenis_kekerasan === ''\n                              ? valuesFormik?.jenis_kekerasan\n                              : valuesFormikExist?.jenis_kekerasan\n                              ? valuesFormikExist?.jenis_kekerasan\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKekerasan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_kekerasan?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_kekerasan?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` //http://localhost:3000/JenisKekerasan\n\nexport function LihatJenisKekerasan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_kekerasan: jsonD.jenis_kekerasan,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Kekerasan</Form.Label>\n                        <Form.Control\n                          name='jenis_kekerasan'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.jenis_kekerasan\n                              ? valuesFormikExist?.jenis_kekerasan\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisKekerasan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link, useNavigate } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Swal from 'sweetalert2'\nimport { useFormik } from 'formik'\n\nexport interface FormInput {\n  jenis_penertiban?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PENERTIBAN_URL = `${API_URL}/master/jenis-penertiban` //http://localhost:3000/jenis-penertiban\n\nexport function JenisPenertiban() {\n  \n  const navigate = useNavigate()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n  const [show, setShow] = useState(false)\n  const handleKataClose = () => setShowKata(false)\n  const [showKata, setShowKata] = useState(false)\n  const [qParamFind, setUriFind] = useState({ strparam: '' })\n  const [valFilterJenisPenertiban, setFilterJenisPenertiban] = useState({ val: '' }) //3\n  const handleKataShow = () => setShowKata(true)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [perPage, setPerPage] = useState(10);\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${PENERTIBAN_URL}/filter/${qParamFind.strparam}`)\n      setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  //2\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterJenisPenertiban.val !== '') {\n      uriParam += `${valFilterJenisPenertiban.val}`\n    }\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\n  }\n  const handleChangeInputJenisPenertiban = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setFilterJenisPenertiban({ val: event.target.value })\n  } //4\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n  const formik = useFormik({\n    initialValues: {\n      jenis_penertiban: '',\n      id_modul_permission: 0,\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_penertiban: valuesFormik?.jenis_penertiban ? valuesFormik.jenis_penertiban : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${PENERTIBAN_URL}/create`, bodyparam)\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisPenertiban', { replace: true })\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n   \n    {\n      name: 'Jenis Penertiban',\n      selector: (row: any) => row.jenis_penertiban,\n      sortable: true,\n      sortField: 'jenis_penertiban',\n    },\n    {\n      name: 'kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item onClick={() =>\n                        navigate('/master/JenisPenertiban/LihatJenisPenertiban/' + record.id, {\n                          replace: true,\n                        })\n                      }>\n                      \n                        Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() =>\n                        navigate('/master/JenisPenertiban/UpdateJenisPenertiban/' + record.id, {\n                          replace: true,\n                        })\n                      }> \n                        Ubah</Dropdown.Item>\n                    <Dropdown.Item onClick={() => konfirDel(record?.id)}>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  \n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(PENERTIBAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${PENERTIBAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: { value: any; name: any }\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Penertiban\n            </label>\n            <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterJenisPenertiban.val}\n            onChange={handleChangeInputJenisPenertiban} //5\n            placeholder='Jenis Penertiban'\n          />\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n         <Link to='#' onClick={handleFilter}> \n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleKataShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={showKata} onHide={handleKataClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah Jenis Penertiban</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={formik.handleSubmit}>\n              <div className='row mt-2'>\n                <div className='col-12 mb-6'>\n                  <div className='form-group'>\n                    <Form.Label>Jenis Penertiban</Form.Label>\n                    <br />\n                    <Form.Control\n                      name='jenis_penertiban'\n                      className='form-control form-control-solid'\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.jenis_penertiban}\n                    />\n                  </div>\n                </div>\n              </div>\n              <Modal.Footer>\n              <div className='d-grid gap-2 d-md-flex justify-content-md-left'>\n                <Link to='/apps/detail-hak-akses/DetailHakAkses' >\n                  <button className='btn btn-secondary' >\n                    <i className='fa fa-close'></i>\n                    Batal\n                  </button>\n                </Link>\n                <button className='btn btn-primary' type='submit'>\n                  <i className='fa-solid fa-paper-plane'></i>\n                  Simpan\n                </button>\n              </div>\n              </Modal.Footer>\n            </form>\n          </Modal.Body>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  jenis_penertiban?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  jenis_penertiban?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PENERTIBAN_URL = `${API_URL}/master/jenis-penertiban` //http://localhost:3000//master/kota\n\nexport function UpdateJenisPenertiban() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PENERTIBAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_penertiban: jsonD.jenis_penertiban,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_penertiban: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        jenis_penertiban: valuesFormik?.jenis_penertiban\n          ? valuesFormik.jenis_penertiban\n          : valuesFormikExist?.jenis_penertiban\n          ? valuesFormikExist.jenis_penertiban\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_PENERTIBAN_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_PENERTIBAN_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisPenertiban', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisPenertiban', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Penertiban</Form.Label>\n                        <Form.Control\n                          name='jenis_penertiban'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.jenis_penertiban || valuesFormik?.jenis_penertiban === ''\n                              ? valuesFormik?.jenis_penertiban\n                              : valuesFormikExist?.jenis_penertiban\n                              ? valuesFormikExist?.jenis_penertiban\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPenertiban'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_penertiban?: string\n  kode?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  jenis_penertiban?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PENERTIBAN_URL = `${API_URL}/master/jenis-penertiban` //http://localhost:3000/sarana-prasarana\n\nexport function LihatJenisPenertiban() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PENERTIBAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_penertiban: jsonD.jenis_penertiban,\n        kode: jsonD.kode,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Penertiban</Form.Label>\n                        <Form.Control\n                          name='jenis_penertiban'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.jenis_penertiban ? valuesFormikExist?.jenis_penertiban : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode</Form.Label>\n                        <Form.Control\n                          name='kode'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPenertiban'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function JenisPenyelesaian() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Penyelesaian\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Penyelesaian</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Penyelesaian</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Penyelesaian\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React from 'react'\nimport { Navigate, Route, Routes, Outlet } from 'react-router-dom'\nimport { PageLink, PageTitle } from '../../../_metronic/layout/core'\n\nimport { Kota } from './components/Kota'\nimport { LihatKota } from './components/Lihat-master/LihatKota'\nimport { UpdateKota } from './components/Update-master/UpdateKota'\nimport { TambahKota } from './components/Tambah-master/TambahKota'\n\nimport { Kecamatan } from './components/Kecamatan'\nimport { LihatKecamatan } from './components/Lihat-master/LihatKecamatan'\nimport { UpdateKecamatan } from './components/Update-master/UpdateKecamatan'\nimport { TambahKecamatan } from './components/Tambah-master/TambahKecamatan'\n\nimport { Kelurahan } from './components/Kelurahan'\nimport { LihatKelurahan } from './components/Lihat-master/LihatKelurahan'\nimport { UpdateKelurahan } from './components/Update-master/UpdateKelurahan'\nimport { TambahKelurahan } from './components/Tambah-master/TambahKelurahan'\n\nimport { JenisKegiatan } from './components/JenisKegiatan'\nimport { LihatJenisKegiatan } from './components/Lihat-master/LihatJenisKegiatan'\nimport { UpdateJenisKegiatan } from './components/Update-master/UpdateJenisKegiatan'\nimport { TambahJenisKegiatan } from './components/Tambah-master/TambahJenisKegiatan'\n\nimport { JenisKejadian } from './components/JenisKejadian'\nimport { LihatJenisKejadian } from './components/Lihat-master/LihatJenisKejadian'\nimport { UpdateJenisKejadian } from './components/Update-master/UpdateJenisKejadian'\nimport { TambahJenisKejadian } from './components/Tambah-master/TambahJenisKejadian'\n\nimport { JenisPelanggaran } from './components/JenisPelanggaran'\n\nimport { JenisPertolongan } from './components/JenisPertolongan'\nimport { LihatJenisPertolongan } from './components/Lihat-master/LihatJenisPertolongan'\nimport { UpdateJenisPertolongan } from './components/Update-master/UpdateJenisPertolongan'\n\nimport { JenisPerdaPerkada } from './components/JenisPerdaPerkada'\n\nimport { JenisPenindakan } from './components/JenisPenindakan'\nimport { LihatJenisPenindakan } from './components/Lihat-master/LihatJenisPenindakan'\nimport { UpdateJenisPenindakan } from './components/Update-master/UpdateJenisPenindakan'\n\nimport { KorbanJiwa } from './components/KorbanJiwa'\nimport { LihatKorbanJiwa } from './components/Lihat-master/LihatKorbanJiwa'\nimport { UpdateKorbanJiwa } from './components/Update-master/UpdateKorbanJiwa'\nimport { TambahKorbanJiwa } from './components/Tambah-master/TambahKorbanJiwa'\n\nimport { KorbanMaterial } from './components/KorbanMaterial'\nimport { LihatKorbanMaterial } from './components/Lihat-master/LihatKorbanMaterial'\nimport { UpdateKorbanMaterial } from './components/Update-master/UpdateKorbanMaterial'\n\nimport { JenisBantuan } from './components/JenisBantuan'\nimport { LihatJenisBantuan } from './components/Lihat-master/LihatJenisBantuan'\nimport { UpdateJenisBantuan } from './components/Update-master/UpdateJenisBantuan'\n\nimport { InstansiTerkait } from './components/InstansiTerkait'\n\nimport { KondisiSaranaPrasarana } from './components/KondisiSaranaPrasarana'\nimport { LihatKondisiSaranaPrasarana } from './components/Lihat-master/LihatKondisiSaranaPrasarana'\nimport { UpdateKondisiSaranaPrasarana } from './components/Update-master/UpdateKondisiSaranaPrasarana'\n\n\nimport { StatusSaranaPrasarana } from './components/StatusSaranaPrasarana'\nimport { LihatStatusSaranaPrasarana } from './components/Lihat-master/LihatStatusSaranaPrasarana'\nimport { UpdateStatusSaranaPrasarana } from './components/Update-master/UpdateStatusSaranaPrasarana'\n\nimport { Agama } from './components/Agama'\nimport { LihatAgama } from './components/Lihat-master/LihatAgama'\nimport { UpdateAgama } from './components/Update-master/UpdateAgama'\nimport { TambahAgama } from './components/Tambah-master/TambahAgama'\n\nimport { Pangkat } from './components/Pangkat'\nimport { UpdatePangkat } from './components/Update-master/UpdatePangkat'\nimport { LihatPangkat } from './components/Lihat-master/LihatPangkat'\nimport { TambahPangkat } from './components/Tambah-master/TambahPangkat'\n\nimport { TempatPelaksanaan } from './components/TempatPelaksanaan'\nimport { UpdateTempatPelaksanaan } from './components/Update-master/UpdateTempatPelaksanaan'\nimport { LihatTempatPelaksanaan } from './components/Lihat-master/LihatTempatPelaksanaan'\n\nimport { SKPD } from './components/SKPD'\nimport { UpdateSKPD } from './components/Update-master/UpdateSKPD'\nimport { LihatSKPD } from './components/Lihat-master/LihatSKPD'\n\nimport { Pendidikan } from './components/Pendidikan'\n\nimport { JenisSaranaPrasarana } from './components/JenisSaranaPrasarana'\nimport { UpdateJenisSaranaPrasarana } from './components/Update-master/UpdateJenisSaranaPrasarana'\nimport { LihatJenisSaranaPrasarana } from './components/Lihat-master/LihatJenisSaranaPrasarana'\n\nimport { Golongan } from './components/Golongan'\n\nimport { Eselon } from './components/Eselon'\nimport { UpdateEselon } from './components/Update-master/UpdateEselon'\nimport { LihatEselon } from './components/Lihat-master/LihatEselon'\n\nimport { Jabatan } from './components/Jabatan'\n\nimport { SumberInformasi } from './components/SumberInformasi'\nimport { UpdateSumberInformasi } from './components/Update-master/UpdateSumberInformasi'\nimport { LihatSumberInformasi } from './components/Lihat-master/LihatSumberInformasi'\n\nimport { JenisKekerasan } from './components/JenisKekerasan'\nimport { UpdateJenisKekerasan } from './components/Update-master/UpdateJenisKekerasan'\nimport { LihatJenisKekerasan } from './components/Lihat-master/LihatJenisKekerasan'\n\nimport { JenisPenertiban } from './components/JenisPenertiban'\nimport { UpdateJenisPenertiban } from './components/Update-master/UpdateJenisPenertiban'\nimport { LihatJenisPenertiban } from './components/Lihat-master/LihatJenisPenertiban'\n\nimport { JenisPenyelesaian } from './components/JenisPenyelesaian'\n\nconst masterBreadCrumbs: Array<PageLink> = [\n  {\n    title: 'Master',\n    path: '/master/InformasiDataMaster',\n    isSeparator: false,\n    isActive: false,\n  },\n  {\n    title: '',\n    path: '',\n    isSeparator: true,\n    isActive: false,\n  },\n]\n\nconst MasterPage: React.FC = () => {\n  return (\n    <Routes>\n      <Route\n        element={\n          <>\n            <Outlet />\n          </>\n        }\n      >\n        <Route\n          path='Kota'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kota</PageTitle>\n              <Kota />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/UpdateKecamatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kecamatan</PageTitle>\n              <UpdateKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/LihatKecamatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kecamatan</PageTitle>\n              <LihatKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/TambahKecamatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kecamatan</PageTitle>\n              <TambahKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='SKPD'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>SKPD</PageTitle>\n              <SKPD />\n            </>\n          }\n        />\n        <Route\n          path='SKPD/UpdateSKPD/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update SKPD</PageTitle>\n              <UpdateSKPD />\n            </>\n          }\n        />\n        <Route\n          path='SKPD/LihatSKPD/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat SKPD</PageTitle>\n              <LihatSKPD />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Pangkat</PageTitle>\n              <Pangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/UpdatePangkat/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Pangkat</PageTitle>\n              <UpdatePangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/LihatPangkat/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Pangkat</PageTitle>\n              <LihatPangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/TambahPangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Pangkat</PageTitle>\n              <TambahPangkat />\n            </>\n          }\n        />\n\n        <Route\n          path='TempatPelaksanaan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tempat Pelaksanaan</PageTitle>\n              <TempatPelaksanaan />\n            </>\n          }\n        />\n\n<Route\n          path='TempatPelaksanaan/UpdateTempatPelaksanaan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update TempatPelaksanaan</PageTitle>\n              <UpdateTempatPelaksanaan />\n            </>\n          }\n        />\n        <Route\n          path='TempatPelaksanaan/LihatTempatPelaksanaan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat TempatPelaksanaan</PageTitle>\n              <LihatTempatPelaksanaan />\n            </>\n          }\n        />\n\n        <Route\n          path='Golongan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Golongan </PageTitle>\n              <Golongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jenis Sarana Prasarana </PageTitle>\n              <JenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana/UpdateJenisSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Sarana Prasarana</PageTitle>\n              <UpdateJenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana/LihatJenisSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Sarana Prasarana</PageTitle>\n              <LihatJenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='KondisiSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Kondisi Sarana Prasarana </PageTitle>\n              <KondisiSaranaPrasarana />\n            </>\n          }\n        />\n         <Route\n          path='KondisiSaranaPrasarana/UpdateKondisiSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kondisi Sarana Prasarana</PageTitle>\n              <UpdateKondisiSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='KondisiSaranaPrasarana/LihatKondisiSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kondisi Sarana Prasarana</PageTitle>\n              <LihatKondisiSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='StatusSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Status Sarana Prasarana </PageTitle>\n              <StatusSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='StatusSaranaPrasarana/UpdateStatusSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Status Sarana Prasarana</PageTitle>\n              <UpdateStatusSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='StatusSaranaPrasarana/LihatStatusSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Status Sarana Prasarana</PageTitle>\n              <LihatStatusSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kecamatan</PageTitle>\n              <Kecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kota/UpdateKota/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kota</PageTitle>\n              <UpdateKota />\n            </>\n          }\n        />\n        <Route\n          path='Kota/LihatKota/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kota</PageTitle>\n              <LihatKota />\n            </>\n          }\n        />\n        <Route\n          path='Kota/TambahKota'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kota</PageTitle>\n              <TambahKota />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kelurahan</PageTitle>\n              <Kelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/UpdateKelurahan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kelurahan</PageTitle>\n              <UpdateKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/TambahKelurahan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kelurahan</PageTitle>\n              <TambahKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/LihatKelurahan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kelurahan</PageTitle>\n              <LihatKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kegiatan </PageTitle>\n              <JenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/UpdateJenisKegiatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisKegiatan</PageTitle>\n              <UpdateJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/TambahJenisKegiatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Kegiatan</PageTitle>\n              <TambahJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/LihatJenisKegiatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Kegiatan</PageTitle>\n              <LihatJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kejadian </PageTitle>\n              <JenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/UpdateJenisKejadian/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Kejadian</PageTitle>\n              <UpdateJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/LihatJenisKejadian/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Kejadian</PageTitle>\n              <LihatJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/TambahJenisKejadian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Kejadian</PageTitle>\n              <TambahJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='Agama'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Agama</PageTitle>\n              <Agama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/UpdateAgama/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Agama</PageTitle>\n              <UpdateAgama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/LihatAgama/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Agama</PageTitle>\n              <LihatAgama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/TambahAgama'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Agama</PageTitle>\n              <TambahAgama />\n            </>\n          }\n        />\n        <Route\n          path='Jabatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jabatan </PageTitle>\n              <Jabatan />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/tambah-jabatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jabatan </PageTitle>\n              <Jabatan />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/update-jabatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Agama</PageTitle>\n              <UpdateAgama />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/lihat-jabatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Agama</PageTitle>\n              <LihatAgama />\n            </>\n          }\n        />\n        <Route\n          path='Eselon'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Eselon </PageTitle>\n              <Eselon />\n            </>\n          }\n        />\n        <Route\n          path='Eselon/UpdateEselon/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Eselon</PageTitle>\n              <UpdateEselon />\n            </>\n          }\n        />\n        <Route\n          path='Eselon/LihatEselon/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Eselon</PageTitle>\n              <LihatEselon />\n            </>\n          }\n        />\n\n        <Route\n          path='Pendidikan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Pendidikan </PageTitle>\n              <Pendidikan />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Sumber Informasi </PageTitle>\n              <SumberInformasi />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi/UpdateSumberInformasi/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Sumber Informasi</PageTitle>\n              <UpdateSumberInformasi />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi/LihatSumberInformasi/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Sumber Informasi</PageTitle>\n              <LihatSumberInformasi />\n            </>\n          }\n        />\n        {/* <Route\n          path='SumberInformasi/TambahSumberInformasi/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Sumber Informasi</PageTitle>\n              <TambahSumberInformasi />\n            </>\n          }\n        /> */}\n        <Route\n          path='JenisPelanggaran'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pelanggaran</PageTitle>\n              <JenisPelanggaran />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pertolongan</PageTitle>\n              <JenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan/UpdateJenisPertolongan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Pertolongan</PageTitle>\n              <UpdateJenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan/LihatJenisPertolongan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Pertolongan</PageTitle>\n              <LihatJenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penindakan</PageTitle>\n              <JenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan/UpdateJenisPenindakan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Penindakan</PageTitle>\n              <UpdateJenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan/LihatJenisPenindakan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Penindakan</PageTitle>\n              <LihatJenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPerdaPerkada'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Perda / Perkada</PageTitle>\n              <JenisPerdaPerkada />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kekerasan</PageTitle>\n              <JenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan/UpdateJenisKekerasan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisKekerasan</PageTitle>\n              <UpdateJenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan/LihatJenisKekerasan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat JenisKekerasan</PageTitle>\n              <LihatJenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenertiban'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penertiban</PageTitle>\n              <JenisPenertiban />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenertiban/UpdateJenisPenertiban/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Penertiban</PageTitle>\n              <UpdateJenisPenertiban />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenertiban/LihatJenisPenertiban/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Penertiban</PageTitle>\n              <LihatJenisPenertiban />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenyelesaian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penyelesaian</PageTitle>\n              <JenisPenyelesaian />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Jiwa </PageTitle>\n              <KorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/UpdateKorbanJiwa/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update KorbanJiwa</PageTitle>\n              <UpdateKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/LihatKorbanJiwa/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat KorbanJiwa</PageTitle>\n              <LihatKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/TambahKorbanJiwa'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah KorbanJiwa</PageTitle>\n              <TambahKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Material</PageTitle>\n              <KorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial/UpdateKorbanMaterial/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update KorbanMaterial</PageTitle>\n              <UpdateKorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial/LihatKorbanMaterial/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat KorbanMaterial</PageTitle>\n              <LihatKorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Bantuan</PageTitle>\n              <JenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan/UpdateJenisBantuan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisBantuan</PageTitle>\n              <UpdateJenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan/LihatJenisBantuan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat JenisBantuan</PageTitle>\n              <LihatJenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='InstansiTerkait'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Instansi Terkait</PageTitle>\n              <InstansiTerkait />\n            </>\n          }\n        />\n\n        <Route index element={<Navigate to='/master' />} />\n      </Route>\n    </Routes>\n  )\n}\n\nexport default MasterPage\n"],"names":["KOTA_URL","process","Kota","navigate","useNavigate","useState","strparam","qParamFind","setUriFind","val","valFilterKota","setFilterKota","useEffect","fetchUsers","columns","name","selector","row","id","sortable","sortField","wrap","kota","width","kode","text","className","align","cell","record","Fragment","DropdownButton","map","DropdownType","idx","as","ButtonGroup","size","variant","title","Dropdown","href","onClick","replace","Swal","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","axios","showConfirmButton","timer","handleFilter","uriParam","prevState","React","data","setData","setLoading","setTotalRows","perPage","temp","setTemp","page","response","total_data","fetchDT","value","console","log","total","htmlFor","type","onChange","event","target","placeholder","to","pagination","LihatKota","useParams","valuesFormikExist","setValuesFormikExist","fetchData","jsonD","paramValue","updated_by","prevstate","Form","readOnly","UpdateKota","selectedFile","valuesFormik","setValuesFormik","formik","useFormik","initialValues","onSubmit","values","formData","FormData","bodyparam","append","error","handleSubmit","prevValues","TambahKota","created_by","return_id","KECAMATAN_URL","Kecamatan","kode_kecamatan","kecamatan","kode_kota","konfirDel","bodyParam","deleted_by","LihatKecamatan","UpdateKecamatan","handleChangeFormik","TambahKecamatan","KELURAHAN_URL","Kelurahan","kode_kelurahan","kelurahan","LihatKelurahan","UpdateKelurahan","TambahKelurahan","JENIS_KEGIATAN_URL","JenisKegiatan","valFilterJenisKegiatan","setFilterJenisKegiatan","jenis_kegiatan","LihatJenisKegiatan","UpdateJenisKegiatan","TambahJenisKegiatan","JENIS_KEJADIAN_URL","Yup","shape","jenis_kejadian","required","JenisKejadian","valFilterJenisKejadian","setFilterJenisKejadian","num","LihatJenisKejadian","UpdateJenisKejadian","TambahJenisKejadian","JENIS_PELANGGARAN_URL","JenisPelanggaran","show","setShow","handleClose","jenis_pelanggaran","Modal","onHide","closeButton","Button","JENIS_PERTOLONGAN_URL","JenisPertolongan","showKata","setShowKata","valFilterJenisPertolongan","setFilterJenisPertolongan","jenis_pertolongan","id_modul_permission","LihatJenisPertolongan","UpdateJenisPertolongan","JENIS_PERDA_PERKADA_URL","JenisPerdaPerkada","judul","deskripsi","JENIS_PENINDAKAN_URL","JenisPenindakan","valFilterJenisPenindakan","setFilterJenisPenindakan","jenis_penindakan","LihatJenisPenindakan","UpdateJenisPenindakan","JENIS_KORBAN_JIWA_URL","KorbanJiwa","valFilterKorbanJiwa","setFilterKorbanJiwa","jenis_korban_jiwa","LihatKorbanJiwa","UpdateKorbanJiwa","TambahKorbanJiwa","JENIS_KORBAN_MATERIAL_URL","KorbanMaterial","valFilterKorbanMaterial","setFilterKorbanMaterial","label","jenis_korban_material","kategori","LihatKorbanMaterial","UpdateKorbanMaterial","JENIS_BANTUAN_URL","JenisBantuan","valFilterJenisBantuan","setFilterJenisBantuan","jenis_bantuan","LihatJenisBantuan","UpdateJenisBantuan","SARANA_PRASARANA_URL","InstansiTerkait","jenis_sarana_prasarana","status_sarana_prasarana","jumlah","kondisi","keterangan","dokumentasi","KONDISI_SARANA_PRASARANA_URL","KondisiSaranaPrasarana","valFilterKondisiSaranaPrasarana","setFilterKondisiSaranaPrasarana","kondisi_sarana_prasarana","LihatKondisiSaranaPrasarana","UpdateKondisiSaranaPrasarana","STATUS_SARANA_PRASARANA_URL","StatusSaranaPrasarana","valFilterStatusSaranaPrasarana","setFilterStatusSaranaPrasarana","LihatStatusSaranaPrasarana","UpdateStatusSaranaPrasarana","AGAMA_URL","Agama","valFilterAgama","setFilterAgama","agama","LihatAgama","UpdateAgama","TambahAgama","PANGKAT_URL","Pangkat","valFilterPangkat","setFilterPangkat","pangkat","UpdatePangkat","LihatPangkat","TambahPangkat","BIDANG_WILAYAH_URL","TempatPelaksanaan","valFilterTempatPelaksanaan","setFilterTempatPelaksanaan","nama","UpdateTempatPelaksanaan","TEMPAT_PELAKSANA_URL","LihatTempatPelaksanaan","SKPD_URL","SKPD","valFilterSKPD","setFilterSKPD","skpd","UpdateSKPD","LihatSKPD","PENDIDIKAN_URL","Pendidikan","pendidikan","JENIS_SARANA_PRASARANA_URL","JenisSaranaPrasarana","valFilterJenisSaranaPrasarana","setFilterJenisSaranaPrasarana","UpdateJenisSaranaPrasarana","LihatJenisSaranaPrasarana","GOLONGAN_URL","Golongan","golongan","validatorForm","eselon","ESELON_URL","Eselon","handleKataClose","valFilterEselon","setFilterEselon","validationSchema","enableReinitialize","clsx","touched","errors","role","UpdateEselon","LihatEselon","JABATAN_URL","Jabatan","jabatan","status","sumber_informasi","SUMBER_INFORMASI_URL","SumberInformasi","valFilterSumberInformasi","setFilterSumberInformasi","UpdateSumberInformasi","LihatSumberInformasi","JENIS_KEKERASAN_URL","JenisKekerasan","valFilterJenisKekerasan","setFilterJenisKekerasan","jenis_kekerasan","UpdateJenisKekerasan","LihatJenisKekerasan","PENERTIBAN_URL","JenisPenertiban","valFilterJenisPenertiban","setFilterJenisPenertiban","jenis_penertiban","JENIS_PENERTIBAN_URL","UpdateJenisPenertiban","LihatJenisPenertiban","JenisPenyelesaian","masterBreadCrumbs","path","isSeparator","isActive","element","breadcrumbs","index"],"sourceRoot":""}