{"version":3,"file":"static/js/514.824c19da.chunk.js","mappings":"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","sources":["app/modules/master/components/Kecamatan.tsx","app/modules/master/components/Kelurahan.tsx","app/modules/master/components/Kota.tsx"],"sourcesContent":["import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Swal from 'sweetalert2'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL //http://localhost:3000\r\nexport const KECAMATAN_URL = `${API_URL}/kecamatan` //http://localhost:3000/master/kecamatan\r\n\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nexport function Kecamatan() {\r\n  const navigate = useNavigate()\r\n\r\n  const [show, setShow] = useState(false)\r\n  const [valFilterKota, setFilterKota] = useState({val: ''})\r\n  const [valFilterKecamatan, setFilterKecamatan] = useState({val: ''})\r\n  const [data, setData] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n \r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n  const handleFilter = async () => {\r\n    let uriParam = ''\r\n    if (valFilterKota.val !== '') {\r\n      uriParam += `kota=${valFilterKota.val}`\r\n    }\r\n    if (valFilterKecamatan.val !== '') {\r\n      uriParam += `&kecamatan=${valFilterKecamatan.val}`\r\n    }\r\n    \r\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\r\n  }\r\n\r\n  const handleChangeInputKota = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterKota({val: event.target.value})\r\n  }\r\n  const handleChangeInputKecamatan = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterKecamatan({val: event.target.value})\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      sortField: 'no',\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Kode Kecamatan',\r\n      selector: (row: any) => row.kode_kecamatan,\r\n      sortable: true,\r\n      sortField: 'kode_kecamatan',\r\n      width: '200px',\r\n    },\r\n    {\r\n      name: 'Kecamatan',\r\n      selector: (row: any) => row.kecamatan,\r\n      sortable: true,\r\n      sortField: 'kecamatan',\r\n      width: '250px',\r\n    },\r\n    {\r\n      name: 'Kode Kota',\r\n      selector: (row: any) => row.kode_kota,\r\n      sortable: true,\r\n      sortField: 'kode_kota',\r\n      width: '150px',\r\n    },\r\n    {\r\n      name: 'Kota',\r\n      selector: (row: any) => row.kota,\r\n      sortable: true,\r\n      sortField: 'kota',\r\n      width: '300px',\r\n    },\r\n    {},\r\n\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      align: 'left',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kecamatan/LihatKecamatan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kecamatan/UpdateKecamatan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Ubah\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n\r\n\r\n  const [temp, setTemp] = useState([])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      console.log(qParamFind)\r\n      const response = await axios.get(\r\n        `${KECAMATAN_URL}/findone-by-kecamatan?${qParamFind.strparam}`\r\n      )\r\n      console.log(response.data.data)\r\n      // setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n  //}\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true)\r\n    const value = await axios.get(KECAMATAN_URL + '/find')\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n\r\n  const handlePageChange = (page: any) => {\r\n    fetchUsers(page)\r\n  }\r\n\r\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n    setLoading(true)\r\n\r\n    const response = await axios.get(\r\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\r\n    )\r\n\r\n    setData(response.data.data)\r\n    setPerPage(newPerPage)\r\n    setLoading(false)\r\n  }\r\n\r\n  const handleSort = (column: any, sortDirection: any) => {\r\n    // simulate server sort\r\n    console.log(column, sortDirection)\r\n    setLoading(true)\r\n\r\n    // instead of setTimeout this is where you would handle your API call.\r\n    setTimeout(() => {\r\n      setData(orderBy(data, column.sortField, sortDirection))\r\n      setLoading(false)\r\n    }, 100)\r\n  }\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      title: 'Anda yakin?',\r\n      text: 'Ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${KECAMATAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6'>\r\n          <div className='form-group'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Kota\r\n            </label>\r\n            <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='kota'\r\n            value={valFilterKota.val}\r\n            onChange={handleChangeInputKota}\r\n            placeholder='Kota'\r\n          />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6'>\r\n          <div className='form-group'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Kecamatan\r\n            </label>\r\n            <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='kecamatan'\r\n            value={valFilterKecamatan.val}\r\n            onChange={handleChangeInputKecamatan}\r\n            placeholder='Kecamatan'\r\n          />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n          <Link onClick={handleFilter} to='#'>\r\n            <button className='btn btn-primary'>\r\n              <i className='fa-solid fa-search'></i>\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='/master/Kecamatan/TambahKecamatan'>\r\n            <button className='btn btn-primary me-5'>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n        {/* <DataTable columns={columns} data={temp} pagination /> */}\r\n        {/* <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          paginationTotalRows={totalRows}\r\n        /> */}\r\n        {temp?.length > 0 && temp && ( //urutan 4\r\n          <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.')\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.')\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Swal from 'sweetalert2'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {Kecamatan} from './Kecamatan'\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL //http://localhost:3000\r\nexport const KELURAHAN_URL = `${API_URL}/kelurahan` //http://localhost:3000/master/kelurahan\r\n\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nexport function Kelurahan() {\r\n  // STATE SECTION\r\n  const navigate = useNavigate()\r\n  const [valFilterKelurahan, setFilterKelurahan] = useState({val: ''})\r\n  const [valFilterKecamatan, setFilterKecamatan] = useState({val: ''})\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [loading, setLoading] = useState(false)\r\n  const [perPage, setPerPage] = useState(10)\r\n  const [temp, setTemp] = useState([])\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n  // const [data, setData] = useState([])\r\n\r\n  // END STATE SECTION\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const handleFilter = async () => {\r\n    let uriParam = ''\r\n    if (valFilterKecamatan.val !== '') {\r\n      uriParam += `kecamatan=${valFilterKecamatan.val}`\r\n    }\r\n    if (valFilterKelurahan.val !== '') {\r\n      uriParam += `&kelurahan=${valFilterKelurahan.val}`\r\n    }\r\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\r\n  }\r\n\r\n  const handleChangeInputKelurahan = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterKelurahan({val: event.target.value})\r\n  }\r\n  const handleChangeInputKecamatan = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterKecamatan({val: event.target.value})\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      sortField: 'no',\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Kode Kelurahan',\r\n      selector: (row: any) => row.kode_kelurahan,\r\n      sortable: true,\r\n      sortField: 'kelurahan',\r\n    },\r\n    {\r\n      name: 'Kelurahan',\r\n      selector: (row: any) => row.kelurahan,\r\n      sortable: true,\r\n      sortField: 'kelurahan',\r\n    },\r\n    {\r\n      name: 'Kode Kecamatan',\r\n      selector: (row: any) => row.kode_kecamatan,\r\n      sortable: true,\r\n      sortField: 'Kode kecamatan',\r\n    },\r\n    {\r\n      name: 'Kecamatan',\r\n      selector: (row: any) => row.kecamatan,\r\n      sortable: true,\r\n      sortField: 'kecamatan',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      align: 'left',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kelurahan/LihatKelurahan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kelurahan/Updatekelurahan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Ubah\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  //if(valFilterKecamatan.val ? valFilterKecamatan.val : '' || valFilterKelurahan.val ? valFilterKelurahan.val : ''){\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      console.log(qParamFind)\r\n      const response = await axios.get(\r\n        `${KELURAHAN_URL}/findone-by-kelurahan?${qParamFind.strparam}`\r\n      )\r\n      console.log(response.data.data)\r\n      // setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n  //}\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true)\r\n    const value = await axios.get(KELURAHAN_URL + '/find')\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n\r\n  // const handlePageChange = (page: any) => {\r\n  //   fetchUsers(page)\r\n  // }\r\n\r\n  // const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n  //   setLoading(true)\r\n\r\n  //   const response = await axios.get(\r\n  //     `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\r\n  //   )\r\n\r\n  //   setData(response.data.data)\r\n  //   setPerPage(newPerPage)\r\n  //   setLoading(false)\r\n  // }\r\n\r\n  // const handleSort = (column: any, sortDirection: any) => {\r\n  //   // simulate server sort\r\n  //   console.log(column, sortDirection)\r\n  //   setLoading(true)\r\n\r\n  //   // instead of setTimeout this is where you would handle your API call.\r\n  //   setTimeout(() => {\r\n  //     setData(orderBy(data, column.sortField, sortDirection))\r\n  //     setLoading(false)\r\n  //   }, 100)\r\n  // }\r\n\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      title: 'Anda yakin?',\r\n      text: 'Ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${KELURAHAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        {/* {valFilterKecamatan.val === 'PNS' || valFilterKecamatan.val === '' ? ( */}\r\n        <div className='col-xxl-6 col-lg-6 col-md-6 col-sm-12'>\r\n          <label htmlFor='' className='mb-3'>\r\n            Kecamatan\r\n          </label>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='kecamatan'\r\n            value={valFilterKecamatan.val}\r\n            onChange={handleChangeInputKecamatan}\r\n            placeholder='Kecamatan'\r\n          />\r\n        </div>\r\n        {/* ) : null} */}\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        {/* {valFilterKelurahan.val === 'PNS' || valFilterKelurahan.val === '' ? ( */}\r\n        <div className='col-xxl-6 col-lg-6 col-md-6 col-sm-12'>\r\n          <label htmlFor='' className='mb-3'>\r\n            Kelurahan\r\n          </label>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='kelurahan'\r\n            value={valFilterKelurahan.val}\r\n            onChange={handleChangeInputKelurahan}\r\n            placeholder='Kelurahan'\r\n          />\r\n        </div>\r\n        {/* ) : null} */}\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#'>\r\n            <button onClick={handleFilter} className='btn btn-primary'>\r\n              <i className='fa-solid fa-search'></i>\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='/master/Kelurahan/TambahKelurahan'>\r\n            <button className='btn btn-primary me-5'>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n        {/* <DataTable columns={columns} data={temp} pagination /> */}\r\n        {/* <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          paginationTotalRows={totalRows}\r\n        /> */}\r\n        {temp?.length > 0 && temp && ( //urutan 4\r\n          <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.')\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.')\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL\r\nexport const KOTA_URL = `${API_URL}/kota`\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  kota?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  kota: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function Kota() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterKota, setFilterKota] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => {\r\n    //3\r\n    let uriParam = ''\r\n    if (valFilterKota.val !== '') {\r\n      uriParam += `${valFilterKota.val}`\r\n    }\r\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterKota({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputKota = (event: {\r\n    //5\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterKota({val: event.target.value})\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Kota',\r\n      selector: (row: any) => row.kota,\r\n      sortable: true,\r\n      sortField: 'kota',\r\n    },\r\n    {\r\n      name: 'Kode',\r\n      selector: (row: any) => row.kode,\r\n      sortable: true,\r\n      sortField: 'kode',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kota/LihatKota/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${KOTA_URL}/filter-kota/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${KOTA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        kota: valuesFormik?.kota, //? valuesFormik.kota : '',\r\n      }\r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(`${KOTA_URL}/update/${idEditData.id}`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      kota: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n\r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${KOTA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n\r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${KOTA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Kota</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterKota.val} //4\r\n            onChange={handleChangeInputKota}\r\n            placeholder='Kota'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}>\r\n            {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Kota</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Kota</Form.Label>\r\n                  <Form.Control\r\n                    name='kota'\r\n                    className={clsx(\r\n                      'form-control form-control-solid mb-1',\r\n                      {\r\n                        'is-invalid': formik.touched.kota && formik.errors.kota,\r\n                      },\r\n                      {\r\n                        'is-valid': formik.touched.kota && !formik.errors.kota,\r\n                      }\r\n                    )}\r\n                    onChange={handleChangeFormik}\r\n                    value={valuesFormik?.kota}\r\n                  />\r\n                  {formik.touched.kota && formik.errors.kota && (\r\n                    <div className='fv-plugins-message-container'>\r\n                      <div className='fv-help-block'>\r\n                        <span role='alert'>{formik.errors.kota}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n        {temp?.length > 0 && temp && (\r\n          <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n"],"names":["KECAMATAN_URL","process","createTheme","text","primary","secondary","background","default","context","divider","action","button","hover","disabled","customStyles","rows","style","minHeight","headCells","paddingLeft","paddingRight","cells","systemMode","ThemeModeComponent","Kecamatan","navigate","useNavigate","useState","val","valFilterKota","setFilterKota","valFilterKecamatan","setFilterKecamatan","loading","setLoading","totalRows","perPage","strparam","qParamFind","setUriFind","mode","useThemeMode","calculatedMode","useEffect","fetchUsers","LoadingAnimation","props","className","handleFilter","uriParam","prevState","columns","name","selector","row","serial","sortable","sortField","cell","kode_kecamatan","width","kecamatan","kode_kota","kota","align","record","Fragment","DropdownButton","map","DropdownType","idx","as","ButtonGroup","id","size","variant","title","href","onClick","replace","konfirDel","temp","setTemp","page","console","log","axios","response","data","timeout","setTimeout","items","Array","from","forEach","item","index","clearTimeout","fetchDT","value","Swal","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","bodyParam","deleted_by","showConfirmButton","timer","htmlFor","type","onChange","event","target","placeholder","to","length","progressPending","progressComponent","pagination","paginationTotalRows","theme","noDataComponent","KELURAHAN_URL","Kelurahan","valFilterKelurahan","setFilterKelurahan","kode_kelurahan","kelurahan","KOTA_URL","validatorForm","Yup","shape","required","Kota","show","setShow","handleClose","setTotalRows","kode","doEdit","total_data","React","valuesFormik","setValuesFormik","aksi","setAksi","formik","useFormik","initialValues","validationSchema","enableReinitialize","onSubmit","values","setSubmitting","bodyparam","idEditData","error","setIdEditData","getDetail","idparam","parseInt","prevstate","color","path","onHide","backdrop","keyboard","centered","closeButton","handleSubmit","clsx","touched","errors","prevValues","role"],"sourceRoot":""}