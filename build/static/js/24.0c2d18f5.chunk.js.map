{"version":3,"file":"static/js/24.0c2d18f5.chunk.js","mappings":"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","sources":["../node_modules/react-query/es/core/utils.js","../node_modules/react-query/es/core/notifyManager.js","../node_modules/react-query/es/react/reactBatchedUpdates.js","../node_modules/react-query/es/react/setBatchUpdatesFn.js","../node_modules/react-query/es/core/logger.js","../node_modules/react-query/es/react/logger.js","../node_modules/react-query/es/react/setLogger.js","../node_modules/react-query/es/react/QueryClientProvider.js","../node_modules/react-query/es/core/subscribable.js","../node_modules/react-query/es/core/mutationObserver.js","../node_modules/react-query/es/core/mutation.js","../node_modules/react-query/es/react/utils.js","../node_modules/react-query/es/react/useMutation.js","../node_modules/react-query/es/core/focusManager.js","../node_modules/react-query/es/core/retryer.js","../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/react-query/es/react/useQuery.js","../node_modules/react-table/src/publicUtils.js","../node_modules/react-table/src/utils.js","../node_modules/react-table/src/makeDefaultPluginHooks.js","../node_modules/react-table/src/hooks/useColumnVisibility.js","../node_modules/react-table/src/hooks/useTable.js","../node_modules/react-table/src/plugin-hooks/useExpanded.js","../node_modules/react-table/src/filterTypes.js","../node_modules/react-table/src/plugin-hooks/useFilters.js","../node_modules/react-table/src/plugin-hooks/useGlobalFilter.js","../node_modules/react-table/src/aggregations.js","../node_modules/react-table/src/plugin-hooks/useGroupBy.js","../node_modules/react-table/src/sortTypes.js","../node_modules/react-table/src/plugin-hooks/useSortBy.js","../node_modules/react-table/src/plugin-hooks/usePagination.js","../node_modules/react-table/src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../node_modules/react-table/src/plugin-hooks/useRowSelect.js","../node_modules/react-table/src/plugin-hooks/useRowState.js","../node_modules/react-table/src/plugin-hooks/useColumnOrder.js","../node_modules/react-table/src/plugin-hooks/useResizeColumns.js","../node_modules/react-table/src/plugin-hooks/useAbsoluteLayout.js","../node_modules/react-table/src/plugin-hooks/useBlockLayout.js","../node_modules/react-table/src/plugin-hooks/useFlexLayout.js","../node_modules/react-table/src/plugin-hooks/useGridLayout.js","../node_modules/react-table/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n// TYPES\n// UTILS\nexport var isServer = typeof window === 'undefined';\nexport function noop() {\n  return undefined;\n}\nexport function functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nexport function isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nexport function ensureQueryKeyArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nexport function difference(array1, array2) {\n  return array1.filter(function (x) {\n    return array2.indexOf(x) === -1;\n  });\n}\nexport function replaceAt(array, index, value) {\n  var copy = array.slice(0);\n  copy[index] = value;\n  return copy;\n}\nexport function timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nexport function parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return _extends({}, arg3, {\n      queryKey: arg1,\n      queryFn: arg2\n    });\n  }\n\n  return _extends({}, arg2, {\n    queryKey: arg1\n  });\n}\nexport function parseMutationArgs(arg1, arg2, arg3) {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return _extends({}, arg3, {\n        mutationKey: arg1,\n        mutationFn: arg2\n      });\n    }\n\n    return _extends({}, arg2, {\n      mutationKey: arg1\n    });\n  }\n\n  if (typeof arg1 === 'function') {\n    return _extends({}, arg2, {\n      mutationFn: arg1\n    });\n  }\n\n  return _extends({}, arg1);\n}\nexport function parseFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [_extends({}, arg2, {\n    queryKey: arg1\n  }), arg3] : [arg1 || {}, arg2];\n}\nexport function parseMutationFilterArgs(arg1, arg2) {\n  return isQueryKey(arg1) ? _extends({}, arg2, {\n    mutationKey: arg1\n  }) : arg1;\n}\nexport function mapQueryStatusFilter(active, inactive) {\n  if (active === true && inactive === true || active == null && inactive == null) {\n    return 'all';\n  } else if (active === false && inactive === false) {\n    return 'none';\n  } else {\n    // At this point, active|inactive can only be true|false or false|true\n    // so, when only one value is provided, the missing one has to be the negated value\n    var isActive = active != null ? active : !inactive;\n    return isActive ? 'active' : 'inactive';\n  }\n}\nexport function matchQuery(filters, query) {\n  var active = filters.active,\n      exact = filters.exact,\n      fetching = filters.fetching,\n      inactive = filters.inactive,\n      predicate = filters.predicate,\n      queryKey = filters.queryKey,\n      stale = filters.stale;\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n\n  var queryStatusFilter = mapQueryStatusFilter(active, inactive);\n\n  if (queryStatusFilter === 'none') {\n    return false;\n  } else if (queryStatusFilter !== 'all') {\n    var isActive = query.isActive();\n\n    if (queryStatusFilter === 'active' && !isActive) {\n      return false;\n    }\n\n    if (queryStatusFilter === 'inactive' && isActive) {\n      return false;\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false;\n  }\n\n  if (typeof fetching === 'boolean' && query.isFetching() !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n\n  return true;\n}\nexport function matchMutation(filters, mutation) {\n  var exact = filters.exact,\n      fetching = filters.fetching,\n      predicate = filters.predicate,\n      mutationKey = filters.mutationKey;\n\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n\n    if (exact) {\n      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n\n  if (typeof fetching === 'boolean' && mutation.state.status === 'loading' !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n\n  return true;\n}\nexport function hashQueryKeyByOptions(queryKey, options) {\n  var hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;\n  return hashFn(queryKey);\n}\n/**\n * Default query keys hash function.\n */\n\nexport function hashQueryKey(queryKey) {\n  var asArray = ensureQueryKeyArray(queryKey);\n  return stableValueHash(asArray);\n}\n/**\n * Hashes the value into a stable hash.\n */\n\nexport function stableValueHash(value) {\n  return JSON.stringify(value, function (_, val) {\n    return isPlainObject(val) ? Object.keys(val).sort().reduce(function (result, key) {\n      result[key] = val[key];\n      return result;\n    }, {}) : val;\n  });\n}\n/**\n * Checks if key `b` partially matches with key `a`.\n */\n\nexport function partialMatchKey(a, b) {\n  return partialDeepEqual(ensureQueryKeyArray(a), ensureQueryKeyArray(b));\n}\n/**\n * Checks if `b` partially matches with `a`.\n */\n\nexport function partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some(function (key) {\n      return !partialDeepEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nexport function replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  var array = Array.isArray(a) && Array.isArray(b);\n\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    var aSize = array ? a.length : Object.keys(a).length;\n    var bItems = array ? b : Object.keys(b);\n    var bSize = bItems.length;\n    var copy = array ? [] : {};\n    var equalItems = 0;\n\n    for (var i = 0; i < bSize; i++) {\n      var key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n}\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\n\nexport function shallowEqualObjects(a, b) {\n  if (a && !b || b && !a) {\n    return false;\n  }\n\n  for (var key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nexport function isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  var ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  var prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nexport function isQueryKey(value) {\n  return typeof value === 'string' || Array.isArray(value);\n}\nexport function isError(value) {\n  return value instanceof Error;\n}\nexport function sleep(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nexport function scheduleMicrotask(callback) {\n  Promise.resolve().then(callback).catch(function (error) {\n    return setTimeout(function () {\n      throw error;\n    });\n  });\n}\nexport function getAbortController() {\n  if (typeof AbortController === 'function') {\n    return new AbortController();\n  }\n}","import { scheduleMicrotask } from './utils'; // TYPES\n\n// CLASS\nexport var NotifyManager = /*#__PURE__*/function () {\n  function NotifyManager() {\n    this.queue = [];\n    this.transactions = 0;\n\n    this.notifyFn = function (callback) {\n      callback();\n    };\n\n    this.batchNotifyFn = function (callback) {\n      callback();\n    };\n  }\n\n  var _proto = NotifyManager.prototype;\n\n  _proto.batch = function batch(callback) {\n    var result;\n    this.transactions++;\n\n    try {\n      result = callback();\n    } finally {\n      this.transactions--;\n\n      if (!this.transactions) {\n        this.flush();\n      }\n    }\n\n    return result;\n  };\n\n  _proto.schedule = function schedule(callback) {\n    var _this = this;\n\n    if (this.transactions) {\n      this.queue.push(callback);\n    } else {\n      scheduleMicrotask(function () {\n        _this.notifyFn(callback);\n      });\n    }\n  }\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n  ;\n\n  _proto.batchCalls = function batchCalls(callback) {\n    var _this2 = this;\n\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this2.schedule(function () {\n        callback.apply(void 0, args);\n      });\n    };\n  };\n\n  _proto.flush = function flush() {\n    var _this3 = this;\n\n    var queue = this.queue;\n    this.queue = [];\n\n    if (queue.length) {\n      scheduleMicrotask(function () {\n        _this3.batchNotifyFn(function () {\n          queue.forEach(function (callback) {\n            _this3.notifyFn(callback);\n          });\n        });\n      });\n    }\n  }\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n  ;\n\n  _proto.setNotifyFunction = function setNotifyFunction(fn) {\n    this.notifyFn = fn;\n  }\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n  ;\n\n  _proto.setBatchNotifyFunction = function setBatchNotifyFunction(fn) {\n    this.batchNotifyFn = fn;\n  };\n\n  return NotifyManager;\n}(); // SINGLETON\n\nexport var notifyManager = new NotifyManager();","import ReactDOM from 'react-dom';\nexport var unstable_batchedUpdates = ReactDOM.unstable_batchedUpdates;","import { notifyManager } from '../core';\nimport { unstable_batchedUpdates } from './reactBatchedUpdates';\nnotifyManager.setBatchNotifyFunction(unstable_batchedUpdates);","// TYPES\n// FUNCTIONS\nvar logger = console;\nexport function getLogger() {\n  return logger;\n}\nexport function setLogger(newLogger) {\n  logger = newLogger;\n}","export var logger = console;","import { setLogger } from '../core';\nimport { logger } from './logger';\nsetLogger(logger);","import React from 'react';\nvar defaultContext = /*#__PURE__*/React.createContext(undefined);\nvar QueryClientSharingContext = /*#__PURE__*/React.createContext(false); // if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\n\nfunction getQueryClientContext(contextSharing) {\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext;\n    }\n\n    return window.ReactQueryClientContext;\n  }\n\n  return defaultContext;\n}\n\nexport var useQueryClient = function useQueryClient() {\n  var queryClient = React.useContext(getQueryClientContext(React.useContext(QueryClientSharingContext)));\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one');\n  }\n\n  return queryClient;\n};\nexport var QueryClientProvider = function QueryClientProvider(_ref) {\n  var client = _ref.client,\n      _ref$contextSharing = _ref.contextSharing,\n      contextSharing = _ref$contextSharing === void 0 ? false : _ref$contextSharing,\n      children = _ref.children;\n  React.useEffect(function () {\n    client.mount();\n    return function () {\n      client.unmount();\n    };\n  }, [client]);\n  var Context = getQueryClientContext(contextSharing);\n  return /*#__PURE__*/React.createElement(QueryClientSharingContext.Provider, {\n    value: contextSharing\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: client\n  }, children));\n};","export var Subscribable = /*#__PURE__*/function () {\n  function Subscribable() {\n    this.listeners = [];\n  }\n\n  var _proto = Subscribable.prototype;\n\n  _proto.subscribe = function subscribe(listener) {\n    var _this = this;\n\n    var callback = listener || function () {\n      return undefined;\n    };\n\n    this.listeners.push(callback);\n    this.onSubscribe();\n    return function () {\n      _this.listeners = _this.listeners.filter(function (x) {\n        return x !== callback;\n      });\n\n      _this.onUnsubscribe();\n    };\n  };\n\n  _proto.hasListeners = function hasListeners() {\n    return this.listeners.length > 0;\n  };\n\n  _proto.onSubscribe = function onSubscribe() {// Do nothing\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {// Do nothing\n  };\n\n  return Subscribable;\n}();","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { getDefaultState } from './mutation';\nimport { notifyManager } from './notifyManager';\nimport { Subscribable } from './subscribable';\n// CLASS\nexport var MutationObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(MutationObserver, _Subscribable);\n\n  function MutationObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n\n    _this.setOptions(options);\n\n    _this.bindMethods();\n\n    _this.updateResult();\n\n    return _this;\n  }\n\n  var _proto = MutationObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    this.options = this.client.defaultMutationOptions(options);\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      var _this$currentMutation;\n\n      (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.removeObserver(this);\n    }\n  };\n\n  _proto.onMutationUpdate = function onMutationUpdate(action) {\n    this.updateResult(); // Determine which callbacks to trigger\n\n    var notifyOptions = {\n      listeners: true\n    };\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.notify(notifyOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.reset = function reset() {\n    this.currentMutation = undefined;\n    this.updateResult();\n    this.notify({\n      listeners: true\n    });\n  };\n\n  _proto.mutate = function mutate(variables, options) {\n    this.mutateOptions = options;\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this);\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, _extends({}, this.options, {\n      variables: typeof variables !== 'undefined' ? variables : this.options.variables\n    }));\n    this.currentMutation.addObserver(this);\n    return this.currentMutation.execute();\n  };\n\n  _proto.updateResult = function updateResult() {\n    var state = this.currentMutation ? this.currentMutation.state : getDefaultState();\n\n    var result = _extends({}, state, {\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset\n    });\n\n    this.currentResult = result;\n  };\n\n  _proto.notify = function notify(options) {\n    var _this2 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the mutate callbacks\n      if (_this2.mutateOptions) {\n        if (options.onSuccess) {\n          _this2.mutateOptions.onSuccess == null ? void 0 : _this2.mutateOptions.onSuccess(_this2.currentResult.data, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(_this2.currentResult.data, null, _this2.currentResult.variables, _this2.currentResult.context);\n        } else if (options.onError) {\n          _this2.mutateOptions.onError == null ? void 0 : _this2.mutateOptions.onError(_this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(undefined, _this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n        }\n      } // Then trigger the listeners\n\n\n      if (options.listeners) {\n        _this2.listeners.forEach(function (listener) {\n          listener(_this2.currentResult);\n        });\n      }\n    });\n  };\n\n  return MutationObserver;\n}(Subscribable);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getLogger } from './logger';\nimport { notifyManager } from './notifyManager';\nimport { Retryer } from './retryer';\nimport { noop } from './utils'; // TYPES\n\n// CLASS\nexport var Mutation = /*#__PURE__*/function () {\n  function Mutation(config) {\n    this.options = _extends({}, config.defaultOptions, config.options);\n    this.mutationId = config.mutationId;\n    this.mutationCache = config.mutationCache;\n    this.observers = [];\n    this.state = config.state || getDefaultState();\n    this.meta = config.meta;\n  }\n\n  var _proto = Mutation.prototype;\n\n  _proto.setState = function setState(state) {\n    this.dispatch({\n      type: 'setState',\n      state: state\n    });\n  };\n\n  _proto.addObserver = function addObserver(observer) {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer);\n    }\n  };\n\n  _proto.removeObserver = function removeObserver(observer) {\n    this.observers = this.observers.filter(function (x) {\n      return x !== observer;\n    });\n  };\n\n  _proto.cancel = function cancel() {\n    if (this.retryer) {\n      this.retryer.cancel();\n      return this.retryer.promise.then(noop).catch(noop);\n    }\n\n    return Promise.resolve();\n  };\n\n  _proto.continue = function _continue() {\n    if (this.retryer) {\n      this.retryer.continue();\n      return this.retryer.promise;\n    }\n\n    return this.execute();\n  };\n\n  _proto.execute = function execute() {\n    var _this = this;\n\n    var data;\n    var restored = this.state.status === 'loading';\n    var promise = Promise.resolve();\n\n    if (!restored) {\n      this.dispatch({\n        type: 'loading',\n        variables: this.options.variables\n      });\n      promise = promise.then(function () {\n        // Notify cache callback\n        _this.mutationCache.config.onMutate == null ? void 0 : _this.mutationCache.config.onMutate(_this.state.variables, _this);\n      }).then(function () {\n        return _this.options.onMutate == null ? void 0 : _this.options.onMutate(_this.state.variables);\n      }).then(function (context) {\n        if (context !== _this.state.context) {\n          _this.dispatch({\n            type: 'loading',\n            context: context,\n            variables: _this.state.variables\n          });\n        }\n      });\n    }\n\n    return promise.then(function () {\n      return _this.executeMutation();\n    }).then(function (result) {\n      data = result; // Notify cache callback\n\n      _this.mutationCache.config.onSuccess == null ? void 0 : _this.mutationCache.config.onSuccess(data, _this.state.variables, _this.state.context, _this);\n    }).then(function () {\n      return _this.options.onSuccess == null ? void 0 : _this.options.onSuccess(data, _this.state.variables, _this.state.context);\n    }).then(function () {\n      return _this.options.onSettled == null ? void 0 : _this.options.onSettled(data, null, _this.state.variables, _this.state.context);\n    }).then(function () {\n      _this.dispatch({\n        type: 'success',\n        data: data\n      });\n\n      return data;\n    }).catch(function (error) {\n      // Notify cache callback\n      _this.mutationCache.config.onError == null ? void 0 : _this.mutationCache.config.onError(error, _this.state.variables, _this.state.context, _this); // Log error\n\n      getLogger().error(error);\n      return Promise.resolve().then(function () {\n        return _this.options.onError == null ? void 0 : _this.options.onError(error, _this.state.variables, _this.state.context);\n      }).then(function () {\n        return _this.options.onSettled == null ? void 0 : _this.options.onSettled(undefined, error, _this.state.variables, _this.state.context);\n      }).then(function () {\n        _this.dispatch({\n          type: 'error',\n          error: error\n        });\n\n        throw error;\n      });\n    });\n  };\n\n  _proto.executeMutation = function executeMutation() {\n    var _this2 = this,\n        _this$options$retry;\n\n    this.retryer = new Retryer({\n      fn: function fn() {\n        if (!_this2.options.mutationFn) {\n          return Promise.reject('No mutationFn found');\n        }\n\n        return _this2.options.mutationFn(_this2.state.variables);\n      },\n      onFail: function onFail() {\n        _this2.dispatch({\n          type: 'failed'\n        });\n      },\n      onPause: function onPause() {\n        _this2.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: function onContinue() {\n        _this2.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,\n      retryDelay: this.options.retryDelay\n    });\n    return this.retryer.promise;\n  };\n\n  _proto.dispatch = function dispatch(action) {\n    var _this3 = this;\n\n    this.state = reducer(this.state, action);\n    notifyManager.batch(function () {\n      _this3.observers.forEach(function (observer) {\n        observer.onMutationUpdate(action);\n      });\n\n      _this3.mutationCache.notify(_this3);\n    });\n  };\n\n  return Mutation;\n}();\nexport function getDefaultState() {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined\n  };\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'failed':\n      return _extends({}, state, {\n        failureCount: state.failureCount + 1\n      });\n\n    case 'pause':\n      return _extends({}, state, {\n        isPaused: true\n      });\n\n    case 'continue':\n      return _extends({}, state, {\n        isPaused: false\n      });\n\n    case 'loading':\n      return _extends({}, state, {\n        context: action.context,\n        data: undefined,\n        error: null,\n        isPaused: false,\n        status: 'loading',\n        variables: action.variables\n      });\n\n    case 'success':\n      return _extends({}, state, {\n        data: action.data,\n        error: null,\n        status: 'success',\n        isPaused: false\n      });\n\n    case 'error':\n      return _extends({}, state, {\n        data: undefined,\n        error: action.error,\n        failureCount: state.failureCount + 1,\n        isPaused: false,\n        status: 'error'\n      });\n\n    case 'setState':\n      return _extends({}, state, action.state);\n\n    default:\n      return state;\n  }\n}","export function shouldThrowError(suspense, _useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary.apply(void 0, params);\n  } // Allow useErrorBoundary to override suspense's throwing behavior\n\n\n  if (typeof _useErrorBoundary === 'boolean') return _useErrorBoundary; // If suspense is enabled default to throwing errors\n\n  return !!suspense;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { noop, parseMutationArgs } from '../core/utils';\nimport { MutationObserver } from '../core/mutationObserver';\nimport { useQueryClient } from './QueryClientProvider';\nimport { shouldThrowError } from './utils'; // HOOK\n\nexport function useMutation(arg1, arg2, arg3) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var options = parseMutationArgs(arg1, arg2, arg3);\n  var queryClient = useQueryClient();\n  var obsRef = React.useRef();\n\n  if (!obsRef.current) {\n    obsRef.current = new MutationObserver(queryClient, options);\n  } else {\n    obsRef.current.setOptions(options);\n  }\n\n  var currentResult = obsRef.current.getCurrentResult();\n  React.useEffect(function () {\n    mountedRef.current = true;\n    var unsubscribe = obsRef.current.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    }));\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, []);\n  var mutate = React.useCallback(function (variables, mutateOptions) {\n    obsRef.current.mutate(variables, mutateOptions).catch(noop);\n  }, []);\n\n  if (currentResult.error && shouldThrowError(undefined, obsRef.current.options.useErrorBoundary, [currentResult.error])) {\n    throw currentResult.error;\n  }\n\n  return _extends({}, currentResult, {\n    mutate: mutate,\n    mutateAsync: currentResult.mutate\n  });\n}","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { Subscribable } from './subscribable';\nimport { isServer } from './utils';\nexport var FocusManager = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(FocusManager, _Subscribable);\n\n  function FocusManager() {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n\n    _this.setup = function (onFocus) {\n      var _window;\n\n      if (!isServer && ((_window = window) == null ? void 0 : _window.addEventListener)) {\n        var listener = function listener() {\n          return onFocus();\n        }; // Listen to visibillitychange and focus\n\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return function () {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = FocusManager.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  };\n\n  _proto.setEventListener = function setEventListener(setup) {\n    var _this$cleanup2,\n        _this2 = this;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(function (focused) {\n      if (typeof focused === 'boolean') {\n        _this2.setFocused(focused);\n      } else {\n        _this2.onFocus();\n      }\n    });\n  };\n\n  _proto.setFocused = function setFocused(focused) {\n    this.focused = focused;\n\n    if (focused) {\n      this.onFocus();\n    }\n  };\n\n  _proto.onFocus = function onFocus() {\n    this.listeners.forEach(function (listener) {\n      listener();\n    });\n  };\n\n  _proto.isFocused = function isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  };\n\n  return FocusManager;\n}(Subscribable);\nexport var focusManager = new FocusManager();","import { focusManager } from './focusManager';\nimport { onlineManager } from './onlineManager';\nimport { sleep } from './utils';\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1000 * Math.pow(2, failureCount), 30000);\n}\n\nexport function isCancelable(value) {\n  return typeof (value == null ? void 0 : value.cancel) === 'function';\n}\nexport var CancelledError = function CancelledError(options) {\n  this.revert = options == null ? void 0 : options.revert;\n  this.silent = options == null ? void 0 : options.silent;\n};\nexport function isCancelledError(value) {\n  return value instanceof CancelledError;\n} // CLASS\n\nexport var Retryer = function Retryer(config) {\n  var _this = this;\n\n  var cancelRetry = false;\n  var cancelFn;\n  var continueFn;\n  var promiseResolve;\n  var promiseReject;\n  this.abort = config.abort;\n\n  this.cancel = function (cancelOptions) {\n    return cancelFn == null ? void 0 : cancelFn(cancelOptions);\n  };\n\n  this.cancelRetry = function () {\n    cancelRetry = true;\n  };\n\n  this.continueRetry = function () {\n    cancelRetry = false;\n  };\n\n  this.continue = function () {\n    return continueFn == null ? void 0 : continueFn();\n  };\n\n  this.failureCount = 0;\n  this.isPaused = false;\n  this.isResolved = false;\n  this.isTransportCancelable = false;\n  this.promise = new Promise(function (outerResolve, outerReject) {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n\n  var resolve = function resolve(value) {\n    if (!_this.isResolved) {\n      _this.isResolved = true;\n      config.onSuccess == null ? void 0 : config.onSuccess(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseResolve(value);\n    }\n  };\n\n  var reject = function reject(value) {\n    if (!_this.isResolved) {\n      _this.isResolved = true;\n      config.onError == null ? void 0 : config.onError(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseReject(value);\n    }\n  };\n\n  var pause = function pause() {\n    return new Promise(function (continueResolve) {\n      continueFn = continueResolve;\n      _this.isPaused = true;\n      config.onPause == null ? void 0 : config.onPause();\n    }).then(function () {\n      continueFn = undefined;\n      _this.isPaused = false;\n      config.onContinue == null ? void 0 : config.onContinue();\n    });\n  }; // Create loop function\n\n\n  var run = function run() {\n    // Do nothing if already resolved\n    if (_this.isResolved) {\n      return;\n    }\n\n    var promiseOrValue; // Execute query\n\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    } // Create callback to cancel this fetch\n\n\n    cancelFn = function cancelFn(cancelOptions) {\n      if (!_this.isResolved) {\n        reject(new CancelledError(cancelOptions));\n        _this.abort == null ? void 0 : _this.abort(); // Cancel transport if supported\n\n        if (isCancelable(promiseOrValue)) {\n          try {\n            promiseOrValue.cancel();\n          } catch (_unused) {}\n        }\n      }\n    }; // Check if the transport layer support cancellation\n\n\n    _this.isTransportCancelable = isCancelable(promiseOrValue);\n    Promise.resolve(promiseOrValue).then(resolve).catch(function (error) {\n      var _config$retry, _config$retryDelay;\n\n      // Stop if the fetch is already resolved\n      if (_this.isResolved) {\n        return;\n      } // Do we need to retry the request?\n\n\n      var retry = (_config$retry = config.retry) != null ? _config$retry : 3;\n      var retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\n      var delay = typeof retryDelay === 'function' ? retryDelay(_this.failureCount, error) : retryDelay;\n      var shouldRetry = retry === true || typeof retry === 'number' && _this.failureCount < retry || typeof retry === 'function' && retry(_this.failureCount, error);\n\n      if (cancelRetry || !shouldRetry) {\n        // We are done if the query does not need to be retried\n        reject(error);\n        return;\n      }\n\n      _this.failureCount++; // Notify on fail\n\n      config.onFail == null ? void 0 : config.onFail(_this.failureCount, error); // Delay\n\n      sleep(delay) // Pause if the document is not visible or when the device is offline\n      .then(function () {\n        if (!focusManager.isFocused() || !onlineManager.isOnline()) {\n          return pause();\n        }\n      }).then(function () {\n        if (cancelRetry) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  }; // Start loop\n\n\n  run();\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnReconnect);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnWindowFocus);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    }\n\n    var nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {\n      this.updateRefetchInterval(nextRefetchInterval);\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result, defaultedOptions) {\n    var _this2 = this;\n\n    var trackedResult = {};\n\n    var trackProp = function trackProp(key) {\n      if (!_this2.trackedProps.includes(key)) {\n        _this2.trackedProps.push(key);\n      }\n    };\n\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          trackProp(key);\n          return result[key];\n        }\n      });\n    });\n\n    if (defaultedOptions.useErrorBoundary || defaultedOptions.suspense) {\n      trackProp('error');\n    }\n\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(_extends({}, options, {\n      meta: {\n        refetchPage: options == null ? void 0 : options.refetchPage\n      }\n    }));\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.computeRefetchInterval = function computeRefetchInterval() {\n    var _this$options$refetch;\n\n    return typeof this.options.refetchInterval === 'function' ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval(nextInterval) {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n    this.currentRefetchInterval = nextInterval;\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.currentRefetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval(this.computeRefetchInterval());\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        var _this$previousSelect;\n\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === ((_this$previousSelect = this.previousSelect) == null ? void 0 : _this$previousSelect.fn) && !this.previousSelectError) {\n          data = this.previousSelect.result;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelect = {\n              fn: options.select,\n              result: data\n            };\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && (status === 'loading' || status === 'idle')) {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isRefetching: isFetching && status !== 'loading',\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\n\nfunction shouldFetchOn(query, options, field) {\n  if (options.enabled !== false) {\n    var value = typeof field === 'function' ? field(query) : field;\n    return value === 'always' || value !== false && isStale(query, options);\n  }\n\n  return false;\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== 'error') && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nimport { shouldThrowError } from './utils';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    } // Set cache time to 1 if the option has been set to 0\n    // when using suspense to prevent infinite loop of fetches\n\n\n    if (defaultedOptions.cacheTime === 0) {\n      defaultedOptions.cacheTime = 1;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if (result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(defaultedOptions.suspense, defaultedOptions.useErrorBoundary, [result.error, observer.getCurrentQuery()])) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result, defaultedOptions);\n  }\n\n  return result;\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","export function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: `grid`,\n      gridTemplateColumns: instance.state.gridLayout.columnWidths.map(w => w).join(` `),\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky` //enables a scroll wrapper to be placed around the table and have sticky headers\n    },\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === `init`) {\n    return {\n      gridLayout: {\n        columnWidths: instance.columns.map(() => `auto`),\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === `columnStartResizing`) {\n    const { columnId } = action\n    const columnIndex = instance.visibleColumns.findIndex(col => col.id === columnId)\n    const elWidth = getElementWidth(columnId)\n\n    if (elWidth !== undefined) {\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          columnId,\n          columnIndex,\n          startingWidth: elWidth\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === `columnResizing`) {\n    const {\n      columnIndex,\n      startingWidth,\n      columnWidths,\n    } = state.gridLayout\n\n    const change = state.columnResizing.startX - action.clientX\n    const newWidth = startingWidth - change\n    const columnWidthsCopy = [...columnWidths]\n    columnWidthsCopy[columnIndex] = `${newWidth}px`\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: columnWidthsCopy,\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n"],"names":["isServer","window","noop","isValidTimeout","value","Infinity","replaceEqualDeep","a","b","array","Array","isArray","isPlainObject","aSize","length","Object","keys","bItems","bSize","copy","equalItems","i","key","o","hasObjectPrototype","ctor","constructor","prot","prototype","hasOwnProperty","toString","call","isQueryKey","scheduleMicrotask","callback","Promise","resolve","then","catch","error","setTimeout","NotifyManager","this","queue","transactions","notifyFn","batchNotifyFn","_proto","batch","result","flush","schedule","_this","push","batchCalls","_this2","_len","arguments","args","_key","apply","_this3","forEach","setNotifyFunction","fn","setBatchNotifyFunction","notifyManager","unstable_batchedUpdates","ReactDOM","logger","console","getLogger","defaultContext","React","undefined","QueryClientSharingContext","getQueryClientContext","contextSharing","ReactQueryClientContext","useQueryClient","queryClient","Error","Subscribable","listeners","subscribe","listener","onSubscribe","filter","x","onUnsubscribe","hasListeners","MutationObserver","_Subscribable","client","options","setOptions","bindMethods","updateResult","_inheritsLoose","mutate","bind","reset","defaultMutationOptions","_this$currentMutation","currentMutation","removeObserver","onMutationUpdate","action","notifyOptions","type","onSuccess","onError","notify","getCurrentResult","currentResult","variables","mutateOptions","getMutationCache","build","_extends","addObserver","execute","state","context","data","failureCount","isPaused","status","isLoading","isSuccess","isError","isIdle","onSettled","shouldThrowError","suspense","_useErrorBoundary","params","useMutation","arg1","arg2","arg3","mountedRef","forceUpdate","mutationKey","mutationFn","parseMutationArgs","obsRef","current","unsubscribe","useErrorBoundary","mutateAsync","focusManager","FocusManager","setup","onFocus","_window","addEventListener","removeEventListener","cleanup","setEventListener","_this$cleanup","_this$cleanup2","focused","setFocused","isFocused","document","includes","visibilityState","CancelledError","revert","silent","QueryObserver","trackedProps","previousSelectError","remove","refetch","currentQuery","shouldFetchOnMount","executeFetch","updateTimers","destroy","shouldFetchOnReconnect","shouldFetchOn","refetchOnReconnect","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","prevOptions","prevQuery","defaultQueryObserverOptions","enabled","queryKey","updateQuery","mounted","shouldFetchOptionally","staleTime","updateStaleTimeout","nextRefetchInterval","computeRefetchInterval","currentRefetchInterval","updateRefetchInterval","getOptimisticResult","defaultedOptions","query","getQueryCache","createResult","trackResult","trackedResult","trackProp","defineProperty","configurable","enumerable","get","getNextResult","reject","isFetching","throwOnError","getCurrentQuery","fetch","meta","refetchPage","fetchOptimistic","_this4","fetchOptions","_this5","promise","_this6","clearStaleTimeout","isStale","updatedAt","timeout","dataUpdatedAt","Math","max","Date","now","staleTimeoutId","_this$options$refetch","refetchInterval","nextInterval","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","clearTimeout","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","isPreviousData","isPlaceholderData","optimisticResults","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","select","_this$previousSelect","previousSelect","structuralSharing","selectError","placeholderData","fetchFailureCount","errorUpdateCount","isFetched","isFetchedAfterMount","isRefetching","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangeProps","notifyOnChangePropsExclusions","includedProps","some","typedKey","changed","isIncluded","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","onQueryUpdate","_this8","retryOnMount","shouldLoadOnMount","refetchOnMount","field","isStaleByTime","createValue","_isReset","clearReset","isReset","QueryErrorResetBoundaryContext","useBaseQuery","Observer","errorResetBoundary","cacheTime","observer","_ref","useQuery","parsedOptions","queryFn","parseQueryArgs","actions","init","defaultRenderer","t","emptyRenderer","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","props","next","style","className","makePropGetter","hooks","userProps","prev","handlePropGetter","prevProps","reduceHooks","initial","allowUndefined","loopHooks","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","ref","useRef","useCallback","safeUseLayoutEffect","useLayoutEffect","useEffect","useMountedLayoutEffect","deps","makeRenderer","instance","column","Comp","info","flexRender","component","proto","getPrototypeOf","isReactComponent","$$typeof","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","row","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","flattenDeep","arr","newArr","d","String","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","e","assign","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","isFunction","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","previousState","initialState","columnId","subHeader","handleColumn","parentVisible","subColumn","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","header","subHeaders","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","min","canResize","accessRowsForColumn","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","rowId","r","setExpanded","exists","shouldExist","f","s","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","temp","__proto__","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","unique","from","Set","size","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","g","col","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","_row$subRows","resKey","reSplitAlphaNumeric","compareBasic","getRowValuesByColumnID","row1","row2","isNaN","alphanumeric","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","alower","blower","replaceNonNumeric","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","u","uniqueValue","columnGroup","PivotHeader","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","_rowsById$_rowId","_rowsById$_rowId$cell","w","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","columnIndex","elWidth","getElementById","_document$getElementB","offsetWidth","startingWidth","newWidth","columnWidthsCopy","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","userColumns","getStateReducer","handler","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups","module","exports"],"sourceRoot":""}