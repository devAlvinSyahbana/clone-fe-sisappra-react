{"version":3,"file":"static/js/486.d4377099.chunk.js","mappings":"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","sources":["app/modules/sarana_prasarana/components/LaporanSaranaPrasarana.tsx","app/modules/sarana_prasarana/SaranaPrasaranaPage.tsx"],"sourcesContent":["import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport SweetAlert from 'react-bootstrap-sweetalert'\n\nexport interface FormInput {\n  jenis_sarana_prasarana?: any\n  status_sarana_prasarana?: any\n  jumlah?: number\n  kondisi?: any\n  keterangan?: string\n  file_dokumentasi?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function LaporanSaranaPrasarana() {\n  const [show, setShow] = useState(false)\n  const [showOtherAlert, setStateAlert] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const [inputValJenis, setDataJenis] = useState({label: '', value: null})\n  const [inputValStatus, setDataStatus] = useState({label: '', value: null})\n  const [inputValKondisi, setDataKondisi] = useState({label: '', value: null})\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(\n        `${SARANA_PRASARANA_URL}/filter?limit=${perPage}&offset=${page}${qParamFind.strparam}`\n      )\n      setData(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item>\n                      <Link to='#'>Detail</Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item>\n                      <Link to='#'>Ubah</Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#'>Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const response = await axios.get(\n      `${SARANA_PRASARANA_URL}/filter?limit=${perPage}&offset=${page}${qParamFind.strparam}`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total_data)\n    setLoading(false)\n    return [data, setData] as const\n  }\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page)\n  }\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true)\n\n    const response = await axios.get(\n      `${SARANA_PRASARANA_URL}/filter?limit=${perPage}&offset=${page}${qParamFind.strparam}`\n    )\n\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  // AUTOCOMPLITE JENIS SARANA & PRASANAN\n  const filterSapra = async (inputValue: string) => {\n    const response = await axios.get(`${SARANA_PRASARANA_URL}/findjenis/${inputValue}`)\n    const json = await response.data.data\n    return json.map((i: any) => ({label: i.jenis_sarana_prasarana, value: i.id}))\n  }\n  const loadOptionsSapra = (inputValue: string, callback: (options: SelectOption[]) => void) => {\n    setTimeout(async () => {\n      callback(await filterSapra(inputValue))\n    }, 1000)\n  }\n  const handleInputChange = (newValue: any) => {\n    setDataJenis((prevstate: any) => ({...prevstate, ...newValue}))\n  }\n\n  // AUTOCOMPLITE STATUS SARANA & PRASANAN\n  const filterStapra = async (inputValue: string) => {\n    const response = await axios.get(`${SARANA_PRASARANA_URL}/findstatus/${inputValue}`)\n    const json = await response.data.data\n    return json.map((i: any) => ({label: i.status_sarana_prasarana, value: i.id}))\n  }\n  const loadOptionsStapra = (inputValue: string, callback: (options: SelectOption[]) => void) => {\n    setTimeout(async () => {\n      callback(await filterStapra(inputValue))\n    }, 1000)\n  }\n  const handleInputStapra = (newValue: any) => {\n    setDataStatus((prevstate: any) => ({...prevstate, ...newValue}))\n  }\n\n  // AUTOCOMPLITE KONDISI SARANA & PRASANAN\n  const filterKonpra = async (inputValue: string) => {\n    const response = await axios.get(`${SARANA_PRASARANA_URL}/findkondisi/${inputValue}`)\n    const json = await response.data.data\n    return json.map((i: any) => ({label: i.kondisi_sarana_prasarana, value: i.id}))\n  }\n  const loadOptionsKonpra = (inputValue: string, callback: (options: SelectOption[]) => void) => {\n    setTimeout(async () => {\n      callback(await filterKonpra(inputValue))\n    }, 1000)\n  }\n  const handleInputKonpra = (newValue: any) => {\n    setDataKondisi((prevstate: any) => ({...prevstate, ...newValue}))\n  }\n\n  const handleFilterReset = () => {\n    setDataJenis({label: '', value: null})\n    setDataStatus({label: '', value: null})\n    setDataKondisi({label: '', value: null})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (inputValJenis.value) {\n      uriParam += `&jenis_sarana_prasarana=${inputValJenis.value}`\n    }\n    if (inputValStatus.value) {\n      uriParam += `&status_sarana_prasarana=${inputValStatus.value}`\n    }\n    if (inputValKondisi.value) {\n      uriParam += `&kondisi_sarana_prasarana=${inputValKondisi.value}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      jenis_sarana_prasarana: {value: '', label: 'Pilih'},\n      status_sarana_prasarana: {value: '', label: 'Pilih'},\n      jumlah: 0,\n      kondisi: {value: '', label: 'Pilih'},\n      keterangan: '',\n    },\n    onSubmit: async (values) => {\n      const bodyparam: FormInput = {}\n      valuesFormik?.jenis_sarana_prasarana?.value\n        ? (bodyparam.jenis_sarana_prasarana = valuesFormik.jenis_sarana_prasarana.value)\n        : delete bodyparam.jenis_sarana_prasarana\n      valuesFormik?.status_sarana_prasarana?.value\n        ? (bodyparam.status_sarana_prasarana = valuesFormik.status_sarana_prasarana.value)\n        : delete bodyparam.status_sarana_prasarana\n      valuesFormik?.kondisi?.value\n        ? (bodyparam.kondisi = valuesFormik.kondisi.value)\n        : delete bodyparam.kondisi\n      valuesFormik?.keterangan\n        ? (bodyparam.keterangan = valuesFormik.keterangan)\n        : delete bodyparam.keterangan\n      valuesFormik?.jumlah ? (bodyparam.jumlah = valuesFormik.jumlah) : delete bodyparam.jumlah\n\n      try {\n        const response = await axios.post(`${SARANA_PRASARANA_URL}/create`, bodyparam)\n        if (response) {\n          fetchUsers(1)\n          handleClose()\n          setValuesFormik({})\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    },\n  })\n  return (\n    <> \n    <div className={`card`}>\n      {/* begin::Body */}\n      {/* {showOtherAlert &&\n          <SweetAlert\n            type='success'\n            title='Good job!'\n            onConfirm={() => setStateAlert(false)}\n            onCancel={() => setStateAlert(false)}\n            showCancel={true}\n            focusCancelBtn={true}\n          >\n            You clicked the button!\n          </SweetAlert>\n      } */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6'>\n          <div className='form-group'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Sarana & Prasarana\n            </label>\n            <AsyncSelect\n              cacheOptions\n              value={inputValJenis.value ? inputValJenis : {value: '', label: 'Pilih'}}\n              loadOptions={loadOptionsSapra}\n              defaultOptions\n              onChange={handleInputChange}\n              placeholder={'Pilih'}\n            />\n          </div>\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6'>\n          <div className='form-group'>\n            <label htmlFor='' className='mb-3'>\n              Status Sarana & Prasarana\n            </label>\n            <AsyncSelect\n              cacheOptions\n              value={inputValStatus.value ? inputValStatus : {value: '', label: 'Pilih'}}\n              loadOptions={loadOptionsStapra}\n              defaultOptions\n              onChange={handleInputStapra}\n              placeholder={'Pilih'}\n            />\n          </div>\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6'>\n          <div className='form-group'>\n            <label htmlFor='' className='mb-3'>\n              Kondisi\n            </label>\n            <AsyncSelect\n              cacheOptions\n              value={inputValKondisi.value ? inputValKondisi : {value: '', label: 'Pilih'}}\n              loadOptions={loadOptionsKonpra}\n              defaultOptions\n              onChange={handleInputKonpra}\n              placeholder={'Pilih'}\n            />\n          </div>\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#' onClick={handleFilter} className='me-2'>\n            <button className='btn btn-primary me-2'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n          <Link to='#' onClick={handleFilterReset}>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-arrows-rotate'></i>\n              Reset\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <Button variant='primary' onClick={handleShow}>\n              <span className='svg-icon svg-icon-2'>\n                <svg\n                  width={24}\n                  height={24}\n                  viewBox='0 0 24 24'\n                  fill='none'\n                  xmlns='http://www.w3.org/2000/svg'\n                >\n                  <rect\n                    opacity='0.5'\n                    x='11.364'\n                    y='20.364'\n                    width={16}\n                    height={2}\n                    rx={1}\n                    transform='rotate(-90 11.364 20.364)'\n                    fill='currentColor'\n                  />\n                  <rect x='4.36396' y='11.364' width={16} height={2} rx={1} fill='currentColor' />\n                </svg>\n              </span>\n              Tambah Sarana\n            </Button>\n          </Link>\n          &nbsp;\n          <DropdownButton id='dropdown-basic-button' title='Unduh' variant='light'>\n            <Dropdown.Item href={`${SARANA_PRASARANA_URL}/unduh?q=1${qParamFind.strparam}`}>\n              Excel\n            </Dropdown.Item>\n            <Dropdown.Item href='#'>PDF</Dropdown.Item>\n          </DropdownButton>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false}>\n          <Modal.Header closeButton>\n            <Modal.Title>Tambah Sarana & Prasarana</Modal.Title>\n          </Modal.Header>\n          <form onSubmit={formik.handleSubmit}>\n            <Modal.Body>\n              <div className='row g-10 mt-2 ms-5 me-5'>\n                <div className='col-md-15'>\n                  <div className='form-group'>\n                    <label htmlFor='' className='mb-3'>\n                      Jenis Sarana & Prasarana\n                    </label>\n                    <AsyncSelect\n                      cacheOptions\n                      loadOptions={loadOptionsSapra}\n                      defaultOptions\n                      onChange={(e) => handleChangeFormikSelect(e, 'jenis_sarana_prasarana')}\n                      value={\n                        valuesFormik?.jenis_sarana_prasarana\n                          ? valuesFormik?.jenis_sarana_prasarana\n                          : {value: '', label: 'Pilih'}\n                      }\n                      placeholder={'Pilih'}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className='row g-6 mt-2 ms-5 me-5'>\n                <div className='col-md-15'>\n                  <div className='form-group'>\n                    <label htmlFor='' className='mb-3'>\n                      Status Sarana & Prasarana\n                    </label>\n                    <AsyncSelect\n                      cacheOptions\n                      loadOptions={loadOptionsStapra}\n                      defaultOptions\n                      onChange={(e) => handleChangeFormikSelect(e, 'status_sarana_prasarana')}\n                      value={\n                        valuesFormik?.status_sarana_prasarana\n                          ? valuesFormik?.status_sarana_prasarana\n                          : {value: '', label: 'Pilih'}\n                      }\n                      placeholder={'Pilih'}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className='row g-6 mt-2 ms-5 me-5'>\n                <div className='col-md-15'>\n                  <div className='form-group'>\n                    <label htmlFor='' className='mb-3'>\n                      Jumlah\n                    </label>\n                    <input\n                      className='form-control form-control form-control-solid'\n                      name='jumlah'\n                      type='number'\n                      min='0'\n                      onChange={handleChangeFormik}\n                      onBlur={formik.handleBlur}\n                      value={valuesFormik?.jumlah}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className='row g-6 mt-2 ms-5 me-5'>\n                <div className='col-md-15'>\n                  <div className='form-group'>\n                    Kondisi\n                    <AsyncSelect\n                      cacheOptions\n                      loadOptions={loadOptionsKonpra}\n                      defaultOptions\n                      onChange={(e) => handleChangeFormikSelect(e, 'kondisi')}\n                      value={\n                        valuesFormik?.kondisi ? valuesFormik?.kondisi : {value: '', label: 'Pilih'}\n                      }\n                      placeholder={'Pilih'}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className='row g-6 mt-2 ms-5 me-5'>\n                <div className='col-md-15'>\n                  <div className='form-group'>\n                    <Form.Label>Keterangan</Form.Label>\n                    <Form.Control\n                      as='textarea'\n                      name='keterangan'\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.keterangan}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className='row g-6 mt-2 ms-5 me-5'>\n                <div className='col-md-15'>\n                  <div className='form-group'>\n                    <Form.Label>File Dokumentasi</Form.Label>\n                    <Form.Control type='file' id='firstimg' />\n                  </div>\n                </div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant='secondary' onClick={handleClose}>\n                Close\n              </Button>\n              <Button type='submit'>\n                <i className='fa-solid fa-paper-plane'></i>\n                Simpan\n              </Button>\n            </Modal.Footer>\n          </form>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        />\n      </div>\n      {/* end::Body */}\n    </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Navigate, Route, Routes, Outlet } from 'react-router-dom'\nimport { PageLink, PageTitle } from '../../../_metronic/layout/core'\nimport { LaporanSaranaPrasarana } from './components/LaporanSaranaPrasarana'\n\n\n\nconst sarana_prasaranaBreadCrumbs: Array<PageLink> = [\n  {\n    title: 'Sarana & Prasarana',\n    path: '/sarana_prasarana/LaporanSaranaPrasarana',\n    isSeparator: false,\n    isActive: false,\n  },\n  {\n    title: '',\n    path: '',\n    isSeparator: true,\n    isActive: false,\n  },\n]\n\nconst SaranaPrasaranaPage: React.FC = () => {\n  return (\n    <Routes>\n      <Route\n        element={\n          <>          \n            <Outlet />\n          </>\n        }\n      >\n        <Route\n          path='LaporanSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={sarana_prasaranaBreadCrumbs}>Laporan Sarana & Prasarana</PageTitle>\n              <LaporanSaranaPrasarana />\n            </>\n          }\n        />\n        \n        \n  \n        \n        <Route index element={<Navigate to='/sarana_prasarana' />} />\n      </Route>\n    </Routes>\n  )\n}\n\nexport default SaranaPrasaranaPage \n"],"names":["SARANA_PRASARANA_URL","process","LaporanSaranaPrasarana","useState","show","setShow","handleClose","label","value","inputValJenis","setDataJenis","inputValStatus","setDataStatus","inputValKondisi","setDataKondisi","data","setData","loading","setLoading","totalRows","setTotalRows","perPage","setPerPage","strparam","qParamFind","setUriFind","useEffect","page","axios","response","total_data","fetchDT","LoadingAnimation","props","className","columns","name","selector","row","jenis_sarana_prasarana","sortable","sortField","status_sarana_prasarana","jumlah","kondisi","keterangan","dokumentasi","text","align","cell","record","Fragment","DropdownButton","map","DropdownType","idx","as","ButtonGroup","id","size","variant","title","Dropdown","to","href","fetchUsers","handlePerRowsChange","newPerPage","filterSapra","inputValue","json","i","loadOptionsSapra","callback","setTimeout","filterStapra","loadOptionsStapra","filterKonpra","kondisi_sarana_prasarana","loadOptionsKonpra","handleFilter","uriParam","prevState","React","valuesFormik","setValuesFormik","handleChangeFormikSelect","prevValues","handleChangeFormik","event","target","formik","useFormik","initialValues","onSubmit","values","bodyparam","console","error","htmlFor","cacheOptions","loadOptions","defaultOptions","onChange","newValue","prevstate","placeholder","onClick","Button","width","height","viewBox","fill","xmlns","opacity","x","y","rx","transform","Modal","onHide","backdrop","keyboard","closeButton","handleSubmit","e","type","min","onBlur","handleBlur","Form","progressPending","progressComponent","pagination","paginationServer","paginationTotalRows","onChangeRowsPerPage","onChangePage","sarana_prasaranaBreadCrumbs","path","isSeparator","isActive","element","breadcrumbs","index"],"sourceRoot":""}