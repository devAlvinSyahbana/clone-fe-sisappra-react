{"version":3,"file":"static/js/998.40b14f53.chunk.js","mappings":"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","sources":["app/modules/master/components/Kota.tsx","app/modules/master/components/Kecamatan.tsx","app/modules/master/components/Kelurahan.tsx","app/modules/master/components/JenisKegiatan.tsx","app/modules/master/components/JenisKejadian.tsx","app/modules/master/components/JenisPelanggaran.tsx","app/modules/master/components/JenisPertolongan.tsx","app/modules/master/components/JenisPerdaPerkada.tsx","app/modules/master/components/JenisPenindakan.tsx","app/modules/master/components/KorbanJiwa.tsx","app/modules/master/components/KorbanMaterial.tsx","app/modules/master/components/JenisBantuan.tsx","app/modules/master/components/InstansiTerkait.tsx","app/modules/master/components/Agama.tsx","app/modules/master/components/Pangkat.tsx","app/modules/master/components/TempatPelaksana.tsx","app/modules/master/components/SKPD.tsx","app/modules/master/components/Pendidikan.tsx","app/modules/master/components/JenisSaranaPrasarana.tsx","app/modules/master/components/Golongan.tsx","app/modules/master/components/Eselon.tsx","app/modules/master/components/Jabatan.tsx","app/modules/master/components/SumberInformasi.tsx","app/modules/master/components/JenisKekerasan.tsx","app/modules/master/components/JenisPenerbitan.tsx","app/modules/master/components/JenisPenyelesaian.tsx","app/modules/master/MasterPage.tsx"],"sourcesContent":["import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\n\n\nexport interface FormInput {\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/master/kota\n\nexport function Kota() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n\n  const [valFilterKota, setFilterKota] = useState({val: ''})\n  \n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {     \n      name: 'Kota',\n      selector: (row: any) => row.kota,\n      sortable: true,\n      sortField: 'kota',    \n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterKota.val !== '') {\n      uriParam += `&kota=${valFilterKota.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n  const handleChangeInputKota = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterKota({val: event.target.value})\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n  const handleChangeFormik = (event: {\n  preventDefault: () => void\n  target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(\n        `${KOTA_URL}/findone-by-kota`\n      )\n      console.log('cek kot:',temp);\n      setData(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(KOTA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek kota:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n   return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Kota\n            </label>\n            <input\n              type='text'\n              className='form-control form-control form-control-solid'\n              name='kota'\n              value={valFilterKota.val}\n              onChange={handleChangeInputKota}\n              placeholder='Kota'\n            />\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'onClick={handleFilter} >\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n\n      {/* onSubmit: async (values) => {\n      const bodyparam: FormInput = {}\n      valuesFormik?.kota ? (bodyparam.kota = valuesFormik.kota) : delete bodyparam.kota\n\n      try {\n        const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\n        if (response) {\n          fetchUsers(1)\n          handleClose()\n          setValuesFormik({})\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    }, */}\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Kota</Modal.Title>\n        </Modal.Header>\n        <form>\n            <Modal.Body>            \n              <div className='row g-6 mt-2 ms-5 me-5'>\n                <div className='col-md-15'>\n                  <div className='form-group'>\n                    <label htmlFor='' className='mb-3'>\n                      Kota\n                    </label>\n                    <input\n                      className='form-control form-control form-control-solid'\n                      name='jumlah'\n                      type='number'\n                      min='0'\n                      onChange={handleChangeFormik}\n                      // onBlur={formik.handleBlur}\n                      // value={valuesFormik?.Kota}\n                    />\n                  </div>\n                </div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant='secondary' onClick={handleClose}>\n                Close\n              </Button>\n              <Button type='submit'>\n                <i className='fa-solid fa-paper-plane'></i>\n                Simpan\n              </Button>\n            </Modal.Footer>\n          </form>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-30 ms-30 me-1'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\n\nexport function Kecamatan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Kode Kecamatan',\n      selector: (row: any) => row.kode_kecamatan,\n      sortable: true,\n      sortField: 'kode_kecamatan',\n    },\n    {\n      name: 'kecamatan',\n      selector: (row: any) => row.kecamatan,\n      sortable: true,\n      sortField: 'kecamatan',\n    },\n    {\n      name: 'Kode Kota',\n      selector: (row: any) => row.kode_kota,\n      sortable: true,\n      sortField: 'kode_kota',\n    },\n    {\n      name: 'kota',\n      selector: (row: any) => row.kota,\n      sortable: true,\n      sortField: 'kota',\n    },\n    {\n     \n    },\n\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(KECAMATAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6'>\n          <div className='form-group'>\n          <label htmlFor='' className='mb-3'>\n              Kota\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n        </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6'>\n          <div className='form-group'>\n          <label htmlFor='' className='mb-3'>\n              Kecamatan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n        </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Kecamatan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Kota</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Kota\" />\n        </Form.Group>\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Kecamatan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Kecamatan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\n\nexport function Kelurahan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Kode Kelurahan',\n      selector: (row: any) => row.kode_kelurahan,\n      sortable: true,\n      sortField: 'kelurahan',\n    },\n    {\n      name: 'Kelurahan',\n      selector: (row: any) => row.kelurahan,\n      sortable: true,\n      sortField: 'kelurahan',\n    },\n    {\n      name: 'Kode Kecamatan',\n      selector: (row: any) => row.kode_kecamatan,\n      sortable: true,\n      sortField: 'Kode kecamatan',\n    },\n    {\n      name: 'Kecamatan',\n      selector: (row: any) => row.kecamatan,\n      sortable: true,\n      sortField: 'kecamatan',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(KELURAHAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Kecamatan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Kelurahan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Kelurahan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        \n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Kecamatan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Kecamatan\" />\n        </Form.Group>\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Kelurahan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Kelurahan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/master/jenis-kegiatan\n\nexport function JenisKegiatan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Jenis Kegiatan',\n      selector: (row: any) => row.jenis_kegiatan,\n      sortable: true,\n      sortField: 'jenis_kegiatan',\n    },\n    {\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_KEGIATAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Kegiatan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Kegiatan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Kegiatan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Kegiatan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000/jenis-kejadian\n\nexport function JenisKejadian() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n      \n    },\n    {\n      name: 'Jenis Kejadian',\n      selector: (row: any) => row.jenis_kejadian,\n      sortable: true,\n      sortField: 'jenis_kejadian',\n    },\n    {\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_KEJADIAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Kejadian\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n     \n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Kejadian</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Kejadian</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Kejadian\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PELANGGARAN_URL = `${API_URL}/master/Jenis-pelanggaran` //http://localhost:3000/Jenis-pelanggaran\nexport function JenisPelanggaran() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Jenis Pelanggaran',\n      selector: (row: any) => row.jenis_pelanggaran,\n      sortable: true,\n      sortField: 'jenis_pelanggaran',\n    },\n    {\n    },\n    {\n      \n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_PELANGGARAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Pelanggaran\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Pelanggaran</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Pelanggaran</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Pelanggaran\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` //http://localhost:3000/jenis-pertolongan\n\nexport function JenisPertolongan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Jenis Pertolongan',\n      selector: (row: any) => row.jenis_pertolongan,\n      sortable: true,\n      sortField: 'jenis_pertolongan',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_PERTOLONGAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Pertolongan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Pertolongan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Pertolongan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Pertolongan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERDA_PERKADA_URL = `${API_URL}/master/jenis-perda-perkada` //http://localhost:3000/jenis-perda-perkada\n\nexport function JenisPerdaPerkada() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Judul',\n      selector: (row: any) => row.judul,\n      sortable: true,\n      sortField: 'judul',\n    },\n    {\n      name: 'Deskripsi',\n      selector: (row: any) => row.deskripsi,\n      sortable: true,\n      sortField: 'deskripsi',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_PERDA_PERKADA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Judul Perda / Perkada\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Deskripsi\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Perda / Perkada</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Perda / Perkada</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Perda / Perkada\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function JenisPenindakan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Penindakan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Penindakan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Penindakan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Penindakan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/jenis-korban-jiwa\n\nexport function KorbanJiwa() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Jenis Korban Jiwa',\n      selector: (row: any) => row.jenis_korban_jiwa,\n      sortable: true,\n      sortField: 'jenis_korban_jiwa',\n    },\n    {\n    \n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_KORBAN_JIWA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Korban Jiwa\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Korban Jiwa</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Korban Jiwa</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Korban Jiwa\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` //http://localhost:3000/jenis-korban-material\n\nexport function KorbanMaterial() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n    },\n    {\n      name: 'Jenis Korban Material',\n      selector: (row: any) => row.jenis_korban_material,\n      sortable: true,\n      sortField: 'jenis_korban_material',\n    },\n    {\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_KORBAN_MATERIAL_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Korban Material\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Korban Material</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Korban Material</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Korban Material\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function JenisBantuan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Bantuan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Bantuan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Bantuan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Bantuan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function InstansiTerkait() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Instansi Terkait\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Instansi Terkait</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Instansi Terakait</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Instansi Terkait\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/master/agama\n\nexport function Agama() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    \n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {},\n    {\n      name: 'Agama',\n      selector: (row: any) => row.agama,\n      sortable: true,\n      sortField: 'agama',\n    },\n    {},\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(AGAMA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Agama\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Agama</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Agama</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Agama\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\n\nexport function Pangkat() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n    },\n    {\n      name: 'Pangkat',\n      selector: (row: any) => row.pangkat,\n      sortable: true,\n      sortField: 'pangkat',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(PANGKAT_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Pangkat\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      \n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Pendidikan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Pendidikan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Pendidikan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n    throw new Error('Function not implemented.');\n  }\n  \nfunction onEdit(record: any) {\nthrow new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function TempatPelaksana() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Tempat Pelaksana\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      \n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Tempat Pelaksana</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Tempat Pelaksana</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Tempat Pelaksana\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function SKPD() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              SKPD\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah SKPD</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>SKPD</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"SKPD\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PENDIDIKAN_URL = `${API_URL}/master/pendidikan` //http://localhost:3000/master/pendidikan\n\nexport function Pendidikan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Pendidikan',\n      selector: (row: any) => row.pendidikan,\n      sortable: true,\n      sortField: 'pendidikan',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(PENDIDIKAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Pendidikan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      \n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Pendidikan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Pendidikan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Pendidikan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n    throw new Error('Function not implemented.');\n  }\n  \nfunction onEdit(record: any) {\nthrow new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` //http://localhost:3000/master/sarana-prasarana\n\nexport function JenisSaranaPrasarana() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Sarana Prasarana\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Sarana dan Prasarana</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Sarana Dan Prasrana</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis sarana Dan prasarana\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const GOLONGAN_URL = `${API_URL}/master/golongan` //http://localhost:3000/sarana-prasarana\n\nexport function Golongan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Golongan',\n      selector: (row: any) => row.golongan,\n      sortable: true,\n      sortField: 'golongan',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get( GOLONGAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Golongan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Golongan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Golongan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Golongan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const ESELON_URL = `${API_URL}/master/eselon` //http://localhost:3000/master/eselon\n\nexport function Eselon() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {},\n    {\n      name: 'Eselon',\n      selector: (row: any) => row.eselon,\n      sortable: true,\n      sortField: 'eselon',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(ESELON_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Eselon\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Eselon</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Kota</Form.Label>\n            <Form.Control type=\"Eselon\" placeholder=\"Eselon\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JABATAN_URL = `${API_URL}/master/jabatan` //http://localhost:3000/sarana-prasarana\n\nexport function Jabatan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n    },    \n    {\n      name: 'Jabatan',\n      selector: (row: any) => row.jabatan,\n      sortable: true,\n      sortField: 'jabatan',\n    },    \n    {\n    },   \n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JABATAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jabatan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jabatan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jabatan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jabatan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function SumberInformasi() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Sumber Informasi\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Sumber Informasi</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Sumber Informasi</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Sumber Informasi\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function JenisKekerasan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Kekerasan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      \n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title> Tambah Jenis Kekerasan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Kekerasan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Kekerasan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PENERBITAN_URL = `${API_URL}/master/jenis-penerbitan` //http://localhost:3000/jenis-penerbitan\n\nexport function JenisPenerbitan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n   \n    {\n      name: 'Jenis Penertiban',\n      selector: (row: any) => row.jenis_penertiban,\n      sortable: true,\n      sortField: 'jenis_penertiban',\n    },\n    {\n      name: 'kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(PENERBITAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Penerbitan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Penerbitan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Penerbitan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Penerbitan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function JenisPenyelesaian() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Penyelesaian\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Penyelesaian</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Penyelesaian</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Penyelesaian\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React from 'react'\nimport { Navigate, Route, Routes, Outlet } from 'react-router-dom'\nimport { PageLink, PageTitle } from '../../../_metronic/layout/core'\nimport { Kota } from './components/Kota'\nimport { Kecamatan } from './components/Kecamatan'\nimport { Kelurahan } from './components/Kelurahan'\nimport { JenisKegiatan } from './components/JenisKegiatan'\nimport { JenisKejadian } from './components/JenisKejadian'\nimport { JenisPelanggaran } from './components/JenisPelanggaran'\nimport { JenisPertolongan } from './components/JenisPertolongan'\nimport { JenisPerdaPerkada } from './components/JenisPerdaPerkada'\nimport { JenisPenindakan } from './components/JenisPenindakan'\nimport { KorbanJiwa } from './components/KorbanJiwa'\nimport { KorbanMaterial } from './components/KorbanMaterial'\nimport { JenisBantuan } from './components/JenisBantuan'\nimport { InstansiTerkait } from './components/InstansiTerkait'\nimport { Agama } from './components/Agama'\nimport { Pangkat } from './components/Pangkat'\nimport { TempatPelaksana } from './components/TempatPelaksana'\nimport { SKPD } from './components/SKPD'\nimport { Pendidikan } from './components/Pendidikan'\nimport { JenisSaranaPrasarana } from './components/JenisSaranaPrasarana'\nimport { Golongan } from './components/Golongan'\nimport { Eselon } from './components/Eselon'\nimport { Jabatan } from './components/Jabatan'\nimport { SumberInformasi } from './components/SumberInformasi'\nimport { JenisKekerasan } from './components/JenisKekerasan'\nimport { JenisPenerbitan } from './components/JenisPenerbitan'\nimport { JenisPenyelesaian } from './components/JenisPenyelesaian'\n\nconst masterBreadCrumbs: Array<PageLink> = [\n  {\n    title: 'Master',\n    path: '/master/InformasiDataMaster',\n    isSeparator: false,\n    isActive: false,\n  },\n  {\n    title: '',\n    path: '',\n    isSeparator: true,\n    isActive: false,\n  },\n]\n\nconst MasterPage: React.FC = () => {\n  return (\n    <Routes>\n      <Route\n        element={\n          <>\n            <Outlet />\n          </>\n        }\n      >\n        <Route\n          path='Kota'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kota</PageTitle>\n              <Kota />\n            </>\n          }\n        />\n         <Route\n          path='SKPD'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>SKPD</PageTitle>\n              <SKPD />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Pangkat</PageTitle>\n              <Pangkat />\n            </>\n          }\n        />\n        <Route\n          path='TempatPelaksana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tempat Pelaksana</PageTitle>\n              <TempatPelaksana />\n            </>\n          }\n        />\n        <Route\n          path='Golongan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Golongan </PageTitle>\n              <Golongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jenis Sarana Prasarana </PageTitle>\n              <JenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kecamatan</PageTitle>\n              <Kecamatan/>\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kelurahan</PageTitle>\n              <Kelurahan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kegiatan </PageTitle>\n              <JenisKegiatan  />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kejadian </PageTitle>\n              <JenisKejadian  />\n            </>\n          }\n        />\n        <Route\n          path='Agama'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Agama</PageTitle>\n              <Agama  />\n            </>\n          }\n        />\n        <Route\n          path='Jabatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jabatan </PageTitle>\n              <Jabatan/>\n            </>\n          }\n        />\n        <Route\n          path='Eselon'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Eselon </PageTitle>\n              <Eselon/>\n            </>\n          }\n        />\n         <Route\n          path='Pendidikan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Pendidikan </PageTitle>\n              <Pendidikan/>\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Sumber Informasi </PageTitle>\n              <SumberInformasi />\n            </>\n          }\n        />\n        <Route\n          path='JenisPelanggaran'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pelanggaran</PageTitle>\n              <JenisPelanggaran/>\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pertolongan</PageTitle>\n              <JenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penindakan</PageTitle>\n              <JenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPerdaPerkada'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Perda / Perkada</PageTitle>\n              <JenisPerdaPerkada/>\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kekerasan</PageTitle>\n              <JenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenerbitan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penerbitan</PageTitle>\n              <JenisPenerbitan />\n            </>\n          }\n        />\n         <Route\n          path='JenisPenyelesaian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penyelesaian</PageTitle>\n              <JenisPenyelesaian />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Jiwa </PageTitle>\n              <KorbanJiwa  />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Material</PageTitle>\n              <KorbanMaterial/>\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Bantuan</PageTitle>\n              <JenisBantuan/>\n            </>\n          }\n        />\n        <Route\n          path='InstansiTerkait'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Instansi Terkait</PageTitle>\n              <InstansiTerkait/>\n            </>\n          }\n        />\n        \n\n        <Route index element={<Navigate to='/master' />} />\n      </Route>\n    </Routes>\n  )\n}\n\nexport default MasterPage\n"],"names":["KOTA_URL","process","Kota","useState","show","setShow","handleClose","strparam","qParamFind","setUriFind","val","valFilterKota","setFilterKota","useEffect","fetchUsers","columns","name","selector","row","id","sortable","sortField","kota","kode","text","className","align","cell","record","Fragment","DropdownButton","map","DropdownType","idx","as","ButtonGroup","size","variant","title","Dropdown","to","href","handleFilter","uriParam","prevState","React","setValuesFormik","data","setData","setLoading","setTotalRows","perPage","temp","setTemp","page","axios","response","console","log","total_data","fetchDT","value","total","htmlFor","type","onChange","event","target","placeholder","onClick","Modal","onHide","closeButton","min","prevValues","Button","pagination","KECAMATAN_URL","Kecamatan","kode_kecamatan","kecamatan","kode_kota","Form","KELURAHAN_URL","Kelurahan","kode_kelurahan","kelurahan","JENIS_KEGIATAN_URL","JenisKegiatan","jenis_kegiatan","JENIS_KEJADIAN_URL","JenisKejadian","jenis_kejadian","JENIS_PELANGGARAN_URL","JenisPelanggaran","jenis_pelanggaran","JENIS_PERTOLONGAN_URL","JenisPertolongan","jenis_pertolongan","JENIS_PERDA_PERKADA_URL","JenisPerdaPerkada","judul","deskripsi","SARANA_PRASARANA_URL","JenisPenindakan","jenis_sarana_prasarana","status_sarana_prasarana","jumlah","kondisi","keterangan","dokumentasi","JENIS_KORBAN_JIWA_URL","KorbanJiwa","jenis_korban_jiwa","JENIS_KORBAN_MATERIAL_URL","KorbanMaterial","jenis_korban_material","JenisBantuan","InstansiTerkait","AGAMA_URL","Agama","agama","PANGKAT_URL","Pangkat","pangkat","TempatPelaksana","SKPD","PENDIDIKAN_URL","Pendidikan","pendidikan","JENIS_SARANA_PRASARANA_URL","JenisSaranaPrasarana","GOLONGAN_URL","Golongan","golongan","ESELON_URL","Eselon","eselon","JABATAN_URL","Jabatan","jabatan","SumberInformasi","JenisKekerasan","PENERBITAN_URL","JenisPenerbitan","jenis_penertiban","JenisPenyelesaian","masterBreadCrumbs","path","isSeparator","isActive","element","breadcrumbs","index"],"sourceRoot":""}