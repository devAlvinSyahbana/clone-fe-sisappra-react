{"version":3,"file":"static/js/942.76e42ac5.chunk.js","mappings":"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","sources":["app/modules/master/components/Kota.tsx","app/modules/master/components/Lihat-master/LihatKota.tsx","app/modules/master/components/Update-master/UpdateKota.tsx","app/modules/master/components/Tambah-master/TambahKota.tsx","app/modules/master/components/Kecamatan.tsx","app/modules/master/components/Lihat-master/LihatKecamatan.tsx","app/modules/master/components/Update-master/UpdateKecamatan.tsx","app/modules/master/components/Tambah-master/TambahKecamatan.tsx","app/modules/master/components/Kelurahan.tsx","app/modules/master/components/Lihat-master/LihatKelurahan.tsx","app/modules/master/components/Update-master/UpdateKelurahan.tsx","app/modules/master/components/Tambah-master/TambahKelurahan.tsx","app/modules/master/components/JenisKegiatan.tsx","app/modules/master/components/Lihat-master/LihatJenisKegiatan.tsx","app/modules/master/components/Update-master/UpdateJenisKegiatan.tsx","app/modules/master/components/Tambah-master/TambahJenisKegiatan.tsx","app/modules/master/components/JenisKejadian.tsx","app/modules/master/components/Lihat-master/LihatJenisKejadian.tsx","app/modules/master/components/Update-master/UpdateJenisKejadian.tsx","app/modules/master/components/Tambah-master/TambahJenisKejadian.tsx","app/modules/master/components/JenisPelanggaran.tsx","app/modules/master/components/JenisPertolongan.tsx","app/modules/master/components/Lihat-master/LihatJenisPertolongan.tsx","app/modules/master/components/Update-master/UpdateJenisPertolongan.tsx","app/modules/master/components/JenisPerdaPerkada.tsx","app/modules/master/components/JenisPenindakan.tsx","app/modules/master/components/Lihat-master/LihatJenisPenindakan.tsx","app/modules/master/components/Update-master/UpdateJenisPenindakan.tsx","app/modules/master/components/KorbanJiwa.tsx","app/modules/master/components/Lihat-master/LihatKorbanJiwa.tsx","app/modules/master/components/Update-master/UpdateKorbanJiwa.tsx","app/modules/master/components/Tambah-master/TambahKorbanJiwa.tsx","app/modules/master/components/KorbanMaterial.tsx","app/modules/master/components/Lihat-master/LihatKorbanMaterial.tsx","app/modules/master/components/Update-master/UpdateKorbanMaterial.tsx","app/modules/master/components/JenisBantuan.tsx","app/modules/master/components/Lihat-master/LihatJenisBantuan.tsx","app/modules/master/components/Update-master/UpdateJenisBantuan.tsx","app/modules/master/components/InstansiTerkait.tsx","app/modules/master/components/KondisiSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatKondisiSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateKondisiSaranaPrasarana.tsx","app/modules/master/components/StatusSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatStatusSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateStatusSaranaPrasarana.tsx","app/modules/master/components/Agama.tsx","app/modules/master/components/Lihat-master/LihatAgama.tsx","app/modules/master/components/Update-master/UpdateAgama.tsx","app/modules/master/components/Tambah-master/TambahAgama.tsx","app/modules/master/components/Pangkat.tsx","app/modules/master/components/Update-master/UpdatePangkat.tsx","app/modules/master/components/Lihat-master/LihatPangkat.tsx","app/modules/master/components/Tambah-master/TambahPangkat.tsx","app/modules/master/components/TempatPelaksanaan.tsx","app/modules/master/components/Update-master/UpdateTempatPelaksanaan.tsx","app/modules/master/components/Lihat-master/LihatTempatPelaksanaan.tsx","app/modules/master/components/SKPD.tsx","app/modules/master/components/Update-master/UpdateSKPD.tsx","app/modules/master/components/Lihat-master/LihatSKPD.tsx","app/modules/master/components/Pendidikan.tsx","app/modules/master/components/Lihat-master/LihatPendidikan.tsx","app/modules/master/components/JenisSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateJenisSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatJenisSaranaPrasarana.tsx","app/modules/master/components/Golongan.tsx","app/modules/master/components/Eselon.tsx","app/modules/master/components/Update-master/UpdateEselon.tsx","app/modules/master/components/Lihat-master/LihatEselon.tsx","app/modules/master/components/Jabatan.tsx","app/modules/master/components/SumberInformasi.tsx","app/modules/master/components/Update-master/UpdateSumberInformasi.tsx","app/modules/master/components/Lihat-master/LihatSumberInformasi.tsx","app/modules/master/components/JenisKekerasan.tsx","app/modules/master/components/Update-master/UpdateJenisKekerasan.tsx","app/modules/master/components/Lihat-master/LihatJenisKekerasan.tsx","app/modules/master/components/JenisPenertiban.tsx","app/modules/master/components/Update-master/UpdateJenisPenertiban.tsx","app/modules/master/components/Lihat-master/LihatJenisPenertiban.tsx","app/modules/master/components/JenisPenyelesaian.tsx","app/modules/master/components/Lihat-master/LihatJabatan.tsx","app/modules/master/components/StatusKenaikanPangkat.tsx","app/modules/master/components/Lihat-master/LihatStatusKenaikanPangkat.tsx","app/modules/master/MasterPage.tsx"],"sourcesContent":["import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const KOTA_URL = `${API_URL}/master/kota`\r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  kota?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  kota: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function Kota() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterKota, setFilterKota] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterKota.val !== '') {\r\n      uriParam += `${valFilterKota.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterKota({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputKota = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterKota({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Kota',\r\n      selector: (row: any) => row.kota,\r\n      sortable: true,\r\n      sortField: 'kota',\r\n    },\r\n    {\r\n      name: 'Kode',\r\n      selector: (row: any) => row.kode,\r\n      sortable: true,\r\n      sortField: 'kode',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kota/LihatKota/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${KOTA_URL}/filter-kota/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${KOTA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        kota: valuesFormik?.kota, //? valuesFormik.kota : '',\r\n      }\r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${KOTA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      kota: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${KOTA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${KOTA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Kota</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterKota.val} //4\r\n            onChange={handleChangeInputKota}\r\n            placeholder='Kota'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Kota</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Kota</Form.Label>\r\n                  <Form.Control\r\n                      name='kota'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.kota && formik.errors.kota,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.kota && !formik.errors.kota,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.kota}\r\n                    />\r\n                    {formik.touched.kota && formik.errors.kota && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.kota}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  kota?: string\r\n  kode?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  kota?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatKota() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KOTA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kota: jsonD.kota,\r\n        kode: jsonD.kode,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kota'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kota ? valuesFormikExist?.kota : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode</Form.Label>\r\n                        <Form.Control\r\n                          name='kode'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kota'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kota?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  kota?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000//master/kota\r\n\r\nexport function UpdateKota() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KOTA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kota: jsonD.kota,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kota: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kota: valuesFormik?.kota\r\n          ? valuesFormik.kota\r\n          : valuesFormikExist?.kota\r\n          ? valuesFormikExist.kota\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${KOTA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${KOTA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Kota', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Kota', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kota'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kota || valuesFormik?.kota === ''\r\n                              ? valuesFormik?.kota\r\n                              : valuesFormikExist?.kota\r\n                              ? valuesFormikExist?.kota\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kota'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kota?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/master/kota\r\n\r\nexport function TambahKota() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kota: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kota: valuesFormik?.kota ? valuesFormik.kota : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\r\n        if (response) {\r\n            if (selectedFile) {\r\n              formData.append('file_dokumentasi', selectedFile)\r\n              const responseFile = await axios.post(\r\n                `${KOTA_URL}/upload-file/${response.data.data.return_id}`,\r\n                formData\r\n              )\r\n              if (responseFile) {\r\n                console.log('File success uploaded!')\r\n                Swal.fire({\r\n                  icon: 'success',\r\n                  title: 'Data berhasil disimpan',\r\n                  showConfirmButton: false,\r\n                  timer: 1500,\r\n                })\r\n                navigate('/master/Kota', {replace: true})\r\n              }\r\n              return\r\n            }\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            navigate('/master/Kota', {replace: true})\r\n          }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kota'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kota}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kota'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Swal from 'sweetalert2'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\r\n\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nexport function Kecamatan() {\r\n  const navigate = useNavigate()\r\n\r\n  const [show, setShow] = useState(false)\r\n  const [valFilterKota, setFilterKota] = useState({val: ''})\r\n  const [valFilterKecamatan, setFilterKecamatan] = useState({val: ''})\r\n  const [data, setData] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n \r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n  const handleFilter = async () => {\r\n    let uriParam = ''\r\n    if (valFilterKota.val !== '') {\r\n      uriParam += `kota=${valFilterKota.val}`\r\n    }\r\n    if (valFilterKecamatan.val !== '') {\r\n      uriParam += `&kecamatan=${valFilterKecamatan.val}`\r\n    }\r\n    \r\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\r\n  }\r\n\r\n  const handleChangeInputKota = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterKota({val: event.target.value})\r\n  }\r\n  const handleChangeInputKecamatan = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterKecamatan({val: event.target.value})\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      sortField: 'no',\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Kode Kecamatan',\r\n      selector: (row: any) => row.kode_kecamatan,\r\n      sortable: true,\r\n      sortField: 'kode_kecamatan',\r\n      width: '200px',\r\n    },\r\n    {\r\n      name: 'kecamatan',\r\n      selector: (row: any) => row.kecamatan,\r\n      sortable: true,\r\n      sortField: 'kecamatan',\r\n      width: '250px',\r\n    },\r\n    {\r\n      name: 'Kode Kota',\r\n      selector: (row: any) => row.kode_kota,\r\n      sortable: true,\r\n      sortField: 'kode_kota',\r\n      width: '150px',\r\n    },\r\n    {\r\n      name: 'kota',\r\n      selector: (row: any) => row.kota,\r\n      sortable: true,\r\n      sortField: 'kota',\r\n      width: '300px',\r\n    },\r\n    {},\r\n\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      align: 'left',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kecamatan/LihatKecamatan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kecamatan/UpdateKecamatan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Ubah\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n\r\n\r\n  const [temp, setTemp] = useState([])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      console.log(qParamFind)\r\n      const response = await axios.get(\r\n        `${KECAMATAN_URL}/findone-by-kecamatan?${qParamFind.strparam}`\r\n      )\r\n      console.log(response.data.data)\r\n      // setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n  //}\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true)\r\n    const value = await axios.get(KECAMATAN_URL + '/find')\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n\r\n  const handlePageChange = (page: any) => {\r\n    fetchUsers(page)\r\n  }\r\n\r\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n    setLoading(true)\r\n\r\n    const response = await axios.get(\r\n      `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\r\n    )\r\n\r\n    setData(response.data.data)\r\n    setPerPage(newPerPage)\r\n    setLoading(false)\r\n  }\r\n\r\n  const handleSort = (column: any, sortDirection: any) => {\r\n    // simulate server sort\r\n    console.log(column, sortDirection)\r\n    setLoading(true)\r\n\r\n    // instead of setTimeout this is where you would handle your API call.\r\n    setTimeout(() => {\r\n      setData(orderBy(data, column.sortField, sortDirection))\r\n      setLoading(false)\r\n    }, 100)\r\n  }\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      title: 'Anda yakin?',\r\n      text: 'Ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${KECAMATAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6'>\r\n          <div className='form-group'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Kota\r\n            </label>\r\n            <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='kota'\r\n            value={valFilterKota.val}\r\n            onChange={handleChangeInputKota}\r\n            placeholder='kota'\r\n          />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6'>\r\n          <div className='form-group'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Kecamatan\r\n            </label>\r\n            <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='kecamatan'\r\n            value={valFilterKecamatan.val}\r\n            onChange={handleChangeInputKecamatan}\r\n            placeholder='Kecamatan'\r\n          />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n          <Link onClick={handleFilter} to='#'>\r\n            <button className='btn btn-primary'>\r\n              <i className='fa-solid fa-search'></i>\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='/master/Kecamatan/TambahKecamatan'>\r\n            <button className='btn btn-primary me-5'>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n        {/* <DataTable columns={columns} data={temp} pagination /> */}\r\n        {/* <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          paginationTotalRows={totalRows}\r\n        /> */}\r\n        {temp?.length > 0 && temp && ( //urutan 4\r\n          <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.')\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.')\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  kecamatan?: string\r\n  kode_kota?: string\r\n  kode_kecamatan?: string\r\n  kota?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kecamatan?: string\r\n  kode_kota?: string\r\n  kode_kecamatan?: string\r\n  kota?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\r\nexport function LihatKecamatan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KECAMATAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kecamatan: jsonD.kecamatan,\r\n        kode_kota: jsonD.kode_kota,\r\n        kode_kecamatan: jsonD.kode_kecamatan,\r\n        kota: jsonD.kota,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kecamatan ? valuesFormikExist?.kecamatan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kota'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode_kota ? valuesFormikExist?.kode_kota : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.kode_kecamatan\r\n                              ? valuesFormikExist?.kode_kecamatan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kota'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kota ? valuesFormikExist?.kota : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kecamatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kode_kota?: string\r\n  kecamatan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode_kota?: string\r\n  kecamatan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000//master/kecamatan\r\n\r\nexport function UpdateKecamatan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KECAMATAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kecamatan: jsonD.kecamatan,\r\n        kode_kota: jsonD.kode_kota,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value.toUpperCase(),\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kecamatan: '',\r\n      kode_kota: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kecamatan: valuesFormik?.kecamatan\r\n          ? valuesFormik.kecamatan\r\n          : valuesFormikExist?.kecamatan\r\n          ? valuesFormikExist.kecamatan\r\n          : '',\r\n        kode_kota: valuesFormik?.kode_kota\r\n          ? valuesFormik.kode_kota\r\n          : valuesFormikExist?.kode_kota\r\n          ? valuesFormikExist.kode_kota\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${KECAMATAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${KECAMATAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Kecamatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Kecamatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kecamatan || valuesFormik?.kecamatan === ''\r\n                              ? valuesFormik?.kecamatan\r\n                              : valuesFormikExist?.kecamatan\r\n                              ? valuesFormikExist?.kecamatan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kota'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kode_kota || valuesFormik?.kode_kota === ''\r\n                              ? valuesFormik?.kode_kota\r\n                              : valuesFormikExist?.kode_kota\r\n                              ? valuesFormikExist?.kode_kota\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kecamatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kecamatan?: string\r\n  kode_kota?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\r\n\r\nexport function TambahKecamatan() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value.toUpperCase(),\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kecamatan: '',\r\n      kode_kota: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kecamatan: valuesFormik?.kecamatan ? valuesFormik.kecamatan : '',\r\n        kode_kota: valuesFormik?.kode_kota ? valuesFormik.kode_kota : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${KECAMATAN_URL}/create`, bodyparam)\r\n        console.log(response.data, valuesFormik)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${KECAMATAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Kecamatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Kecamatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kecamatan}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kota'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kode_kota}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kecamatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Swal from 'sweetalert2'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {Kecamatan} from './Kecamatan'\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\r\n\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nexport function Kelurahan() {\r\n  // STATE SECTION\r\n  const navigate = useNavigate()\r\n  const [valFilterKelurahan, setFilterKelurahan] = useState({val: ''})\r\n  const [valFilterKecamatan, setFilterKecamatan] = useState({val: ''})\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [loading, setLoading] = useState(false)\r\n  const [perPage, setPerPage] = useState(10)\r\n  const [temp, setTemp] = useState([])\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n  // const [data, setData] = useState([])\r\n\r\n  // END STATE SECTION\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const handleFilter = async () => {\r\n    let uriParam = ''\r\n    if (valFilterKecamatan.val !== '') {\r\n      uriParam += `kecamatan=${valFilterKecamatan.val}`\r\n    }\r\n    if (valFilterKelurahan.val !== '') {\r\n      uriParam += `&kelurahan=${valFilterKelurahan.val}`\r\n    }\r\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\r\n  }\r\n\r\n  const handleChangeInputKelurahan = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterKelurahan({val: event.target.value})\r\n  }\r\n  const handleChangeInputKecamatan = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterKecamatan({val: event.target.value})\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      sortField: 'no',\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Kode Kelurahan',\r\n      selector: (row: any) => row.kode_kelurahan,\r\n      sortable: true,\r\n      sortField: 'kelurahan',\r\n    },\r\n    {\r\n      name: 'Kelurahan',\r\n      selector: (row: any) => row.kelurahan,\r\n      sortable: true,\r\n      sortField: 'kelurahan',\r\n    },\r\n    {\r\n      name: 'Kode Kecamatan',\r\n      selector: (row: any) => row.kode_kecamatan,\r\n      sortable: true,\r\n      sortField: 'Kode kecamatan',\r\n    },\r\n    {\r\n      name: 'Kecamatan',\r\n      selector: (row: any) => row.kecamatan,\r\n      sortable: true,\r\n      sortField: 'kecamatan',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      align: 'left',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kelurahan/LihatKelurahan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Kelurahan/Updatekelurahan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Ubah\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  //if(valFilterKecamatan.val ? valFilterKecamatan.val : '' || valFilterKelurahan.val ? valFilterKelurahan.val : ''){\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      console.log(qParamFind)\r\n      const response = await axios.get(\r\n        `${KELURAHAN_URL}/findone-by-kelurahan?${qParamFind.strparam}`\r\n      )\r\n      console.log(response.data.data)\r\n      // setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n  //}\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true)\r\n    const value = await axios.get(KELURAHAN_URL + '/find')\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n\r\n  // const handlePageChange = (page: any) => {\r\n  //   fetchUsers(page)\r\n  // }\r\n\r\n  // const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n  //   setLoading(true)\r\n\r\n  //   const response = await axios.get(\r\n  //     `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`\r\n  //   )\r\n\r\n  //   setData(response.data.data)\r\n  //   setPerPage(newPerPage)\r\n  //   setLoading(false)\r\n  // }\r\n\r\n  // const handleSort = (column: any, sortDirection: any) => {\r\n  //   // simulate server sort\r\n  //   console.log(column, sortDirection)\r\n  //   setLoading(true)\r\n\r\n  //   // instead of setTimeout this is where you would handle your API call.\r\n  //   setTimeout(() => {\r\n  //     setData(orderBy(data, column.sortField, sortDirection))\r\n  //     setLoading(false)\r\n  //   }, 100)\r\n  // }\r\n\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      title: 'Anda yakin?',\r\n      text: 'Ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${KELURAHAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        {/* {valFilterKecamatan.val === 'PNS' || valFilterKecamatan.val === '' ? ( */}\r\n        <div className='col-xxl-6 col-lg-6 col-md-6 col-sm-12'>\r\n          <label htmlFor='' className='mb-3'>\r\n            Kecamatan\r\n          </label>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='kecamatan'\r\n            value={valFilterKecamatan.val}\r\n            onChange={handleChangeInputKecamatan}\r\n            placeholder='Kecamatan'\r\n          />\r\n        </div>\r\n        {/* ) : null} */}\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        {/* {valFilterKelurahan.val === 'PNS' || valFilterKelurahan.val === '' ? ( */}\r\n        <div className='col-xxl-6 col-lg-6 col-md-6 col-sm-12'>\r\n          <label htmlFor='' className='mb-3'>\r\n            Kelurahan\r\n          </label>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='kelurahan'\r\n            value={valFilterKelurahan.val}\r\n            onChange={handleChangeInputKelurahan}\r\n            placeholder='Kelurahan'\r\n          />\r\n        </div>\r\n        {/* ) : null} */}\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#'>\r\n            <button onClick={handleFilter} className='btn btn-primary'>\r\n              <i className='fa-solid fa-search'></i>\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='/master/Kelurahan/TambahKelurahan'>\r\n            <button className='btn btn-primary me-5'>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n        {/* <DataTable columns={columns} data={temp} pagination /> */}\r\n        {/* <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          paginationTotalRows={totalRows}\r\n        /> */}\r\n        {temp?.length > 0 && temp && ( //urutan 4\r\n          <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.')\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.')\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  kecamatan?: string\r\n  kode_kelurahan?: string\r\n  kode_kecamatan?: string\r\n  kelurahan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kecamatan?: string\r\n  kode_kelurahan?: string\r\n  kode_kecamatan?: string\r\n  kelurahan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\r\nexport function LihatKelurahan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KELURAHAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kecamatan: jsonD.kecamatan,\r\n        kode_kelurahan: jsonD.kode_kelurahan,\r\n        kode_kecamatan: jsonD.kode_kecamatan,\r\n        kelurahan: jsonD.kelurahan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kecamatan ? valuesFormikExist?.kecamatan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kelurahan</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kelurahan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.kode_kelurahan\r\n                              ? valuesFormikExist?.kode_kelurahan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.kode_kecamatan\r\n                              ? valuesFormikExist?.kode_kecamatan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kelurahan</Form.Label>\r\n                        <Form.Control\r\n                          name='kelurahan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kelurahan ? valuesFormikExist?.kelurahan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kelurahan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kode_kecamatan?: string\r\n  kelurahan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode_kecamatan?: string\r\n  kelurahan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000//master/kelurahan\r\n\r\nexport function UpdateKelurahan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KELURAHAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kelurahan: jsonD.kelurahan,\r\n        kode_kecamatan: jsonD.kode_kecamatan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value.toUpperCase(),\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kelurahan: '',\r\n      kode_kecamatan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kelurahan: valuesFormik?.kelurahan\r\n          ? valuesFormik.kelurahan\r\n          : valuesFormikExist?.kelurahan\r\n          ? valuesFormikExist.kelurahan\r\n          : '',\r\n        kode_kecamatan: valuesFormik?.kode_kecamatan\r\n          ? valuesFormik.kode_kecamatan\r\n          : valuesFormikExist?.kode_kecamatan\r\n          ? valuesFormikExist.kode_kecamatan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${KELURAHAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${KELURAHAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/kelurahan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/kelurahan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>kelurahan</Form.Label>\r\n                        <Form.Control\r\n                          name='kelurahan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kelurahan || valuesFormik?.kelurahan === ''\r\n                              ? valuesFormik?.kelurahan\r\n                              : valuesFormikExist?.kelurahan\r\n                              ? valuesFormikExist?.kelurahan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kode_kecamatan || valuesFormik?.kode_kecamatan === ''\r\n                              ? valuesFormik?.kode_kecamatan\r\n                              : valuesFormikExist?.kode_kecamatan\r\n                              ? valuesFormikExist?.kode_kecamatan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/kelurahan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kelurahan?: string\r\n  kode_kecamatan?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\r\n\r\nexport function TambahKelurahan() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value.toUpperCase(),\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kelurahan: '',\r\n      kode_kecamatan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kelurahan: valuesFormik?.kelurahan ? valuesFormik.kelurahan : '',\r\n        kode_kecamatan: valuesFormik?.kode_kecamatan ? valuesFormik.kode_kecamatan : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${KELURAHAN_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${KELURAHAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/kelurahan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/kelurahan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>kelurahan</Form.Label>\r\n                        <Form.Control\r\n                          name='kelurahan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kelurahan}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kode_kecamatan}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/kelurahan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan`\r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_kegiatan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  jenis_kegiatan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisKegiatan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisKegiatan, setFilterJenisKegiatan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisKegiatan.val !== '') {\r\n      uriParam += `${valFilterJenisKegiatan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisKegiatan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisKegiatan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisKegiatan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Jenis Kegiatan',\r\n      selector: (row: any) => row.jenis_kegiatan,\r\n      sortable: true,\r\n      sortField: 'jenis_kegiatan',\r\n    },\r\n    {\r\n      name: 'Kode',\r\n      selector: (row: any) => row.kode,\r\n      sortable: true,\r\n      sortField: 'kode',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisKegiatan/LihatJenisKegiatan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KEGIATAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan, //? valuesFormik.jenis_kegiatan : '',\r\n      }\r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KEGIATAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KEGIATAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_kegiatan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KEGIATAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Kegiatan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisKegiatan.val} //4\r\n            onChange={handleChangeInputJenisKegiatan}\r\n            placeholder='Jenis Kegiatan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Kegiatan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Kegiatan</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_kegiatan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_kegiatan && formik.errors.jenis_kegiatan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_kegiatan && !formik.errors.jenis_kegiatan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_kegiatan}\r\n                    />\r\n                    {formik.touched.jenis_kegiatan && formik.errors.jenis_kegiatan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_kegiatan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_kegiatan?: string\r\n  updated_by?: string\r\n  kode?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kegiatan?: string\r\n  kode?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/jenis_kegiatan\r\n\r\nexport function LihatJenisKegiatan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kegiatan: jsonD.jenis_kegiatan,\r\n        kode: jsonD.kode,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kegiatan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis kegiatan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_kegiatan\r\n                              ? valuesFormikExist?.jenis_kegiatan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>kode</Form.Label>\r\n                        <Form.Control\r\n                          name='kode'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKegiatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kegiatan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  jenis_kegiatan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000//master/jenis-kegiatan\r\n\r\nexport function UpdateJenisKegiatan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kegiatan: jsonD.jenis_kegiatan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kegiatan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan\r\n          ? valuesFormik.jenis_kegiatan\r\n          : valuesFormikExist?.jenis_kegiatan\r\n          ? valuesFormikExist.jenis_kegiatan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KEGIATAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KEGIATAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKegiatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKegiatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kegiatan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kegiatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_kegiatan || valuesFormik?.jenis_kegiatan === ''\r\n                              ? valuesFormik?.jenis_kegiatan\r\n                              : valuesFormikExist?.jenis_kegiatan\r\n                              ? valuesFormikExist?.jenis_kegiatan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKegiatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kegiatan?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/master/jenis_kegiatan\r\n\r\nexport function TambahJenisKegiatan() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kegiatan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan ? valuesFormik.jenis_kegiatan : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${JENIS_KEGIATAN_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${JENIS_KEGIATAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKegiatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKegiatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kegiatan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kegiatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.jenis_kegiatan}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKegiatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_kejadian?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_kejadian: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisKejadian() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisKejadian, setFilterJenisKejadian] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisKejadian.val !== '') {\r\n      uriParam += `${valFilterJenisKejadian.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisKejadian({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisKejadian = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisKejadian({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Kejadian',\r\n      selector: (row: any) => row.jenis_kejadian,\r\n      sortable: true,\r\n      sortField: 'jenis_kejadian',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisKejadian/LihatJenisKejadian/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KEJADIAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_kejadian: valuesFormik?.jenis_kejadian, //? valuesFormik.jenis_kejadian : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KEJADIAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KEJADIAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_kejadian: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KEJADIAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Kejadian</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisKejadian.val} //4\r\n            onChange={handleChangeInputJenisKejadian}\r\n            placeholder='Jenis Kejadian'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Kejadian</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Kejadian</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_kejadian'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_kejadian && formik.errors.jenis_kejadian,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_kejadian && !formik.errors.jenis_kejadian,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_kejadian}\r\n                    />\r\n                    {formik.touched.jenis_kejadian && formik.errors.jenis_kejadian && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_kejadian}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_kejadian?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kejadian?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000/jenis-kejadian\r\n\r\nexport function LihatJenisKejadian() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kejadian: jsonD.jenis_kejadian,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kejadian'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_kejadian\r\n                              ? valuesFormikExist?.jenis_kejadian\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKejadian'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kejadian?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kejadian?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000//master/jenis-kejadian\r\n\r\nexport function UpdateJenisKejadian() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kejadian: jsonD.jenis_kejadian,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kejadian: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kejadian: valuesFormik?.jenis_kejadian\r\n          ? valuesFormik.jenis_kejadian\r\n          : valuesFormikExist?.jenis_kejadian\r\n          ? valuesFormikExist.jenis_kejadian\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KEJADIAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KEJADIAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKejadian', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKejadian', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kejadian'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_kejadian || valuesFormik?.jenis_kejadian === ''\r\n                              ? valuesFormik?.jenis_kejadian\r\n                              : valuesFormikExist?.jenis_kejadian\r\n                              ? valuesFormikExist?.jenis_kejadian\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKejadian'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kejadian?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000/master/jenis-kejadian\r\n\r\nexport function TambahJenisKejadian() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kejadian: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kejadian: valuesFormik?.jenis_kejadian ? valuesFormik.jenis_kejadian : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${JENIS_KEJADIAN_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${JENIS_KEJADIAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKejadian', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKejadian', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kejadian'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.jenis_kejadian}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKejadian'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PELANGGARAN_URL = `${API_URL}/master/Jenis-pelanggaran` //http://localhost:3000/Jenis-pelanggaran\r\nexport function JenisPelanggaran() {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1);\r\n  }, []);\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\r\n          <div className=\"d-flex flex-column\">\r\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.id,\r\n      sortable: true,\r\n      sortField: 'id',\r\n    },\r\n    {\r\n    },\r\n    {\r\n      name: 'Jenis Pelanggaran',\r\n      selector: (row: any) => row.jenis_pelanggaran,\r\n      sortable: true,\r\n      sortField: 'jenis_pelanggaran',\r\n    },\r\n    {\r\n    },\r\n    {\r\n      \r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: \"Action\",\r\n      className: \"action\",\r\n      align: \"left\",\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n\r\n            <div className=\"mb-2\">\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size=\"sm\"\r\n                    variant=\"light\"\r\n                    title=\"Aksi\">\r\n                    <Dropdown.Item>\r\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\r\n                        Detail\r\n                      </Link>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n\r\n  ];\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n   \r\n  const [temp, setTemp] = useState([]);\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true);\r\n    const value = await axios.get(JENIS_PELANGGARAN_URL + \"/find\");\r\n\r\n    setTemp(value.data.data);\r\n    console.log('cek response api:',temp);\r\n\r\n    \r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\r\n    setData(response.data.data);\r\n   \r\n    setTotalRows(response.data.total);\r\n    setLoading(false);\r\n    console.log('cek ahhh :' ,data);\r\n    return [data, setData] as const;\r\n  };\r\n\r\n  const handlePageChange = (page: any) => {\r\n    fetchUsers(page);\r\n  };\r\n\r\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n    setLoading(true);\r\n\r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\r\n\r\n    setData(response.data.data);\r\n    setPerPage(newPerPage);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSort = (column: any, sortDirection: any) => {\r\n    // simulate server sort\r\n    console.log(column, sortDirection);\r\n    setLoading(true);\r\n\r\n    // instead of setTimeout this is where you would handle your API call.\r\n    setTimeout(() => {\r\n      setData(orderBy(data, column.sortField, sortDirection));\r\n      setLoading(false);\r\n    }, 100);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Jenis Pelanggaran\r\n            </label>\r\n            <input\r\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\r\n          </div>\r\n      </div>\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n        <Link to='#'>\r\n            <button className='btn btn-primary'>\r\n              <i className='fa-solid fa-search'></i>\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\r\n          <Link to='#'>\r\n            <button className='btn btn-primary me-5' onClick={handleShow}>\r\n              <i className=\"fa-solid fa-plus\"></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tambah Jenis Pelanggaran</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\r\n        <Form.Group className=\"mb-3 form-control-solid\">\r\n            <Form.Label>Jenis Pelanggaran</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Jenis Pelanggaran\" />\r\n        </Form.Group>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n          <i className=\"fa-solid fa-paper-plane\"></i>\r\n            Simpan\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n      <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            pagination\r\n        />\r\n        {/* <DataTable\r\n          columns={columns}\r\n          data={data}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          sortServer\r\n          onSort={handleSort}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n        /> */}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_pertolongan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_pertolongan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisPertolongan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisPertolongan, setFilterJenisPertolongan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisPertolongan.val !== '') {\r\n      uriParam += `${valFilterJenisPertolongan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisPertolongan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisPertolongan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisPertolongan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Pertolongan',\r\n      selector: (row: any) => row.jenis_pertolongan,\r\n      sortable: true,\r\n      sortField: 'jenis_pertolongan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisPertolongan/LihatJenisPertolongan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_PERTOLONGAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_pertolongan: valuesFormik?.jenis_pertolongan, //? valuesFormik.jenis_pertolongan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_PERTOLONGAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_PERTOLONGAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_pertolongan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_PERTOLONGAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Pertolongan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisPertolongan.val} //4\r\n            onChange={handleChangeInputJenisPertolongan}\r\n            placeholder='Jenis pertolongan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Pertolongan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Pertolongan</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_pertolongan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_pertolongan && formik.errors.jenis_pertolongan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_pertolongan && !formik.errors.jenis_pertolongan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_pertolongan}\r\n                    />\r\n                    {formik.touched.jenis_pertolongan && formik.errors.jenis_pertolongan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_pertolongan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_pertolongan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_pertolongan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatJenisPertolongan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_pertolongan: jsonD.jenis_pertolongan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Pertolongan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_pertolongan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.jenis_pertolongan ? valuesFormikExist?.jenis_pertolongan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPertolongan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_pertolongan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  jenis_pertolongan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` //http://localhost:3000//master/JenisPertolongan\r\n\r\nexport function UpdateJenisPertolongan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_pertolongan: jsonD.jenis_pertolongan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_pertolongan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_pertolongan: valuesFormik?.jenis_pertolongan\r\n          ? valuesFormik.jenis_pertolongan\r\n          : valuesFormikExist?.jenis_pertolongan\r\n          ? valuesFormikExist.jenis_pertolongan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_PERTOLONGAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_PERTOLONGAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisPertolongan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisPertolongan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Pertolongan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_pertolongan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_pertolongan || valuesFormik?.jenis_pertolongan === ''\r\n                              ? valuesFormik?.jenis_pertolongan\r\n                              : valuesFormikExist?.jenis_pertolongan\r\n                              ? valuesFormikExist?.jenis_pertolongan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPertolongan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PERDA_PERKADA_URL = `${API_URL}/master/jenis-perda-perkada` //http://localhost:3000/jenis-perda-perkada\r\n\r\nexport function JenisPerdaPerkada() {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1);\r\n  }, []);\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\r\n          <div className=\"d-flex flex-column\">\r\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.id,\r\n      sortable: true,\r\n      sortField: 'id',\r\n    },\r\n    {\r\n    },\r\n    {\r\n      name: 'Judul',\r\n      selector: (row: any) => row.judul,\r\n      sortable: true,\r\n      sortField: 'judul',\r\n    },\r\n    {\r\n      name: 'Deskripsi',\r\n      selector: (row: any) => row.deskripsi,\r\n      sortable: true,\r\n      sortField: 'deskripsi',\r\n    },\r\n    {\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: \"Action\",\r\n      className: \"action\",\r\n      align: \"left\",\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n\r\n            <div className=\"mb-2\">\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size=\"sm\"\r\n                    variant=\"light\"\r\n                    title=\"Aksi\">\r\n                    <Dropdown.Item>\r\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\r\n                        Detail\r\n                      </Link>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n\r\n  ];\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n   \r\n  const [temp, setTemp] = useState([]);\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true);\r\n    const value = await axios.get(JENIS_PERDA_PERKADA_URL + \"/find\");\r\n\r\n    setTemp(value.data.data);\r\n    console.log('cek response api:',temp);\r\n\r\n    \r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\r\n    setData(response.data.data);\r\n   \r\n    setTotalRows(response.data.total);\r\n    setLoading(false);\r\n    console.log('cek ahhh :' ,data);\r\n    return [data, setData] as const;\r\n  };\r\n\r\n  const handlePageChange = (page: any) => {\r\n    fetchUsers(page);\r\n  };\r\n\r\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n    setLoading(true);\r\n\r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\r\n\r\n    setData(response.data.data);\r\n    setPerPage(newPerPage);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSort = (column: any, sortDirection: any) => {\r\n    // simulate server sort\r\n    console.log(column, sortDirection);\r\n    setLoading(true);\r\n\r\n    // instead of setTimeout this is where you would handle your API call.\r\n    setTimeout(() => {\r\n      setData(orderBy(data, column.sortField, sortDirection));\r\n      setLoading(false);\r\n    }, 100);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Judul Perda / Perkada\r\n            </label>\r\n            <input\r\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\r\n          </div>\r\n      </div>\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Deskripsi\r\n            </label>\r\n            <input\r\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\r\n          </div>\r\n      </div>\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n        <Link to='#'>\r\n            <button className='btn btn-primary'>\r\n              <i className='fa-solid fa-search'></i>\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-5' onClick={handleShow}>\r\n              <i className=\"fa-solid fa-plus\"></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tambah Jenis Perda / Perkada</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\r\n        <Form.Group className=\"mb-3 form-control-solid\">\r\n            <Form.Label>Perda / Perkada</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Perda / Perkada\" />\r\n        </Form.Group>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n          <i className=\"fa-solid fa-paper-plane\"></i>\r\n            Simpan\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n      <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            pagination\r\n        />\r\n        {/* <DataTable\r\n          columns={columns}\r\n          data={data}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          sortServer\r\n          onSort={handleSort}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n        /> */}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_penindakan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_penindakan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisPenindakan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisPenindakan, setFilterJenisPenindakan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisPenindakan.val !== '') {\r\n      uriParam += `${valFilterJenisPenindakan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisPenindakan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisPenindakan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisPenindakan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Penindakan',\r\n      selector: (row: any) => row.jenis_penindakan,\r\n      sortable: true,\r\n      sortField: 'jenis_penindakan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisPenindakan/LihatJenisPenindakan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_PENINDAKAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_penindakan: valuesFormik?.jenis_penindakan, //? valuesFormik.jenis_penindakan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_PENINDAKAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_PENINDAKAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_penindakan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_PENINDAKAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Penindakan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisPenindakan.val} //4\r\n            onChange={handleChangeInputJenisPenindakan}\r\n            placeholder='Jenis Penindakan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Penindakan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Penindakan</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_penindakan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_penindakan && formik.errors.jenis_penindakan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_penindakan && !formik.errors.jenis_penindakan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_penindakan}\r\n                    />\r\n                    {formik.touched.jenis_penindakan && formik.errors.jenis_penindakan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_penindakan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_penindakan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_penindakan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` //http://localhost:3000/jenis-Penindakan\r\n\r\nexport function LihatJenisPenindakan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_penindakan: jsonD.jenis_penindakan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Penindakan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_penindakan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_penindakan\r\n                              ? valuesFormikExist?.jenis_penindakan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Jenispenindakan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_penindakan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_penindakan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` //http://localhost:3000//master/jenis-Penindakan\r\n\r\nexport function UpdateJenisPenindakan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_penindakan: jsonD.jenis_penindakan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_penindakan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_penindakan: valuesFormik?.jenis_penindakan\r\n          ? valuesFormik.jenis_penindakan\r\n          : valuesFormikExist?.jenis_penindakan\r\n          ? valuesFormikExist.jenis_penindakan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_PENINDAKAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_PENINDAKAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisPenindakan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisPenindakan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Penindakan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_penindakan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_penindakan || valuesFormik?.jenis_penindakan === ''\r\n                              ? valuesFormik?.jenis_penindakan\r\n                              : valuesFormikExist?.jenis_penindakan\r\n                              ? valuesFormikExist?.jenis_penindakan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPenindakan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  jenis_korban_jiwa?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_korban_jiwa: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function KorbanJiwa() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterKorbanJiwa, setFilterKorbanJiwa] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterKorbanJiwa.val !== '') {\r\n      uriParam += `${valFilterKorbanJiwa.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterKorbanJiwa({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputKorbanJiwa = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterKorbanJiwa({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Korban Jiwa',\r\n      selector: (row: any) => row.jenis_korban_jiwa,\r\n      sortable: true,\r\n      sortField: 'jenis_korban_jiwa',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/KorbanJiwa/LihatKorbanJiwa/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KORBAN_JIWA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa, //? valuesFormik.jenis_korban_jiwa : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KORBAN_JIWA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KORBAN_JIWA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_korban_jiwa: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KORBAN_JIWA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>KorbanJiwa</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterKorbanJiwa.val} //4\r\n            onChange={handleChangeInputKorbanJiwa}\r\n            placeholder='Korban Jiwa'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Korban Jiwa</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Korban Jiwa</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_korban_jiwa'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_korban_jiwa && formik.errors.jenis_korban_jiwa,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_korban_jiwa && !formik.errors.jenis_korban_jiwa,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_korban_jiwa}\r\n                    />\r\n                    {formik.touched.jenis_korban_jiwa && formik.errors.jenis_korban_jiwa && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_korban_jiwa}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_jiwa?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_korban_jiwa?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/master/korban_jiwa\r\n\r\nexport function LihatKorbanJiwa() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_korban_jiwa: jsonD.jenis_korban_jiwa,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Korban Jiwa</Form.Label>\r\n                        <Form.Control\r\n                          name='korban jiwa'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_korban_jiwa\r\n                              ? valuesFormikExist?.jenis_korban_jiwa\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanJiwa'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_jiwa?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_korban_jiwa?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000//master/jenis_korban_jiwa\r\n\r\nexport function UpdateKorbanJiwa() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_korban_jiwa: jsonD.jenis_korban_jiwa,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_korban_jiwa: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa\r\n          ? valuesFormik.jenis_korban_jiwa\r\n          : valuesFormikExist?.jenis_korban_jiwa\r\n          ? valuesFormikExist.jenis_korban_jiwa\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KORBAN_JIWA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KORBAN_JIWA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/KorbanJiwa', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/KorbanJiwa', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Korban Jiwa</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_korban_jiwa'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_korban_jiwa ||\r\n                            valuesFormik?.jenis_korban_jiwa === ''\r\n                              ? valuesFormik?.jenis_korban_jiwa\r\n                              : valuesFormikExist?.jenis_korban_jiwa\r\n                              ? valuesFormikExist?.jenis_korban_jiwa\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanJiwa'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_jiwa?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/master/jenis-korban-jiwa\r\n\r\nexport function TambahKorbanJiwa() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_korban_jiwa: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa ? valuesFormik.jenis_korban_jiwa : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${JENIS_KORBAN_JIWA_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${JENIS_KORBAN_JIWA_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/KorbanJiwa', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/KorbanJiwa', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>jenis Korban Jiwa</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_korban_jiwa'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.jenis_korban_jiwa}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanJiwa'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  jenis_korban_material?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_korban_material: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function KorbanMaterial() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterKorbanMaterial, setFilterKorbanMaterial] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterKorbanMaterial.val !== '') {\r\n      uriParam += `${valFilterKorbanMaterial.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterKorbanMaterial({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputKorbanMaterial = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterKorbanMaterial({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Korban Material',\r\n      selector: (row: any) => row.jenis_korban_material,\r\n      sortable: true,\r\n      sortField: 'jenis_korban_material',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/KorbanMaterial/LihatKorbanMaterial/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_material: valuesFormik?.jenis_korban_material, //? valuesFormik.jenis_korban_material : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KORBAN_MATERIAL_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KORBAN_MATERIAL_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_korban_material: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KORBAN_MATERIAL_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Korban Material</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterKorbanMaterial.val} //4\r\n            onChange={handleChangeInputKorbanMaterial}\r\n            placeholder='Korban Material'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Korban Material</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Korban Material</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_korban_material'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_korban_material && formik.errors.jenis_korban_material,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_korban_material && !formik.errors.jenis_korban_material,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_korban_material}\r\n                    />\r\n                    {formik.touched.jenis_korban_material && formik.errors.jenis_korban_material && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_korban_material}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_material?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_korban_material?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` //http://localhost:3000/master/korban_jiwa\r\n\r\nexport function LihatKorbanMaterial() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_korban_material: jsonD.jenis_korban_material,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Korban Material</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_korban_material'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_korban_material\r\n                              ? valuesFormikExist?.jenis_korban_material\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanMaterial'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_material?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_korban_material?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` //http://localhost:3000/master/korban_jiwa\r\n\r\nexport function UpdateKorbanMaterial() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_korban_material: jsonD.jenis_korban_material,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_korban_material: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_material: valuesFormik?.jenis_korban_material\r\n          ? valuesFormik.jenis_korban_material\r\n          : valuesFormikExist?.jenis_korban_material\r\n          ? valuesFormikExist.jenis_korban_material\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KORBAN_MATERIAL_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KORBAN_MATERIAL_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/KorbanMaterial', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/KorbanMaterial', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Korban Material</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_korban_material'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_korban_material || valuesFormik?.jenis_korban_material === ''\r\n                              ? valuesFormik?.jenis_korban_material\r\n                              : valuesFormikExist?.jenis_korban_material\r\n                              ? valuesFormikExist?.jenis_korban_material\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanMaterial'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_bantuan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_bantuan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisBantuan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisBantuan, setFilterJenisBantuan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisBantuan.val !== '') {\r\n      uriParam += `${valFilterJenisBantuan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisBantuan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisBantuan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisBantuan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Bantuan',\r\n      selector: (row: any) => row.jenis_bantuan,\r\n      sortable: true,\r\n      sortField: 'jenis_bantuan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisBantuan/LihatJenisBantuan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_BANTUAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_bantuan: valuesFormik?.jenis_bantuan, //? valuesFormik.jenis_bantuan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_BANTUAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_BANTUAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_bantuan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_BANTUAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_BANTUAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Bantuan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisBantuan.val} //4\r\n            onChange={handleChangeInputJenisBantuan}\r\n            placeholder='Jenis Bantuan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Bantuan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Bantuan</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_bantuan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_bantuan && formik.errors.jenis_bantuan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_bantuan && !formik.errors.jenis_bantuan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_bantuan}\r\n                    />\r\n                    {formik.touched.jenis_bantuan && formik.errors.jenis_bantuan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_bantuan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_bantuan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_bantuan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` //http://localhost:3000/JenisBantuan\r\n\r\nexport function LihatJenisBantuan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_bantuan: jsonD.jenis_bantuan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Bantuan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_bantuan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_bantuan\r\n                              ? valuesFormikExist?.jenis_bantuan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisBantuan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_bantuan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_bantuan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateJenisBantuan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_bantuan: jsonD.jenis_bantuan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_bantuan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_bantuan: valuesFormik?.jenis_bantuan\r\n          ? valuesFormik.jenis_bantuan\r\n          : valuesFormikExist?.jenis_bantuan\r\n          ? valuesFormikExist.jenis_bantuan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_BANTUAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_BANTUAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisBantuan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisBantuan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Bantuan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_bantuan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_bantuan || valuesFormik?.jenis_bantuan === ''\r\n                              ? valuesFormik?.jenis_bantuan\r\n                              : valuesFormikExist?.jenis_bantuan\r\n                              ? valuesFormikExist?.jenis_bantuan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisBantuan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function InstansiTerkait() {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1);\r\n  }, []);\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\r\n          <div className=\"d-flex flex-column\">\r\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'Jenis Sarana & Prasarana',\r\n      selector: (row: any) => row.jenis_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'jenis_sarana_prasarana',\r\n    },\r\n    {\r\n      name: 'Status Sarana & Prasarana',\r\n      selector: (row: any) => row.status_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'status_sarana_prasarana',\r\n    },\r\n    {\r\n      name: 'Jumlah',\r\n      selector: (row: any) => row.jumlah,\r\n      sortable: true,\r\n      sortField: 'jumlah',\r\n    },\r\n    {\r\n      name: 'Kondisi',\r\n      selector: (row: any) => row.kondisi,\r\n      sortable: true,\r\n      sortField: 'kondisi',\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: (row: any) => row.keterangan,\r\n      sortable: true,\r\n      sortField: 'keterangan',\r\n    },\r\n    {\r\n      name: 'Dokumentasi',\r\n      selector: (row: any) => row.dokumentasi,\r\n      sortable: true,\r\n      sortField: 'dokumentasi',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: \"Action\",\r\n      className: \"action\",\r\n      align: \"left\",\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n\r\n            <div className=\"mb-2\">\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size=\"sm\"\r\n                    variant=\"light\"\r\n                    title=\"Aksi\">\r\n                    <Dropdown.Item>\r\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\r\n                        Detail\r\n                      </Link>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n\r\n  ];\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n   \r\n  const [temp, setTemp] = useState([]);\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true);\r\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\r\n\r\n    setTemp(value.data.data);\r\n    console.log('cek response api:',temp);\r\n\r\n    \r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\r\n    setData(response.data.data);\r\n   \r\n    setTotalRows(response.data.total);\r\n    setLoading(false);\r\n    console.log('cek ahhh :' ,data);\r\n    return [data, setData] as const;\r\n  };\r\n\r\n  const handlePageChange = (page: any) => {\r\n    fetchUsers(page);\r\n  };\r\n\r\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n    setLoading(true);\r\n\r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\r\n\r\n    setData(response.data.data);\r\n    setPerPage(newPerPage);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSort = (column: any, sortDirection: any) => {\r\n    // simulate server sort\r\n    console.log(column, sortDirection);\r\n    setLoading(true);\r\n\r\n    // instead of setTimeout this is where you would handle your API call.\r\n    setTimeout(() => {\r\n      setData(orderBy(data, column.sortField, sortDirection));\r\n      setLoading(false);\r\n    }, 100);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Instansi Terkait\r\n            </label>\r\n            <input\r\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\r\n          </div>\r\n      </div>\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n        <Link to='#'>\r\n            <button className='btn btn-primary'>\r\n              <i className='fa-solid fa-search'></i>\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-5' onClick={handleShow}>\r\n              <i className=\"fa-solid fa-plus\"></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tambah Instansi Terkait</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\r\n        <Form.Group className=\"mb-3 form-control-solid\">\r\n            <Form.Label>Instansi Terakait</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Instansi Terkait\" />\r\n        </Form.Group>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n          <i className=\"fa-solid fa-paper-plane\"></i>\r\n            Simpan\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n      <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            pagination\r\n        />\r\n        {/* <DataTable\r\n          columns={columns}\r\n          data={data}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          sortServer\r\n          onSort={handleSort}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n        /> */}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  kondisi_sarana_prasarana?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  kondisi_sarana_prasarana: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function KondisiSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterKondisiSaranaPrasarana, setFilterKondisiSaranaPrasarana] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterKondisiSaranaPrasarana.val !== '') {\r\n      uriParam += `${valFilterKondisiSaranaPrasarana.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterKondisiSaranaPrasarana({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputKondisiSaranaPrasarana = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterKondisiSaranaPrasarana({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Kondisi Sarana Prasarana',\r\n      selector: (row: any) => row.kondisi_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'kondisi_sarana_prasarana',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/KondisiSaranaPrasarana/LihatKondisiSaranaPrasarana/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        kondisi_sarana_prasarana: valuesFormik?.kondisi_sarana_prasarana, //? valuesFormik.kondisi_sarana_prasarana : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${KONDISI_SARANA_PRASARANA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${KONDISI_SARANA_PRASARANA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      kondisi_sarana_prasarana: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${KONDISI_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Kondisi Sarana Prasarana</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterKondisiSaranaPrasarana.val} //4\r\n            onChange={handleChangeInputKondisiSaranaPrasarana}\r\n            placeholder='Kondisi Sarana Prasarana'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Kondisi Sarana Prasarana</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Kondisi Sarana Prasarana</Form.Label>\r\n                  <Form.Control\r\n                      name='kondisi_sarana_prasarana'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.kondisi_sarana_prasarana && formik.errors.kondisi_sarana_prasarana,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.kondisi_sarana_prasarana && !formik.errors.kondisi_sarana_prasarana,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.kondisi_sarana_prasarana}\r\n                    />\r\n                    {formik.touched.kondisi_sarana_prasarana && formik.errors.kondisi_sarana_prasarana && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.kondisi_sarana_prasarana}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  kondisi_sarana_prasarana?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kondisi_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` //http://localhost:3000/Kondisi-Penindakan\r\n\r\nexport function LihatKondisiSaranaPrasarana() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kondisi_sarana_prasarana: jsonD.kondisi_sarana_prasarana,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kondisi Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='kondisi_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.kondisi_sarana_prasarana\r\n                              ? valuesFormikExist?.kondisi_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KondisiSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kondisi_sarana_prasarana?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kondisi_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateKondisiSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kondisi_sarana_prasarana: jsonD.kondisi_sarana_prasarana,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kondisi_sarana_prasarana: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kondisi_sarana_prasarana: valuesFormik?.kondisi_sarana_prasarana\r\n          ? valuesFormik.kondisi_sarana_prasarana\r\n          : valuesFormikExist?.kondisi_sarana_prasarana\r\n          ? valuesFormikExist.kondisi_sarana_prasarana\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${KONDISI_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${KONDISI_SARANA_PRASARANA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/KondisiSaranaPrasarana', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/KondisiSaranaPrasarana', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kondisi Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='kondisi_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kondisi_sarana_prasarana || valuesFormik?.kondisi_sarana_prasarana === ''\r\n                              ? valuesFormik?.kondisi_sarana_prasarana\r\n                              : valuesFormikExist?.kondisi_sarana_prasarana\r\n                              ? valuesFormikExist?.kondisi_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KondisiSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  status_sarana_prasarana?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  status_sarana_prasarana: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function StatusSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterStatusSaranaPrasarana, setFilterStatusSaranaPrasarana] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterStatusSaranaPrasarana.val !== '') {\r\n      uriParam += `${valFilterStatusSaranaPrasarana.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterStatusSaranaPrasarana({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputStatusSaranaPrasarana = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterStatusSaranaPrasarana({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Status Sarana Prasarana',\r\n      selector: (row: any) => row.status_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'status_sarana_prasarana',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/StatusSaranaPrasarana/LihatStatusSaranaPrasarana/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        status_sarana_prasarana: valuesFormik?.status_sarana_prasarana, //? valuesFormik.status_sarana_prasarana : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${STATUS_SARANA_PRASARANA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${STATUS_SARANA_PRASARANA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      status_sarana_prasarana: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${STATUS_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Status Sarana Prasarana</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterStatusSaranaPrasarana.val} //4\r\n            onChange={handleChangeInputStatusSaranaPrasarana}\r\n            placeholder='Status Sarana Prasarana'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Status Sarana Prasarana</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Status Sarana Prasarana</Form.Label>\r\n                  <Form.Control\r\n                      name='status_sarana_prasarana'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.status_sarana_prasarana && formik.errors.status_sarana_prasarana,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.status_sarana_prasarana && !formik.errors.status_sarana_prasarana,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.status_sarana_prasarana}\r\n                    />\r\n                    {formik.touched.status_sarana_prasarana && formik.errors.status_sarana_prasarana && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.status_sarana_prasarana}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  status_sarana_prasarana?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  status_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` //http://localhost:3000/jenis-Penindakan\r\n\r\nexport function LihatStatusSaranaPrasarana() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        status_sarana_prasarana: jsonD.status_sarana_prasarana,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Status Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='status_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.status_sarana_prasarana\r\n                              ? valuesFormikExist?.status_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/StatusSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  status_sarana_prasarana?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  status_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateStatusSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        status_sarana_prasarana: jsonD.status_sarana_prasarana,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      status_sarana_prasarana: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        status_sarana_prasarana: valuesFormik?.status_sarana_prasarana\r\n          ? valuesFormik.status_sarana_prasarana\r\n          : valuesFormikExist?.status_sarana_prasarana\r\n          ? valuesFormikExist.status_sarana_prasarana\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${STATUS_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${STATUS_SARANA_PRASARANA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/StatusSaranaPrasarana', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/StatusSaranaPrasarana', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Status Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='status_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.status_sarana_prasarana || valuesFormik?.status_sarana_prasarana === ''\r\n                              ? valuesFormik?.status_sarana_prasarana\r\n                              : valuesFormikExist?.status_sarana_prasarana\r\n                              ? valuesFormikExist?.status_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/StatusSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const AGAMA_URL = `${API_URL}/master/agama` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  agama?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  agama: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function Agama() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterAgama, setFilterAgama] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterAgama.val !== '') {\r\n      uriParam += `${valFilterAgama.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterAgama({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputAgama = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterAgama({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Agama',\r\n      selector: (row: any) => row.agama,\r\n      sortable: true,\r\n      sortField: 'agama',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Agama/LihatAgama/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${AGAMA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${AGAMA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        agama: valuesFormik?.agama, //? valuesFormik.agama : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${AGAMA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${AGAMA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      agama: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${AGAMA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${AGAMA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Agama</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterAgama.val} //4\r\n            onChange={handleChangeInputAgama}\r\n            placeholder='Agama'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Agama</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Agama</Form.Label>\r\n                  <Form.Control\r\n                      name='agama'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.agama && formik.errors.agama,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.agama && !formik.errors.agama,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.agama}\r\n                    />\r\n                    {formik.touched.agama && formik.errors.agama && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.agama}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  agama?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  agama?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatAgama() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${AGAMA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        agama: jsonD.agama,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>agama</Form.Label>\r\n                        <Form.Control\r\n                          name='agama'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.agama ? valuesFormikExist?.agama : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Agama'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  agama?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  agama?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000//master/agama\r\n\r\nexport function UpdateAgama() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${AGAMA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        agama: jsonD.agama,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      agama: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        agama: valuesFormik?.agama\r\n          ? valuesFormik.agama\r\n          : valuesFormikExist?.agama\r\n          ? valuesFormikExist.agama\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${AGAMA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${AGAMA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Agama', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Agama', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>agama</Form.Label>\r\n                        <Form.Control\r\n                          name='agama'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.agama || valuesFormik?.agama === ''\r\n                              ? valuesFormik?.agama\r\n                              : valuesFormikExist?.agama\r\n                              ? valuesFormikExist?.agama\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Agama'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  agama?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/master/agama\r\n\r\nexport function TambahAgama() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      agama: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        agama: valuesFormik?.agama ? valuesFormik.agama : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${AGAMA_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${AGAMA_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/agama', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/agama', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>agama</Form.Label>\r\n                        <Form.Control\r\n                          name='agama'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.agama}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Agama'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const PANGKAT_URL = `${API_URL}/master/pangkat`\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nexport interface FormInput {\n  pangkat?: string\n}\n\nconst validatorForm = Yup.object().shape({\n  pangkat: Yup.string().required('Wajib diisi'),\n})\n\nexport function Pangkat() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterPangkat, setFilterPangkat] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => {\n    //3\n    let uriParam = ''\n    if (valFilterPangkat.val !== '') {\n      uriParam += `${valFilterPangkat.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handleFilterReset = () => {\n    setFilterPangkat({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputPangkat = (event: {\n    //5\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterPangkat({val: event.target.value})\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{row.serial}</div>\n      },\n    },\n    {},\n    {\n      name: 'Pangkat',\n      selector: (row: any) => row.pangkat,\n      sortable: true,\n      sortField: 'pangkat',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    menuposition='top'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Pangkat/LihatPangkat/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${PANGKAT_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n        Array.from(items).forEach((item: any, index: any) => {\n          item.serial = index + 1\n        })\n        setTemp(items)\n        setLoading(false)\n      }, 100)\n\n      return () => clearTimeout(timeout)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => {\n    //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${PANGKAT_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n    }, 50)\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        pangkat: valuesFormik?.pangkat, //? valuesFormik.pangkat : '', //? valuesFormik.kategori : '',\n      }\n\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${PANGKAT_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(`${PANGKAT_URL}/update/${idEditData.id}`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      pangkat: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n\n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${PANGKAT_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n\n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${PANGKAT_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Pangkat</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterPangkat.val} //4\n            onChange={handleChangeInputPangkat}\n            placeholder='Pangkat'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}>\n            {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Pangkat</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Pangkat</Form.Label>\n                  <Form.Control\n                    name='pangkat'\n                    className={clsx(\n                      'form-control form-control-solid mb-1',\n                      {\n                        'is-invalid': formik.touched.pangkat && formik.errors.pangkat,\n                      },\n                      {\n                        'is-valid': formik.touched.pangkat && !formik.errors.pangkat,\n                      }\n                    )}\n                    onChange={handleChangeFormik}\n                    value={valuesFormik?.pangkat}\n                  />\n                  {formik.touched.pangkat && formik.errors.pangkat && (\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>\n                        <span role='alert'>{formik.errors.pangkat}</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n        {temp?.length > 0 && temp && (\n          <DataTable\n            columns={columns}\n            data={temp}\n            progressPending={loading}\n            customStyles={customStyles}\n            progressComponent={<LoadingAnimation />}\n            pagination\n            // paginationServer\n            paginationTotalRows={totalRows}\n            //    expandableRowsComponent={(row) => (\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n            // )}\n            // expandableRowsComponent={ExpandedComponent}\n            // onChangeRowsPerPage={handlePerRowsChange}\n            // onChangePage={handlePageChange}\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n            noDataComponent={\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n                <div className='d-flex flex-column'>\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n                </div>\n              </div>\n            }\n          />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  pangkat?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  pangkat?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000//master/pangkat\r\n\r\nexport function UpdatePangkat() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${PANGKAT_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        pangkat: jsonD.pangkat,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      pangkat: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        pangkat: valuesFormik?.pangkat\r\n          ? valuesFormik.pangkat\r\n          : valuesFormikExist?.pangkat\r\n          ? valuesFormikExist.pangkat\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${PANGKAT_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${PANGKAT_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/pangkat', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/pangkat', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>pangkat</Form.Label>\r\n                        <Form.Control\r\n                          name='pangkat'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.pangkat || valuesFormik?.pangkat === ''\r\n                              ? valuesFormik?.pangkat\r\n                              : valuesFormikExist?.pangkat\r\n                              ? valuesFormikExist?.pangkat\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/pangkat'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  pangkat?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  pangkat?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\r\n\r\nexport function LihatPangkat() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${PANGKAT_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        pangkat: jsonD.pangkat,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Pangkat</Form.Label>\r\n                        <Form.Control\r\n                          name='pangkat'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.pangkat ? valuesFormikExist?.pangkat : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/pangkat'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  pangkat?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\r\n\r\nexport function TambahPangkat() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      pangkat: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        pangkat: valuesFormik?.pangkat ? valuesFormik.pangkat : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${PANGKAT_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${PANGKAT_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/pangkat', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/pangkat', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>pangkat</Form.Label>\r\n                        <Form.Control\r\n                          name='pangkat'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.pangkat}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/pangkat'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\nimport { TEMPAT_PELAKSANA_URL } from './Lihat-master/LihatTempatPelaksanaan'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const BIDANG_WILAYAH_URL = `${API_URL}/master/bidang-wilayah`\r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  nama?: string\r\n  kategori?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  kategori: Yup.string().required('Wajib diisi'),\r\n  nama: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function TempatPelaksanaan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterTempatPelaksanaan, setFilterTempatPelaksanaan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterTempatPelaksanaan.val !== '') {\r\n      uriParam += `${valFilterTempatPelaksanaan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterTempatPelaksanaan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputTempatPelaksanaan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterTempatPelaksanaan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Bidang/Wilayah',\r\n      selector: (row: any) => row.nama,\r\n      sortable: true,\r\n      sortField: 'nama',\r\n    },\r\n    {\r\n      name: 'Kode',\r\n      selector: (row: any) => row.kode,\r\n      sortable: true,\r\n      sortField: 'kode',\r\n    },\r\n    {\r\n      name: 'Kategori',\r\n      selector: (row: any) => row.kategori,\r\n      sortable: true,\r\n      sortField: 'kategori',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/TempatPelaksanaan/LihatTempatPelaksanaan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${BIDANG_WILAYAH_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${BIDANG_WILAYAH_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        nama: valuesFormik?.nama, //? valuesFormik.nama : '',\r\n        kategori: valuesFormik?.kategori //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${BIDANG_WILAYAH_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${BIDANG_WILAYAH_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      nama: '',\r\n      kategori: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${BIDANG_WILAYAH_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${BIDANG_WILAYAH_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Tempat Pelaksanaan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterTempatPelaksanaan.val} //4\r\n            onChange={handleChangeInputTempatPelaksanaan}\r\n            placeholder='Bidang/Wilayah'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Tempat Pelaksanaan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Nama Bidang/Wilayah</Form.Label>\r\n                  <Form.Control\r\n                      name='nama'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.nama && formik.errors.nama,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.nama && !formik.errors.nama,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.nama}\r\n                    />\r\n                    {formik.touched.nama && formik.errors.nama && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.nama}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  <Form.Label>Kategori</Form.Label>\r\n                  <select\r\n                          data-control='select2'\r\n                          data-placeholder='Jenis Kelamin'\r\n                          name='kategori'\r\n                          className={clsx(\r\n                            'form-control form-control-solid mb-1',\r\n                            {\r\n                              'is-invalid':\r\n                                formik.touched.kategori && formik.errors.kategori,\r\n                            },\r\n                            {\r\n                              'is-valid':\r\n                                formik.touched.kategori && !formik.errors.kategori,\r\n                            }\r\n                          )}\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kategori}\r\n                        >\r\n                          <option value=''>Pilih</option>\r\n                          <option value='Bidang'>Bidang</option>\r\n                          <option value='Wilayah'>Wilayah</option>\r\n                        </select>\r\n                        {formik.touched.kategori && formik.errors.kategori && (\r\n                          <div className='fv-plugins-message-container'>\r\n                            <div className='fv-help-block'>\r\n                              <span role='alert'>{formik.errors.kategori}</span>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  nama?: string\r\n  kategori?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  nama?: string\r\n  kategori?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const BIDANG_WILAYAH_URL = `${API_URL}/master/bidang-wilayah` //http://localhost:3000//master/kota\r\n\r\nexport function UpdateTempatPelaksanaan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${BIDANG_WILAYAH_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        nama: jsonD.nama,\r\n        kategori: jsonD.kategori,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      nama: '',\r\n      kategori: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        nama : valuesFormik?.nama\r\n          ? valuesFormik.nama\r\n          : valuesFormikExist?.nama\r\n          ? valuesFormikExist.nama\r\n          : '',\r\n          kategori: valuesFormik?.kategori\r\n          ? valuesFormik.kategori\r\n          : valuesFormikExist?.kategori\r\n          ? valuesFormikExist.kategori\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${BIDANG_WILAYAH_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${BIDANG_WILAYAH_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/TempatPelaksanaan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/TempatPelaksanaan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Bidang Wilayah</Form.Label>\r\n                        <Form.Control\r\n                          name='nama'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.nama || valuesFormik?.nama === ''\r\n                              ? valuesFormik?.nama\r\n                              : valuesFormikExist?.nama\r\n                              ? valuesFormikExist?.nama\r\n                              : ''\r\n                          }\r\n                        />\r\n                        <Form.Label>Kategori</Form.Label>\r\n                        <Form.Control\r\n                          name='kategori'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kategori || valuesFormik?.kategori === ''\r\n                              ? valuesFormik?.kategori\r\n                              : valuesFormikExist?.kategori\r\n                              ? valuesFormikExist?.kategori\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/TempatPelaksanaan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  nama?: string\r\n  kode?: string\r\n  updated_by?: string\r\n  kategori?: string\r\n}\r\n\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  nama?: string\r\n  kategori?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const TEMPAT_PELAKSANA_URL = `${API_URL}/master/bidang-wilayah` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatTempatPelaksanaan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${TEMPAT_PELAKSANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        nama: jsonD.nama,\r\n        kode: jsonD.kode,\r\n        kategori: jsonD.kategori,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Tempat Pelaksana</Form.Label>\r\n                        <Form.Control\r\n                          name='nama'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.nama ? valuesFormikExist?.nama : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode</Form.Label>\r\n                        <Form.Control\r\n                          name='kode'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kategori</Form.Label>\r\n                        <Form.Control\r\n                          name='kategori'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kategori ? valuesFormikExist?.kategori : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/TempatPelaksanaan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const SKPD_URL = `${API_URL}/master/skpd`\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  skpd?: string\n}\n\nconst validatorForm = Yup.object().shape({\n  skpd: Yup.string().required('Wajib diisi'),\n})\n\nexport function SKPD() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterSKPD, setFilterSKPD] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([]) // Urutan 1\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => {\n    //3\n    let uriParam = ''\n    if (valFilterSKPD.val !== '') {\n      uriParam += `${valFilterSKPD.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handleFilterReset = () => {\n    setFilterSKPD({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputSKPD = (event: {\n    //5\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterSKPD({val: event.target.value})\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  // let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{row.serial}</div>\n      },\n    },\n    {\n      name: 'SKPD',\n      selector: (row: any) => row.skpd,\n      sortable: true,\n      sortField: 'skpd',\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/SKPD/LihatSKPD/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${SKPD_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n        Array.from(items).forEach((item: any, index: any) => {\n          item.serial = index + 1\n        })\n        setTemp(items)\n        setLoading(false)\n      }, 100)\n\n      return () => clearTimeout(timeout)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => {\n    //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${SKPD_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n    }, 50)\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        skpd: valuesFormik?.skpd, //? valuesFormik.skpd : '',\n      }\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${SKPD_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(`${SKPD_URL}/update/${idEditData.id}`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      skpd: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n\n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${SKPD_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n\n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${SKPD_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>SKPD</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterSKPD.val} //4\n            onChange={handleChangeInputSKPD}\n            placeholder='SKPD'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}>\n            {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} SKPD</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>SKPD</Form.Label>\n                  <Form.Control\n                    name='skpd'\n                    className={clsx(\n                      'form-control form-control-solid mb-1',\n                      {\n                        'is-invalid': formik.touched.skpd && formik.errors.skpd,\n                      },\n                      {\n                        'is-valid': formik.touched.skpd && !formik.errors.skpd,\n                      }\n                    )}\n                    onChange={handleChangeFormik}\n                    value={valuesFormik?.skpd}\n                  />\n                  {formik.touched.skpd && formik.errors.skpd && (\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>\n                        <span role='alert'>{formik.errors.skpd}</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n        <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n      </div>\n\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  skpd?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  skpd?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SKPD_URL = `${API_URL}/master/skpd` //http://localhost:3000//master/SKPD\r\n\r\nexport function UpdateSKPD() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${SKPD_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        skpd: jsonD.skpd,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      skpd: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        skpd: valuesFormik?.skpd\r\n          ? valuesFormik.skpd\r\n          : valuesFormikExist?.skpd\r\n          ? valuesFormikExist.skpd\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${SKPD_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${SKPD_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/SKPD', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/SKPD', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>SKPD</Form.Label>\r\n                        <Form.Control\r\n                          name='skpd'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.skpd || valuesFormik?.skpd === ''\r\n                              ? valuesFormik?.skpd\r\n                              : valuesFormikExist?.skpd\r\n                              ? valuesFormikExist?.skpd\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/SKPD'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  skpd?: string\r\n  kode?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  skpd?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SKPD_URL = `${API_URL}/master/skpd` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatSKPD() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${SKPD_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        skpd: jsonD.skpd,\r\n        kode: jsonD.kode,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>SKPD</Form.Label>\r\n                        <Form.Control\r\n                          name='skpd'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.skpd ? valuesFormikExist?.skpd : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode</Form.Label>\r\n                        <Form.Control\r\n                          name='kode'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/SKPD'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const PENDIDIKAN_URL = `${API_URL}/master/pendidikan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  pendidikan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  pendidikan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function Pendidikan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterPendidikan, setFilterPendidikan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterPendidikan.val !== '') {\r\n      uriParam += `${valFilterPendidikan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterPendidikan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputPendidikan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterPendidikan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Pendidikan',\r\n      selector: (row: any) => row.pendidikan,\r\n      sortable: true,\r\n      sortField: 'pendidikan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Pendidikan/LihatPendidikan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${PENDIDIKAN_URL}/filter-pendidikan/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${PENDIDIKAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        pendidikan: valuesFormik?.pendidikan, //? valuesFormik.pendidikan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${PENDIDIKAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${PENDIDIKAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      pendidikan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${PENDIDIKAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${PENDIDIKAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Pendidikan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterPendidikan.val} //4\r\n            onChange={handleChangeInputPendidikan}\r\n            placeholder='Pendidikan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Pendidikan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Pendidikan</Form.Label>\r\n                  <Form.Control\r\n                      name='pendidikan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.pendidikan && formik.errors.pendidikan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.pendidikan && !formik.errors.pendidikan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.pendidikan}\r\n                    />\r\n                    {formik.touched.pendidikan && formik.errors.pendidikan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.pendidikan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  pendidikan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  pendidikan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const PENDIDIKAN_URL = `${API_URL}/master/pendidikan` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatPendidikan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${PENDIDIKAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        pendidikan: jsonD.pendidikan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Pendidikan</Form.Label>\r\n                        <Form.Control\r\n                          name='pendidikan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.pendidikan ? valuesFormikExist?.pendidikan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Pendidikan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_sarana_prasarana?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_sarana_prasarana: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisSaranaPrasarana, setFilterJenisSaranaPrasarana] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisSaranaPrasarana.val !== '') {\r\n      uriParam += `${valFilterJenisSaranaPrasarana.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisSaranaPrasarana({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisSaranaPrasarana = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisSaranaPrasarana({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  // let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Sarana Prasarana',\r\n      selector: (row: any) => row.jenis_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'jenis_sarana_prasarana',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisSaranaPrasarana/LihatJenisSaranaPrasarana/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_sarana_prasarana: valuesFormik?.jenis_sarana_prasarana, //? valuesFormik.jenis_sarana_prasarana : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_SARANA_PRASARANA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_SARANA_PRASARANA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_sarana_prasarana: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Sarana Prasarana</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisSaranaPrasarana.val} //4\r\n            onChange={handleChangeInputJenisSaranaPrasarana}\r\n            placeholder='Jenis Sarana Prasarana'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Sarana Prasarana</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Sarana Prasarana</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_sarana_prasarana'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_sarana_prasarana && formik.errors.jenis_sarana_prasarana,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_sarana_prasarana && !formik.errors.jenis_sarana_prasarana,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_sarana_prasarana}\r\n                    />\r\n                    {formik.touched.jenis_sarana_prasarana && formik.errors.jenis_sarana_prasarana && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_sarana_prasarana}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n        {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_sarana_prasarana?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateJenisSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_sarana_prasarana: jsonD.jenis_sarana_prasarana,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_sarana_prasarana: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_sarana_prasarana: valuesFormik?.jenis_sarana_prasarana\r\n          ? valuesFormik.jenis_sarana_prasarana\r\n          : valuesFormikExist?.jenis_sarana_prasarana\r\n          ? valuesFormikExist.jenis_sarana_prasarana\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_SARANA_PRASARANA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisSaranaPrasarana', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisSaranaPrasarana', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_sarana_prasarana || valuesFormik?.jenis_sarana_prasarana === ''\r\n                              ? valuesFormik?.jenis_sarana_prasarana\r\n                              : valuesFormikExist?.jenis_sarana_prasarana\r\n                              ? valuesFormikExist?.jenis_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_sarana_prasarana?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` //http://localhost:3000/jenis-Penindakan\r\n\r\nexport function LihatJenisSaranaPrasarana() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_sarana_prasarana: jsonD.jenis_sarana_prasarana,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_sarana_prasarana\r\n                              ? valuesFormikExist?.jenis_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const GOLONGAN_URL = `${API_URL}/master/golongan`\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  golongan?: string\n}\n\nconst validatorForm = Yup.object().shape({\n  golongan: Yup.string().required('Wajib diisi'),\n})\n\nexport function Golongan() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterGolongan, setFilterGolongan] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => {\n    //3\n    let uriParam = ''\n    if (valFilterGolongan.val !== '') {\n      uriParam += `${valFilterGolongan.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handleFilterReset = () => {\n    setFilterGolongan({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputGolongan = (event: {\n    //5\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterGolongan({val: event.target.value})\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n    },\n    {},\n    {\n      name: 'Golongan',\n      selector: (row: any) => row.golongan,\n      sortable: true,\n      sortField: 'golongan',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item onClick={() => doDetail(record.id)}>Detail</Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${GOLONGAN_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n        Array.from(items).forEach((item: any, index: any) => {\n          item.serial = index + 1\n        })\n        setTemp(items)\n        setLoading(false)\n      }, 100)\n\n      return () => clearTimeout(timeout)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => {\n    //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${GOLONGAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n    }, 50)\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        golongan: valuesFormik?.golongan, //? valuesFormik.golongan : '', //? valuesFormik.kategori : '',\n      }\n\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${GOLONGAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(`${GOLONGAN_URL}/update/${idEditData.id}`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      golongan: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n\n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${GOLONGAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n\n  const doDetail = (id: any) => {\n    setShow(true)\n    setAksi(2)\n    getDetail(id)\n  }\n\n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${GOLONGAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Golongan</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterGolongan.val} //4\n            onChange={handleChangeInputGolongan}\n            placeholder='Cari Golongan'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}>\n            {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n\n          <Link to='#' onClick={handleFilterReset}>\n            <button className='btn btn-light-primary me-2'>\n              <i className='fa-solid fa-arrows-rotate svg-icon-2'></i>\n              Reset\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>\n              {aksi === 0 ? 'Tambah' : aksi === 1 ? 'Ubah' : 'Detail'} Golongan\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Golongan</Form.Label>\n                  {aksi === 0 || aksi === 1 ? (\n                    <Form.Control\n                      name='golongan'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.golongan && formik.errors.golongan,\n                        },\n                        {\n                          'is-valid': formik.touched.golongan && !formik.errors.golongan,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.golongan}\n                      placeholder='Masukkan Golongan'\n                    />\n                  ) : (\n                    <Form.Control\n                      name='golongan'\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.golongan}\n                      disabled\n                    />\n                  )}\n                  {formik.touched.golongan && formik.errors.golongan && (\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>\n                        <span role='alert'>{formik.errors.golongan}</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa-solid fa-arrow-left' />\n                      Kembali\n                    </button>\n                    {aksi === 0 || aksi === 1 ? (\n                      <button\n                        className='float-none btn btn-primary align-self-center m-1'\n                        type='submit'\n                      >\n                        <i className='fa-solid fa-paper-plane'></i>\n                        Simpan\n                      </button>\n                    ) : null}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n        {temp?.length > 0 && temp && (\n          <DataTable\n            columns={columns}\n            data={temp}\n            progressPending={loading}\n            customStyles={customStyles}\n            progressComponent={<LoadingAnimation />}\n            pagination\n            paginationTotalRows={totalRows}\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n            noDataComponent={\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n                <div className='d-flex flex-column'>\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n                </div>\n              </div>\n            }\n          />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const ESELON_URL = `${API_URL}/master/eselon` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  eselon?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  eselon: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function Eselon() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterEselon, setFilterEselon] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterEselon.val !== '') {\r\n      uriParam += `${valFilterEselon.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterEselon({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputEselon = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterEselon({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Eselon',\r\n      selector: (row: any) => row.eselon,\r\n      sortable: true,\r\n      sortField: 'eselon',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Eselon/LihatEselon/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${ESELON_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${ESELON_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        eselon: valuesFormik?.eselon, //? valuesFormik.eselon : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${ESELON_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${ESELON_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      eselon: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${ESELON_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${ESELON_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Eselon</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterEselon.val} //4\r\n            onChange={handleChangeInputEselon}\r\n            placeholder='Eselon'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Eselon</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Eselon</Form.Label>\r\n                  <Form.Control\r\n                      name='eselon'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.eselon && formik.errors.eselon,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.eselon && !formik.errors.eselon,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.eselon}\r\n                    />\r\n                    {formik.touched.eselon && formik.errors.eselon && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.eselon}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  eselon?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  eselon?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const ESELON_URL = `${API_URL}/master/eselon` //http://localhost:3000//master/jenis-kejadian\r\n\r\nexport function UpdateEselon() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${ESELON_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        eselon: jsonD.eselon,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      eselon: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        eselon: valuesFormik?.eselon\r\n          ? valuesFormik.eselon\r\n          : valuesFormikExist?.eselon\r\n          ? valuesFormikExist.eselon\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${ESELON_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${ESELON_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Eselon', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Eselon', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Eselon</Form.Label>\r\n                        <Form.Control\r\n                          name='eselon'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.eselon || valuesFormik?.eselon === ''\r\n                              ? valuesFormik?.eselon\r\n                              : valuesFormikExist?.eselon\r\n                              ? valuesFormikExist?.eselon\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Eselon'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  eselon?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  eselon?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const ESELON_URL = `${API_URL}/master/eselon` //http://localhost:3000/jenis-kejadian\r\n\r\nexport function LihatEselon() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${ESELON_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        eselon: jsonD.eselon,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Eselon</Form.Label>\r\n                        <Form.Control\r\n                          name='eselon'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.eselon\r\n                              ? valuesFormikExist?.eselon\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Eselon'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {useFormik, FormikHelpers} from 'formik'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport clsx from 'clsx'\nimport Swal from 'sweetalert2'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport * as Yup from 'yup'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JABATAN_URL = `${API_URL}/master/jabatan` //http://localhost:3000/sarana-prasarana\nexport interface FormInput {\n  nama?: string\n  status?: string\n  created_by?: number\n}\nconst validatorForm = Yup.object().shape({\n  nama: Yup.string().required('Wajib diisi'),\n  status: Yup.string().required('Wajib diisi'),\n})\nexport function Jabatan() {\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n  const navigate = useNavigate()\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [perPage, setPerPage] = useState(10)\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [temp, setTemp] = useState([])\n  const [aksi, setAksi] = useState(0)\n  const [valFilterJabatan, setFilterJabatan] = useState({val: ''})\n\n  useEffect(() => {\n    async function fetchUsers(page: number) {\n      setLoading(true)\n      const response = await axios.get(\n        `${JABATAN_URL}/find?limit=${perPage}&offset=${page}${qParamFind.strparam}`\n      )\n      setData(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n  }, [qParamFind, perPage])\n\n  const fetchData = async (page: number) => {\n    setLoading(true)\n    const response = await axios.get(\n      `${JABATAN_URL}/find?limit=${perPage}&offset=${page}${qParamFind.strparam}`\n    )\n    setData(response.data.data)\n    setTotalRows(response.data.total_data)\n    setLoading(false)\n\n    return [data, setData] as const\n  }\n  const handlePerRowsChange = async (newPerPage: number, page: number) => {\n    setLoading(true)\n    const response = await axios.get(\n      `${JABATAN_URL}/find?limit=${newPerPage}&offset=${page}${qParamFind.strparam}`\n    )\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterJabatan.val !== '') {\n      uriParam += `&nama=${valFilterJabatan.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handlePageChange = (page: number) => {\n    fetchData(page)\n  }\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const handleChangeInputJabatan = (event: {\n    //5\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterJabatan({val: event.target.value})\n  }\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n  let no = 1\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n      minWidth: '30px',\n      cell: (record: any) => {\n        return <div className='mt-2 mb-2'>{no++}</div>\n      },\n    },\n    {\n      name: 'Jabatan',\n      selector: (row: any) => row.jabatan,\n      sortable: true,\n      sortField: 'jabatan',\n      minWidth: '100px',\n    },\n    {\n      name: 'Status',\n      selector: (row: any) => row.status,\n      sortable: true,\n      sortField: 'status',\n      wrap: true,\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n      wrap: true,\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/jabatan/lihat-jabatan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        nama: valuesFormik?.nama,\n        status: valuesFormik?.status,\n      }\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JABATAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchData(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(`${JABATAN_URL}/update/${idEditData.id}`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchData(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  // UPDATE\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JABATAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n      nama: data.data.jabatan,\n    }))\n  }\n  //End UPDATE\n  //Detail\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      nama: '',\n      status: '',\n    })\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  //End Detail\n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JABATAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n          fetchData(1)\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END DELET\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='row g-8 mt-2 ms-5 me-5'>\n          <label>\n            <h3>Jabatan</h3>\n          </label>\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n            <input\n              type='text'\n              className='form-control form-control form-control-solid'\n              name='nama'\n              value={valFilterJabatan.val}\n              onChange={handleChangeInputJabatan}\n              placeholder='Jabatan'\n            />\n          </div>\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n            <Link to='#' onClick={handleFilter}>\n              {/* 1 */}\n              <button className='btn btn-light-primary me-2'>\n                <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n                Cari\n              </button>\n            </Link>\n          </div>\n          <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n            <Link to='#i'>\n              <button className='btn btn-primary me-2' onClick={doAdd}>\n                <i className='fa-solid fa-plus'></i>\n                Tambah\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <form onSubmit={formik.handleSubmit}>\n            <Modal.Header closeButton>\n              {/* <Modal.Title {aksi === 0 ? 'Tambah' : 'Ubah'}>Tambah Jabatan</Modal.Title> */}\n            </Modal.Header>\n            <Modal.Body>\n              <div className='mb-3 form-control-solid'>\n                <div className='form-group'>\n                  <Form.Label>Jabatan</Form.Label>\n                  <Form.Control\n                    name='nama'\n                    className='form-control form-control-solid'\n                    onChange={handleChangeFormik}\n                    value={valuesFormik?.nama}\n                    placeholder='Jabatan'\n                  />\n                </div>\n              </div>\n              <Form.Group className='mb-3 form-control-solid'>\n                <label className='required fw-semibold fs-6 mb-2'>Status</label>\n                <select\n                  data-control='select2'\n                  data-placeholder='Status'\n                  name='status'\n                  className={clsx(\n                    'form-control form-control-solid mb-1',\n                    {\n                      'is-invalid': formik.touched.status && formik.errors.status,\n                    },\n                    {\n                      'is-valid': formik.touched.status && !formik.errors.status,\n                    }\n                  )}\n                  onChange={handleChangeFormik}\n                  value={valuesFormik?.status}\n                >\n                  <option value=''>Pilih</option>\n                  <option value='JFT'>JFT</option>\n                  <option value='Non JFT'>Non JFT</option>\n                </select>\n              </Form.Group>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant='secondary' onClick={handleClose}>\n                Close\n              </Button>\n              <Button variant='primary' type='submit'>\n                <i className='fa-solid fa-paper-plane'></i>\n                Simpan\n              </Button>\n            </Modal.Footer>\n          </form>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          customStyles={customStyles}\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        />\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  sumber_informasi?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  sumber_informasi: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function SumberInformasi() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterSumberInformasi, setFilterSumberInformasi] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterSumberInformasi.val !== '') {\r\n      uriParam += `${valFilterSumberInformasi.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterSumberInformasi({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputSumberInformasi = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterSumberInformasi({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Sumber Informasi',\r\n      selector: (row: any) => row.sumber_informasi,\r\n      sortable: true,\r\n      sortField: 'sumber_informasi',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/SumberInformasi/LihatSumberInformasi/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${SUMBER_INFORMASI_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        sumber_informasi: valuesFormik?.sumber_informasi, //? valuesFormik.sumber_informasi : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${SUMBER_INFORMASI_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${SUMBER_INFORMASI_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      sumber_informasi: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${SUMBER_INFORMASI_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Sumber Informasi</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterSumberInformasi.val} //4\r\n            onChange={handleChangeInputSumberInformasi}\r\n            placeholder='Sumber Informasi'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Sumber Informasi</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Sumber Informasi</Form.Label>\r\n                  <Form.Control\r\n                      name='sumber_informasi'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.sumber_informasi && formik.errors.sumber_informasi,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.sumber_informasi && !formik.errors.sumber_informasi,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.sumber_informasi}\r\n                    />\r\n                    {formik.touched.sumber_informasi && formik.errors.sumber_informasi && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.sumber_informasi}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  sumber_informasi?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  sumber_informasi?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi` //http://localhost:3000//master/jenis-kejadian\r\n\r\nexport function UpdateSumberInformasi() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        sumber_informasi: jsonD.sumber_informasi,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      sumber_informasi: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        sumber_informasi: valuesFormik?.sumber_informasi\r\n          ? valuesFormik.sumber_informasi\r\n          : valuesFormikExist?.sumber_informasi\r\n          ? valuesFormikExist.sumber_informasi\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${SUMBER_INFORMASI_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${SUMBER_INFORMASI_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/SumberInformasi', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/SumberInformasi', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='sumber_informasi'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.sumber_informasi || valuesFormik?.sumber_informasi === ''\r\n                              ? valuesFormik?.sumber_informasi\r\n                              : valuesFormikExist?.sumber_informasi\r\n                              ? valuesFormikExist?.sumber_informasi\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/SumberInformasi'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  sumber_informasi?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  sumber_informasi?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi`//http://localhost:3000/jenis-kejadian\r\n\r\nexport function LihatSumberInformasi() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        sumber_informasi: jsonD.sumber_informasi,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='sumber_informasi'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.sumber_informasi\r\n                              ? valuesFormikExist?.sumber_informasi\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/SumberInformasi'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_kekerasan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_kekerasan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisKekerasan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisKekerasan, setFilterJenisKekerasan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisKekerasan.val !== '') {\r\n      uriParam += `${valFilterJenisKekerasan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisKekerasan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisKekerasan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisKekerasan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Kekerasan',\r\n      selector: (row: any) => row.jenis_kekerasan,\r\n      sortable: true,\r\n      sortField: 'jenis_kekerasan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisKekerasan/LihatJenisKekerasan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KEKERASAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_kekerasan: valuesFormik?.jenis_kekerasan, //? valuesFormik.jenis_kekerasan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KEKERASAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KEKERASAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_kekerasan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KEKERASAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Kekerasan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisKekerasan.val} //4\r\n            onChange={handleChangeInputJenisKekerasan}\r\n            placeholder='Jenis Kekerasan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Kekerasan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Kekerasan</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_kekerasan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_kekerasan && formik.errors.jenis_kekerasan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_kekerasan && !formik.errors.jenis_kekerasan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_kekerasan}\r\n                    />\r\n                    {formik.touched.jenis_kekerasan && formik.errors.jenis_kekerasan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_kekerasan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kekerasan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kekerasan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateJenisKekerasan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kekerasan: jsonD.jenis_kekerasan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kekerasan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kekerasan: valuesFormik?.jenis_kekerasan\r\n          ? valuesFormik.jenis_kekerasan\r\n          : valuesFormikExist?.jenis_kekerasan\r\n          ? valuesFormikExist.jenis_kekerasan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KEKERASAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KEKERASAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKekerasan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKekerasan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kekerasan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_kekerasan || valuesFormik?.jenis_kekerasan === ''\r\n                              ? valuesFormik?.jenis_kekerasan\r\n                              : valuesFormikExist?.jenis_kekerasan\r\n                              ? valuesFormikExist?.jenis_kekerasan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKekerasan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_kekerasan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kekerasan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` //http://localhost:3000/JenisKekerasan\r\n\r\nexport function LihatJenisKekerasan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kekerasan: jsonD.jenis_kekerasan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kekerasan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kekerasan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_kekerasan\r\n                              ? valuesFormikExist?.jenis_kekerasan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKekerasan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_PENERTIBAN_URL = `${API_URL}/master/jenis-penertiban`\r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_penertiban?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  jenis_penertiban: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisPenertiban() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisPenertiban, setFilterJenisPenertiban] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisPenertiban.val !== '') {\r\n      uriParam += `${valFilterJenisPenertiban.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisPenertiban({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisPenertiban = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisPenertiban({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Jenis Penertiban',\r\n      selector: (row: any) => row.jenis_penertiban,\r\n      sortable: true,\r\n      sortField: 'jenis_penertiban',\r\n    },\r\n    {\r\n      name: 'Kode',\r\n      selector: (row: any) => row.kode,\r\n      sortable: true,\r\n      sortField: 'kode',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisPenertiban/LihatJenisPenertiban/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_PENERTIBAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_PENERTIBAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_penertiban: valuesFormik?.jenis_penertiban, //? valuesFormik.jenis_penertiban : '',\r\n      }\r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_PENERTIBAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_PENERTIBAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_penertiban: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_PENERTIBAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_PENERTIBAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Penertiban</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisPenertiban.val} //4\r\n            onChange={handleChangeInputJenisPenertiban}\r\n            placeholder='Jenis Penertiban'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Penertiban</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Penertiban</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_penertiban'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_penertiban && formik.errors.jenis_penertiban,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_penertiban && !formik.errors.jenis_penertiban,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_penertiban}\r\n                    />\r\n                    {formik.touched.jenis_penertiban && formik.errors.jenis_penertiban && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_penertiban}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_penertiban?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  jenis_penertiban?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PENERTIBAN_URL = `${API_URL}/master/jenis-penertiban` //http://localhost:3000//master/kota\r\n\r\nexport function UpdateJenisPenertiban() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PENERTIBAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_penertiban: jsonD.jenis_penertiban,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_penertiban: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_penertiban: valuesFormik?.jenis_penertiban\r\n          ? valuesFormik.jenis_penertiban\r\n          : valuesFormikExist?.jenis_penertiban\r\n          ? valuesFormikExist.jenis_penertiban\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_PENERTIBAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_PENERTIBAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisPenertiban', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisPenertiban', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Penertiban</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_penertiban'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_penertiban || valuesFormik?.jenis_penertiban === ''\r\n                              ? valuesFormik?.jenis_penertiban\r\n                              : valuesFormikExist?.jenis_penertiban\r\n                              ? valuesFormikExist?.jenis_penertiban\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPenertiban'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_penertiban?: string\r\n  kode?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  jenis_penertiban?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PENERTIBAN_URL = `${API_URL}/master/jenis-penertiban` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatJenisPenertiban() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PENERTIBAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_penertiban: jsonD.jenis_penertiban,\r\n        kode: jsonD.kode,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Penertiban</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_penertiban'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.jenis_penertiban ? valuesFormikExist?.jenis_penertiban : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode</Form.Label>\r\n                        <Form.Control\r\n                          name='kode'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPenertiban'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function JenisPenyelesaian() {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1);\r\n  }, []);\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\r\n          <div className=\"d-flex flex-column\">\r\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'Jenis Sarana & Prasarana',\r\n      selector: (row: any) => row.jenis_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'jenis_sarana_prasarana',\r\n    },\r\n    {\r\n      name: 'Status Sarana & Prasarana',\r\n      selector: (row: any) => row.status_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'status_sarana_prasarana',\r\n    },\r\n    {\r\n      name: 'Jumlah',\r\n      selector: (row: any) => row.jumlah,\r\n      sortable: true,\r\n      sortField: 'jumlah',\r\n    },\r\n    {\r\n      name: 'Kondisi',\r\n      selector: (row: any) => row.kondisi,\r\n      sortable: true,\r\n      sortField: 'kondisi',\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: (row: any) => row.keterangan,\r\n      sortable: true,\r\n      sortField: 'keterangan',\r\n    },\r\n    {\r\n      name: 'Dokumentasi',\r\n      selector: (row: any) => row.dokumentasi,\r\n      sortable: true,\r\n      sortField: 'dokumentasi',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: \"Action\",\r\n      className: \"action\",\r\n      align: \"left\",\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n\r\n            <div className=\"mb-2\">\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size=\"sm\"\r\n                    variant=\"light\"\r\n                    title=\"Aksi\">\r\n                    <Dropdown.Item>\r\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\r\n                        Detail\r\n                      </Link>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n\r\n  ];\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n   \r\n  const [temp, setTemp] = useState([]);\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true);\r\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\r\n\r\n    setTemp(value.data.data);\r\n    console.log('cek response api:',temp);\r\n\r\n    \r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\r\n    setData(response.data.data);\r\n   \r\n    setTotalRows(response.data.total);\r\n    setLoading(false);\r\n    console.log('cek ahhh :' ,data);\r\n    return [data, setData] as const;\r\n  };\r\n\r\n  const handlePageChange = (page: any) => {\r\n    fetchUsers(page);\r\n  };\r\n\r\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n    setLoading(true);\r\n\r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\r\n\r\n    setData(response.data.data);\r\n    setPerPage(newPerPage);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSort = (column: any, sortDirection: any) => {\r\n    // simulate server sort\r\n    console.log(column, sortDirection);\r\n    setLoading(true);\r\n\r\n    // instead of setTimeout this is where you would handle your API call.\r\n    setTimeout(() => {\r\n      setData(orderBy(data, column.sortField, sortDirection));\r\n      setLoading(false);\r\n    }, 100);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Jenis Penyelesaian\r\n            </label>\r\n            <input\r\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\r\n          </div>\r\n      </div>\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n        <Link to='#'>\r\n            <button className='btn btn-primary'>\r\n              <i className='fa-solid fa-search'></i>\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-5' onClick={handleShow}>\r\n              <i className=\"fa-solid fa-plus\"></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tambah Jenis Penyelesaian</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\r\n        <Form.Group className=\"mb-3 form-control-solid\">\r\n            <Form.Label>Jenis Penyelesaian</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Penyelesaian\" />\r\n        </Form.Group>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n          <i className=\"fa-solid fa-paper-plane\"></i>\r\n            Simpan\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n      <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            pagination\r\n        />\r\n        {/* <DataTable\r\n          columns={columns}\r\n          data={data}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          sortServer\r\n          onSort={handleSort}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n        /> */}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jabatan?: string\n  status?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jabatan?: string\n  status?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JABATAN_URL = `${API_URL}/master/jabatan` //http://localhost:3000/jabatan\n\nexport function LihatJabatan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JABATAN_URL}/findone/${id}`)\n      console.log(fetchData)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jabatan: jsonD.jabatan,\n        status: jsonD.status,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jabatan</Form.Label>\n                        <Form.Control\n                          name='jabatan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.jabatan ? valuesFormikExist?.jabatan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Status</Form.Label>\n                        <Form.Control\n                          name='status'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.status ? valuesFormikExist?.status : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Jabatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {useFormik, FormikHelpers} from 'formik'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport Swal from 'sweetalert2'\nimport * as Yup from 'yup'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {KTSVG} from '../../../../_metronic/helpers'\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const STATUS_KENAIKAN_PANGKAT_URL = `${API_URL}/master/status_kenaikan_pangkat`\nexport interface FormInput {\n  status_kenaikan_pangkat?: string\n  created_by?: number\n}\nconst validatorForm = Yup.object().shape({\n  status_kenaikan_pangkat: Yup.string().required('Wajib diisi'),\n})\nexport function StatusKenaikanPangkat() {\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n  const navigate = useNavigate()\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [perPage, setPerPage] = useState(10)\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [temp, setTemp] = useState([])\n  const [aksi, setAksi] = useState(0)\n  const [valFilterPangkat, setFilterPangkat] = useState({val: ''})\n\n  useEffect(() => {\n    async function fetchUsers(page: number) {\n      setLoading(true)\n      const response = await axios.get(\n        `${STATUS_KENAIKAN_PANGKAT_URL}/filter/${qParamFind.strparam}`\n      )\n      setData(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n  }, [qParamFind, perPage])\n\n  const fetchData = async (page: number) => {\n    setLoading(true)\n    const response = await axios.get(`${STATUS_KENAIKAN_PANGKAT_URL}/filter/${qParamFind.strparam}`)\n    setData(response.data.data)\n    setTotalRows(response.data.total_data)\n    setLoading(false)\n\n    return [data, setData] as const\n  }\n  const handlePerRowsChange = async (newPerPage: number, page: number) => {\n    setLoading(true)\n    const response = await axios.get(`${STATUS_KENAIKAN_PANGKAT_URL}/filter/${qParamFind.strparam}`)\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterPangkat.val !== '') {\n      uriParam += `${valFilterPangkat.val}`\n    }\n\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handlePageChange = (page: number) => {\n    fetchData(page)\n  }\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const handleChangeInputPangkat = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterPangkat({val: event.target.value})\n  }\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n  let no = 1\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n      minWidth: '30px',\n      cell: (record: any) => {\n        return <div className='mt-2 mb-2'>{no++}</div>\n      },\n    },\n    {\n      name: 'Status Kenaikan Pangkat',\n      selector: (row: any) => row.status_kenaikan_pangkat,\n      sortable: true,\n      sortField: 'status_kenaikan_pangkat',\n      minWidth: '100px',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate(\n                          '/master/statuskenaikanpangkat/lihat-status-kenaikan-pangkat/' +\n                            record.id,\n                          {replace: true}\n                        )\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        status_kenaikan_pangkat: valuesFormik?.status_kenaikan_pangkat,\n      }\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${STATUS_KENAIKAN_PANGKAT_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchData(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${STATUS_KENAIKAN_PANGKAT_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchData(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  // UPDATE\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${STATUS_KENAIKAN_PANGKAT_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n  //End UPDATE\n  //Detail\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      status_kenaikan_pangkat: '',\n    })\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  //End Detail\n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(\n          `${STATUS_KENAIKAN_PANGKAT_URL}/delete/${id}`,\n          bodyParam\n        )\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n          fetchData(1)\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END DELET\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='row g-8 mt-2 ms-5 me-5'>\n          <label>\n            <h3> Status Kenaikan Pangkat</h3>\n          </label>\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n            <input\n              type='text'\n              className='form-control form-control form-control-solid'\n              name='q'\n              value={valFilterPangkat.val}\n              onChange={handleChangeInputPangkat}\n              placeholder='Status Kenaikan Pangkat'\n            />\n          </div>\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n            <Link to='#' onClick={handleFilter}>\n              {/* 1 */}\n              <button className='btn btn-light-primary me-2'>\n                <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n                Cari\n              </button>\n            </Link>\n          </div>\n          <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n            <Link to='#i'>\n              <button className='btn btn-primary me-2' onClick={doAdd}>\n                <i className='fa-solid fa-plus'></i>\n                Tambah\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <form onSubmit={formik.handleSubmit}>\n            <Modal.Header closeButton>\n              {/* <Modal.Title {aksi === 0 ? 'Tambah' : 'Ubah'}>Tambah Pangkat</Modal.Title> */}\n            </Modal.Header>\n            <Modal.Body>\n              <div className='mb-3 form-control-solid'>\n                <div className='form-group'>\n                  <Form.Label>Status Kenaikan Pangkat</Form.Label>\n                  <Form.Control\n                    name='status_kenaikan_pangkat'\n                    className='form-control form-control-solid'\n                    onChange={handleChangeFormik}\n                    value={valuesFormik?.status_kenaikan_pangkat}\n                    placeholder='Status Kenaikan Pangkat'\n                  />\n                </div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant='secondary' onClick={handleClose}>\n                Close\n              </Button>\n              <Button variant='primary' type='submit'>\n                <i className='fa-solid fa-paper-plane'></i>\n                Simpan\n              </Button>\n            </Modal.Footer>\n          </form>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          customStyles={customStyles}\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n        />\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  status_kenaikan_pangkat?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  status_kenaikan_pangkat?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const STATUS_KENAIKAN_PANGKAT_URL = `${API_URL}/master/status_kenaikan_pangkat`\n\nexport function LihatStatusKenaikanPangkat() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${STATUS_KENAIKAN_PANGKAT_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        status_kenaikan_pangkat: jsonD.status_kenaikan_pangkat,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='status_kenaikan_pangkat'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.status_kenaikan_pangkat\n                              ? valuesFormikExist?.status_kenaikan_pangkat\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/StatusKenaikanPangkat'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport {Navigate, Route, Routes, Outlet} from 'react-router-dom'\nimport {PageLink, PageTitle} from '../../../_metronic/layout/core'\n\nimport {Kota} from './components/Kota'\nimport {LihatKota} from './components/Lihat-master/LihatKota'\nimport {UpdateKota} from './components/Update-master/UpdateKota'\nimport {TambahKota} from './components/Tambah-master/TambahKota'\n\nimport {Kecamatan} from './components/Kecamatan'\nimport {LihatKecamatan} from './components/Lihat-master/LihatKecamatan'\nimport {UpdateKecamatan} from './components/Update-master/UpdateKecamatan'\nimport {TambahKecamatan} from './components/Tambah-master/TambahKecamatan'\n\nimport {Kelurahan} from './components/Kelurahan'\nimport {LihatKelurahan} from './components/Lihat-master/LihatKelurahan'\nimport {UpdateKelurahan} from './components/Update-master/UpdateKelurahan'\nimport {TambahKelurahan} from './components/Tambah-master/TambahKelurahan'\n\nimport {JenisKegiatan} from './components/JenisKegiatan'\nimport {LihatJenisKegiatan} from './components/Lihat-master/LihatJenisKegiatan'\nimport {UpdateJenisKegiatan} from './components/Update-master/UpdateJenisKegiatan'\nimport {TambahJenisKegiatan} from './components/Tambah-master/TambahJenisKegiatan'\n\nimport {JenisKejadian} from './components/JenisKejadian'\nimport {LihatJenisKejadian} from './components/Lihat-master/LihatJenisKejadian'\nimport {UpdateJenisKejadian} from './components/Update-master/UpdateJenisKejadian'\nimport {TambahJenisKejadian} from './components/Tambah-master/TambahJenisKejadian'\n\nimport {JenisPelanggaran} from './components/JenisPelanggaran'\n\nimport {JenisPertolongan} from './components/JenisPertolongan'\nimport {LihatJenisPertolongan} from './components/Lihat-master/LihatJenisPertolongan'\nimport {UpdateJenisPertolongan} from './components/Update-master/UpdateJenisPertolongan'\n\nimport {JenisPerdaPerkada} from './components/JenisPerdaPerkada'\n\nimport {JenisPenindakan} from './components/JenisPenindakan'\nimport {LihatJenisPenindakan} from './components/Lihat-master/LihatJenisPenindakan'\nimport {UpdateJenisPenindakan} from './components/Update-master/UpdateJenisPenindakan'\n\nimport {KorbanJiwa} from './components/KorbanJiwa'\nimport {LihatKorbanJiwa} from './components/Lihat-master/LihatKorbanJiwa'\nimport {UpdateKorbanJiwa} from './components/Update-master/UpdateKorbanJiwa'\nimport {TambahKorbanJiwa} from './components/Tambah-master/TambahKorbanJiwa'\n\nimport {KorbanMaterial} from './components/KorbanMaterial'\nimport {LihatKorbanMaterial} from './components/Lihat-master/LihatKorbanMaterial'\nimport {UpdateKorbanMaterial} from './components/Update-master/UpdateKorbanMaterial'\n\nimport {JenisBantuan} from './components/JenisBantuan'\nimport {LihatJenisBantuan} from './components/Lihat-master/LihatJenisBantuan'\nimport {UpdateJenisBantuan} from './components/Update-master/UpdateJenisBantuan'\n\nimport {InstansiTerkait} from './components/InstansiTerkait'\n\nimport {KondisiSaranaPrasarana} from './components/KondisiSaranaPrasarana'\nimport {LihatKondisiSaranaPrasarana} from './components/Lihat-master/LihatKondisiSaranaPrasarana'\nimport {UpdateKondisiSaranaPrasarana} from './components/Update-master/UpdateKondisiSaranaPrasarana'\n\nimport {StatusSaranaPrasarana} from './components/StatusSaranaPrasarana'\nimport {LihatStatusSaranaPrasarana} from './components/Lihat-master/LihatStatusSaranaPrasarana'\nimport {UpdateStatusSaranaPrasarana} from './components/Update-master/UpdateStatusSaranaPrasarana'\n\nimport {Agama} from './components/Agama'\nimport {LihatAgama} from './components/Lihat-master/LihatAgama'\nimport {UpdateAgama} from './components/Update-master/UpdateAgama'\nimport {TambahAgama} from './components/Tambah-master/TambahAgama'\n\nimport {Pangkat} from './components/Pangkat'\nimport {UpdatePangkat} from './components/Update-master/UpdatePangkat'\nimport {LihatPangkat} from './components/Lihat-master/LihatPangkat'\nimport {TambahPangkat} from './components/Tambah-master/TambahPangkat'\n\nimport {TempatPelaksanaan} from './components/TempatPelaksanaan'\nimport {UpdateTempatPelaksanaan} from './components/Update-master/UpdateTempatPelaksanaan'\nimport {LihatTempatPelaksanaan} from './components/Lihat-master/LihatTempatPelaksanaan'\n\nimport {SKPD} from './components/SKPD'\nimport {UpdateSKPD} from './components/Update-master/UpdateSKPD'\nimport {LihatSKPD} from './components/Lihat-master/LihatSKPD'\n\nimport {Pendidikan} from './components/Pendidikan'\nimport {LihatPendidikan} from './components/Lihat-master/LihatPendidikan'\n\nimport {JenisSaranaPrasarana} from './components/JenisSaranaPrasarana'\nimport {UpdateJenisSaranaPrasarana} from './components/Update-master/UpdateJenisSaranaPrasarana'\nimport {LihatJenisSaranaPrasarana} from './components/Lihat-master/LihatJenisSaranaPrasarana'\n\nimport {Golongan} from './components/Golongan'\n\nimport {Eselon} from './components/Eselon'\nimport {UpdateEselon} from './components/Update-master/UpdateEselon'\nimport {LihatEselon} from './components/Lihat-master/LihatEselon'\n\nimport {Jabatan} from './components/Jabatan'\n\nimport {SumberInformasi} from './components/SumberInformasi'\nimport {UpdateSumberInformasi} from './components/Update-master/UpdateSumberInformasi'\nimport {LihatSumberInformasi} from './components/Lihat-master/LihatSumberInformasi'\n\nimport {JenisKekerasan} from './components/JenisKekerasan'\nimport {UpdateJenisKekerasan} from './components/Update-master/UpdateJenisKekerasan'\nimport {LihatJenisKekerasan} from './components/Lihat-master/LihatJenisKekerasan'\n\nimport {JenisPenertiban} from './components/JenisPenertiban'\nimport {UpdateJenisPenertiban} from './components/Update-master/UpdateJenisPenertiban'\nimport {LihatJenisPenertiban} from './components/Lihat-master/LihatJenisPenertiban'\n\nimport {JenisPenyelesaian} from './components/JenisPenyelesaian'\n\nimport {LihatJabatan} from './components/Lihat-master/LihatJabatan'\n\nimport {StatusKenaikanPangkat} from './components/StatusKenaikanPangkat'\nimport {LihatStatusKenaikanPangkat} from './components/Lihat-master/LihatStatusKenaikanPangkat'\n\nconst masterBreadCrumbs: Array<PageLink> = [\n  {\n    title: 'Master',\n    path: '/master/InformasiDataMaster',\n    isSeparator: false,\n    isActive: false,\n  },\n  {\n    title: '',\n    path: '',\n    isSeparator: true,\n    isActive: false,\n  },\n]\n\nconst MasterPage: React.FC = () => {\n  return (\n    <Routes>\n      <Route\n        element={\n          <>\n            <Outlet />\n          </>\n        }\n      >\n        <Route\n          path='Kota'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kota</PageTitle>\n              <Kota />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/UpdateKecamatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kecamatan</PageTitle>\n              <UpdateKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/LihatKecamatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kecamatan</PageTitle>\n              <LihatKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/TambahKecamatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kecamatan</PageTitle>\n              <TambahKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='SKPD'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>SKPD</PageTitle>\n              <SKPD />\n            </>\n          }\n        />\n        <Route\n          path='SKPD/UpdateSKPD/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update SKPD</PageTitle>\n              <UpdateSKPD />\n            </>\n          }\n        />\n        <Route\n          path='SKPD/LihatSKPD/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat SKPD</PageTitle>\n              <LihatSKPD />\n            </>\n          }\n        />\n        <Route\n          path='Pendidikan/LihatPendidikan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Pendidikan</PageTitle>\n              <LihatPendidikan />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Pangkat</PageTitle>\n              <Pangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/UpdatePangkat/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Pangkat</PageTitle>\n              <UpdatePangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/LihatPangkat/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Pangkat</PageTitle>\n              <LihatPangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/TambahPangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Pangkat</PageTitle>\n              <TambahPangkat />\n            </>\n          }\n        />\n\n        <Route\n          path='TempatPelaksanaan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tempat Pelaksanaan</PageTitle>\n              <TempatPelaksanaan />\n            </>\n          }\n        />\n\n        <Route\n          path='TempatPelaksanaan/UpdateTempatPelaksanaan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update TempatPelaksanaan</PageTitle>\n              <UpdateTempatPelaksanaan />\n            </>\n          }\n        />\n        <Route\n          path='TempatPelaksanaan/LihatTempatPelaksanaan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat TempatPelaksanaan</PageTitle>\n              <LihatTempatPelaksanaan />\n            </>\n          }\n        />\n\n        <Route\n          path='Golongan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Golongan </PageTitle>\n              <Golongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jenis Sarana Prasarana </PageTitle>\n              <JenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana/UpdateJenisSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Sarana Prasarana</PageTitle>\n              <UpdateJenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana/LihatJenisSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Sarana Prasarana</PageTitle>\n              <LihatJenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='KondisiSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Kondisi Sarana Prasarana </PageTitle>\n              <KondisiSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='KondisiSaranaPrasarana/UpdateKondisiSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kondisi Sarana Prasarana</PageTitle>\n              <UpdateKondisiSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='KondisiSaranaPrasarana/LihatKondisiSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kondisi Sarana Prasarana</PageTitle>\n              <LihatKondisiSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='StatusSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Status Sarana Prasarana </PageTitle>\n              <StatusSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='StatusSaranaPrasarana/UpdateStatusSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Status Sarana Prasarana</PageTitle>\n              <UpdateStatusSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='StatusSaranaPrasarana/LihatStatusSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Status Sarana Prasarana</PageTitle>\n              <LihatStatusSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kecamatan</PageTitle>\n              <Kecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kota/UpdateKota/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kota</PageTitle>\n              <UpdateKota />\n            </>\n          }\n        />\n        <Route\n          path='Kota/LihatKota/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kota</PageTitle>\n              <LihatKota />\n            </>\n          }\n        />\n        <Route\n          path='Kota/TambahKota'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kota</PageTitle>\n              <TambahKota />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kelurahan</PageTitle>\n              <Kelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/UpdateKelurahan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kelurahan</PageTitle>\n              <UpdateKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/TambahKelurahan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kelurahan</PageTitle>\n              <TambahKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/LihatKelurahan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kelurahan</PageTitle>\n              <LihatKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kegiatan </PageTitle>\n              <JenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/UpdateJenisKegiatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisKegiatan</PageTitle>\n              <UpdateJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/TambahJenisKegiatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Kegiatan</PageTitle>\n              <TambahJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/LihatJenisKegiatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Kegiatan</PageTitle>\n              <LihatJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kejadian </PageTitle>\n              <JenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/UpdateJenisKejadian/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Kejadian</PageTitle>\n              <UpdateJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/LihatJenisKejadian/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Kejadian</PageTitle>\n              <LihatJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/TambahJenisKejadian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Kejadian</PageTitle>\n              <TambahJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='Agama'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Agama</PageTitle>\n              <Agama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/UpdateAgama/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Agama</PageTitle>\n              <UpdateAgama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/LihatAgama/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Agama</PageTitle>\n              <LihatAgama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/TambahAgama'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Agama</PageTitle>\n              <TambahAgama />\n            </>\n          }\n        />\n        <Route\n          path='Jabatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jabatan </PageTitle>\n              <Jabatan />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/tambah-jabatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jabatan </PageTitle>\n              <Jabatan />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/update-jabatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Agama</PageTitle>\n              <UpdateAgama />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/lihat-jabatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jabatan</PageTitle>\n              <LihatJabatan />\n            </>\n          }\n        />\n        <Route\n          path='StatusKenaikanPangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Status Kenaikan Pangkat </PageTitle>\n              <StatusKenaikanPangkat />\n            </>\n          }\n        />\n        <Route\n          path='statuskenaikanpangkat/lihat-status-kenaikan-pangkat/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat StatusKenaikanPangkat</PageTitle>\n              <LihatStatusKenaikanPangkat />\n            </>\n          }\n        />\n        <Route\n          path='Eselon'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Eselon </PageTitle>\n              <Eselon />\n            </>\n          }\n        />\n        <Route\n          path='Eselon/UpdateEselon/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Eselon</PageTitle>\n              <UpdateEselon />\n            </>\n          }\n        />\n        <Route\n          path='Eselon/LihatEselon/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Eselon</PageTitle>\n              <LihatEselon />\n            </>\n          }\n        />\n\n        <Route\n          path='Pendidikan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Pendidikan </PageTitle>\n              <Pendidikan />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Sumber Informasi </PageTitle>\n              <SumberInformasi />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi/UpdateSumberInformasi/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Sumber Informasi</PageTitle>\n              <UpdateSumberInformasi />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi/LihatSumberInformasi/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Sumber Informasi</PageTitle>\n              <LihatSumberInformasi />\n            </>\n          }\n        />\n        {/* <Route\n          path='SumberInformasi/TambahSumberInformasi/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Sumber Informasi</PageTitle>\n              <TambahSumberInformasi />\n            </>\n          }\n        /> */}\n        <Route\n          path='JenisPelanggaran'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pelanggaran</PageTitle>\n              <JenisPelanggaran />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pertolongan</PageTitle>\n              <JenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan/UpdateJenisPertolongan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Pertolongan</PageTitle>\n              <UpdateJenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan/LihatJenisPertolongan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Pertolongan</PageTitle>\n              <LihatJenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penindakan</PageTitle>\n              <JenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan/UpdateJenisPenindakan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Penindakan</PageTitle>\n              <UpdateJenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan/LihatJenisPenindakan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Penindakan</PageTitle>\n              <LihatJenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPerdaPerkada'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Perda / Perkada</PageTitle>\n              <JenisPerdaPerkada />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kekerasan</PageTitle>\n              <JenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan/UpdateJenisKekerasan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisKekerasan</PageTitle>\n              <UpdateJenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan/LihatJenisKekerasan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat JenisKekerasan</PageTitle>\n              <LihatJenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenertiban'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penertiban</PageTitle>\n              <JenisPenertiban />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenertiban/UpdateJenisPenertiban/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Penertiban</PageTitle>\n              <UpdateJenisPenertiban />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenertiban/LihatJenisPenertiban/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Penertiban</PageTitle>\n              <LihatJenisPenertiban />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenyelesaian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penyelesaian</PageTitle>\n              <JenisPenyelesaian />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Jiwa </PageTitle>\n              <KorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/UpdateKorbanJiwa/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update KorbanJiwa</PageTitle>\n              <UpdateKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/LihatKorbanJiwa/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat KorbanJiwa</PageTitle>\n              <LihatKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/TambahKorbanJiwa'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah KorbanJiwa</PageTitle>\n              <TambahKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Material</PageTitle>\n              <KorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial/UpdateKorbanMaterial/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update KorbanMaterial</PageTitle>\n              <UpdateKorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial/LihatKorbanMaterial/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat KorbanMaterial</PageTitle>\n              <LihatKorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Bantuan</PageTitle>\n              <JenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan/UpdateJenisBantuan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisBantuan</PageTitle>\n              <UpdateJenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan/LihatJenisBantuan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat JenisBantuan</PageTitle>\n              <LihatJenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='InstansiTerkait'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Instansi Terkait</PageTitle>\n              <InstansiTerkait />\n            </>\n          }\n        />\n\n        <Route index element={<Navigate to='/master' />} />\n      </Route>\n    </Routes>\n  )\n}\n\nexport default MasterPage\n"],"names":["KOTA_URL","process","createTheme","text","primary","secondary","background","default","context","divider","action","button","hover","disabled","systemMode","ThemeModeComponent","customStyles","rows","style","minHeight","headCells","paddingLeft","paddingRight","cells","validatorForm","Yup","shape","kota","required","Kota","navigate","useNavigate","mode","useThemeMode","calculatedMode","useState","val","valFilterKota","setFilterKota","temp","setTemp","loading","setLoading","strparam","qParamFind","setUriFind","show","setShow","handleClose","totalRows","setTotalRows","perPage","handleFilter","uriParam","prevState","LoadingAnimation","props","className","columns","name","selector","row","serial","sortable","cell","sortField","kode","record","Fragment","DropdownButton","map","DropdownType","idx","as","ButtonGroup","id","size","variant","title","Dropdown","href","onClick","replace","doEdit","konfirDel","useEffect","fetchUsers","page","axios","response","data","total_data","timeout","setTimeout","items","Array","from","forEach","item","index","clearTimeout","fetchDT","value","React","valuesFormik","setValuesFormik","aksi","setAksi","formik","useFormik","initialValues","validationSchema","enableReinitialize","onSubmit","values","setSubmitting","bodyparam","Swal","icon","showConfirmButton","timer","idEditData","console","error","setIdEditData","getDetail","idparam","parseInt","prevstate","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","color","then","result","isConfirmed","bodyParam","deleted_by","type","onChange","event","target","placeholder","to","path","Modal","onHide","backdrop","keyboard","centered","closeButton","handleSubmit","Form","clsx","touched","errors","prevValues","role","length","progressPending","progressComponent","pagination","paginationTotalRows","theme","noDataComponent","LihatKota","useParams","valuesFormikExist","setValuesFormikExist","fetchData","jsonD","paramValue","updated_by","readOnly","UpdateKota","selectedFile","formData","FormData","append","log","TambahKota","created_by","return_id","KECAMATAN_URL","Kecamatan","valFilterKecamatan","setFilterKecamatan","kode_kecamatan","width","kecamatan","kode_kota","align","htmlFor","LihatKecamatan","UpdateKecamatan","handleChangeFormik","toUpperCase","TambahKecamatan","KELURAHAN_URL","Kelurahan","valFilterKelurahan","setFilterKelurahan","kode_kelurahan","kelurahan","LihatKelurahan","UpdateKelurahan","TambahKelurahan","JENIS_KEGIATAN_URL","jenis_kegiatan","JenisKegiatan","valFilterJenisKegiatan","setFilterJenisKegiatan","LihatJenisKegiatan","UpdateJenisKegiatan","TambahJenisKegiatan","JENIS_KEJADIAN_URL","jenis_kejadian","JenisKejadian","valFilterJenisKejadian","setFilterJenisKejadian","LihatJenisKejadian","UpdateJenisKejadian","TambahJenisKejadian","JENIS_PELANGGARAN_URL","JenisPelanggaran","jenis_pelanggaran","setData","total","Button","JENIS_PERTOLONGAN_URL","jenis_pertolongan","JenisPertolongan","valFilterJenisPertolongan","setFilterJenisPertolongan","LihatJenisPertolongan","UpdateJenisPertolongan","JENIS_PERDA_PERKADA_URL","JenisPerdaPerkada","judul","deskripsi","JENIS_PENINDAKAN_URL","jenis_penindakan","JenisPenindakan","valFilterJenisPenindakan","setFilterJenisPenindakan","LihatJenisPenindakan","UpdateJenisPenindakan","JENIS_KORBAN_JIWA_URL","jenis_korban_jiwa","KorbanJiwa","valFilterKorbanJiwa","setFilterKorbanJiwa","menuPosition","LihatKorbanJiwa","UpdateKorbanJiwa","TambahKorbanJiwa","JENIS_KORBAN_MATERIAL_URL","jenis_korban_material","KorbanMaterial","valFilterKorbanMaterial","setFilterKorbanMaterial","LihatKorbanMaterial","UpdateKorbanMaterial","JENIS_BANTUAN_URL","jenis_bantuan","JenisBantuan","valFilterJenisBantuan","setFilterJenisBantuan","LihatJenisBantuan","UpdateJenisBantuan","SARANA_PRASARANA_URL","InstansiTerkait","jenis_sarana_prasarana","status_sarana_prasarana","jumlah","kondisi","keterangan","dokumentasi","KONDISI_SARANA_PRASARANA_URL","kondisi_sarana_prasarana","KondisiSaranaPrasarana","valFilterKondisiSaranaPrasarana","setFilterKondisiSaranaPrasarana","LihatKondisiSaranaPrasarana","UpdateKondisiSaranaPrasarana","STATUS_SARANA_PRASARANA_URL","StatusSaranaPrasarana","valFilterStatusSaranaPrasarana","setFilterStatusSaranaPrasarana","LihatStatusSaranaPrasarana","UpdateStatusSaranaPrasarana","AGAMA_URL","agama","Agama","valFilterAgama","setFilterAgama","LihatAgama","UpdateAgama","TambahAgama","PANGKAT_URL","pangkat","Pangkat","valFilterPangkat","setFilterPangkat","menuposition","UpdatePangkat","LihatPangkat","TambahPangkat","BIDANG_WILAYAH_URL","kategori","nama","TempatPelaksanaan","valFilterTempatPelaksanaan","setFilterTempatPelaksanaan","UpdateTempatPelaksanaan","TEMPAT_PELAKSANA_URL","LihatTempatPelaksanaan","SKPD_URL","skpd","SKPD","valFilterSKPD","setFilterSKPD","UpdateSKPD","LihatSKPD","PENDIDIKAN_URL","pendidikan","Pendidikan","valFilterPendidikan","setFilterPendidikan","LihatPendidikan","JENIS_SARANA_PRASARANA_URL","JenisSaranaPrasarana","valFilterJenisSaranaPrasarana","setFilterJenisSaranaPrasarana","UpdateJenisSaranaPrasarana","LihatJenisSaranaPrasarana","GOLONGAN_URL","golongan","Golongan","valFilterGolongan","setFilterGolongan","doDetail","ESELON_URL","eselon","Eselon","valFilterEselon","setFilterEselon","UpdateEselon","LihatEselon","JABATAN_URL","status","Jabatan","setPerPage","valFilterJabatan","setFilterJabatan","handlePerRowsChange","newPerPage","no","minWidth","jabatan","wrap","paginationServer","sortServer","onSort","column","sortDirection","Error","orderBy","onChangeRowsPerPage","onChangePage","SUMBER_INFORMASI_URL","sumber_informasi","SumberInformasi","valFilterSumberInformasi","setFilterSumberInformasi","UpdateSumberInformasi","LihatSumberInformasi","JENIS_KEKERASAN_URL","jenis_kekerasan","JenisKekerasan","valFilterJenisKekerasan","setFilterJenisKekerasan","UpdateJenisKekerasan","LihatJenisKekerasan","JENIS_PENERTIBAN_URL","jenis_penertiban","JenisPenertiban","valFilterJenisPenertiban","setFilterJenisPenertiban","UpdateJenisPenertiban","LihatJenisPenertiban","JenisPenyelesaian","LihatJabatan","STATUS_KENAIKAN_PANGKAT_URL","status_kenaikan_pangkat","StatusKenaikanPangkat","LihatStatusKenaikanPangkat","masterBreadCrumbs","isSeparator","isActive","element","breadcrumbs"],"sourceRoot":""}