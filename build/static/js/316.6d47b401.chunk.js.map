{"version":3,"file":"static/js/316.6d47b401.chunk.js","mappings":"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","sources":["app/modules/master/components/Lihat-master/LihatKota.tsx","app/modules/master/components/Update-master/UpdateKota.tsx","app/modules/master/components/Tambah-master/TambahKota.tsx","app/modules/master/components/Lihat-master/LihatKecamatan.tsx","app/modules/master/components/Update-master/UpdateKecamatan.tsx","app/modules/master/components/Tambah-master/TambahKecamatan.tsx","app/modules/master/components/Lihat-master/LihatKelurahan.tsx","app/modules/master/components/Update-master/UpdateKelurahan.tsx","app/modules/master/components/Tambah-master/TambahKelurahan.tsx","app/modules/master/components/JenisKegiatan.tsx","app/modules/master/components/Lihat-master/LihatJenisKegiatan.tsx","app/modules/master/components/Update-master/UpdateJenisKegiatan.tsx","app/modules/master/components/Tambah-master/TambahJenisKegiatan.tsx","app/modules/master/components/JenisKejadian.tsx","app/modules/master/components/Lihat-master/LihatJenisKejadian.tsx","app/modules/master/components/Update-master/UpdateJenisKejadian.tsx","app/modules/master/components/Tambah-master/TambahJenisKejadian.tsx","app/modules/master/components/JenisPelanggaran.tsx","app/modules/master/components/Lihat-master/LihatJenisPelanggaran.tsx","app/modules/master/components/JenisPertolongan.tsx","app/modules/master/components/Lihat-master/LihatJenisPertolongan.tsx","app/modules/master/components/Update-master/UpdateJenisPertolongan.tsx","app/modules/master/components/JenisPerdaPerkada.tsx","app/modules/master/components/Lihat-master/LihatJenisPerdaPerkada.tsx","app/modules/master/components/Update-master/UpdateJenisPerdaPerkada.tsx","app/modules/master/components/Tambah-master/TambahJenisPerdaPerkada.tsx","app/modules/master/components/JenisPenindakan.tsx","app/modules/master/components/Lihat-master/LihatJenisPenindakan.tsx","app/modules/master/components/Update-master/UpdateJenisPenindakan.tsx","app/modules/master/components/KorbanJiwa.tsx","app/modules/master/components/Lihat-master/LihatKorbanJiwa.tsx","app/modules/master/components/Update-master/UpdateKorbanJiwa.tsx","app/modules/master/components/Tambah-master/TambahKorbanJiwa.tsx","app/modules/master/components/KorbanMaterial.tsx","app/modules/master/components/Lihat-master/LihatKorbanMaterial.tsx","app/modules/master/components/Update-master/UpdateKorbanMaterial.tsx","app/modules/master/components/JenisBantuan.tsx","app/modules/master/components/Lihat-master/LihatJenisBantuan.tsx","app/modules/master/components/Update-master/UpdateJenisBantuan.tsx","app/modules/master/components/InstansiTerkait.tsx","app/modules/master/components/KondisiSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatKondisiSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateKondisiSaranaPrasarana.tsx","app/modules/master/components/StatusSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatStatusSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateStatusSaranaPrasarana.tsx","app/modules/master/components/Agama.tsx","app/modules/master/components/Lihat-master/LihatAgama.tsx","app/modules/master/components/Update-master/UpdateAgama.tsx","app/modules/master/components/Tambah-master/TambahAgama.tsx","app/modules/master/components/Pangkat.tsx","app/modules/master/components/Update-master/UpdatePangkat.tsx","app/modules/master/components/Lihat-master/LihatPangkat.tsx","app/modules/master/components/Tambah-master/TambahPangkat.tsx","app/modules/master/components/TempatPelaksanaan.tsx","app/modules/master/components/Update-master/UpdateTempatPelaksanaan.tsx","app/modules/master/components/Lihat-master/LihatTempatPelaksanaan.tsx","app/modules/master/components/SKPD.tsx","app/modules/master/components/Update-master/UpdateSKPD.tsx","app/modules/master/components/Lihat-master/LihatSKPD.tsx","app/modules/master/components/Pendidikan.tsx","app/modules/master/components/Lihat-master/LihatPendidikan.tsx","app/modules/master/components/JenisSaranaPrasarana.tsx","app/modules/master/components/Update-master/UpdateJenisSaranaPrasarana.tsx","app/modules/master/components/Lihat-master/LihatJenisSaranaPrasarana.tsx","app/modules/master/components/Golongan.tsx","app/modules/master/components/Eselon.tsx","app/modules/master/components/Update-master/UpdateEselon.tsx","app/modules/master/components/Lihat-master/LihatEselon.tsx","app/modules/master/components/Jabatan.tsx","app/modules/master/components/Lihat-master/LihatJabatan.tsx","app/modules/master/components/Tambah-master/TambahJabatan.tsx","app/modules/master/components/SumberInformasi.tsx","app/modules/master/components/Update-master/UpdateSumberInformasi.tsx","app/modules/master/components/Lihat-master/LihatSumberInformasi.tsx","app/modules/master/components/JenisKekerasan.tsx","app/modules/master/components/Update-master/UpdateJenisKekerasan.tsx","app/modules/master/components/Lihat-master/LihatJenisKekerasan.tsx","app/modules/master/components/JenisPenyelesaian.tsx","app/modules/master/components/StatusKenaikanPangkat.tsx","app/modules/master/components/Lihat-master/LihatStatusKenaikanPangkat.tsx","app/modules/master/MasterPage.tsx"],"sourcesContent":["import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  kota?: string\r\n  kode?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  kota?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatKota() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KOTA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kota: jsonD.kota,\r\n        kode: jsonD.kode,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kota'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kota ? valuesFormikExist?.kota : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode</Form.Label>\r\n                        <Form.Control\r\n                          name='kode'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kota'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kota?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  kota?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000//master/kota\r\n\r\nexport function UpdateKota() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KOTA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kota: jsonD.kota,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kota: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kota: valuesFormik?.kota\r\n          ? valuesFormik.kota\r\n          : valuesFormikExist?.kota\r\n          ? valuesFormikExist.kota\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${KOTA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${KOTA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Kota', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Kota', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kota'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kota || valuesFormik?.kota === ''\r\n                              ? valuesFormik?.kota\r\n                              : valuesFormikExist?.kota\r\n                              ? valuesFormikExist?.kota\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kota'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kota?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/master/kota\r\n\r\nexport function TambahKota() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kota: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kota: valuesFormik?.kota ? valuesFormik.kota : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\r\n        if (response) {\r\n            if (selectedFile) {\r\n              formData.append('file_dokumentasi', selectedFile)\r\n              const responseFile = await axios.post(\r\n                `${KOTA_URL}/upload-file/${response.data.data.return_id}`,\r\n                formData\r\n              )\r\n              if (responseFile) {\r\n                console.log('File success uploaded!')\r\n                Swal.fire({\r\n                  icon: 'success',\r\n                  title: 'Data berhasil disimpan',\r\n                  showConfirmButton: false,\r\n                  timer: 1500,\r\n                })\r\n                navigate('/master/Kota', {replace: true})\r\n              }\r\n              return\r\n            }\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            navigate('/master/Kota', {replace: true})\r\n          }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kota'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kota}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kota'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  kecamatan?: string\r\n  kode_kota?: string\r\n  kode_kecamatan?: string\r\n  kota?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kecamatan?: string\r\n  kode_kota?: string\r\n  kode_kecamatan?: string\r\n  kota?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\r\nexport function LihatKecamatan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KECAMATAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kecamatan: jsonD.kecamatan,\r\n        kode_kota: jsonD.kode_kota,\r\n        kode_kecamatan: jsonD.kode_kecamatan,\r\n        kota: jsonD.kota,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kecamatan ? valuesFormikExist?.kecamatan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kota'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode_kota ? valuesFormikExist?.kode_kota : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.kode_kecamatan\r\n                              ? valuesFormikExist?.kode_kecamatan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kota'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kota ? valuesFormikExist?.kota : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kecamatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kode_kota?: string\r\n  kecamatan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode_kota?: string\r\n  kecamatan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000//master/kecamatan\r\n\r\nexport function UpdateKecamatan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KECAMATAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kecamatan: jsonD.kecamatan,\r\n        kode_kota: jsonD.kode_kota,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value.toUpperCase(),\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kecamatan: '',\r\n      kode_kota: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kecamatan: valuesFormik?.kecamatan\r\n          ? valuesFormik.kecamatan\r\n          : valuesFormikExist?.kecamatan\r\n          ? valuesFormikExist.kecamatan\r\n          : '',\r\n        kode_kota: valuesFormik?.kode_kota\r\n          ? valuesFormik.kode_kota\r\n          : valuesFormikExist?.kode_kota\r\n          ? valuesFormikExist.kode_kota\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${KECAMATAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${KECAMATAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Kecamatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Kecamatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kecamatan || valuesFormik?.kecamatan === ''\r\n                              ? valuesFormik?.kecamatan\r\n                              : valuesFormikExist?.kecamatan\r\n                              ? valuesFormikExist?.kecamatan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kota'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kode_kota || valuesFormik?.kode_kota === ''\r\n                              ? valuesFormik?.kode_kota\r\n                              : valuesFormikExist?.kode_kota\r\n                              ? valuesFormikExist?.kode_kota\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kecamatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kecamatan?: string\r\n  kode_kota?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\r\n\r\nexport function TambahKecamatan() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value.toUpperCase(),\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kecamatan: '',\r\n      kode_kota: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kecamatan: valuesFormik?.kecamatan ? valuesFormik.kecamatan : '',\r\n        kode_kota: valuesFormik?.kode_kota ? valuesFormik.kode_kota : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${KECAMATAN_URL}/create`, bodyparam)\r\n        console.log(response.data, valuesFormik)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${KECAMATAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Kecamatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Kecamatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kecamatan}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kota'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kode_kota}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kecamatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  kecamatan?: string\r\n  kode_kelurahan?: string\r\n  kode_kecamatan?: string\r\n  kelurahan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kecamatan?: string\r\n  kode_kelurahan?: string\r\n  kode_kecamatan?: string\r\n  kelurahan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\r\nexport function LihatKelurahan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KELURAHAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kecamatan: jsonD.kecamatan,\r\n        kode_kelurahan: jsonD.kode_kelurahan,\r\n        kode_kecamatan: jsonD.kode_kecamatan,\r\n        kelurahan: jsonD.kelurahan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kecamatan ? valuesFormikExist?.kecamatan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kelurahan</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kelurahan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.kode_kelurahan\r\n                              ? valuesFormikExist?.kode_kelurahan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.kode_kecamatan\r\n                              ? valuesFormikExist?.kode_kecamatan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kelurahan</Form.Label>\r\n                        <Form.Control\r\n                          name='kelurahan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kelurahan ? valuesFormikExist?.kelurahan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Kelurahan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kode_kecamatan?: string\r\n  kelurahan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode_kecamatan?: string\r\n  kelurahan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000//master/kelurahan\r\n\r\nexport function UpdateKelurahan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KELURAHAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kelurahan: jsonD.kelurahan,\r\n        kode_kecamatan: jsonD.kode_kecamatan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value.toUpperCase(),\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kelurahan: '',\r\n      kode_kecamatan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kelurahan: valuesFormik?.kelurahan\r\n          ? valuesFormik.kelurahan\r\n          : valuesFormikExist?.kelurahan\r\n          ? valuesFormikExist.kelurahan\r\n          : '',\r\n        kode_kecamatan: valuesFormik?.kode_kecamatan\r\n          ? valuesFormik.kode_kecamatan\r\n          : valuesFormikExist?.kode_kecamatan\r\n          ? valuesFormikExist.kode_kecamatan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${KELURAHAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${KELURAHAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/kelurahan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/kelurahan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>kelurahan</Form.Label>\r\n                        <Form.Control\r\n                          name='kelurahan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kelurahan || valuesFormik?.kelurahan === ''\r\n                              ? valuesFormik?.kelurahan\r\n                              : valuesFormikExist?.kelurahan\r\n                              ? valuesFormikExist?.kelurahan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kota</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kode_kecamatan || valuesFormik?.kode_kecamatan === ''\r\n                              ? valuesFormik?.kode_kecamatan\r\n                              : valuesFormikExist?.kode_kecamatan\r\n                              ? valuesFormikExist?.kode_kecamatan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/kelurahan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kelurahan?: string\r\n  kode_kecamatan?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\r\n\r\nexport function TambahKelurahan() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value.toUpperCase(),\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kelurahan: '',\r\n      kode_kecamatan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kelurahan: valuesFormik?.kelurahan ? valuesFormik.kelurahan : '',\r\n        kode_kecamatan: valuesFormik?.kode_kecamatan ? valuesFormik.kode_kecamatan : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${KELURAHAN_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${KELURAHAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/kelurahan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/kelurahan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>kelurahan</Form.Label>\r\n                        <Form.Control\r\n                          name='kelurahan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kelurahan}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode Kecamatan</Form.Label>\r\n                        <Form.Control\r\n                          name='kode_kecamatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kode_kecamatan}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/kelurahan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL\r\nexport const JENIS_KEGIATAN_URL = `${API_URL}/jenis-kegiatan`\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_kegiatan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  jenis_kegiatan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisKegiatan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisKegiatan, setFilterJenisKegiatan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [filterTemp, setFilterTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => {\r\n    console.log('tes1', valFilterJenisKegiatan.val)\r\n    setUriFind((prevState) => ({...prevState, strparam: valFilterJenisKegiatan.val}))\r\n    const filterData: any = temp.filter(\r\n      (i: any) => i.nama.toLowerCase() === valFilterJenisKegiatan.val.toLowerCase()\r\n    )\r\n    setFilterTemp(filterData)\r\n  }\r\n\r\n  // const handleFilter = async () => {\r\n  // let uriParam = '';\r\n  // if (valFilterJenisKegiatan.val !== '') {\r\n  //   uriParam += valFilterJenisKegiatan.val;\r\n  // }\r\n  // await setUriFind((prevState) => ({...prevState, strparam: uriParam}));\r\n  // console.log('tes1', qParamFind.strparam)\r\n  // if (qParamFind.strparam) {\r\n  //   console.log('tes if', qParamFind.strparam)\r\n  //   const filterData: any = temp.filter(\r\n  //     (i: any) => i.nama.toLowerCase() === qParamFind.strparam.toLowerCase()\r\n  //     );\r\n  //     setFilterTemp(filterData);\r\n  //   }\r\n  // };\r\n\r\n  // const handleFilter = async () => { //3\r\n  //   let uriParam = ''\r\n  //   if (valFilterJenisKegiatan.val !== '') {\r\n  //     uriParam += `${valFilterJenisKegiatan.val}`\r\n  //   }\r\n  //   await setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  //   const filterData: any = temp.filter(\r\n  //     (i: any) => i.nama.toLowerCase() === qParamFind.strparam.toLowerCase()\r\n  //   )\r\n  //   const timeout = setTimeout(() => {\r\n  //     setFilterTemp(filterData)\r\n  //   }, 500)\r\n\r\n  //   return () => clearTimeout(timeout)\r\n  // }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisKegiatan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisKegiatan = (event: {\r\n    //5\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterJenisKegiatan({val: event.target.value})\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Jenis Kegiatan',\r\n      selector: (row: any) => row.nama,\r\n      sortable: true,\r\n      sortField: 'jenis_kegiatan',\r\n    },\r\n    {\r\n      name: 'Kode',\r\n      selector: (row: any) => row.kode,\r\n      sortable: true,\r\n      sortField: 'kode',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisKegiatan/LihatJenisKegiatan/' + record.id, {\r\n                          replace: true,\r\n                        })\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/?%24top=20`)\r\n      console.log(response.data)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    // fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KEGIATAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan, //? valuesFormik.jenis_kegiatan : '',\r\n      }\r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KEGIATAN_URL}/create`)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            // fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KEGIATAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            // fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_kegiatan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n\r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n\r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KEGIATAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          // fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Kegiatan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisKegiatan.val} //4\r\n            onChange={handleChangeInputJenisKegiatan}\r\n            placeholder='Jenis Kegiatan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}>\r\n            {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Kegiatan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Kegiatan</Form.Label>\r\n                  <Form.Control\r\n                    name='jenis_kegiatan'\r\n                    className={clsx(\r\n                      'form-control form-control-solid mb-1',\r\n                      {\r\n                        'is-invalid': formik.touched.jenis_kegiatan && formik.errors.jenis_kegiatan,\r\n                      },\r\n                      {\r\n                        'is-valid': formik.touched.jenis_kegiatan && !formik.errors.jenis_kegiatan,\r\n                      }\r\n                    )}\r\n                    onChange={handleChangeFormik}\r\n                    value={valuesFormik?.jenis_kegiatan}\r\n                  />\r\n                  {formik.touched.jenis_kegiatan && formik.errors.jenis_kegiatan && (\r\n                    <div className='fv-plugins-message-container'>\r\n                      <div className='fv-help-block'>\r\n                        <span role='alert'>{formik.errors.jenis_kegiatan}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n        {temp?.length > 0 && temp && (\r\n          <DataTable\r\n            columns={columns}\r\n            data={qParamFind.strparam ? filterTemp : temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_kegiatan?: string\r\n  updated_by?: string\r\n  kode?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kegiatan?: string\r\n  kode?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/jenis_kegiatan\r\n\r\nexport function LihatJenisKegiatan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kegiatan: jsonD.jenis_kegiatan,\r\n        kode: jsonD.kode,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kegiatan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis kegiatan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_kegiatan\r\n                              ? valuesFormikExist?.jenis_kegiatan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>kode</Form.Label>\r\n                        <Form.Control\r\n                          name='kode'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKegiatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kegiatan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  jenis_kegiatan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000//master/jenis-kegiatan\r\n\r\nexport function UpdateJenisKegiatan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEGIATAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kegiatan: jsonD.jenis_kegiatan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kegiatan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan\r\n          ? valuesFormik.jenis_kegiatan\r\n          : valuesFormikExist?.jenis_kegiatan\r\n          ? valuesFormikExist.jenis_kegiatan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KEGIATAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KEGIATAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKegiatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKegiatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kegiatan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kegiatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_kegiatan || valuesFormik?.jenis_kegiatan === ''\r\n                              ? valuesFormik?.jenis_kegiatan\r\n                              : valuesFormikExist?.jenis_kegiatan\r\n                              ? valuesFormikExist?.jenis_kegiatan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKegiatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kegiatan?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/master/jenis_kegiatan\r\n\r\nexport function TambahJenisKegiatan() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kegiatan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kegiatan: valuesFormik?.jenis_kegiatan ? valuesFormik.jenis_kegiatan : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${JENIS_KEGIATAN_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${JENIS_KEGIATAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKegiatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKegiatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kegiatan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kegiatan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.jenis_kegiatan}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKegiatan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL\r\nexport const JENIS_KEJADIAN_URL = `${API_URL}/jenis-kejadian` \r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_kejadian?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  jenis_kejadian: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisKejadian() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisKejadian, setFilterJenisKejadian] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [filterTemp, setFilterTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => {\r\n    console.log('tes1', valFilterJenisKejadian.val)\r\n    setUriFind((prevState) => ({...prevState, strparam: valFilterJenisKejadian.val}))\r\n    const filterData: any = temp.filter(\r\n      (i: any) => i.nama.toLowerCase() === valFilterJenisKejadian.val.toLowerCase()\r\n    )\r\n    setFilterTemp(filterData)\r\n  }\r\n\r\n  // const handleFilter = async () => {//3\r\n  //   let uriParam = ''\r\n  //   if (valFilterJenisKejadian.val !== '') {\r\n  //     uriParam += `${valFilterJenisKejadian.val}`\r\n  //   }\r\n  //   setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  //   const filterData: any = temp.filter(\r\n  //     (i: any) => i.nama.toLowerCase() === qParamFind.strparam.toLowerCase()\r\n  //   )\r\n  //   const timeout = setTimeout(() => {\r\n  //     setFilterTemp(filterData)\r\n  //   }, 500)\r\n\r\n  //   return () => clearTimeout(timeout)\r\n  // }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisKejadian({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisKejadian = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisKejadian({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      width: '200px',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Kejadian',\r\n      selector: (row: any) => row.nama,\r\n      sortable: true,\r\n      sortField: 'jenis_kejadian',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisKejadian/LihatJenisKejadian/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/?%24top=20`)\r\n      console.log(response.data)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    // fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KEJADIAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_kejadian: valuesFormik?.jenis_kejadian, //? valuesFormik.jenis_kejadian : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KEJADIAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KEJADIAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            // fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_kejadian: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KEJADIAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Kejadian</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisKejadian.val} //4\r\n            onChange={handleChangeInputJenisKejadian}\r\n            placeholder='Jenis Kejadian'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}>\r\n            {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Kejadian</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Kejadian</Form.Label>\r\n                  <Form.Control\r\n                    name='jenis_kejadian'\r\n                    className={clsx(\r\n                      'form-control form-control-solid mb-1',\r\n                      {\r\n                        'is-invalid': formik.touched.jenis_kejadian && formik.errors.jenis_kejadian,\r\n                      },\r\n                      {\r\n                        'is-valid': formik.touched.jenis_kejadian && !formik.errors.jenis_kejadian,\r\n                      }\r\n                    )}\r\n                    onChange={handleChangeFormik}\r\n                    value={valuesFormik?.jenis_kejadian}\r\n                  />\r\n                  {formik.touched.jenis_kejadian && formik.errors.jenis_kejadian && (\r\n                    <div className='fv-plugins-message-container'>\r\n                      <div className='fv-help-block'>\r\n                        <span role='alert'>{formik.errors.jenis_kejadian}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n        {temp?.length > 0 && temp && (\r\n          <DataTable\r\n            columns={columns}\r\n            data={qParamFind.strparam ? filterTemp : temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_kejadian?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kejadian?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL //http://localhost:3001\r\nexport const JENIS_KEJADIAN_URL = `${API_URL}/jenis-kejadian` //http://localhost:3001/jenis-kejadian\r\n\r\nexport function LihatJenisKejadian() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kejadian: jsonD.jenis_kejadian,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kejadian'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_kejadian\r\n                              ? valuesFormikExist?.jenis_kejadian\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKejadian'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kejadian?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kejadian?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000//master/jenis-kejadian\r\n\r\nexport function UpdateJenisKejadian() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEJADIAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kejadian: jsonD.jenis_kejadian,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kejadian: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kejadian: valuesFormik?.jenis_kejadian\r\n          ? valuesFormik.jenis_kejadian\r\n          : valuesFormikExist?.jenis_kejadian\r\n          ? valuesFormikExist.jenis_kejadian\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KEJADIAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KEJADIAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKejadian', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKejadian', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kejadian'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_kejadian || valuesFormik?.jenis_kejadian === ''\r\n                              ? valuesFormik?.jenis_kejadian\r\n                              : valuesFormikExist?.jenis_kejadian\r\n                              ? valuesFormikExist?.jenis_kejadian\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKejadian'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kejadian?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000/master/jenis-kejadian\r\n\r\nexport function TambahJenisKejadian() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kejadian: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kejadian: valuesFormik?.jenis_kejadian ? valuesFormik.jenis_kejadian : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${JENIS_KEJADIAN_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${JENIS_KEJADIAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKejadian', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKejadian', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kejadian'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.jenis_kejadian}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKejadian'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport DataTable, { createTheme } from 'react-data-table-component';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport clsx from 'clsx'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PELANGGARAN_URL = `${API_URL}/master/Jenis-pelanggaran` //http://localhost:3000/Jenis-pelanggaran\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  jenis_pelanggaran?: string\r\n  kode_penertiban?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_pelanggaran: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisPelanggaran() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisPelanggaran, setFilterJenisPelanggaran] = useState({val: ''})\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n  // const handleShow = () => setShow(true);\r\n\r\n  const handleFilter = async () => {\r\n    //3\r\n    let uriParam = ''\r\n    if (valFilterJenisPelanggaran.val !== '') {\r\n      uriParam += `${valFilterJenisPelanggaran.val}`\r\n    }\r\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisPelanggaran({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisPelanggaran = (event: {\r\n    //5\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setFilterJenisPelanggaran({val: event.target.value})\r\n  }\r\n\r\n  // START : CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  // Column Table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      width: '150px',\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n      // sortField: 'id',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Pelanggaran',\r\n      selector: (row: any) => row.jenis_pelanggaran,\r\n      sortable: true,\r\n      sortField: 'jenis_pelanggaran',\r\n      width: '200px',\r\n    },\r\n    {},\r\n    // {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      align: 'left',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisPelanggaran/LihatJenisPelanggaran/' + record.id, {\r\n                          replace: true,\r\n                        })\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START : VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_PELANGGARAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n        Array.from(items).forEach((item: any, index: any) => {\r\n          item.serial = index + 1\r\n        })\r\n        setTemp(items)\r\n        setLoading(false)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_PELANGGARAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n    }, 50)\r\n    return () => clearTimeout(timeout)\r\n  }\r\n\r\n  // END : VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_pelanggaran: valuesFormik?.jenis_pelanggaran,\r\n        kode_penertiban: '', //? valuesFormik.jenis_pelanggaran : '', //? valuesFormik.kategori : '',\r\n      }\r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_PELANGGARAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_PELANGGARAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_pelanggaran: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n\r\n  //  GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_PELANGGARAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n\r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_PELANGGARAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END : CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-xxl- col-lg-6 col-md-3 col-sm-10'>\r\n          <label htmlFor='' className='mb-3'>\r\n            Jenis Pelanggaran\r\n          </label>\r\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'></div>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='tags'\r\n            value={valFilterJenisPelanggaran.val}\r\n            onChange={handleChangeInputJenisPelanggaran}\r\n            placeholder='Jenis Pelanggaran'\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}>\r\n            <button className='btn btn-primary'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#'>\r\n            <button className='btn btn-primary me-5' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Pelanggaran</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Pelanggaran</Form.Label>\r\n                  <Form.Control\r\n                    name='jenis_pelanggaran'\r\n                    className={clsx(\r\n                      'form-control form-control-solid mb-1',\r\n                      {\r\n                        'is-invalid':\r\n                          formik.touched.jenis_pelanggaran && formik.errors.jenis_pelanggaran,\r\n                      },\r\n                      {\r\n                        'is-valid':\r\n                          formik.touched.jenis_pelanggaran && !formik.errors.jenis_pelanggaran,\r\n                      }\r\n                    )}\r\n                    onChange={handleChangeFormik}\r\n                    value={valuesFormik?.jenis_pelanggaran}\r\n                  />\r\n                  {formik.touched.jenis_pelanggaran && formik.errors.jenis_pelanggaran && (\r\n                    <div className='fv-plugins-message-container'>\r\n                      <div className='fv-help-block'>\r\n                        <span role='alert'>{formik.errors.jenis_pelanggaran}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n        {temp?.length > 0 && temp && (\r\n          <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            progressPending={loading}\r\n            customStyles={customStyles}\r\n            progressComponent={<LoadingAnimation />}\r\n            pagination\r\n            // paginationServer\r\n            paginationTotalRows={totalRows}\r\n            //    expandableRowsComponent={(row) => (\r\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n            // )}\r\n            // expandableRowsComponent={ExpandedComponent}\r\n            // onChangeRowsPerPage={handlePerRowsChange}\r\n            // onChangePage={handlePageChange}\r\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n            noDataComponent={\r\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n                <div className='d-flex flex-column'>\r\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n                </div>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n  // const handlePageChange = (page: any) => {\r\n  //   fetchUsers(page);\r\n  // };\r\n\r\n  // const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n  //   setLoading(true);\r\n\r\n  //   const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\r\n\r\n  //   setData(response.data.data);\r\n  //   setPerPage(newPerPage);\r\n  //   setLoading(false);\r\n  // };\r\n\r\n  // const handleSort = (column: any, sortDirection: any) => {\r\n  //   // simulate server sort\r\n  //   console.log(column, sortDirection);\r\n  //   setLoading(true);\r\n\r\n  //   // instead of setTimeout this is where you would handle your API call.\r\n  //   setTimeout(() => {\r\n  //     setData(orderBy(data, column.sortField, sortDirection));\r\n  //     setLoading(false);\r\n  //   }, 100);\r\n  // };\r\n\r\n// function orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n//   throw new Error('Function not implemented.');\r\n// }\r\n\r\n// function onEdit(record: any) {\r\n//   throw new Error('Function not implemented.');\r\n// }\r\n\r\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jenis_pelanggaran?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jenis_pelanggaran?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PELANGGARAN_URL = `${API_URL}/master/Jenis-pelanggaran` //http://localhost:3000/sarana-prasarana\n\nexport function LihatJenisPelanggaran() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PELANGGARAN_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jenis_pelanggaran: jsonD.jenis_pelanggaran,\n        updated_by: '',\n    }\n    setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    // console.log('respon data', valuesFormikExist)\n}\nfetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-8'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Pelanggaran</Form.Label>\n                        <Form.Control\n                          name='jenis_pelanggaran'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.jenis_pelanggaran ? valuesFormikExist?.jenis_pelanggaran : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPelanggaran'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_pertolongan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_pertolongan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisPertolongan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisPertolongan, setFilterJenisPertolongan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisPertolongan.val !== '') {\r\n      uriParam += `${valFilterJenisPertolongan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisPertolongan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisPertolongan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisPertolongan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Pertolongan',\r\n      selector: (row: any) => row.jenis_pertolongan,\r\n      sortable: true,\r\n      sortField: 'jenis_pertolongan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisPertolongan/LihatJenisPertolongan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_PERTOLONGAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_pertolongan: valuesFormik?.jenis_pertolongan, //? valuesFormik.jenis_pertolongan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_PERTOLONGAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_PERTOLONGAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_pertolongan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_PERTOLONGAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Pertolongan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisPertolongan.val} //4\r\n            onChange={handleChangeInputJenisPertolongan}\r\n            placeholder='Jenis pertolongan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Pertolongan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Pertolongan</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_pertolongan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_pertolongan && formik.errors.jenis_pertolongan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_pertolongan && !formik.errors.jenis_pertolongan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_pertolongan}\r\n                    />\r\n                    {formik.touched.jenis_pertolongan && formik.errors.jenis_pertolongan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_pertolongan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_pertolongan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_pertolongan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatJenisPertolongan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_pertolongan: jsonD.jenis_pertolongan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Pertolongan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_pertolongan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.jenis_pertolongan ? valuesFormikExist?.jenis_pertolongan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPertolongan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_pertolongan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  jenis_pertolongan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` //http://localhost:3000//master/JenisPertolongan\r\n\r\nexport function UpdateJenisPertolongan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PERTOLONGAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_pertolongan: jsonD.jenis_pertolongan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_pertolongan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_pertolongan: valuesFormik?.jenis_pertolongan\r\n          ? valuesFormik.jenis_pertolongan\r\n          : valuesFormikExist?.jenis_pertolongan\r\n          ? valuesFormikExist.jenis_pertolongan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_PERTOLONGAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_PERTOLONGAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisPertolongan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisPertolongan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Pertolongan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_pertolongan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_pertolongan || valuesFormik?.jenis_pertolongan === ''\r\n                              ? valuesFormik?.jenis_pertolongan\r\n                              : valuesFormikExist?.jenis_pertolongan\r\n                              ? valuesFormikExist?.jenis_pertolongan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPertolongan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport DataTable, { createTheme } from 'react-data-table-component';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\nimport clsx from 'clsx'\r\n\r\nexport const MASTERDATA_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL //http://localhost:3001\r\nexport const JENIS_PERDA_PERKADA_URL = `${MASTERDATA_URL}/jenis-perda-perkada` //http://localhost:3001/jenis-perda-perkada\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  judul?: string\r\n  pasal?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  jenis_perda_perkada: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisPerdaPerkada() {\r\n  const {mode} = useThemeMode()\r\n  const navigate = useNavigate();\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJudul, setFilterJudul] = useState({val: ''})\r\n  const [valFilterDeskripsi, setFilterDeskripsi] = useState({val: ''})\r\n  \r\n  const [data, setData] = useState([]);\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const handleShow = () => setShow(true);\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  const handleFilter = async () => {\r\n    let uriParam = ''\r\n    if (valFilterJudul.val !== '') {\r\n      uriParam += `judul=${valFilterJudul.val}`\r\n    }\r\n    if (valFilterDeskripsi.val !== '') {\r\n      uriParam += `&deskripsi=${valFilterDeskripsi.val}`\r\n    }\r\n\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  // const handleFilterReset = () => {\r\n  //   setFilterJudul({val: ''})\r\n  //   setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  // }\r\n\r\n  const handleChangeInputJenisPerdaPerkada = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJudul({ val: event.target.value })\r\n  }\r\n  const handleChangeInputDeskripsi = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterDeskripsi({ val: event.target.value })\r\n  }\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\r\n          <div className=\"d-flex flex-column\">\r\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  // let number = 1\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.id,\r\n      sortable: true,\r\n      sortField: 'id',\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      }\r\n    },\r\n    {\r\n    },\r\n    {\r\n      name: 'Judul',\r\n      selector: (row: any) => row.judul,\r\n      sortable: true,\r\n      sortField: 'judul',\r\n      width: '300px'\r\n    },\r\n    {\r\n      name: 'Deskripsi',\r\n      selector: (row: any) => row.deskripsi,\r\n      sortable: true,\r\n      sortField: 'deskripsi',\r\n    },\r\n    {\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: \"Action\",\r\n      className: \"action\",\r\n      align: \"left\",\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n\r\n            <div className=\"mb-2\">\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size=\"sm\"\r\n                    variant=\"light\"\r\n                    title=\"Aksi\">\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisPerdaPerkada/LihatJenisPerdaPerkada/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisPerdaPerkada/UpdateJenisPerdaPerkada/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Ubah\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\" onClick={() => konfirDel(record.id)}>Hapus</Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n\r\n  ]\r\n\r\n  useEffect(() => {\r\n      async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      console.log(qParamFind)\r\n      const response = await axios.get(\r\n        `${JENIS_PERDA_PERKADA_URL}${qParamFind.strparam}`\r\n      )\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100)\r\n\r\n    // setTemp(value.data.data);\r\n    // console.log('cek response api:',temp);\r\n   \r\n    // setTotalRows(response.data.total);\r\n    // console.log('cek ahhh :' ,data);\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_PERDA_PERKADA_URL}`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n\r\n  // const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n  //   setLoading(true);\r\n\r\n  //   const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\r\n\r\n  //   setData(response.data.data);\r\n  //   setPerPage(newPerPage);\r\n  //   setLoading(false);\r\n  // };\r\n\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // const handleSort = (column: any, sortDirection: any) => {\r\n  //   // simulate server sort\r\n  //   console.log(column, sortDirection);\r\n  //   setLoading(true);\r\n\r\n  //   // instead of setTimeout this is where you would handle your API call.\r\n  //   setTimeout(() => {\r\n  //     setData(orderBy(data, column.sortField, sortDirection));\r\n  //     setLoading(false);\r\n  //   }, 100);\r\n  // };\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        judul: valuesFormik?.judul,\r\n        pasal: valuesFormik?.pasal,\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_PERDA_PERKADA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_PERDA_PERKADA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      judul: '',\r\n      // deskripsi: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_PERDA_PERKADA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_PERDA_PERKADA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\r\n            <label htmlFor='' className='mb-3'>\r\n              <h3>Judul Perda / Perkada</h3>\r\n            </label>\r\n            <input\r\n              type='text' \r\n              className='form-control form-control form-control-solid' \r\n              name='q'\r\n              value={valFilterJudul.val}\r\n              onChange={handleChangeInputJenisPerdaPerkada}\r\n              placeholder='Jenis Perda / Perkada'\r\n            />\r\n          </div>\r\n      </div>\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\r\n            <label htmlFor='' className='mb-3'>\r\n              <h3>Deskripsi</h3>\r\n            </label>\r\n            <input\r\n              type='text' \r\n              className='form-control form-control form-control-solid' \r\n              name='q'\r\n              value={valFilterDeskripsi.val}\r\n              onChange={handleChangeInputDeskripsi}\r\n              placeholder='Deskripsi'\r\n            />\r\n          </div>\r\n      </div>\r\n\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n          <Link onClick={handleFilter} to='#'>\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\r\n          <Link to='/master/JenisPerdaPerkada/TambahJenisPerdaPerkada'>\r\n            <button className='btn btn-primary me-5'>\r\n              <i className=\"fa-solid fa-plus\"></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n\r\n      <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Perda / Perkada</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className='row mt-2 '>\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <div className='form-group'>\r\n                <Form.Label>Jenis Perda / Perkada</Form.Label>\r\n                <Form.Control\r\n                  name='jenis_perda_perkada'\r\n                  className={clsx(\r\n                    'form-control form-control-solid mb-1',\r\n                    {\r\n                      'is-invalid': formik.touched.judul && formik.errors.judul,\r\n                    },\r\n                    {\r\n                      'is-valid': formik.touched.judul && !formik.errors.judul,\r\n                    }\r\n                  )}\r\n                  onChange={handleChangeFormik}\r\n                  value={valuesFormik?.judul}\r\n                />\r\n                {formik.touched.judul && formik.errors.judul && (\r\n                  <div className='fv-plugins-message-container'>\r\n                    <div className='fv-help-block'>\r\n                      <span role='alert'>{formik.errors.judul}</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n            </div>\r\n\r\n        {/* <Form.Group className=\"mb-3 form-control-solid\">\r\n            <Form.Label>Perda / Perkada</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Perda / Perkada\" />\r\n        </Form.Group> */}\r\n\r\n            <div className='p-0 mt-6'>\r\n              <div className='text-center'>\r\n                <button\r\n                  className='float-none btn btn-light align-self-center m-1'\r\n                  onClick={handleClose}\r\n                  type='button'\r\n                >\r\n                  <i className='fa fa-close'></i>\r\n                  Batal\r\n                </button>\r\n                <button\r\n                  className='float-none btn btn-primary align-self-center m-1'\r\n                  type='submit'\r\n                >\r\n                  <i className='fa-solid fa-paper-plane'></i>\r\n                  Simpan\r\n                </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n    <div className='table-responsive mt-5 ms-5 me-5'>\r\n    {temp?.length > 0 && temp && (\r\n    <DataTable\r\n      columns={columns}\r\n      data={temp}\r\n      pagination\r\n      progressPending={loading}\r\n      customStyles={customStyles}\r\n      paginationTotalRows={totalRows}\r\n      progressComponent={<LoadingAnimation />}\r\n      theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n      noDataComponent={\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n          </div>\r\n        </div>\r\n      }\r\n    />\r\n    )}\r\n    </div>\r\n    {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.');\r\n}","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  judul?: string\n  deskripsi?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  judul?: string\n  deskripsi?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERDA_PERKADA_URL = `${API_URL}/master/jenis-perda-perkada` //http://localhost:3000/jenis-perda-perkada\n\nexport function LihatJenisPerdaPerkada() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PERDA_PERKADA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        judul: jsonD.judul,\n        deskripsi: jsonD.deskripsi,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Perda / Perkada</Form.Label>\n                        <Form.Control\n                          name='judul'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.judul\n                              ? valuesFormikExist?.judul\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Deskripsi</Form.Label>\n                        <Form.Control\n                          name='deskripsi'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.deskripsi\n                              ? valuesFormikExist?.deskripsi\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPerdaPerkada'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  judul?: string\n  deskripsi?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  judul?: string\n  deskripsi?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERDA_PERKADA_URL = `${API_URL}/master/jenis-perda-perkada` //http://localhost:3000//master/jenis-perda-perkada\n\nexport function UpdateJenisPerdaPerkada() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JENIS_PERDA_PERKADA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        judul: jsonD.judul,\n        deskripsi: jsonD.deskripsi,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  // const handleChangeFormikSelect = (value: any, name: string) => {\n  //   setValuesFormik((prevValues: any) => ({\n  //     ...prevValues,\n  //     [name]: value,\n  //   }))\n  // }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      judul: '',\n      deskripsi: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        judul: valuesFormik?.judul\n          ? valuesFormik.judul\n          : valuesFormikExist?.judul\n          ? valuesFormikExist.judul\n          : '',\n        deskripsi: valuesFormik?.deskripsi\n          ? valuesFormik.deskripsi\n          : valuesFormikExist?.deskripsi\n          ? valuesFormikExist.deskripsi\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${JENIS_PERDA_PERKADA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${JENIS_PERDA_PERKADA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisPerdaPerkada', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisPerdaPerkada', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Jenis Perda / Perkada</Form.Label>\n                        <Form.Control\n                          name='judul'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.judul || valuesFormik?.judul === ''\n                              ? valuesFormik?.judul\n                              : valuesFormikExist?.judul\n                              ? valuesFormikExist?.judul\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Deskripsi</Form.Label>\n                        <Form.Control\n                          name='deskripsi'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.deskripsi || valuesFormik?.deskripsi === ''\n                              ? valuesFormik?.deskripsi\n                              : valuesFormikExist?.deskripsi\n                              ? valuesFormikExist?.deskripsi\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPerdaPerkada'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  judul?: string\n  deskripsi?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_MASTERDATA_API_URL //http://localhost:3001\nexport const JENIS_PERDA_PERKADA_URL = `${API_URL}/jenis-perda-perkada` //http://localhost:3000/master/jenis-perda-perkada\n\nexport function TambahJenisPerdaPerkada() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value.toUpperCase(),\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      judul: '',\n      deskripsi: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        judul: valuesFormik?.judul ? valuesFormik.judul : '',\n        deskripsi: valuesFormik?.deskripsi ? valuesFormik.deskripsi : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${JENIS_PERDA_PERKADA_URL}/create`, bodyparam)\n        console.log(response.data, valuesFormik)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(\n              `${JENIS_PERDA_PERKADA_URL}/upload-file/${response.data.data.return_id}`,\n              formData\n            )\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/JenisPerdaPerkada', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/JenisPerdaPerkada', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Judul</Form.Label>\n                        <Form.Control\n                          name='judul'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.judul}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Deskripsi</Form.Label>\n                        <Form.Control\n                          name='deskripsi'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.deskripsi}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/JenisPerdaPerkada'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_penindakan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_penindakan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisPenindakan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisPenindakan, setFilterJenisPenindakan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisPenindakan.val !== '') {\r\n      uriParam += `${valFilterJenisPenindakan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisPenindakan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisPenindakan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisPenindakan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Penindakan',\r\n      selector: (row: any) => row.jenis_penindakan,\r\n      sortable: true,\r\n      sortField: 'jenis_penindakan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisPenindakan/LihatJenisPenindakan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_PENINDAKAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_penindakan: valuesFormik?.jenis_penindakan, //? valuesFormik.jenis_penindakan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_PENINDAKAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_PENINDAKAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_penindakan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_PENINDAKAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Penindakan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisPenindakan.val} //4\r\n            onChange={handleChangeInputJenisPenindakan}\r\n            placeholder='Jenis Penindakan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Penindakan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Penindakan</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_penindakan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_penindakan && formik.errors.jenis_penindakan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_penindakan && !formik.errors.jenis_penindakan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_penindakan}\r\n                    />\r\n                    {formik.touched.jenis_penindakan && formik.errors.jenis_penindakan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_penindakan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_penindakan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_penindakan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` //http://localhost:3000/jenis-Penindakan\r\n\r\nexport function LihatJenisPenindakan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_penindakan: jsonD.jenis_penindakan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Penindakan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_penindakan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_penindakan\r\n                              ? valuesFormikExist?.jenis_penindakan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPenindakan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_penindakan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_penindakan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_PENINDAKAN_URL = `${API_URL}/master/jenis-penindakan` //http://localhost:3000//master/jenis-Penindakan\r\n\r\nexport function UpdateJenisPenindakan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_PENINDAKAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_penindakan: jsonD.jenis_penindakan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_penindakan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_penindakan: valuesFormik?.jenis_penindakan\r\n          ? valuesFormik.jenis_penindakan\r\n          : valuesFormikExist?.jenis_penindakan\r\n          ? valuesFormikExist.jenis_penindakan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_PENINDAKAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_PENINDAKAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisPenindakan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisPenindakan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Penindakan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_penindakan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_penindakan || valuesFormik?.jenis_penindakan === ''\r\n                              ? valuesFormik?.jenis_penindakan\r\n                              : valuesFormikExist?.jenis_penindakan\r\n                              ? valuesFormikExist?.jenis_penindakan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisPenindakan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  jenis_korban_jiwa?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_korban_jiwa: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function KorbanJiwa() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterKorbanJiwa, setFilterKorbanJiwa] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterKorbanJiwa.val !== '') {\r\n      uriParam += `${valFilterKorbanJiwa.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterKorbanJiwa({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputKorbanJiwa = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterKorbanJiwa({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Korban Jiwa',\r\n      selector: (row: any) => row.jenis_korban_jiwa,\r\n      sortable: true,\r\n      sortField: 'jenis_korban_jiwa',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/KorbanJiwa/LihatKorbanJiwa/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KORBAN_JIWA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa, //? valuesFormik.jenis_korban_jiwa : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KORBAN_JIWA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KORBAN_JIWA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_korban_jiwa: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KORBAN_JIWA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>KorbanJiwa</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterKorbanJiwa.val} //4\r\n            onChange={handleChangeInputKorbanJiwa}\r\n            placeholder='Korban Jiwa'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Korban Jiwa</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Korban Jiwa</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_korban_jiwa'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_korban_jiwa && formik.errors.jenis_korban_jiwa,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_korban_jiwa && !formik.errors.jenis_korban_jiwa,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_korban_jiwa}\r\n                    />\r\n                    {formik.touched.jenis_korban_jiwa && formik.errors.jenis_korban_jiwa && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_korban_jiwa}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_jiwa?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_korban_jiwa?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/master/korban_jiwa\r\n\r\nexport function LihatKorbanJiwa() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_korban_jiwa: jsonD.jenis_korban_jiwa,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Korban Jiwa</Form.Label>\r\n                        <Form.Control\r\n                          name='korban jiwa'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_korban_jiwa\r\n                              ? valuesFormikExist?.jenis_korban_jiwa\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanJiwa'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_jiwa?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_korban_jiwa?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000//master/jenis_korban_jiwa\r\n\r\nexport function UpdateKorbanJiwa() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KORBAN_JIWA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_korban_jiwa: jsonD.jenis_korban_jiwa,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_korban_jiwa: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa\r\n          ? valuesFormik.jenis_korban_jiwa\r\n          : valuesFormikExist?.jenis_korban_jiwa\r\n          ? valuesFormikExist.jenis_korban_jiwa\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KORBAN_JIWA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KORBAN_JIWA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/KorbanJiwa', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/KorbanJiwa', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Korban Jiwa</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_korban_jiwa'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_korban_jiwa ||\r\n                            valuesFormik?.jenis_korban_jiwa === ''\r\n                              ? valuesFormik?.jenis_korban_jiwa\r\n                              : valuesFormikExist?.jenis_korban_jiwa\r\n                              ? valuesFormikExist?.jenis_korban_jiwa\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanJiwa'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_jiwa?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/master/jenis-korban-jiwa\r\n\r\nexport function TambahKorbanJiwa() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_korban_jiwa: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_jiwa: valuesFormik?.jenis_korban_jiwa ? valuesFormik.jenis_korban_jiwa : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${JENIS_KORBAN_JIWA_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${JENIS_KORBAN_JIWA_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/KorbanJiwa', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/KorbanJiwa', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>jenis Korban Jiwa</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_korban_jiwa'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.jenis_korban_jiwa}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanJiwa'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  jenis_korban_material?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_korban_material: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function KorbanMaterial() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterKorbanMaterial, setFilterKorbanMaterial] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterKorbanMaterial.val !== '') {\r\n      uriParam += `${valFilterKorbanMaterial.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterKorbanMaterial({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputKorbanMaterial = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterKorbanMaterial({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Korban Material',\r\n      selector: (row: any) => row.jenis_korban_material,\r\n      sortable: true,\r\n      sortField: 'jenis_korban_material',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/KorbanMaterial/LihatKorbanMaterial/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_material: valuesFormik?.jenis_korban_material, //? valuesFormik.jenis_korban_material : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KORBAN_MATERIAL_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KORBAN_MATERIAL_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_korban_material: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KORBAN_MATERIAL_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Korban Material</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterKorbanMaterial.val} //4\r\n            onChange={handleChangeInputKorbanMaterial}\r\n            placeholder='Korban Material'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Korban Material</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Korban Material</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_korban_material'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_korban_material && formik.errors.jenis_korban_material,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_korban_material && !formik.errors.jenis_korban_material,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_korban_material}\r\n                    />\r\n                    {formik.touched.jenis_korban_material && formik.errors.jenis_korban_material && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_korban_material}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_material?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_korban_material?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` //http://localhost:3000/master/korban_jiwa\r\n\r\nexport function LihatKorbanMaterial() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_korban_material: jsonD.jenis_korban_material,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Korban Material</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_korban_material'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_korban_material\r\n                              ? valuesFormikExist?.jenis_korban_material\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanMaterial'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_korban_material?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_korban_material?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` //http://localhost:3000/master/korban_jiwa\r\n\r\nexport function UpdateKorbanMaterial() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KORBAN_MATERIAL_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_korban_material: jsonD.jenis_korban_material,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_korban_material: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_korban_material: valuesFormik?.jenis_korban_material\r\n          ? valuesFormik.jenis_korban_material\r\n          : valuesFormikExist?.jenis_korban_material\r\n          ? valuesFormikExist.jenis_korban_material\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KORBAN_MATERIAL_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KORBAN_MATERIAL_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/KorbanMaterial', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/KorbanMaterial', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Korban Material</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_korban_material'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_korban_material || valuesFormik?.jenis_korban_material === ''\r\n                              ? valuesFormik?.jenis_korban_material\r\n                              : valuesFormikExist?.jenis_korban_material\r\n                              ? valuesFormikExist?.jenis_korban_material\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KorbanMaterial'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_bantuan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_bantuan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisBantuan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisBantuan, setFilterJenisBantuan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisBantuan.val !== '') {\r\n      uriParam += `${valFilterJenisBantuan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisBantuan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisBantuan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisBantuan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Bantuan',\r\n      selector: (row: any) => row.jenis_bantuan,\r\n      sortable: true,\r\n      sortField: 'jenis_bantuan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisBantuan/LihatJenisBantuan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_BANTUAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_bantuan: valuesFormik?.jenis_bantuan, //? valuesFormik.jenis_bantuan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_BANTUAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_BANTUAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_bantuan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_BANTUAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_BANTUAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Bantuan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisBantuan.val} //4\r\n            onChange={handleChangeInputJenisBantuan}\r\n            placeholder='Jenis Bantuan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Bantuan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Bantuan</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_bantuan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_bantuan && formik.errors.jenis_bantuan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_bantuan && !formik.errors.jenis_bantuan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_bantuan}\r\n                    />\r\n                    {formik.touched.jenis_bantuan && formik.errors.jenis_bantuan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_bantuan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_bantuan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_bantuan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` //http://localhost:3000/JenisBantuan\r\n\r\nexport function LihatJenisBantuan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_bantuan: jsonD.jenis_bantuan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Bantuan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_bantuan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_bantuan\r\n                              ? valuesFormikExist?.jenis_bantuan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisBantuan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_bantuan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_bantuan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_BANTUAN_URL = `${API_URL}/master/jenis-bantuan` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateJenisBantuan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_BANTUAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_bantuan: jsonD.jenis_bantuan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_bantuan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_bantuan: valuesFormik?.jenis_bantuan\r\n          ? valuesFormik.jenis_bantuan\r\n          : valuesFormikExist?.jenis_bantuan\r\n          ? valuesFormikExist.jenis_bantuan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_BANTUAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_BANTUAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisBantuan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisBantuan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Bantuan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_bantuan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_bantuan || valuesFormik?.jenis_bantuan === ''\r\n                              ? valuesFormik?.jenis_bantuan\r\n                              : valuesFormikExist?.jenis_bantuan\r\n                              ? valuesFormikExist?.jenis_bantuan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisBantuan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function InstansiTerkait() {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1);\r\n  }, []);\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\r\n          <div className=\"d-flex flex-column\">\r\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'Jenis Sarana & Prasarana',\r\n      selector: (row: any) => row.jenis_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'jenis_sarana_prasarana',\r\n    },\r\n    {\r\n      name: 'Status Sarana & Prasarana',\r\n      selector: (row: any) => row.status_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'status_sarana_prasarana',\r\n    },\r\n    {\r\n      name: 'Jumlah',\r\n      selector: (row: any) => row.jumlah,\r\n      sortable: true,\r\n      sortField: 'jumlah',\r\n    },\r\n    {\r\n      name: 'Kondisi',\r\n      selector: (row: any) => row.kondisi,\r\n      sortable: true,\r\n      sortField: 'kondisi',\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: (row: any) => row.keterangan,\r\n      sortable: true,\r\n      sortField: 'keterangan',\r\n    },\r\n    {\r\n      name: 'Dokumentasi',\r\n      selector: (row: any) => row.dokumentasi,\r\n      sortable: true,\r\n      sortField: 'dokumentasi',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: \"Action\",\r\n      className: \"action\",\r\n      align: \"left\",\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n\r\n            <div className=\"mb-2\">\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size=\"sm\"\r\n                    variant=\"light\"\r\n                    title=\"Aksi\">\r\n                    <Dropdown.Item>\r\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\r\n                        Detail\r\n                      </Link>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n\r\n  ];\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n   \r\n  const [temp, setTemp] = useState([]);\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true);\r\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\r\n\r\n    setTemp(value.data.data);\r\n    console.log('cek response api:',temp);\r\n\r\n    \r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\r\n    setData(response.data.data);\r\n   \r\n    setTotalRows(response.data.total);\r\n    setLoading(false);\r\n    console.log('cek ahhh :' ,data);\r\n    return [data, setData] as const;\r\n  };\r\n\r\n  const handlePageChange = (page: any) => {\r\n    fetchUsers(page);\r\n  };\r\n\r\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n    setLoading(true);\r\n\r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\r\n\r\n    setData(response.data.data);\r\n    setPerPage(newPerPage);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSort = (column: any, sortDirection: any) => {\r\n    // simulate server sort\r\n    console.log(column, sortDirection);\r\n    setLoading(true);\r\n\r\n    // instead of setTimeout this is where you would handle your API call.\r\n    setTimeout(() => {\r\n      setData(orderBy(data, column.sortField, sortDirection));\r\n      setLoading(false);\r\n    }, 100);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Instansi Terkait\r\n            </label>\r\n            <input\r\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\r\n          </div>\r\n      </div>\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n        <Link to='#'>\r\n            <button className='btn btn-primary'>\r\n              <i className='fa-solid fa-search'></i>\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-5' onClick={handleShow}>\r\n              <i className=\"fa-solid fa-plus\"></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tambah Instansi Terkait</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\r\n        <Form.Group className=\"mb-3 form-control-solid\">\r\n            <Form.Label>Instansi Terakait</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Instansi Terkait\" />\r\n        </Form.Group>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n          <i className=\"fa-solid fa-paper-plane\"></i>\r\n            Simpan\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n      <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            pagination\r\n        />\r\n        {/* <DataTable\r\n          columns={columns}\r\n          data={data}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          sortServer\r\n          onSort={handleSort}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n        /> */}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  kondisi_sarana_prasarana?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  kondisi_sarana_prasarana: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function KondisiSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterKondisiSaranaPrasarana, setFilterKondisiSaranaPrasarana] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterKondisiSaranaPrasarana.val !== '') {\r\n      uriParam += `${valFilterKondisiSaranaPrasarana.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterKondisiSaranaPrasarana({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputKondisiSaranaPrasarana = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterKondisiSaranaPrasarana({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Kondisi Sarana Prasarana',\r\n      selector: (row: any) => row.kondisi_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'kondisi_sarana_prasarana',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/KondisiSaranaPrasarana/LihatKondisiSaranaPrasarana/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        kondisi_sarana_prasarana: valuesFormik?.kondisi_sarana_prasarana, //? valuesFormik.kondisi_sarana_prasarana : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${KONDISI_SARANA_PRASARANA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${KONDISI_SARANA_PRASARANA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      kondisi_sarana_prasarana: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${KONDISI_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Kondisi Sarana Prasarana</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterKondisiSaranaPrasarana.val} //4\r\n            onChange={handleChangeInputKondisiSaranaPrasarana}\r\n            placeholder='Kondisi Sarana Prasarana'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Kondisi Sarana Prasarana</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Kondisi Sarana Prasarana</Form.Label>\r\n                  <Form.Control\r\n                      name='kondisi_sarana_prasarana'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.kondisi_sarana_prasarana && formik.errors.kondisi_sarana_prasarana,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.kondisi_sarana_prasarana && !formik.errors.kondisi_sarana_prasarana,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.kondisi_sarana_prasarana}\r\n                    />\r\n                    {formik.touched.kondisi_sarana_prasarana && formik.errors.kondisi_sarana_prasarana && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.kondisi_sarana_prasarana}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  kondisi_sarana_prasarana?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kondisi_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` //http://localhost:3000/Kondisi-Penindakan\r\n\r\nexport function LihatKondisiSaranaPrasarana() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kondisi_sarana_prasarana: jsonD.kondisi_sarana_prasarana,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kondisi Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='kondisi_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.kondisi_sarana_prasarana\r\n                              ? valuesFormikExist?.kondisi_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KondisiSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  kondisi_sarana_prasarana?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kondisi_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const KONDISI_SARANA_PRASARANA_URL = `${API_URL}/master/kondisi-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateKondisiSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${KONDISI_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        kondisi_sarana_prasarana: jsonD.kondisi_sarana_prasarana,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      kondisi_sarana_prasarana: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        kondisi_sarana_prasarana: valuesFormik?.kondisi_sarana_prasarana\r\n          ? valuesFormik.kondisi_sarana_prasarana\r\n          : valuesFormikExist?.kondisi_sarana_prasarana\r\n          ? valuesFormikExist.kondisi_sarana_prasarana\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${KONDISI_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${KONDISI_SARANA_PRASARANA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/KondisiSaranaPrasarana', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/KondisiSaranaPrasarana', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kondisi Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='kondisi_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kondisi_sarana_prasarana || valuesFormik?.kondisi_sarana_prasarana === ''\r\n                              ? valuesFormik?.kondisi_sarana_prasarana\r\n                              : valuesFormikExist?.kondisi_sarana_prasarana\r\n                              ? valuesFormikExist?.kondisi_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/KondisiSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  status_sarana_prasarana?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  status_sarana_prasarana: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function StatusSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterStatusSaranaPrasarana, setFilterStatusSaranaPrasarana] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterStatusSaranaPrasarana.val !== '') {\r\n      uriParam += `${valFilterStatusSaranaPrasarana.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterStatusSaranaPrasarana({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputStatusSaranaPrasarana = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterStatusSaranaPrasarana({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Status Sarana Prasarana',\r\n      selector: (row: any) => row.status_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'status_sarana_prasarana',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/StatusSaranaPrasarana/LihatStatusSaranaPrasarana/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        status_sarana_prasarana: valuesFormik?.status_sarana_prasarana, //? valuesFormik.status_sarana_prasarana : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${STATUS_SARANA_PRASARANA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${STATUS_SARANA_PRASARANA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      status_sarana_prasarana: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${STATUS_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Status Sarana Prasarana</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterStatusSaranaPrasarana.val} //4\r\n            onChange={handleChangeInputStatusSaranaPrasarana}\r\n            placeholder='Status Sarana Prasarana'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Status Sarana Prasarana</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Status Sarana Prasarana</Form.Label>\r\n                  <Form.Control\r\n                      name='status_sarana_prasarana'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.status_sarana_prasarana && formik.errors.status_sarana_prasarana,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.status_sarana_prasarana && !formik.errors.status_sarana_prasarana,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.status_sarana_prasarana}\r\n                    />\r\n                    {formik.touched.status_sarana_prasarana && formik.errors.status_sarana_prasarana && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.status_sarana_prasarana}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  status_sarana_prasarana?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  status_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` //http://localhost:3000/jenis-Penindakan\r\n\r\nexport function LihatStatusSaranaPrasarana() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        status_sarana_prasarana: jsonD.status_sarana_prasarana,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Status Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='status_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.status_sarana_prasarana\r\n                              ? valuesFormikExist?.status_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/StatusSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  status_sarana_prasarana?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  status_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const STATUS_SARANA_PRASARANA_URL = `${API_URL}/master/status-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateStatusSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${STATUS_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        status_sarana_prasarana: jsonD.status_sarana_prasarana,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      status_sarana_prasarana: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        status_sarana_prasarana: valuesFormik?.status_sarana_prasarana\r\n          ? valuesFormik.status_sarana_prasarana\r\n          : valuesFormikExist?.status_sarana_prasarana\r\n          ? valuesFormikExist.status_sarana_prasarana\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${STATUS_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${STATUS_SARANA_PRASARANA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/StatusSaranaPrasarana', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/StatusSaranaPrasarana', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Status Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='status_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.status_sarana_prasarana || valuesFormik?.status_sarana_prasarana === ''\r\n                              ? valuesFormik?.status_sarana_prasarana\r\n                              : valuesFormikExist?.status_sarana_prasarana\r\n                              ? valuesFormikExist?.status_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/StatusSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const AGAMA_URL = `${API_URL}/master/agama` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  agama?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  agama: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function Agama() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterAgama, setFilterAgama] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterAgama.val !== '') {\r\n      uriParam += `${valFilterAgama.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterAgama({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputAgama = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterAgama({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Agama',\r\n      selector: (row: any) => row.agama,\r\n      sortable: true,\r\n      sortField: 'agama',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Agama/LihatAgama/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${AGAMA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${AGAMA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        agama: valuesFormik?.agama, //? valuesFormik.agama : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${AGAMA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${AGAMA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      agama: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${AGAMA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${AGAMA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Agama</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterAgama.val} //4\r\n            onChange={handleChangeInputAgama}\r\n            placeholder='Agama'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Agama</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Agama</Form.Label>\r\n                  <Form.Control\r\n                      name='agama'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.agama && formik.errors.agama,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.agama && !formik.errors.agama,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.agama}\r\n                    />\r\n                    {formik.touched.agama && formik.errors.agama && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.agama}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  agama?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  agama?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatAgama() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${AGAMA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        agama: jsonD.agama,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>agama</Form.Label>\r\n                        <Form.Control\r\n                          name='agama'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.agama ? valuesFormikExist?.agama : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Agama'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  agama?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  agama?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000//master/agama\r\n\r\nexport function UpdateAgama() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${AGAMA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        agama: jsonD.agama,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      agama: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        agama: valuesFormik?.agama\r\n          ? valuesFormik.agama\r\n          : valuesFormikExist?.agama\r\n          ? valuesFormikExist.agama\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${AGAMA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${AGAMA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Agama', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Agama', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>agama</Form.Label>\r\n                        <Form.Control\r\n                          name='agama'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.agama || valuesFormik?.agama === ''\r\n                              ? valuesFormik?.agama\r\n                              : valuesFormikExist?.agama\r\n                              ? valuesFormikExist?.agama\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Agama'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  agama?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/master/agama\r\n\r\nexport function TambahAgama() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      agama: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        agama: valuesFormik?.agama ? valuesFormik.agama : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${AGAMA_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${AGAMA_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/agama', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/agama', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>agama</Form.Label>\r\n                        <Form.Control\r\n                          name='agama'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.agama}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Agama'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const PANGKAT_URL = `${API_URL}/master/pangkat`\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nexport interface FormInput {\n  pangkat?: string\n}\n\nconst validatorForm = Yup.object().shape({\n  pangkat: Yup.string().required('Wajib diisi'),\n})\n\nexport function Pangkat() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterPangkat, setFilterPangkat] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => {\n    //3\n    let uriParam = ''\n    if (valFilterPangkat.val !== '') {\n      uriParam += `${valFilterPangkat.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handleFilterReset = () => {\n    setFilterPangkat({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputPangkat = (event: {\n    //5\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterPangkat({val: event.target.value})\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{row.serial}</div>\n      },\n    },\n    {},\n    {\n      name: 'Pangkat',\n      selector: (row: any) => row.pangkat,\n      sortable: true,\n      sortField: 'pangkat',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    menuposition='top'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Pangkat/LihatPangkat/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${PANGKAT_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n        Array.from(items).forEach((item: any, index: any) => {\n          item.serial = index + 1\n        })\n        setTemp(items)\n        setLoading(false)\n      }, 100)\n\n      return () => clearTimeout(timeout)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => {\n    //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${PANGKAT_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n    }, 50)\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        pangkat: valuesFormik?.pangkat, //? valuesFormik.pangkat : '', //? valuesFormik.kategori : '',\n      }\n\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${PANGKAT_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(`${PANGKAT_URL}/update/${idEditData.id}`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      pangkat: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n\n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${PANGKAT_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n\n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${PANGKAT_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Pangkat</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterPangkat.val} //4\n            onChange={handleChangeInputPangkat}\n            placeholder='Pangkat'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}>\n            {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Pangkat</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Pangkat</Form.Label>\n                  <Form.Control\n                    name='pangkat'\n                    className={clsx(\n                      'form-control form-control-solid mb-1',\n                      {\n                        'is-invalid': formik.touched.pangkat && formik.errors.pangkat,\n                      },\n                      {\n                        'is-valid': formik.touched.pangkat && !formik.errors.pangkat,\n                      }\n                    )}\n                    onChange={handleChangeFormik}\n                    value={valuesFormik?.pangkat}\n                  />\n                  {formik.touched.pangkat && formik.errors.pangkat && (\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>\n                        <span role='alert'>{formik.errors.pangkat}</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n        {temp?.length > 0 && temp && (\n          <DataTable\n            columns={columns}\n            data={temp}\n            progressPending={loading}\n            customStyles={customStyles}\n            progressComponent={<LoadingAnimation />}\n            pagination\n            // paginationServer\n            paginationTotalRows={totalRows}\n            //    expandableRowsComponent={(row) => (\n            //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n            // )}\n            // expandableRowsComponent={ExpandedComponent}\n            // onChangeRowsPerPage={handlePerRowsChange}\n            // onChangePage={handlePageChange}\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n            noDataComponent={\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n                <div className='d-flex flex-column'>\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n                </div>\n              </div>\n            }\n          />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  pangkat?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  pangkat?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000//master/pangkat\r\n\r\nexport function UpdatePangkat() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${PANGKAT_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        pangkat: jsonD.pangkat,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      pangkat: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        pangkat: valuesFormik?.pangkat\r\n          ? valuesFormik.pangkat\r\n          : valuesFormikExist?.pangkat\r\n          ? valuesFormikExist.pangkat\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${PANGKAT_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${PANGKAT_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/pangkat', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/pangkat', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>pangkat</Form.Label>\r\n                        <Form.Control\r\n                          name='pangkat'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.pangkat || valuesFormik?.pangkat === ''\r\n                              ? valuesFormik?.pangkat\r\n                              : valuesFormikExist?.pangkat\r\n                              ? valuesFormikExist?.pangkat\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/pangkat'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  pangkat?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  pangkat?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\r\n\r\nexport function LihatPangkat() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${PANGKAT_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        pangkat: jsonD.pangkat,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Pangkat</Form.Label>\r\n                        <Form.Control\r\n                          name='pangkat'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.pangkat ? valuesFormikExist?.pangkat : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/pangkat'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  pangkat?: string\r\n  created_by?: number\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\r\n\r\nexport function TambahPangkat() {\r\n  const navigate = useNavigate()\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      pangkat: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        pangkat: valuesFormik?.pangkat ? valuesFormik.pangkat : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${PANGKAT_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${PANGKAT_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/pangkat', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/pangkat', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>pangkat</Form.Label>\r\n                        <Form.Control\r\n                          name='pangkat'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.pangkat}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/pangkat'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\nimport { TEMPAT_PELAKSANA_URL } from './Lihat-master/LihatTempatPelaksanaan'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const BIDANG_WILAYAH_URL = `${API_URL}/master/bidang-wilayah`\r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  nama?: string\r\n  kategori?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n  kategori: Yup.string().required('Wajib diisi'),\r\n  nama: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function TempatPelaksanaan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterTempatPelaksanaan, setFilterTempatPelaksanaan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterTempatPelaksanaan.val !== '') {\r\n      uriParam += `${valFilterTempatPelaksanaan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterTempatPelaksanaan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputTempatPelaksanaan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterTempatPelaksanaan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {\r\n      name: 'Bidang/Wilayah',\r\n      selector: (row: any) => row.nama,\r\n      sortable: true,\r\n      sortField: 'nama',\r\n    },\r\n    {\r\n      name: 'Kode',\r\n      selector: (row: any) => row.kode,\r\n      sortable: true,\r\n      sortField: 'kode',\r\n    },\r\n    {\r\n      name: 'Kategori',\r\n      selector: (row: any) => row.kategori,\r\n      sortable: true,\r\n      sortField: 'kategori',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/TempatPelaksanaan/LihatTempatPelaksanaan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${BIDANG_WILAYAH_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${BIDANG_WILAYAH_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        nama: valuesFormik?.nama, //? valuesFormik.nama : '',\r\n        kategori: valuesFormik?.kategori //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${BIDANG_WILAYAH_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${BIDANG_WILAYAH_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      nama: '',\r\n      kategori: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${BIDANG_WILAYAH_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${BIDANG_WILAYAH_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Tempat Pelaksanaan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterTempatPelaksanaan.val} //4\r\n            onChange={handleChangeInputTempatPelaksanaan}\r\n            placeholder='Bidang/Wilayah'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Tempat Pelaksanaan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Nama Bidang/Wilayah</Form.Label>\r\n                  <Form.Control\r\n                      name='nama'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.nama && formik.errors.nama,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.nama && !formik.errors.nama,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.nama}\r\n                    />\r\n                    {formik.touched.nama && formik.errors.nama && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.nama}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  <Form.Label>Kategori</Form.Label>\r\n                  <select\r\n                          data-control='select2'\r\n                          data-placeholder='Jenis Kelamin'\r\n                          name='kategori'\r\n                          className={clsx(\r\n                            'form-control form-control-solid mb-1',\r\n                            {\r\n                              'is-invalid':\r\n                                formik.touched.kategori && formik.errors.kategori,\r\n                            },\r\n                            {\r\n                              'is-valid':\r\n                                formik.touched.kategori && !formik.errors.kategori,\r\n                            }\r\n                          )}\r\n                          onChange={handleChangeFormik}\r\n                          value={valuesFormik?.kategori}\r\n                        >\r\n                          <option value=''>Pilih</option>\r\n                          <option value='Bidang'>Bidang</option>\r\n                          <option value='Wilayah'>Wilayah</option>\r\n                        </select>\r\n                        {formik.touched.kategori && formik.errors.kategori && (\r\n                          <div className='fv-plugins-message-container'>\r\n                            <div className='fv-help-block'>\r\n                              <span role='alert'>{formik.errors.kategori}</span>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  nama?: string\r\n  kategori?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  nama?: string\r\n  kategori?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const BIDANG_WILAYAH_URL = `${API_URL}/master/bidang-wilayah` //http://localhost:3000//master/kota\r\n\r\nexport function UpdateTempatPelaksanaan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${BIDANG_WILAYAH_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        nama: jsonD.nama,\r\n        kategori: jsonD.kategori,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      nama: '',\r\n      kategori: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        nama : valuesFormik?.nama\r\n          ? valuesFormik.nama\r\n          : valuesFormikExist?.nama\r\n          ? valuesFormikExist.nama\r\n          : '',\r\n          kategori: valuesFormik?.kategori\r\n          ? valuesFormik.kategori\r\n          : valuesFormikExist?.kategori\r\n          ? valuesFormikExist.kategori\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${BIDANG_WILAYAH_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${BIDANG_WILAYAH_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/TempatPelaksanaan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/TempatPelaksanaan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Bidang Wilayah</Form.Label>\r\n                        <Form.Control\r\n                          name='nama'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.nama || valuesFormik?.nama === ''\r\n                              ? valuesFormik?.nama\r\n                              : valuesFormikExist?.nama\r\n                              ? valuesFormikExist?.nama\r\n                              : ''\r\n                          }\r\n                        />\r\n                        <Form.Label>Kategori</Form.Label>\r\n                        <Form.Control\r\n                          name='kategori'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.kategori || valuesFormik?.kategori === ''\r\n                              ? valuesFormik?.kategori\r\n                              : valuesFormikExist?.kategori\r\n                              ? valuesFormikExist?.kategori\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/TempatPelaksanaan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  nama?: string\r\n  kode?: string\r\n  updated_by?: string\r\n  kategori?: string\r\n}\r\n\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  nama?: string\r\n  kategori?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const TEMPAT_PELAKSANA_URL = `${API_URL}/master/bidang-wilayah` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatTempatPelaksanaan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${TEMPAT_PELAKSANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        nama: jsonD.nama,\r\n        kode: jsonD.kode,\r\n        kategori: jsonD.kategori,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Tempat Pelaksana</Form.Label>\r\n                        <Form.Control\r\n                          name='nama'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.nama ? valuesFormikExist?.nama : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode</Form.Label>\r\n                        <Form.Control\r\n                          name='kode'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kategori</Form.Label>\r\n                        <Form.Control\r\n                          name='kategori'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kategori ? valuesFormikExist?.kategori : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/TempatPelaksanaan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const SKPD_URL = `${API_URL}/master/skpd`\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  skpd?: string\n}\n\nconst validatorForm = Yup.object().shape({\n  skpd: Yup.string().required('Wajib diisi'),\n})\n\nexport function SKPD() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterSKPD, setFilterSKPD] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([]) // Urutan 1\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => {\n    //3\n    let uriParam = ''\n    if (valFilterSKPD.val !== '') {\n      uriParam += `${valFilterSKPD.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handleFilterReset = () => {\n    setFilterSKPD({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputSKPD = (event: {\n    //5\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterSKPD({val: event.target.value})\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  // let number = 1\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n      cell: (row: any) => {\n        return <div className='mb-2 mt-2'>{row.serial}</div>\n      },\n    },\n    {\n      name: 'SKPD',\n      selector: (row: any) => row.skpd,\n      sortable: true,\n      sortField: 'skpd',\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/SKPD/LihatSKPD/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${SKPD_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n        Array.from(items).forEach((item: any, index: any) => {\n          item.serial = index + 1\n        })\n        setTemp(items)\n        setLoading(false)\n      }, 100)\n\n      return () => clearTimeout(timeout)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => {\n    //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${SKPD_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n    }, 50)\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        skpd: valuesFormik?.skpd, //? valuesFormik.skpd : '',\n      }\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${SKPD_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(`${SKPD_URL}/update/${idEditData.id}`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      skpd: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n\n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${SKPD_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n\n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${SKPD_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>SKPD</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterSKPD.val} //4\n            onChange={handleChangeInputSKPD}\n            placeholder='SKPD'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}>\n            {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} SKPD</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>SKPD</Form.Label>\n                  <Form.Control\n                    name='skpd'\n                    className={clsx(\n                      'form-control form-control-solid mb-1',\n                      {\n                        'is-invalid': formik.touched.skpd && formik.errors.skpd,\n                      },\n                      {\n                        'is-valid': formik.touched.skpd && !formik.errors.skpd,\n                      }\n                    )}\n                    onChange={handleChangeFormik}\n                    value={valuesFormik?.skpd}\n                  />\n                  {formik.touched.skpd && formik.errors.skpd && (\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>\n                        <span role='alert'>{formik.errors.skpd}</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                      Batal\n                    </button>\n                    <button\n                      className='float-none btn btn-primary align-self-center m-1'\n                      type='submit'\n                    >\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n        <DataTable\n          columns={columns}\n          data={temp}\n          progressPending={loading}\n          customStyles={customStyles}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          // paginationServer\n          paginationTotalRows={totalRows}\n          //    expandableRowsComponent={(row) => (\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\n          // )}\n          // expandableRowsComponent={ExpandedComponent}\n          // onChangeRowsPerPage={handlePerRowsChange}\n          // onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          noDataComponent={\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n              <div className='d-flex flex-column'>\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n              </div>\n            </div>\n          }\n        />\n      </div>\n\n      {/* end::Body */}\n    </div>\n  )\n}\n\n// const ExpandedComponent = ({ row, handleInputChange }) => {\n//   return (\n//     <div className=\"ExpandedComponent\">\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Surname</label>\n//         <input\n//           value={row.data.surname}\n//           onChange={(e) =>\n//             handleInputChange(row.data, \"surname\", e.target.value)\n//           }\n//         />\n//       </div>\n//       <div className=\"ExpandedComponent_Row\">\n//         <label>Age</label>\n//         <input\n//           value={row.data.age}\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  skpd?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  skpd?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SKPD_URL = `${API_URL}/master/skpd` //http://localhost:3000//master/SKPD\r\n\r\nexport function UpdateSKPD() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${SKPD_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        skpd: jsonD.skpd,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      skpd: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        skpd: valuesFormik?.skpd\r\n          ? valuesFormik.skpd\r\n          : valuesFormikExist?.skpd\r\n          ? valuesFormikExist.skpd\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${SKPD_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${SKPD_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/SKPD', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/SKPD', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>SKPD</Form.Label>\r\n                        <Form.Control\r\n                          name='skpd'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.skpd || valuesFormik?.skpd === ''\r\n                              ? valuesFormik?.skpd\r\n                              : valuesFormikExist?.skpd\r\n                              ? valuesFormikExist?.skpd\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/SKPD'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  skpd?: string\r\n  kode?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  kode?: string\r\n  skpd?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SKPD_URL = `${API_URL}/master/skpd` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatSKPD() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${SKPD_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        skpd: jsonD.skpd,\r\n        kode: jsonD.kode,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>SKPD</Form.Label>\r\n                        <Form.Control\r\n                          name='skpd'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.skpd ? valuesFormikExist?.skpd : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Kode</Form.Label>\r\n                        <Form.Control\r\n                          name='kode'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/SKPD'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const PENDIDIKAN_URL = `${API_URL}/master/pendidikan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  pendidikan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  pendidikan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function Pendidikan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterPendidikan, setFilterPendidikan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterPendidikan.val !== '') {\r\n      uriParam += `${valFilterPendidikan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterPendidikan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputPendidikan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterPendidikan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{row.serial}</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Pendidikan',\r\n      selector: (row: any) => row.pendidikan,\r\n      sortable: true,\r\n      sortField: 'pendidikan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Pendidikan/LihatPendidikan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${PENDIDIKAN_URL}/filter-pendidikan/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${PENDIDIKAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        pendidikan: valuesFormik?.pendidikan, //? valuesFormik.pendidikan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${PENDIDIKAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${PENDIDIKAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      pendidikan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${PENDIDIKAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${PENDIDIKAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Pendidikan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterPendidikan.val} //4\r\n            onChange={handleChangeInputPendidikan}\r\n            placeholder='Pendidikan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Pendidikan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Pendidikan</Form.Label>\r\n                  <Form.Control\r\n                      name='pendidikan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.pendidikan && formik.errors.pendidikan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.pendidikan && !formik.errors.pendidikan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.pendidikan}\r\n                    />\r\n                    {formik.touched.pendidikan && formik.errors.pendidikan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.pendidikan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  pendidikan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  pendidikan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const PENDIDIKAN_URL = `${API_URL}/master/pendidikan` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function LihatPendidikan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${PENDIDIKAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        pendidikan: jsonD.pendidikan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Pendidikan</Form.Label>\r\n                        <Form.Control\r\n                          name='pendidikan'\r\n                          className='form-control form-control-solid'\r\n                          value={valuesFormikExist?.pendidikan ? valuesFormikExist?.pendidikan : ''}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Pendidikan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_sarana_prasarana?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_sarana_prasarana: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisSaranaPrasarana, setFilterJenisSaranaPrasarana] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisSaranaPrasarana.val !== '') {\r\n      uriParam += `${valFilterJenisSaranaPrasarana.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisSaranaPrasarana({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisSaranaPrasarana = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisSaranaPrasarana({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  // let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Sarana Prasarana',\r\n      selector: (row: any) => row.jenis_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'jenis_sarana_prasarana',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisSaranaPrasarana/LihatJenisSaranaPrasarana/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_sarana_prasarana: valuesFormik?.jenis_sarana_prasarana, //? valuesFormik.jenis_sarana_prasarana : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_SARANA_PRASARANA_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_SARANA_PRASARANA_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_sarana_prasarana: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_SARANA_PRASARANA_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Sarana Prasarana</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisSaranaPrasarana.val} //4\r\n            onChange={handleChangeInputJenisSaranaPrasarana}\r\n            placeholder='Jenis Sarana Prasarana'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Sarana Prasarana</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Sarana Prasarana</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_sarana_prasarana'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_sarana_prasarana && formik.errors.jenis_sarana_prasarana,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_sarana_prasarana && !formik.errors.jenis_sarana_prasarana,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_sarana_prasarana}\r\n                    />\r\n                    {formik.touched.jenis_sarana_prasarana && formik.errors.jenis_sarana_prasarana && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_sarana_prasarana}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n        {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_sarana_prasarana?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateJenisSaranaPrasarana() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_sarana_prasarana: jsonD.jenis_sarana_prasarana,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_sarana_prasarana: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_sarana_prasarana: valuesFormik?.jenis_sarana_prasarana\r\n          ? valuesFormik.jenis_sarana_prasarana\r\n          : valuesFormikExist?.jenis_sarana_prasarana\r\n          ? valuesFormikExist.jenis_sarana_prasarana\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_SARANA_PRASARANA_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_SARANA_PRASARANA_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisSaranaPrasarana', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisSaranaPrasarana', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_sarana_prasarana || valuesFormik?.jenis_sarana_prasarana === ''\r\n                              ? valuesFormik?.jenis_sarana_prasarana\r\n                              : valuesFormikExist?.jenis_sarana_prasarana\r\n                              ? valuesFormikExist?.jenis_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_sarana_prasarana?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_sarana_prasarana?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` //http://localhost:3000/jenis-Penindakan\r\n\r\nexport function LihatJenisSaranaPrasarana() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_SARANA_PRASARANA_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_sarana_prasarana: jsonD.jenis_sarana_prasarana,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Sarana Prasarana</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_sarana_prasarana'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_sarana_prasarana\r\n                              ? valuesFormikExist?.jenis_sarana_prasarana\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisSaranaPrasarana'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {useFormik} from 'formik'\nimport clsx from 'clsx'\nimport {Row} from 'react-bootstrap'\n\n// API\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const GOLONGAN_URL = `${API_URL}/master/golongan`\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\nexport interface FormInput {\n  golongan?: string\n}\n\nconst validatorForm = Yup.object().shape({\n  golongan: Yup.string().required('Wajib diisi'),\n})\n\nexport function Golongan() {\n  const navigate = useNavigate()\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n\n  const [valFilterGolongan, setFilterGolongan] = useState({val: ''}) //4\n\n  const [data, setData] = useState([])\n  const [temp, setTemp] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const handleFilter = async () => {\n    //3\n    let uriParam = ''\n    if (valFilterGolongan.val !== '') {\n      uriParam += `${valFilterGolongan.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handleFilterReset = () => {\n    setFilterGolongan({val: ''})\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\n  }\n\n  const handleChangeInputGolongan = (event: {\n    //5\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterGolongan({val: event.target.value})\n  }\n\n  // START::CRUD\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  // Kolom table\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.serial,\n      sortable: true,\n    },\n    {},\n    {\n      name: 'Golongan',\n      selector: (row: any) => row.golongan,\n      sortable: true,\n      sortField: 'golongan',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item onClick={() => doDetail(record.id)}>Detail</Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  // START :: VIEW\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${GOLONGAN_URL}/filter/${qParamFind.strparam}`)\n      // setTemp(response.data.data)\n      setTotalRows(response.data.total_data)\n      const timeout = setTimeout(() => {\n        let items = response.data.data\n        Array.from(items).forEach((item: any, index: any) => {\n          item.serial = index + 1\n        })\n        setTemp(items)\n        setLoading(false)\n      }, 100)\n\n      return () => clearTimeout(timeout)\n    }\n    fetchUsers(1)\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => {\n    //urutan 3\n    setLoading(true)\n    const value = await axios.get(`${GOLONGAN_URL}/find`)\n    const timeout = setTimeout(() => {\n      let items = value.data.data\n      Array.from(items).forEach((item: any, index: any) => {\n        item.serial = index + 1\n      })\n      setTemp(items)\n      setLoading(false)\n    }, 50)\n    return () => clearTimeout(timeout)\n  }\n  // END :: VIEW\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [aksi, setAksi] = useState(0)\n\n  // ADD N UPDATE\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        golongan: valuesFormik?.golongan, //? valuesFormik.golongan : '', //? valuesFormik.kategori : '',\n      }\n\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${GOLONGAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(`${GOLONGAN_URL}/update/${idEditData.id}`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchUsers(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      golongan: '',\n    })\n  }\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n\n  // GET ID FOR UPDATE\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${GOLONGAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n\n  const doDetail = (id: any) => {\n    setShow(true)\n    setAksi(2)\n    getDetail(id)\n  }\n\n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${GOLONGAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END::CRUD\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <label>\n          <h3>Golongan</h3>\n        </label>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='q'\n            value={valFilterGolongan.val} //4\n            onChange={handleChangeInputGolongan}\n            placeholder='Cari Golongan'\n            // 2\n          />\n        </div>\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n          <Link to='#' onClick={handleFilter}>\n            {/* 1 */}\n            <button className='btn btn-light-primary me-2'>\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n              Cari\n            </button>\n          </Link>\n\n          <Link to='#' onClick={handleFilterReset}>\n            <button className='btn btn-light-primary me-2'>\n              <i className='fa-solid fa-arrows-rotate svg-icon-2'></i>\n              Reset\n            </button>\n          </Link>\n        </div>\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#i'>\n            <button className='btn btn-primary me-2' onClick={doAdd}>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>\n              {aksi === 0 ? 'Tambah' : aksi === 1 ? 'Ubah' : 'Detail'} Golongan\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='row mt-2 '>\n              <form onSubmit={formik.handleSubmit}>\n                <div className='form-group'>\n                  <Form.Label>Golongan</Form.Label>\n                  {aksi === 0 || aksi === 1 ? (\n                    <Form.Control\n                      name='golongan'\n                      className={clsx(\n                        'form-control form-control-solid mb-1',\n                        {\n                          'is-invalid': formik.touched.golongan && formik.errors.golongan,\n                        },\n                        {\n                          'is-valid': formik.touched.golongan && !formik.errors.golongan,\n                        }\n                      )}\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.golongan}\n                      placeholder='Masukkan Golongan'\n                    />\n                  ) : (\n                    <Form.Control\n                      name='golongan'\n                      onChange={handleChangeFormik}\n                      value={valuesFormik?.golongan}\n                      disabled\n                    />\n                  )}\n                  {formik.touched.golongan && formik.errors.golongan && (\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>\n                        <span role='alert'>{formik.errors.golongan}</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div className='p-0 mt-6'>\n                  <div className='text-center'>\n                    <button\n                      className='float-none btn btn-light align-self-center m-1'\n                      onClick={handleClose}\n                      type='button'\n                    >\n                      <i className='fa-solid fa-arrow-left' />\n                      Kembali\n                    </button>\n                    {aksi === 0 || aksi === 1 ? (\n                      <button\n                        className='float-none btn btn-primary align-self-center m-1'\n                        type='submit'\n                      >\n                        <i className='fa-solid fa-paper-plane'></i>\n                        Simpan\n                      </button>\n                    ) : null}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\n        {temp?.length > 0 && temp && (\n          <DataTable\n            columns={columns}\n            data={temp}\n            progressPending={loading}\n            customStyles={customStyles}\n            progressComponent={<LoadingAnimation />}\n            pagination\n            paginationTotalRows={totalRows}\n            theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n            noDataComponent={\n              <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\n                <div className='d-flex flex-column'>\n                  <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\n                </div>\n              </div>\n            }\n          />\n        )}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const ESELON_URL = `${API_URL}/master/eselon` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  eselon?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  eselon: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function Eselon() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterEselon, setFilterEselon] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterEselon.val !== '') {\r\n      uriParam += `${valFilterEselon.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterEselon({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputEselon = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterEselon({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Eselon',\r\n      selector: (row: any) => row.eselon,\r\n      sortable: true,\r\n      sortField: 'eselon',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/Eselon/LihatEselon/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${ESELON_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${ESELON_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        eselon: valuesFormik?.eselon, //? valuesFormik.eselon : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${ESELON_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${ESELON_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      eselon: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${ESELON_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${ESELON_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Eselon</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterEselon.val} //4\r\n            onChange={handleChangeInputEselon}\r\n            placeholder='Eselon'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Eselon</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Eselon</Form.Label>\r\n                  <Form.Control\r\n                      name='eselon'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.eselon && formik.errors.eselon,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.eselon && !formik.errors.eselon,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.eselon}\r\n                    />\r\n                    {formik.touched.eselon && formik.errors.eselon && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.eselon}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  eselon?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  eselon?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const ESELON_URL = `${API_URL}/master/eselon` //http://localhost:3000//master/jenis-kejadian\r\n\r\nexport function UpdateEselon() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${ESELON_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        eselon: jsonD.eselon,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      eselon: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        eselon: valuesFormik?.eselon\r\n          ? valuesFormik.eselon\r\n          : valuesFormikExist?.eselon\r\n          ? valuesFormikExist.eselon\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${ESELON_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${ESELON_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Eselon', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Eselon', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Eselon</Form.Label>\r\n                        <Form.Control\r\n                          name='eselon'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.eselon || valuesFormik?.eselon === ''\r\n                              ? valuesFormik?.eselon\r\n                              : valuesFormikExist?.eselon\r\n                              ? valuesFormikExist?.eselon\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Eselon'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  eselon?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  eselon?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const ESELON_URL = `${API_URL}/master/eselon` //http://localhost:3000/jenis-kejadian\r\n\r\nexport function LihatEselon() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${ESELON_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        eselon: jsonD.eselon,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Eselon</Form.Label>\r\n                        <Form.Control\r\n                          name='eselon'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.eselon\r\n                              ? valuesFormikExist?.eselon\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/Eselon'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {useFormik, FormikHelpers} from 'formik'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport clsx from 'clsx'\nimport Swal from 'sweetalert2'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport * as Yup from 'yup'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport {KTSVG} from '../../../../_metronic/helpers'\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JABATAN_URL = `${API_URL}/master/jabatan` //http://localhost:3000/sarana-prasarana\nexport interface FormInput {\n  nama?: string\n  status?: string\n  created_by?: number\n}\nconst validatorForm = Yup.object().shape({\n  nama: Yup.string().required('Wajib diisi'),\n  status: Yup.string().required('Wajib diisi'),\n})\nexport function Jabatan() {\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n  const navigate = useNavigate()\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [perPage, setPerPage] = useState(10)\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [temp, setTemp] = useState([])\n  const [aksi, setAksi] = useState(0)\n  const [valFilterJabatan, setFilterJabatan] = useState({val: ''})\n\n  useEffect(() => {\n    async function fetchUsers(page: number) {\n      setLoading(true)\n      const response = await axios.get(\n        `${JABATAN_URL}/find?limit=${perPage}&offset=${page}${qParamFind.strparam}`\n      )\n      setData(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n  }, [qParamFind, perPage])\n\n  const fetchData = async (page: number) => {\n    setLoading(true)\n    const response = await axios.get(\n      `${JABATAN_URL}/find?limit=${perPage}&offset=${page}${qParamFind.strparam}`\n    )\n    setData(response.data.data)\n    setTotalRows(response.data.total_data)\n    setLoading(false)\n\n    return [data, setData] as const\n  }\n  const handlePerRowsChange = async (newPerPage: number, page: number) => {\n    setLoading(true)\n    const response = await axios.get(\n      `${JABATAN_URL}/find?limit=${newPerPage}&offset=${page}${qParamFind.strparam}`\n    )\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterJabatan.val !== '') {\n      uriParam += `&nama=${valFilterJabatan.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handlePageChange = (page: number) => {\n    fetchData(page)\n  }\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const handleChangeInputJabatan = (event: {\n    //5\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterJabatan({val: event.target.value})\n  }\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n  let no = 1\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n      minWidth: '30px',\n      cell: (record: any) => {\n        return <div className='mt-2 mb-2'>{no++}</div>\n      },\n    },\n    {\n      name: 'Jabatan',\n      selector: (row: any) => row.jabatan,\n      sortable: true,\n      sortField: 'jabatan',\n      minWidth: '100px',\n    },\n    {\n      name: 'Status',\n      selector: (row: any) => row.status,\n      sortable: true,\n      sortField: 'status',\n      wrap: true,\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n      wrap: true,\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/jabatan/lihat-jabatan/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        nama: valuesFormik?.nama,\n        status: valuesFormik?.status,\n      }\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${JABATAN_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchData(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(`${JABATAN_URL}/update/${idEditData.id}`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchData(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  // UPDATE\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${JABATAN_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n      nama: data.data.jabatan,\n    }))\n  }\n  //End UPDATE\n  //Detail\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      nama: '',\n      status: '',\n    })\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  //End Detail\n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(`${JABATAN_URL}/delete/${id}`, bodyParam)\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n          fetchData(1)\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END DELETE\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='row g-8 mt-2 ms-5 me-5'>\n          <label>\n            <h3>Jabatan</h3>\n          </label>\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n            <input\n              type='text'\n              className='form-control form-control form-control-solid'\n              name='nama'\n              value={valFilterJabatan.val}\n              onChange={handleChangeInputJabatan}\n              placeholder='Jabatan'\n            />\n          </div>\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n            <Link to='#' onClick={handleFilter}>\n              {/* 1 */}\n              <button className='btn btn-light-primary me-2'>\n                <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n                Cari\n              </button>\n            </Link>\n          </div>\n          <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n            <Link to='/master/Jabatan/TambahJabatan'>\n              <button className='btn btn-primary me-2'>\n                <i className='fa-solid fa-plus'></i>\n                Tambah\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <form onSubmit={formik.handleSubmit}>\n            <Modal.Header closeButton>\n              <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'}Tambah Jabatan</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className='mb-3 form-control-solid'>\n                <div className='form-group'>\n                  <Form.Label>Jabatan</Form.Label>\n                  <Form.Control\n                    name='nama'\n                    className='form-control form-control-solid'\n                    onChange={handleChangeFormik}\n                    value={valuesFormik?.nama}\n                    placeholder='Jabatan'\n                  />\n                </div>\n              </div>\n              <Form.Group className='mb-3 form-control-solid'>\n                <label className='required fw-semibold fs-6 mb-2'>Status</label>\n                <select\n                  data-control='select2'\n                  data-placeholder='Status'\n                  name='status'\n                  className={clsx(\n                    'form-control form-control-solid mb-1',\n                    {\n                      'is-invalid': formik.touched.status && formik.errors.status,\n                    },\n                    {\n                      'is-valid': formik.touched.status && !formik.errors.status,\n                    }\n                  )}\n                  onChange={handleChangeFormik}\n                  value={valuesFormik?.status}\n                >\n                  <option value=''>Pilih</option>\n                  <option value='JFT'>JFT</option>\n                  <option value='Non JFT'>Non JFT</option>\n                </select>\n              </Form.Group>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant='secondary' onClick={handleClose}>\n                Batal\n              </Button>\n              <Button variant='primary' type='submit'>\n                <i className='fa-solid fa-paper-plane'></i>\n                Simpan\n              </Button>\n            </Modal.Footer>\n          </form>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          customStyles={customStyles}\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        />\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  jabatan?: string\n  status?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  jabatan?: string\n  status?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JABATAN_URL = `${API_URL}/master/jabatan` //http://localhost:3000/jabatan\n\nexport function LihatJabatan() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${JABATAN_URL}/findone/${id}`)\n      console.log(fetchData)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        jabatan: jsonD.jabatan,\n        status: jsonD.status,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Jabatan</Form.Label>\n                        <Form.Control\n                          name='jabatan'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.jabatan ? valuesFormikExist?.jabatan : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Status</Form.Label>\n                        <Form.Control\n                          name='status'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.status ? valuesFormikExist?.status : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Jabatan'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect, Fragment, useState} from 'react'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport Swal from 'sweetalert2'\r\nimport DataTable, {createTheme} from 'react-data-table-component'\r\nimport {ThemeModeComponent} from '../../../../../_metronic/assets/ts/layout'\r\n\r\nimport {KTSVG} from '../../../../../_metronic/helpers'\r\nimport {useParams} from 'react-router-dom'\r\nimport {ButtonGroup, Dropdown, DropdownButton, Modal} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport {useFormik, FormikHelpers} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport clsx from 'clsx'\r\nimport {useThemeMode} from '../../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JABATAN_URL = `${API_URL}/master/jabatan` //http://localhost:3000/master/jabatan\r\n\r\n// createTheme creates a new theme named solarized that overrides the build in dark theme\r\ncreateTheme(\r\n    'darkMetro',\r\n    {\r\n      text: {\r\n        primary: '#92929f',\r\n        secondary: '#92929f',\r\n      },\r\n      background: {\r\n        default: '#1e1e2e',\r\n      },\r\n      context: {\r\n        background: '#cb4b16',\r\n        text: '#FFFFFF',\r\n      },\r\n      divider: {\r\n        default: '#2b2c41',\r\n      },\r\n      action: {\r\n        button: 'rgba(0,0,0,.54)',\r\n        hover: 'rgba(0,0,0,.08)',\r\n        disabled: 'rgba(0,0,0,.12)',\r\n      },\r\n    },\r\n    'dark'\r\n  )\r\n  const systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nexport interface FormInput {\r\n    jabatan?: string\r\n    status?: string\r\n    created_by?: number\r\n}\r\n\r\n// const validatorForm = Yup.object().shape({\r\n//     hubungan: Yup.string().required('Wajib diisi'),\r\n//     nama: Yup.string().required('Wajib diisi'),\r\n//     jenis_kelamin: Yup.string().required('Wajib diisi'),\r\n//   })\r\n\r\nexport function TambahJabatan() {\r\n  const navigate = useNavigate()\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [aksi, setAksi] = useState(0)\r\n//   const [valuesFormik, setValuesFormik] = useState<FormInput>()\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jabatan: '',\r\n      status: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(selectedFile)\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jabatan: valuesFormik?.jabatan ? valuesFormik.jabatan : '',\r\n        created_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.post(`${JABATAN_URL}/create`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(\r\n              `${JABATAN_URL}/upload-file/${response.data.data.return_id}`,\r\n              formData\r\n            )\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/Jabatan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/Jabatan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n          size='lg'\r\n          show={show}\r\n          onHide={handleClose}\r\n          aria-labelledby='example-modal-sizes-title-lg'\r\n          backdrop='static'\r\n          keyboard={false}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id='example-modal-sizes-title-lg'>\r\n              {aksi === 0 ? 'Tambah' : 'Ubah'} Jabatan\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <form className='form' onSubmit={formik.handleSubmit}>\r\n              <div\r\n                className='d-flex flex-column scroll-y me-n7 pe-7'\r\n                id='kt_modal_add_user_scroll'\r\n                data-kt-scroll='true'\r\n                data-kt-scroll-activate='{default: false, lg: true}'\r\n                data-kt-scroll-max-height='auto'\r\n                data-kt-scroll-dependencies='#kt_modal_add_user_header'\r\n                data-kt-scroll-wrappers='#kt_modal_add_user_scroll'\r\n                data-kt-scroll-offset='300px'\r\n              >\r\n                <div className='fv-row mb-7'>\r\n                  <label className='required fw-semibold fs-6 mb-2'>jabatan</label>\r\n                  <input\r\n                    type='text'\r\n                    name='jabatan'\r\n                    placeholder='Jabatan'\r\n                    className={clsx(\r\n                      'form-control form-control-solid mb-1',\r\n                      {\r\n                        'is-invalid': formik.touched.jabatan && formik.errors.jabatan,\r\n                      },\r\n                      {\r\n                        'is-valid': formik.touched.jabatan && !formik.errors.jabatan,\r\n                      }\r\n                    )}\r\n                    onChange={handleChangeFormik}\r\n                    value={valuesFormik?.jabatan}\r\n                  />\r\n                  {formik.touched.jabatan && formik.errors.jabatan && (\r\n                    <div className='fv-plugins-message-container'>\r\n                      <div className='fv-help-block'>\r\n                        <span role='alert'>{formik.errors.jabatan}</span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='fv-row mb-7'>\r\n                  <div id='kt_docs_repeater_basic'>\r\n                    <div className='fv-row mb-7 mt-7'>\r\n                      <label className='required fw-semibold fs-6 mb-2'>Status</label>\r\n                      <select\r\n                        data-control='select2'\r\n                        data-placeholder='Status'\r\n                        name='status'\r\n                        className={clsx(\r\n                          'form-control form-control-solid mb-1',\r\n                          {\r\n                            'is-invalid':\r\n                              formik.touched.status && formik.errors.status,\r\n                          },\r\n                          {\r\n                            'is-valid':\r\n                              formik.touched.status && !formik.errors.status,\r\n                          }\r\n                        )}\r\n                        onChange={handleChangeFormik}\r\n                        value={valuesFormik?.status}\r\n                      >\r\n                        <option value=''>Pilih</option>\r\n                        <option value='JFT'>JFT</option>\r\n                        <option value='Non JFT'>Non JFT</option>\r\n                      </select>\r\n                      {formik.touched.status && formik.errors.status && (\r\n                        <div className='fv-plugins-message-container'>\r\n                          <div className='fv-help-block'>\r\n                            <span role='alert'>{formik.errors.status}</span>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='p-0 mt-6'>\r\n                <div className='text-center'>\r\n                  <button\r\n                    type='button'\r\n                    onClick={handleClose}\r\n                    className='float-none btn btn-light align-self-center m-1'\r\n                  >\r\n                    Tutup\r\n                  </button>\r\n                  <button\r\n                    type='submit'\r\n                    className='float-none btn btn-primary align-self-center m-1'\r\n                    disabled={formik.isSubmitting || !formik.isValid}\r\n                  >\r\n                    Simpan\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </Modal.Body>\r\n        </Modal>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\n\r\nexport interface FormInput {\r\n  sumber_informasi?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  sumber_informasi: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function SumberInformasi() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterSumberInformasi, setFilterSumberInformasi] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterSumberInformasi.val !== '') {\r\n      uriParam += `${valFilterSumberInformasi.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterSumberInformasi({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputSumberInformasi = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterSumberInformasi({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Sumber Informasi',\r\n      selector: (row: any) => row.sumber_informasi,\r\n      sortable: true,\r\n      sortField: 'sumber_informasi',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    menuPosition=\"top\"\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/SumberInformasi/LihatSumberInformasi/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${SUMBER_INFORMASI_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        sumber_informasi: valuesFormik?.sumber_informasi, //? valuesFormik.sumber_informasi : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${SUMBER_INFORMASI_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${SUMBER_INFORMASI_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      sumber_informasi: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${SUMBER_INFORMASI_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Sumber Informasi</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterSumberInformasi.val} //4\r\n            onChange={handleChangeInputSumberInformasi}\r\n            placeholder='Sumber Informasi'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Sumber Informasi</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Sumber Informasi</Form.Label>\r\n                  <Form.Control\r\n                      name='sumber_informasi'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.sumber_informasi && formik.errors.sumber_informasi,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.sumber_informasi && !formik.errors.sumber_informasi,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.sumber_informasi}\r\n                    />\r\n                    {formik.touched.sumber_informasi && formik.errors.sumber_informasi && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.sumber_informasi}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  sumber_informasi?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  sumber_informasi?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi` //http://localhost:3000//master/jenis-kejadian\r\n\r\nexport function UpdateSumberInformasi() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        sumber_informasi: jsonD.sumber_informasi,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      sumber_informasi: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        sumber_informasi: valuesFormik?.sumber_informasi\r\n          ? valuesFormik.sumber_informasi\r\n          : valuesFormikExist?.sumber_informasi\r\n          ? valuesFormikExist.sumber_informasi\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${SUMBER_INFORMASI_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${SUMBER_INFORMASI_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/SumberInformasi', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/SumberInformasi', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='sumber_informasi'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.sumber_informasi || valuesFormik?.sumber_informasi === ''\r\n                              ? valuesFormik?.sumber_informasi\r\n                              : valuesFormikExist?.sumber_informasi\r\n                              ? valuesFormikExist?.sumber_informasi\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/SumberInformasi'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  sumber_informasi?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  sumber_informasi?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SUMBER_INFORMASI_URL = `${API_URL}/master/sumber-informasi`//http://localhost:3000/jenis-kejadian\r\n\r\nexport function LihatSumberInformasi() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${SUMBER_INFORMASI_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        sumber_informasi: jsonD.sumber_informasi,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='sumber_informasi'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.sumber_informasi\r\n                              ? valuesFormikExist?.sumber_informasi\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/SumberInformasi'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport DataTable, {createTheme, ExpanderComponentProps} from 'react-data-table-component'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\r\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport {useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n// API\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\r\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` \r\n\r\n\r\n// Theme for dark or light interface\r\ncreateTheme(\r\n  'darkMetro',\r\n  {\r\n    text: {\r\n      primary: '#92929f',\r\n      secondary: '#92929f',\r\n    },\r\n    background: {\r\n      default: '#1e1e2e',\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#2b2c41',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  },\r\n  'dark'\r\n)\r\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\r\n\r\nconst reactSelectLightThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#5e6278',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#cccccc',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#cccccc',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n    boxShadow: '0 0 0 1px #f5f8fa',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#f5f8fa',\r\n    color: '#5e6278',\r\n    borderColor: 'hsl(204deg 33% 97%)',\r\n  }),\r\n}\r\n\r\nconst reactSelectDarkThem = {\r\n  input: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  menu: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  container: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n  indicatorsContainer: (base: object) => ({\r\n    ...base,\r\n    color: '#92929f',\r\n  }),\r\n  indicatorSeparator: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#92929f',\r\n  }),\r\n  control: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n    boxShadow: '0 0 0 1px #1b1b29',\r\n  }),\r\n  singleValue: (base: object) => ({\r\n    ...base,\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n  }),\r\n  option: (base: object) => ({\r\n    ...base,\r\n    height: '100%',\r\n    backgroundColor: '#1b1b29',\r\n    color: '#92929f',\r\n    borderColor: 'hsl(240deg 13% 13%)',\r\n  }),\r\n}\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '105px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for head cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '14px', // override the cell padding for data cells\r\n      paddingRight: '14px',\r\n    },\r\n  },\r\n}\r\nexport interface FormInput {\r\n  jenis_kekerasan?: string\r\n}\r\n\r\nconst validatorForm = Yup.object().shape({\r\n\r\n  jenis_kekerasan: Yup.string().required('Wajib diisi'),\r\n})\r\n\r\nexport function JenisKekerasan() {\r\n  const navigate = useNavigate()\r\n  const {mode} = useThemeMode()\r\n  const calculatedMode = mode === 'system' ? systemMode : mode\r\n\r\n  const [valFilterJenisKekerasan, setFilterJenisKekerasan] = useState({val: ''}) //4\r\n\r\n  const [data, setData] = useState([])\r\n  const [temp, setTemp] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [qParamFind, setUriFind] = useState({strparam: ''})\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [perPage, setPerPage] = useState(10)\r\n\r\n  const handleFilter = async () => { //3\r\n    let uriParam = ''\r\n    if (valFilterJenisKekerasan.val !== '') {\r\n      uriParam += `${valFilterJenisKekerasan.val}`\r\n    }\r\n    setUriFind((prevState) => ({ ...prevState, strparam: uriParam }))\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    setFilterJenisKekerasan({val: ''})\r\n    setUriFind((prevState) => ({...prevState, strparam: ''}))\r\n  }\r\n\r\n  const handleChangeInputJenisKekerasan = (event: { //5\r\n    preventDefault: () => void\r\n    target: { value: any; name: any }\r\n  }) => {\r\n    setFilterJenisKekerasan({ val: event.target.value })\r\n  }\r\n\r\n  // START::CRUD\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\r\n          <div className='d-flex flex-column'>\r\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  let number = 1\r\n  // Kolom table\r\n  const columns = [\r\n    {\r\n      name: 'No',\r\n      selector: (row: any) => row.serial,\r\n      sortable: true,\r\n      cell: (row: any) => {\r\n        return <div className='mb-2 mt-2'>{ row.serial }</div>\r\n      },\r\n    },\r\n    {},\r\n    {\r\n      name: 'Jenis Kekerasan',\r\n      selector: (row: any) => row.jenis_kekerasan,\r\n      sortable: true,\r\n      sortField: 'jenis_kekerasan',\r\n    },\r\n    {},\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: 'Action',\r\n      className: 'action',\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n            <div className='mb-2'>\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size='sm'\r\n                    variant='light'\r\n                    title='Aksi'\r\n                  >\r\n                    <Dropdown.Item\r\n                      href='#'\r\n                      onClick={() =>\r\n                        navigate('/master/JenisKekerasan/LihatJenisKekerasan/' + record.id, {replace: true})\r\n                      }\r\n                    >\r\n                      Detail\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\r\n                      Hapus\r\n                    </Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // START :: VIEW\r\n  useEffect(() => {\r\n    fetchUsers(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchDT(page: number) {\r\n      setLoading(true)\r\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/filter/${qParamFind.strparam}`)\r\n      // setTemp(response.data.data)\r\n      setTotalRows(response.data.total_data)\r\n      const timeout = setTimeout(() => {\r\n        let items = response.data.data\r\n      Array.from(items).forEach((item: any, index: any) => {\r\n        item.serial = index + 1\r\n      })\r\n      setTemp(items)\r\n      setLoading(false)\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeout)\r\n      \r\n    }\r\n    fetchUsers(1)\r\n    fetchDT(1)\r\n  }, [qParamFind, perPage])\r\n\r\n  const fetchUsers = async (page: any) => { //urutan 3\r\n    setLoading(true)\r\n    const value = await axios.get(`${JENIS_KEKERASAN_URL}/find`)\r\n    const timeout = setTimeout(() => {\r\n      let items = value.data.data\r\n    Array.from(items).forEach((item: any, index: any) => {\r\n      item.serial = index + 1\r\n    })\r\n    setTemp(items)\r\n    setLoading(false)\r\n    }, 50);\r\n    return () => clearTimeout(timeout)\r\n  }\r\n  // END :: VIEW\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [aksi, setAksi] = useState(0)\r\n\r\n  // ADD N UPDATE\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ...valuesFormik,\r\n    },\r\n    validationSchema: validatorForm,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, {setSubmitting}) => {\r\n      setSubmitting(true)\r\n      const bodyparam: FormInput = {\r\n        jenis_kekerasan: valuesFormik?.jenis_kekerasan, //? valuesFormik.jenis_kekerasan : '', //? valuesFormik.kategori : '',\r\n      }\r\n      \r\n      try {\r\n        if (aksi === 0) {\r\n          const response = await axios.post(`${JENIS_KEKERASAN_URL}/create`, bodyparam)\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        } else {\r\n          const response = await axios.put(\r\n            `${JENIS_KEKERASAN_URL}/update/${idEditData.id}`,\r\n            bodyparam\r\n          )\r\n          if (response) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: 'Data berhasil disimpan',\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            })\r\n            handleClose()\r\n            fetchUsers(1)\r\n            setSubmitting(false)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          text: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  const doAdd = () => {\r\n    setShow(true)\r\n    setAksi(0)\r\n    setValuesFormik({\r\n      jenis_kekerasan: '',\r\n    })\r\n  }\r\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\r\n  \r\n  // GET ID FOR UPDATE\r\n  const getDetail = async (idparam: any) => {\r\n    const {data} = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${parseInt(idparam)}`)\r\n    setIdEditData((prevstate) => ({\r\n      ...prevstate,\r\n      id: parseInt(idparam),\r\n    }))\r\n    setValuesFormik((prevstate) => ({\r\n      ...prevstate,\r\n      ...data.data,\r\n    }))\r\n  }\r\n\r\n  const doEdit = (id: any) => {\r\n    setShow(true)\r\n    setAksi(1)\r\n    getDetail(id)\r\n  }\r\n  \r\n  // DELETE\r\n  const konfirDel = (id: number) => {\r\n    Swal.fire({\r\n      text: 'Anda yakin ingin menghapus data ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya!',\r\n      cancelButtonText: 'Tidak!',\r\n      color: '#000000',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const bodyParam = {\r\n          data: {\r\n            deleted_by: 0,\r\n          },\r\n        }\r\n        const response = await axios.delete(`${JENIS_KEKERASAN_URL}/delete/${id}`, bodyParam)\r\n        if (response) {\r\n          fetchUsers(1)\r\n          Swal.fire({\r\n            icon: 'success',\r\n            text: 'Data berhasil dihapus',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'Data gagal dihapus, harap mencoba lagi',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            color: '#000000',\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  // END::CRUD\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className='row g-8 mt-2 ms-5 me-5'>\r\n        <label>\r\n          <h3>Jenis Kekerasan</h3>\r\n        </label>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <input\r\n            type='text'\r\n            className='form-control form-control form-control-solid'\r\n            name='q'\r\n            value={valFilterJenisKekerasan.val} //4\r\n            onChange={handleChangeInputJenisKekerasan}\r\n            placeholder='Jenis Kekerasan'\r\n            // 2\r\n          />\r\n        </div>\r\n        <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\r\n          <Link to='#' onClick={handleFilter}> \r\n          {/* 1 */}\r\n            <button className='btn btn-light-primary me-2'>\r\n              <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-2' onClick={doAdd}>\r\n              <i className='fa-solid fa-plus'></i>\r\n              Tambah \r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{aksi === 0 ? 'Tambah' : 'Ubah'} Jenis Kekerasan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className='row mt-2 '>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-group'>\r\n                  <Form.Label>Jenis Kekerasan</Form.Label>\r\n                  <Form.Control\r\n                      name='jenis_kekerasan'\r\n                      className={clsx(\r\n                        'form-control form-control-solid mb-1',\r\n                        {\r\n                          'is-invalid': formik.touched.jenis_kekerasan && formik.errors.jenis_kekerasan,\r\n                        },\r\n                        {\r\n                          'is-valid': formik.touched.jenis_kekerasan && !formik.errors.jenis_kekerasan,\r\n                        }\r\n                      )}\r\n                      onChange={handleChangeFormik}\r\n                      value={valuesFormik?.jenis_kekerasan}\r\n                    />\r\n                    {formik.touched.jenis_kekerasan && formik.errors.jenis_kekerasan && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'>\r\n                          <span role='alert'>{formik.errors.jenis_kekerasan}</span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <div className='p-0 mt-6'>\r\n                  <div className='text-center'>\r\n                    <button\r\n                      className='float-none btn btn-light align-self-center m-1'\r\n                      onClick={handleClose}\r\n                      type='button'\r\n                    >\r\n                      <i className='fa fa-close'></i>\r\n                      Batal\r\n                    </button>\r\n                    <button\r\n                      className='float-none btn btn-primary align-self-center m-1'\r\n                      type='submit'\r\n                    >\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n      <div className='table-responsive mt-5 ms-5 me-5 w'>\r\n      {temp?.length > 0 && temp && (\r\n          <DataTable\r\n          columns={columns}\r\n          data={temp}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          // paginationServer\r\n          paginationTotalRows={totalRows}\r\n          \r\n          //    expandableRowsComponent={(row) => (\r\n          //   <ExpandedComponent row={row} handleInputChange={handleInputChange} />\r\n          // )}\r\n          // expandableRowsComponent={ExpandedComponent}\r\n          // onChangeRowsPerPage={handlePerRowsChange}\r\n          // onChangePage={handlePageChange}\r\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\r\n          noDataComponent={\r\n            <div className='alert alert-primary d-flex align-items-center p-5 mt-10 mb-10'>\r\n              <div className='d-flex flex-column'>\r\n                <h5 className='mb-1 text-center'>Data tidak ditemukan..!</h5>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        )}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ExpandedComponent = ({ row, handleInputChange }) => {\r\n//   return (\r\n//     <div className=\"ExpandedComponent\">\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Surname</label>\r\n//         <input\r\n//           value={row.data.surname}\r\n//           onChange={(e) =>\r\n//             handleInputChange(row.data, \"surname\", e.target.value)\r\n//           }\r\n//         />\r\n//       </div>\r\n//       <div className=\"ExpandedComponent_Row\">\r\n//         <label>Age</label>\r\n//         <input\r\n//           value={row.data.age}\r\n//           onChange={(e) => handleInputChange(row.data, \"age\", e.target.value)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useNavigate, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {useFormik} from 'formik'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport interface FormInput {\r\n  jenis_kekerasan?: string\r\n  updated_by?: number\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kekerasan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` //http://localhost:3000//master/JenisKekerasan\r\n\r\nexport function UpdateJenisKekerasan() {\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kekerasan: jsonD.jenis_kekerasan,\r\n        updated_by: 0,\r\n      }\r\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormik, id])\r\n\r\n  const handleChangeFormikSelect = (value: any, name: string) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleChangeFormik = (event: {\r\n    preventDefault: () => void\r\n    target: {value: any; name: any}\r\n  }) => {\r\n    setValuesFormik((prevValues: any) => ({\r\n      ...prevValues,\r\n      [event.target.name]: event.target.value,\r\n    }))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      jenis_kekerasan: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      let formData = new FormData()\r\n      const bodyparam: FormInput = {\r\n        jenis_kekerasan: valuesFormik?.jenis_kekerasan\r\n          ? valuesFormik.jenis_kekerasan\r\n          : valuesFormikExist?.jenis_kekerasan\r\n          ? valuesFormikExist.jenis_kekerasan\r\n          : '',\r\n        updated_by: 0,\r\n      }\r\n      try {\r\n        const response = await axios.put(`${JENIS_KEKERASAN_URL}/update/${id}`, bodyparam)\r\n        if (response) {\r\n          if (selectedFile) {\r\n            formData.append('file_dokumentasi', selectedFile)\r\n            const responseFile = await axios.post(`${JENIS_KEKERASAN_URL}/upload/${id}`, formData)\r\n            if (responseFile) {\r\n              console.log('File success uploaded!')\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Data berhasil disimpan',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              })\r\n              navigate('/master/JenisKekerasan', {replace: true})\r\n            }\r\n            return\r\n          }\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Data berhasil disimpan',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n          navigate('/master/JenisKekerasan', {replace: true})\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Data gagal disimpan, harap mencoba lagi',\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n        console.error(error)\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-2 mb-xl-1'>\r\n              <div className='card-body'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-4 mb-3'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kejadian</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kekerasan'\r\n                          className='form-control form-control-solid'\r\n                          onChange={handleChangeFormik}\r\n                          value={\r\n                            valuesFormik?.jenis_kekerasan || valuesFormik?.jenis_kekerasan === ''\r\n                              ? valuesFormik?.jenis_kekerasan\r\n                              : valuesFormikExist?.jenis_kekerasan\r\n                              ? valuesFormikExist?.jenis_kekerasan\r\n                              : ''\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKekerasan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fa-solid fa-paper-plane'></i>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport interface FormInput {\r\n  jenis_kekerasan?: string\r\n  updated_by?: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  readonly value: string\r\n  readonly label: string\r\n  readonly color: string\r\n  readonly isFixed?: boolean\r\n  readonly isDisabled?: boolean\r\n}\r\n\r\ninterface GetDataInterface {\r\n  id?: number\r\n  jenis_kekerasan?: string\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const JENIS_KEKERASAN_URL = `${API_URL}/master/jenis-kekerasan` //http://localhost:3000/JenisKekerasan\r\n\r\nexport function LihatJenisKekerasan() {\r\n  const {id} = useParams()\r\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(`${JENIS_KEKERASAN_URL}/findone/${id}`)\r\n      const jsonD: GetDataInterface = response.data.data\r\n      const paramValue: FormInput = {\r\n        jenis_kekerasan: jsonD.jenis_kekerasan,\r\n        updated_by: '',\r\n      }\r\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\r\n    }\r\n    fetchData()\r\n  }, [valuesFormikExist, id])\r\n\r\n  return (\r\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\r\n      <div className='d-flex flex-column flex-column-fluid'>\r\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\r\n          <div id='kt_app_content_container' className='app-container container-xxl'>\r\n            <div className='card mb-3 mb-xl-2'>\r\n              <div className='card-body'>\r\n                <form>\r\n                  <div className='row mt-2'>\r\n                    <div className='col-5 mb-6'>\r\n                      <div className='form-group'>\r\n                        <Form.Label>Jenis Kekerasan</Form.Label>\r\n                        <Form.Control\r\n                          name='jenis_kekerasan'\r\n                          className='form-control form-control-solid'\r\n                          value={\r\n                            valuesFormikExist?.jenis_kekerasan\r\n                              ? valuesFormikExist?.jenis_kekerasan\r\n                              : ''\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\r\n                    <Link to='/master/JenisKekerasan'>\r\n                      <button className='btn btn-secondary'>\r\n                        <i className='fa-solid fa-arrow-left'></i>\r\n                        Kembali\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\r\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\r\n\r\nexport function JenisPenyelesaian() {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    fetchUsers(1);\r\n  }, []);\r\n\r\n  const LoadingAnimation = (props: any) => {\r\n    return (\r\n      <>\r\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\r\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\r\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\r\n          <div className=\"d-flex flex-column\">\r\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'Jenis Sarana & Prasarana',\r\n      selector: (row: any) => row.jenis_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'jenis_sarana_prasarana',\r\n    },\r\n    {\r\n      name: 'Status Sarana & Prasarana',\r\n      selector: (row: any) => row.status_sarana_prasarana,\r\n      sortable: true,\r\n      sortField: 'status_sarana_prasarana',\r\n    },\r\n    {\r\n      name: 'Jumlah',\r\n      selector: (row: any) => row.jumlah,\r\n      sortable: true,\r\n      sortField: 'jumlah',\r\n    },\r\n    {\r\n      name: 'Kondisi',\r\n      selector: (row: any) => row.kondisi,\r\n      sortable: true,\r\n      sortField: 'kondisi',\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: (row: any) => row.keterangan,\r\n      sortable: true,\r\n      sortField: 'keterangan',\r\n    },\r\n    {\r\n      name: 'Dokumentasi',\r\n      selector: (row: any) => row.dokumentasi,\r\n      sortable: true,\r\n      sortField: 'dokumentasi',\r\n    },\r\n    {\r\n      name: 'Aksi',\r\n      sortable: false,\r\n      text: \"Action\",\r\n      className: \"action\",\r\n      align: \"left\",\r\n      cell: (record: any) => {\r\n        return (\r\n          <Fragment>\r\n\r\n            <div className=\"mb-2\">\r\n              {[DropdownButton].map((DropdownType, idx) => (\r\n                <>\r\n                  <DropdownType\r\n                    as={ButtonGroup}\r\n                    key={idx}\r\n                    id={`dropdown-button-drop-${idx}`}\r\n                    size=\"sm\"\r\n                    variant=\"light\"\r\n                    title=\"Aksi\">\r\n                    <Dropdown.Item>\r\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\r\n                        Detail\r\n                      </Link>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\r\n                  </DropdownType>\r\n                </>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n\r\n  ];\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n   \r\n  const [temp, setTemp] = useState([]);\r\n\r\n  const fetchUsers = async (page: any) => {\r\n    setLoading(true);\r\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\r\n\r\n    setTemp(value.data.data);\r\n    console.log('cek response api:',temp);\r\n\r\n    \r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\r\n    setData(response.data.data);\r\n   \r\n    setTotalRows(response.data.total);\r\n    setLoading(false);\r\n    console.log('cek ahhh :' ,data);\r\n    return [data, setData] as const;\r\n  };\r\n\r\n  const handlePageChange = (page: any) => {\r\n    fetchUsers(page);\r\n  };\r\n\r\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\r\n    setLoading(true);\r\n\r\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\r\n\r\n    setData(response.data.data);\r\n    setPerPage(newPerPage);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSort = (column: any, sortDirection: any) => {\r\n    // simulate server sort\r\n    console.log(column, sortDirection);\r\n    setLoading(true);\r\n\r\n    // instead of setTimeout this is where you would handle your API call.\r\n    setTimeout(() => {\r\n      setData(orderBy(data, column.sortField, sortDirection));\r\n      setLoading(false);\r\n    }, 100);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      {/* begin::Body */}\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\r\n            <label htmlFor='' className='mb-3'>\r\n              Jenis Penyelesaian\r\n            </label>\r\n            <input\r\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\r\n          </div>\r\n      </div>\r\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\r\n        <div className='col-md-6 col-lg-6 col-sm-12'>\r\n        <Link to='#'>\r\n            <button className='btn btn-primary'>\r\n              <i className='fa-solid fa-search'></i>\r\n              Cari\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\r\n          <Link to='#i'>\r\n            <button className='btn btn-primary me-5' onClick={handleShow}>\r\n              <i className=\"fa-solid fa-plus\"></i>\r\n              Tambah\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tambah Jenis Penyelesaian</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\r\n        <Form.Group className=\"mb-3 form-control-solid\">\r\n            <Form.Label>Jenis Penyelesaian</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Penyelesaian\" />\r\n        </Form.Group>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n          <i className=\"fa-solid fa-paper-plane\"></i>\r\n            Simpan\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </>\r\n\r\n      <div className='table-responsive mt-5 ms-5 me-5'>\r\n      <DataTable\r\n            columns={columns}\r\n            data={temp}\r\n            pagination\r\n        />\r\n        {/* <DataTable\r\n          columns={columns}\r\n          data={data}\r\n          progressPending={loading}\r\n          progressComponent={<LoadingAnimation />}\r\n          pagination\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          sortServer\r\n          onSort={handleSort}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n        /> */}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\nfunction onEdit(record: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {useFormik, FormikHelpers} from 'formik'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable, {createTheme} from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport {ThemeModeComponent} from '../../../../_metronic/assets/ts/layout'\nimport Swal from 'sweetalert2'\nimport * as Yup from 'yup'\nimport {useThemeMode} from '../../../../_metronic/partials/layout/theme-mode/ThemeModeProvider'\nimport {KTSVG} from '../../../../_metronic/helpers'\n\n// Theme for dark or light interface\ncreateTheme(\n  'darkMetro',\n  {\n    text: {\n      primary: '#92929f',\n      secondary: '#92929f',\n    },\n    background: {\n      default: '#1e1e2e',\n    },\n    context: {\n      background: '#cb4b16',\n      text: '#FFFFFF',\n    },\n    divider: {\n      default: '#2b2c41',\n    },\n    action: {\n      button: 'rgba(0,0,0,.54)',\n      hover: 'rgba(0,0,0,.08)',\n      disabled: 'rgba(0,0,0,.12)',\n    },\n  },\n  'dark'\n)\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\nconst reactSelectLightThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#5e6278',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#cccccc',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#cccccc',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n    boxShadow: '0 0 0 1px #f5f8fa',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#f5f8fa',\n    color: '#5e6278',\n    borderColor: 'hsl(204deg 33% 97%)',\n  }),\n}\n\nconst reactSelectDarkThem = {\n  input: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  menu: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  container: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n  indicatorsContainer: (base: object) => ({\n    ...base,\n    color: '#92929f',\n  }),\n  indicatorSeparator: (base: object) => ({\n    ...base,\n    backgroundColor: '#92929f',\n  }),\n  control: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n    boxShadow: '0 0 0 1px #1b1b29',\n  }),\n  singleValue: (base: object) => ({\n    ...base,\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n  }),\n  option: (base: object) => ({\n    ...base,\n    height: '100%',\n    backgroundColor: '#1b1b29',\n    color: '#92929f',\n    borderColor: 'hsl(240deg 13% 13%)',\n  }),\n}\n\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '105px', // override the row height\n    },\n  },\n  headCells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for head cells\n      paddingRight: '14px',\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: '14px', // override the cell padding for data cells\n      paddingRight: '14px',\n    },\n  },\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const STATUS_KENAIKAN_PANGKAT_URL = `${API_URL}/master/status_kenaikan_pangkat`\nexport interface FormInput {\n  status_kenaikan_pangkat?: string\n  created_by?: number\n}\nconst validatorForm = Yup.object().shape({\n  status_kenaikan_pangkat: Yup.string().required('Wajib diisi'),\n})\nexport function StatusKenaikanPangkat() {\n  const {mode} = useThemeMode()\n  const calculatedMode = mode === 'system' ? systemMode : mode\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n  const navigate = useNavigate()\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n  const [perPage, setPerPage] = useState(10)\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [temp, setTemp] = useState([])\n  const [aksi, setAksi] = useState(0)\n  const [valFilterPangkat, setFilterPangkat] = useState({val: ''})\n\n  useEffect(() => {\n    async function fetchUsers(page: number) {\n      setLoading(true)\n      const response = await axios.get(\n        `${STATUS_KENAIKAN_PANGKAT_URL}/filter/${qParamFind.strparam}`\n      )\n      setData(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchUsers(1)\n  }, [qParamFind, perPage])\n\n  const fetchData = async (page: number) => {\n    setLoading(true)\n    const response = await axios.get(`${STATUS_KENAIKAN_PANGKAT_URL}/filter/${qParamFind.strparam}`)\n    setData(response.data.data)\n    setTotalRows(response.data.total_data)\n    setLoading(false)\n\n    return [data, setData] as const\n  }\n  const handlePerRowsChange = async (newPerPage: number, page: number) => {\n    setLoading(true)\n    const response = await axios.get(`${STATUS_KENAIKAN_PANGKAT_URL}/filter/${qParamFind.strparam}`)\n    setData(response.data.data)\n    setPerPage(newPerPage)\n    setLoading(false)\n  }\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterPangkat.val !== '') {\n      uriParam += `${valFilterPangkat.val}`\n    }\n\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handlePageChange = (page: number) => {\n    fetchData(page)\n  }\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const handleChangeInputPangkat = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterPangkat({val: event.target.value})\n  }\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n  let no = 1\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n      minWidth: '30px',\n      cell: (record: any) => {\n        return <div className='mt-2 mb-2'>{no++}</div>\n      },\n    },\n    {\n      name: 'Status Kenaikan Pangkat',\n      selector: (row: any) => row.status_kenaikan_pangkat,\n      sortable: true,\n      sortField: 'status_kenaikan_pangkat',\n      minWidth: '100px',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate(\n                          '/master/statuskenaikanpangkat/lihat-status-kenaikan-pangkat/' +\n                            record.id,\n                          {replace: true}\n                        )\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => doEdit(record.id)}>Ubah</Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const formik = useFormik({\n    initialValues: {\n      ...valuesFormik,\n    },\n    validationSchema: validatorForm,\n    enableReinitialize: true,\n    onSubmit: async (values, {setSubmitting}) => {\n      setSubmitting(true)\n      const bodyparam: FormInput = {\n        status_kenaikan_pangkat: valuesFormik?.status_kenaikan_pangkat,\n      }\n      try {\n        if (aksi === 0) {\n          const response = await axios.post(`${STATUS_KENAIKAN_PANGKAT_URL}/create`, bodyparam)\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchData(1)\n            setSubmitting(false)\n          }\n        } else {\n          const response = await axios.put(\n            `${STATUS_KENAIKAN_PANGKAT_URL}/update/${idEditData.id}`,\n            bodyparam\n          )\n          if (response) {\n            Swal.fire({\n              icon: 'success',\n              text: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            handleClose()\n            fetchData(1)\n            setSubmitting(false)\n          }\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          text: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  // UPDATE\n  const [idEditData, setIdEditData] = useState<{id: number}>({id: 0})\n  const getDetail = async (idparam: any) => {\n    const {data} = await axios.get(`${STATUS_KENAIKAN_PANGKAT_URL}/findone/${parseInt(idparam)}`)\n    setIdEditData((prevstate) => ({\n      ...prevstate,\n      id: parseInt(idparam),\n    }))\n    setValuesFormik((prevstate) => ({\n      ...prevstate,\n      ...data.data,\n    }))\n  }\n  //End UPDATE\n  //Detail\n  const doAdd = () => {\n    setShow(true)\n    setAksi(0)\n    setValuesFormik({\n      status_kenaikan_pangkat: '',\n    })\n  }\n\n  const doEdit = (id: any) => {\n    setShow(true)\n    setAksi(1)\n    getDetail(id)\n  }\n  //End Detail\n  // DELETE\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      text: 'Anda yakin ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n      color: '#000000',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const bodyParam = {\n          data: {\n            deleted_by: 0,\n          },\n        }\n        const response = await axios.delete(\n          `${STATUS_KENAIKAN_PANGKAT_URL}/delete/${id}`,\n          bodyParam\n        )\n        if (response) {\n          Swal.fire({\n            icon: 'success',\n            text: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n          fetchData(1)\n        } else {\n          Swal.fire({\n            icon: 'error',\n            text: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n            color: '#000000',\n          })\n        }\n      }\n    })\n  }\n  // END DELET\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection)\n    setLoading(true)\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection))\n      setLoading(false)\n    }, 100)\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='row g-8 mt-2 ms-5 me-5'>\n          <label>\n            <h3> Status Kenaikan Pangkat</h3>\n          </label>\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n            <input\n              type='text'\n              className='form-control form-control form-control-solid'\n              name='q'\n              value={valFilterPangkat.val}\n              onChange={handleChangeInputPangkat}\n              placeholder='Status Kenaikan Pangkat'\n            />\n          </div>\n          <div className='col-xxl-3 col-lg-3 col-md-3 col-sm-12'>\n            <Link to='#' onClick={handleFilter}>\n              {/* 1 */}\n              <button className='btn btn-light-primary me-2'>\n                <KTSVG path='/media/icons/duotune/general/gen021.svg' className='svg-icon-2' />\n                Cari\n              </button>\n            </Link>\n          </div>\n          <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n            <Link to='#i'>\n              <button className='btn btn-primary me-2' onClick={doAdd}>\n                <i className='fa-solid fa-plus'></i>\n                Tambah\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n      <>\n        <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false} centered>\n          <form onSubmit={formik.handleSubmit}>\n            <Modal.Header closeButton>\n              {/* <Modal.Title {aksi === 0 ? 'Tambah' : 'Ubah'}>Tambah Pangkat</Modal.Title> */}\n            </Modal.Header>\n            <Modal.Body>\n              <div className='mb-3 form-control-solid'>\n                <div className='form-group'>\n                  <Form.Label>Status Kenaikan Pangkat</Form.Label>\n                  <Form.Control\n                    name='status_kenaikan_pangkat'\n                    className='form-control form-control-solid'\n                    onChange={handleChangeFormik}\n                    value={valuesFormik?.status_kenaikan_pangkat}\n                    placeholder='Status Kenaikan Pangkat'\n                  />\n                </div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant='secondary' onClick={handleClose}>\n                Close\n              </Button>\n              <Button variant='primary' type='submit'>\n                <i className='fa-solid fa-paper-plane'></i>\n                Simpan\n              </Button>\n            </Modal.Footer>\n          </form>\n        </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n        <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          customStyles={customStyles}\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n          theme={calculatedMode === 'dark' ? 'darkMetro' : 'light'}\n        />\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.')\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.')\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  status_kenaikan_pangkat?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  status_kenaikan_pangkat?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL\nexport const STATUS_KENAIKAN_PANGKAT_URL = `${API_URL}/master/status_kenaikan_pangkat`\n\nexport function LihatStatusKenaikanPangkat() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${STATUS_KENAIKAN_PANGKAT_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        status_kenaikan_pangkat: jsonD.status_kenaikan_pangkat,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='status_kenaikan_pangkat'\n                          className='form-control form-control-solid'\n                          value={\n                            valuesFormikExist?.status_kenaikan_pangkat\n                              ? valuesFormikExist?.status_kenaikan_pangkat\n                              : ''\n                          }\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/StatusKenaikanPangkat'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport {Navigate, Route, Routes, Outlet} from 'react-router-dom'\nimport {PageLink, PageTitle} from '../../../_metronic/layout/core'\n\nimport {Kota} from './components/Kota'\nimport {LihatKota} from './components/Lihat-master/LihatKota'\nimport {UpdateKota} from './components/Update-master/UpdateKota'\nimport {TambahKota} from './components/Tambah-master/TambahKota'\n\nimport {Kecamatan} from './components/Kecamatan'\nimport {LihatKecamatan} from './components/Lihat-master/LihatKecamatan'\nimport {UpdateKecamatan} from './components/Update-master/UpdateKecamatan'\nimport {TambahKecamatan} from './components/Tambah-master/TambahKecamatan'\n\nimport {Kelurahan} from './components/Kelurahan'\nimport {LihatKelurahan} from './components/Lihat-master/LihatKelurahan'\nimport {UpdateKelurahan} from './components/Update-master/UpdateKelurahan'\nimport {TambahKelurahan} from './components/Tambah-master/TambahKelurahan'\n\nimport {JenisKegiatan} from './components/JenisKegiatan'\nimport {LihatJenisKegiatan} from './components/Lihat-master/LihatJenisKegiatan'\nimport {UpdateJenisKegiatan} from './components/Update-master/UpdateJenisKegiatan'\nimport {TambahJenisKegiatan} from './components/Tambah-master/TambahJenisKegiatan'\n\nimport {JenisKejadian} from './components/JenisKejadian'\nimport {LihatJenisKejadian} from './components/Lihat-master/LihatJenisKejadian'\nimport {UpdateJenisKejadian} from './components/Update-master/UpdateJenisKejadian'\nimport {TambahJenisKejadian} from './components/Tambah-master/TambahJenisKejadian'\n\nimport {JenisPelanggaran} from './components/JenisPelanggaran'\nimport {LihatJenisPelanggaran} from './components/Lihat-master/LihatJenisPelanggaran'\n\nimport {JenisPertolongan} from './components/JenisPertolongan'\nimport {LihatJenisPertolongan} from './components/Lihat-master/LihatJenisPertolongan'\nimport {UpdateJenisPertolongan} from './components/Update-master/UpdateJenisPertolongan'\n\nimport {JenisPerdaPerkada} from './components/JenisPerdaPerkada'\nimport {LihatJenisPerdaPerkada} from './components/Lihat-master/LihatJenisPerdaPerkada'\nimport {UpdateJenisPerdaPerkada} from './components/Update-master/UpdateJenisPerdaPerkada'\nimport {TambahJenisPerdaPerkada} from './components/Tambah-master/TambahJenisPerdaPerkada'\n\nimport {JenisPenindakan} from './components/JenisPenindakan'\nimport {LihatJenisPenindakan} from './components/Lihat-master/LihatJenisPenindakan'\nimport {UpdateJenisPenindakan} from './components/Update-master/UpdateJenisPenindakan'\n\nimport {KorbanJiwa} from './components/KorbanJiwa'\nimport {LihatKorbanJiwa} from './components/Lihat-master/LihatKorbanJiwa'\nimport {UpdateKorbanJiwa} from './components/Update-master/UpdateKorbanJiwa'\nimport {TambahKorbanJiwa} from './components/Tambah-master/TambahKorbanJiwa'\n\nimport {KorbanMaterial} from './components/KorbanMaterial'\nimport {LihatKorbanMaterial} from './components/Lihat-master/LihatKorbanMaterial'\nimport {UpdateKorbanMaterial} from './components/Update-master/UpdateKorbanMaterial'\n\nimport {JenisBantuan} from './components/JenisBantuan'\nimport {LihatJenisBantuan} from './components/Lihat-master/LihatJenisBantuan'\nimport {UpdateJenisBantuan} from './components/Update-master/UpdateJenisBantuan'\n\nimport {InstansiTerkait} from './components/InstansiTerkait'\n\nimport {KondisiSaranaPrasarana} from './components/KondisiSaranaPrasarana'\nimport {LihatKondisiSaranaPrasarana} from './components/Lihat-master/LihatKondisiSaranaPrasarana'\nimport {UpdateKondisiSaranaPrasarana} from './components/Update-master/UpdateKondisiSaranaPrasarana'\n\nimport {StatusSaranaPrasarana} from './components/StatusSaranaPrasarana'\nimport {LihatStatusSaranaPrasarana} from './components/Lihat-master/LihatStatusSaranaPrasarana'\nimport {UpdateStatusSaranaPrasarana} from './components/Update-master/UpdateStatusSaranaPrasarana'\n\nimport {Agama} from './components/Agama'\nimport {LihatAgama} from './components/Lihat-master/LihatAgama'\nimport {UpdateAgama} from './components/Update-master/UpdateAgama'\nimport {TambahAgama} from './components/Tambah-master/TambahAgama'\n\nimport {Pangkat} from './components/Pangkat'\nimport {UpdatePangkat} from './components/Update-master/UpdatePangkat'\nimport {LihatPangkat} from './components/Lihat-master/LihatPangkat'\nimport {TambahPangkat} from './components/Tambah-master/TambahPangkat'\n\nimport {TempatPelaksanaan} from './components/TempatPelaksanaan'\nimport {UpdateTempatPelaksanaan} from './components/Update-master/UpdateTempatPelaksanaan'\nimport {LihatTempatPelaksanaan} from './components/Lihat-master/LihatTempatPelaksanaan'\n\nimport {SKPD} from './components/SKPD'\nimport {UpdateSKPD} from './components/Update-master/UpdateSKPD'\nimport {LihatSKPD} from './components/Lihat-master/LihatSKPD'\n\nimport {Pendidikan} from './components/Pendidikan'\nimport {LihatPendidikan} from './components/Lihat-master/LihatPendidikan'\n\nimport {JenisSaranaPrasarana} from './components/JenisSaranaPrasarana'\nimport {UpdateJenisSaranaPrasarana} from './components/Update-master/UpdateJenisSaranaPrasarana'\nimport {LihatJenisSaranaPrasarana} from './components/Lihat-master/LihatJenisSaranaPrasarana'\n\nimport {Golongan} from './components/Golongan'\n\nimport {Eselon} from './components/Eselon'\nimport {UpdateEselon} from './components/Update-master/UpdateEselon'\nimport {LihatEselon} from './components/Lihat-master/LihatEselon'\n\nimport {Jabatan} from './components/Jabatan'\nimport {LihatJabatan} from './components/Lihat-master/LihatJabatan'\nimport {TambahJabatan} from './components/Tambah-master/TambahJabatan'\n\nimport {SumberInformasi} from './components/SumberInformasi'\nimport {UpdateSumberInformasi} from './components/Update-master/UpdateSumberInformasi'\nimport {LihatSumberInformasi} from './components/Lihat-master/LihatSumberInformasi'\n\nimport {JenisKekerasan} from './components/JenisKekerasan'\nimport {UpdateJenisKekerasan} from './components/Update-master/UpdateJenisKekerasan'\nimport {LihatJenisKekerasan} from './components/Lihat-master/LihatJenisKekerasan'\n\n// import {JenisPenertiban} from './components/JenisPenertiban'\n// import {UpdateJenisPenertiban} from './components/Update-master/UpdateJenisPenertiban'\n// import {LihatJenisPenertiban} from './components/Lihat-master/LihatJenisPenertiban'\n\nimport {JenisPenyelesaian} from './components/JenisPenyelesaian'\n\nimport {StatusKenaikanPangkat} from './components/StatusKenaikanPangkat'\nimport {LihatStatusKenaikanPangkat} from './components/Lihat-master/LihatStatusKenaikanPangkat'\n\nconst masterBreadCrumbs: Array<PageLink> = [\n  {\n    title: 'Master',\n    path: '/master/InformasiDataMaster',\n    isSeparator: false,\n    isActive: false,\n  },\n  {\n    title: '',\n    path: '',\n    isSeparator: true,\n    isActive: false,\n  },\n]\n\nconst MasterPage: React.FC = () => {\n  return (\n    <Routes>\n      <Route\n        element={\n          <>\n            <Outlet />\n          </>\n        }\n      >\n        <Route\n          path='Kota'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kota</PageTitle>\n              <Kota />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/UpdateKecamatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kecamatan</PageTitle>\n              <UpdateKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/LihatKecamatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kecamatan</PageTitle>\n              <LihatKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan/TambahKecamatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kecamatan</PageTitle>\n              <TambahKecamatan />\n            </>\n          }\n        />\n        <Route\n          path='SKPD'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>SKPD</PageTitle>\n              <SKPD />\n            </>\n          }\n        />\n        <Route\n          path='SKPD/UpdateSKPD/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update SKPD</PageTitle>\n              <UpdateSKPD />\n            </>\n          }\n        />\n        <Route\n          path='SKPD/LihatSKPD/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat SKPD</PageTitle>\n              <LihatSKPD />\n            </>\n          }\n        />\n        <Route\n          path='Pendidikan/LihatPendidikan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Pendidikan</PageTitle>\n              <LihatPendidikan />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Pangkat</PageTitle>\n              <Pangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/UpdatePangkat/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Pangkat</PageTitle>\n              <UpdatePangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/LihatPangkat/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Pangkat</PageTitle>\n              <LihatPangkat />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat/TambahPangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Pangkat</PageTitle>\n              <TambahPangkat />\n            </>\n          }\n        />\n\n        <Route\n          path='TempatPelaksanaan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tempat Pelaksanaan</PageTitle>\n              <TempatPelaksanaan />\n            </>\n          }\n        />\n\n        <Route\n          path='TempatPelaksanaan/UpdateTempatPelaksanaan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update TempatPelaksanaan</PageTitle>\n              <UpdateTempatPelaksanaan />\n            </>\n          }\n        />\n        <Route\n          path='TempatPelaksanaan/LihatTempatPelaksanaan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat TempatPelaksanaan</PageTitle>\n              <LihatTempatPelaksanaan />\n            </>\n          }\n        />\n\n        <Route\n          path='Golongan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Golongan </PageTitle>\n              <Golongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jenis Sarana Prasarana </PageTitle>\n              <JenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana/UpdateJenisSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Sarana Prasarana</PageTitle>\n              <UpdateJenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana/LihatJenisSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Sarana Prasarana</PageTitle>\n              <LihatJenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='KondisiSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Kondisi Sarana Prasarana </PageTitle>\n              <KondisiSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='KondisiSaranaPrasarana/UpdateKondisiSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kondisi Sarana Prasarana</PageTitle>\n              <UpdateKondisiSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='KondisiSaranaPrasarana/LihatKondisiSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kondisi Sarana Prasarana</PageTitle>\n              <LihatKondisiSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='StatusSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Status Sarana Prasarana </PageTitle>\n              <StatusSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='StatusSaranaPrasarana/UpdateStatusSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Status Sarana Prasarana</PageTitle>\n              <UpdateStatusSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='StatusSaranaPrasarana/LihatStatusSaranaPrasarana/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Status Sarana Prasarana</PageTitle>\n              <LihatStatusSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kecamatan</PageTitle>\n              <Kecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kota/UpdateKota/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kota</PageTitle>\n              <UpdateKota />\n            </>\n          }\n        />\n        <Route\n          path='Kota/LihatKota/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kota</PageTitle>\n              <LihatKota />\n            </>\n          }\n        />\n        <Route\n          path='Kota/TambahKota'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kota</PageTitle>\n              <TambahKota />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kelurahan</PageTitle>\n              <Kelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/UpdateKelurahan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kelurahan</PageTitle>\n              <UpdateKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/TambahKelurahan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kelurahan</PageTitle>\n              <TambahKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan/LihatKelurahan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kelurahan</PageTitle>\n              <LihatKelurahan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kegiatan </PageTitle>\n              <JenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/UpdateJenisKegiatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisKegiatan</PageTitle>\n              <UpdateJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/TambahJenisKegiatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Kegiatan</PageTitle>\n              <TambahJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan/LihatJenisKegiatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Kegiatan</PageTitle>\n              <LihatJenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kejadian </PageTitle>\n              <JenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/UpdateJenisKejadian/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Kejadian</PageTitle>\n              <UpdateJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/LihatJenisKejadian/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Kejadian</PageTitle>\n              <LihatJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian/TambahJenisKejadian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Kejadian</PageTitle>\n              <TambahJenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='Agama'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Agama</PageTitle>\n              <Agama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/UpdateAgama/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Agama</PageTitle>\n              <UpdateAgama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/LihatAgama/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Agama</PageTitle>\n              <LihatAgama />\n            </>\n          }\n        />\n        <Route\n          path='Agama/TambahAgama'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Agama</PageTitle>\n              <TambahAgama />\n            </>\n          }\n        />\n        <Route\n          path='Jabatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jabatan </PageTitle>\n              <Jabatan />\n            </>\n          }\n        />\n        <Route\n          path='Jabatan/TambahJabatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jabatan </PageTitle>\n              <TambahJabatan />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/update-jabatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Agama</PageTitle>\n              <UpdateAgama />\n            </>\n          }\n        />\n        <Route\n          path='jabatan/lihat-jabatan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jabatan</PageTitle>\n              <LihatJabatan />\n            </>\n          }\n        />\n        <Route\n          path='StatusKenaikanPangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Status Kenaikan Pangkat </PageTitle>\n              <StatusKenaikanPangkat />\n            </>\n          }\n        />\n        <Route\n          path='statuskenaikanpangkat/lihat-status-kenaikan-pangkat/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat StatusKenaikanPangkat</PageTitle>\n              <LihatStatusKenaikanPangkat />\n            </>\n          }\n        />\n        <Route\n          path='Eselon'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Eselon </PageTitle>\n              <Eselon />\n            </>\n          }\n        />\n        <Route\n          path='Eselon/UpdateEselon/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Eselon</PageTitle>\n              <UpdateEselon />\n            </>\n          }\n        />\n        <Route\n          path='Eselon/LihatEselon/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Eselon</PageTitle>\n              <LihatEselon />\n            </>\n          }\n        />\n\n        <Route\n          path='Pendidikan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Pendidikan </PageTitle>\n              <Pendidikan />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Sumber Informasi </PageTitle>\n              <SumberInformasi />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi/UpdateSumberInformasi/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Sumber Informasi</PageTitle>\n              <UpdateSumberInformasi />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi/LihatSumberInformasi/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Sumber Informasi</PageTitle>\n              <LihatSumberInformasi />\n            </>\n          }\n        />\n        {/* <Route\n          path='SumberInformasi/TambahSumberInformasi/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Sumber Informasi</PageTitle>\n              <TambahSumberInformasi />\n            </>\n          }\n        /> */}\n        <Route\n          path='JenisPelanggaran'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pelanggaran</PageTitle>\n              <JenisPelanggaran />\n            </>\n          }\n        />\n        <Route\n          path='JenisPelanggaran/LihatJenisPelanggaran/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Pelanggaran</PageTitle>\n              <LihatJenisPelanggaran />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pertolongan</PageTitle>\n              <JenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan/UpdateJenisPertolongan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Pertolongan</PageTitle>\n              <UpdateJenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan/LihatJenisPertolongan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Pertolongan</PageTitle>\n              <LihatJenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penindakan</PageTitle>\n              <JenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan/UpdateJenisPenindakan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Penindakan</PageTitle>\n              <UpdateJenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan/LihatJenisPenindakan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Penindakan</PageTitle>\n              <LihatJenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPerdaPerkada'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Perda / Perkada</PageTitle>\n              <JenisPerdaPerkada />\n            </>\n          }\n        />\n        <Route\n          path='JenisPerdaPerkada/LihatJenisPerdaPerkada/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Perda / Perkada</PageTitle>\n              <LihatJenisPerdaPerkada />\n            </>\n          }\n        />\n        <Route\n          path='JenisPerdaPerkada/UpdateJenisPerdaPerkada/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Perda / Perkada</PageTitle>\n              <UpdateJenisPerdaPerkada />\n            </>\n          }\n        />\n        <Route\n          path='JenisPerdaPerkada/TambahJenisPerdaPerkada'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Jenis Perda / Perkada</PageTitle>\n              <TambahJenisPerdaPerkada />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kekerasan</PageTitle>\n              <JenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan/UpdateJenisKekerasan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisKekerasan</PageTitle>\n              <UpdateJenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan/LihatJenisKekerasan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat JenisKekerasan</PageTitle>\n              <LihatJenisKekerasan />\n            </>\n          }\n        />\n        {/* <Route\n          path='JenisPenertiban'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penertiban</PageTitle>\n              <JenisPenertiban />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenertiban/UpdateJenisPenertiban/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Jenis Penertiban</PageTitle>\n              <UpdateJenisPenertiban />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenertiban/LihatJenisPenertiban/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Jenis Penertiban</PageTitle>\n              <LihatJenisPenertiban />\n            </>\n          }\n        /> */}\n        <Route\n          path='JenisPenyelesaian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penyelesaian</PageTitle>\n              <JenisPenyelesaian />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Jiwa </PageTitle>\n              <KorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/UpdateKorbanJiwa/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update KorbanJiwa</PageTitle>\n              <UpdateKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/LihatKorbanJiwa/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat KorbanJiwa</PageTitle>\n              <LihatKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa/TambahKorbanJiwa'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah KorbanJiwa</PageTitle>\n              <TambahKorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Material</PageTitle>\n              <KorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial/UpdateKorbanMaterial/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update KorbanMaterial</PageTitle>\n              <UpdateKorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial/LihatKorbanMaterial/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat KorbanMaterial</PageTitle>\n              <LihatKorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Bantuan</PageTitle>\n              <JenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan/UpdateJenisBantuan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update JenisBantuan</PageTitle>\n              <UpdateJenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan/LihatJenisBantuan/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat JenisBantuan</PageTitle>\n              <LihatJenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='InstansiTerkait'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Instansi Terkait</PageTitle>\n              <InstansiTerkait />\n            </>\n          }\n        />\n\n        <Route index element={<Navigate to='/master' />} />\n      </Route>\n    </Routes>\n  )\n}\n\nexport default MasterPage"],"names":["KOTA_URL","process","LihatKota","id","useParams","React","valuesFormikExist","setValuesFormikExist","useEffect","fetchData","axios","response","jsonD","data","paramValue","kota","kode","updated_by","prevstate","className","Form","name","value","readOnly","to","UpdateKota","navigate","useNavigate","useState","selectedFile","valuesFormik","setValuesFormik","formik","useFormik","initialValues","onSubmit","values","formData","FormData","bodyparam","append","console","log","Swal","icon","title","showConfirmButton","timer","replace","error","handleSubmit","onChange","event","prevValues","target","type","TambahKota","created_by","return_id","KECAMATAN_URL","LihatKecamatan","kecamatan","kode_kota","kode_kecamatan","UpdateKecamatan","handleChangeFormik","toUpperCase","TambahKecamatan","KELURAHAN_URL","LihatKelurahan","kode_kelurahan","kelurahan","UpdateKelurahan","TambahKelurahan","JENIS_KEGIATAN_URL","createTheme","text","primary","secondary","background","default","context","divider","action","button","hover","disabled","systemMode","ThemeModeComponent","customStyles","rows","style","minHeight","headCells","paddingLeft","paddingRight","cells","validatorForm","Yup","shape","jenis_kegiatan","required","JenisKegiatan","mode","useThemeMode","calculatedMode","val","valFilterJenisKegiatan","setFilterJenisKegiatan","temp","setTemp","filterTemp","setFilterTemp","loading","setLoading","strparam","qParamFind","setUriFind","show","setShow","handleClose","totalRows","setTotalRows","perPage","handleFilter","prevState","filterData","filter","i","nama","toLowerCase","LoadingAnimation","props","columns","selector","row","serial","sortable","cell","sortField","record","Fragment","DropdownButton","map","DropdownType","idx","as","ButtonGroup","size","variant","Dropdown","href","onClick","doEdit","konfirDel","fetchUsers","page","total_data","timeout","setTimeout","items","Array","from","forEach","item","index","clearTimeout","fetchDT","aksi","setAksi","validationSchema","enableReinitialize","setSubmitting","idEditData","setIdEditData","getDetail","idparam","parseInt","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","color","then","result","isConfirmed","bodyParam","deleted_by","placeholder","path","Modal","backdrop","keyboard","centered","closeButton","clsx","touched","errors","role","length","progressPending","progressComponent","pagination","paginationTotalRows","theme","noDataComponent","LihatJenisKegiatan","UpdateJenisKegiatan","TambahJenisKegiatan","JENIS_KEJADIAN_URL","jenis_kejadian","JenisKejadian","valFilterJenisKejadian","setFilterJenisKejadian","width","onHide","LihatJenisKejadian","UpdateJenisKejadian","TambahJenisKejadian","JENIS_PELANGGARAN_URL","jenis_pelanggaran","JenisPelanggaran","valFilterJenisPelanggaran","setFilterJenisPelanggaran","uriParam","align","kode_penertiban","htmlFor","LihatJenisPelanggaran","JENIS_PERTOLONGAN_URL","jenis_pertolongan","JenisPertolongan","valFilterJenisPertolongan","setFilterJenisPertolongan","LihatJenisPertolongan","UpdateJenisPertolongan","JENIS_PERDA_PERKADA_URL","jenis_perda_perkada","JenisPerdaPerkada","valFilterJudul","setFilterJudul","valFilterDeskripsi","setFilterDeskripsi","judul","deskripsi","pasal","LihatJenisPerdaPerkada","UpdateJenisPerdaPerkada","TambahJenisPerdaPerkada","JENIS_PENINDAKAN_URL","jenis_penindakan","JenisPenindakan","valFilterJenisPenindakan","setFilterJenisPenindakan","LihatJenisPenindakan","UpdateJenisPenindakan","JENIS_KORBAN_JIWA_URL","jenis_korban_jiwa","KorbanJiwa","valFilterKorbanJiwa","setFilterKorbanJiwa","menuPosition","LihatKorbanJiwa","UpdateKorbanJiwa","TambahKorbanJiwa","JENIS_KORBAN_MATERIAL_URL","jenis_korban_material","KorbanMaterial","valFilterKorbanMaterial","setFilterKorbanMaterial","LihatKorbanMaterial","UpdateKorbanMaterial","JENIS_BANTUAN_URL","jenis_bantuan","JenisBantuan","valFilterJenisBantuan","setFilterJenisBantuan","LihatJenisBantuan","UpdateJenisBantuan","SARANA_PRASARANA_URL","InstansiTerkait","jenis_sarana_prasarana","status_sarana_prasarana","jumlah","kondisi","keterangan","dokumentasi","setData","total","Button","KONDISI_SARANA_PRASARANA_URL","kondisi_sarana_prasarana","KondisiSaranaPrasarana","valFilterKondisiSaranaPrasarana","setFilterKondisiSaranaPrasarana","LihatKondisiSaranaPrasarana","UpdateKondisiSaranaPrasarana","STATUS_SARANA_PRASARANA_URL","StatusSaranaPrasarana","valFilterStatusSaranaPrasarana","setFilterStatusSaranaPrasarana","LihatStatusSaranaPrasarana","UpdateStatusSaranaPrasarana","AGAMA_URL","agama","Agama","valFilterAgama","setFilterAgama","LihatAgama","UpdateAgama","TambahAgama","PANGKAT_URL","pangkat","Pangkat","valFilterPangkat","setFilterPangkat","menuposition","UpdatePangkat","LihatPangkat","TambahPangkat","BIDANG_WILAYAH_URL","kategori","TempatPelaksanaan","valFilterTempatPelaksanaan","setFilterTempatPelaksanaan","UpdateTempatPelaksanaan","TEMPAT_PELAKSANA_URL","LihatTempatPelaksanaan","SKPD_URL","skpd","SKPD","valFilterSKPD","setFilterSKPD","UpdateSKPD","LihatSKPD","PENDIDIKAN_URL","pendidikan","Pendidikan","valFilterPendidikan","setFilterPendidikan","LihatPendidikan","JENIS_SARANA_PRASARANA_URL","JenisSaranaPrasarana","valFilterJenisSaranaPrasarana","setFilterJenisSaranaPrasarana","UpdateJenisSaranaPrasarana","LihatJenisSaranaPrasarana","GOLONGAN_URL","golongan","Golongan","valFilterGolongan","setFilterGolongan","doDetail","ESELON_URL","eselon","Eselon","valFilterEselon","setFilterEselon","UpdateEselon","LihatEselon","JABATAN_URL","status","Jabatan","setPerPage","valFilterJabatan","setFilterJabatan","handlePerRowsChange","newPerPage","no","minWidth","jabatan","wrap","paginationServer","sortServer","onSort","column","sortDirection","Error","orderBy","onChangeRowsPerPage","onChangePage","LihatJabatan","TambahJabatan","isSubmitting","isValid","SUMBER_INFORMASI_URL","sumber_informasi","SumberInformasi","valFilterSumberInformasi","setFilterSumberInformasi","UpdateSumberInformasi","LihatSumberInformasi","JENIS_KEKERASAN_URL","jenis_kekerasan","JenisKekerasan","valFilterJenisKekerasan","setFilterJenisKekerasan","UpdateJenisKekerasan","LihatJenisKekerasan","JenisPenyelesaian","STATUS_KENAIKAN_PANGKAT_URL","status_kenaikan_pangkat","StatusKenaikanPangkat","LihatStatusKenaikanPangkat","masterBreadCrumbs","isSeparator","isActive","element","breadcrumbs","Kota","Kecamatan","Kelurahan"],"sourceRoot":""}