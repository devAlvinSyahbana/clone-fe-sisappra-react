{"version":3,"file":"static/js/339.fe377265.chunk.js","mappings":"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","sources":["app/modules/master/components/Kota.tsx","app/modules/master/components/Lihat-master/LihatKota.tsx","app/modules/master/components/Update-master/UpdateKota.tsx","app/modules/master/components/Tambah-master/TambahKota.tsx","app/modules/master/components/Kecamatan.tsx","app/modules/master/components/Kelurahan.tsx","app/modules/master/components/JenisKegiatan.tsx","app/modules/master/components/JenisKejadian.tsx","app/modules/master/components/JenisPelanggaran.tsx","app/modules/master/components/JenisPertolongan.tsx","app/modules/master/components/JenisPerdaPerkada.tsx","app/modules/master/components/JenisPenindakan.tsx","app/modules/master/components/KorbanJiwa.tsx","app/modules/master/components/KorbanMaterial.tsx","app/modules/master/components/JenisBantuan.tsx","app/modules/master/components/InstansiTerkait.tsx","app/modules/master/components/Agama.tsx","app/modules/master/components/Pangkat.tsx","app/modules/master/components/TempatPelaksana.tsx","app/modules/master/components/SKPD.tsx","app/modules/master/components/Pendidikan.tsx","app/modules/master/components/JenisSaranaPrasarana.tsx","app/modules/master/components/Golongan.tsx","app/modules/master/components/Eselon.tsx","app/modules/master/components/Jabatan.tsx","app/modules/master/components/SumberInformasi.tsx","app/modules/master/components/JenisKekerasan.tsx","app/modules/master/components/JenisPenerbitan.tsx","app/modules/master/components/JenisPenyelesaian.tsx","app/modules/master/MasterPage.tsx"],"sourcesContent":["import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Swal from 'sweetalert2'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\n\nexport interface FormInput {\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/master/kota\n\nexport function Kota() {\n  const navigate = useNavigate()\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const [valFilterKota, setFilterKota] = useState({val: ''})\n  const [qParamFind, setUriFind] = useState({strparam: ''})\n\n  useEffect(() => {\n    fetchUsers(1)\n  }, [])\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className='alert alert-primary d-flex align-items-center p-5 mb-10'>\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className='spinner-border spinner-border-xl align-middle me-3'></span>\n          <div className='d-flex flex-column'>\n            <h5 className='mb-1'>Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n  const konfirDel = (id: number) => {\n    Swal.fire({\n      title: 'Anda yakin?',\n      text: 'Ingin menghapus data ini',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya!',\n      cancelButtonText: 'Tidak!',\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        const response = await axios.delete(`${KOTA_URL}/delete/${id}`)\n        if (response) {\n          fetchUsers(1)\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil dihapus',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Data gagal dihapus, harap mencoba lagi',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n        }\n      }\n    })\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Kota',\n      selector: (row: any) => row.kota,\n      sortable: true,\n      sortField: 'kota',\n      width: '400px',\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: 'Action',\n      className: 'action',\n      align: 'left',\n      cell: (record: any) => {\n        return (\n          <Fragment>\n            <div className='mb-2'>\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size='sm'\n                    variant='light'\n                    title='Aksi'\n                  >\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kota/LihatKota/' + record.id, {replace: true})\n                      }\n                    >\n                      Detail\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      href='#'\n                      onClick={() =>\n                        navigate('/master/Kota/UpdateKota/' + record.id, {replace: true})\n                      }\n                    >\n                      Ubah\n                    </Dropdown.Item>\n                    <Dropdown.Item href='#' onClick={() => konfirDel(record.id)}>\n                      Hapus\n                    </Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const handleFilter = async () => {\n    let uriParam = ''\n    if (valFilterKota.val !== '') {\n      uriParam += `&kota=${valFilterKota.val}`\n    }\n    setUriFind((prevState) => ({...prevState, strparam: uriParam}))\n  }\n\n  const handleChangeInputKota = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setFilterKota({val: event.target.value})\n  }\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [totalRows, setTotalRows] = useState(0)\n  const [perPage, setPerPage] = useState(10)\n\n  const [temp, setTemp] = useState([])\n\n  useEffect(() => {\n    async function fetchDT(page: number) {\n      setLoading(true)\n      const response = await axios.get(`${KOTA_URL}/findone-by-kota/:kota`)\n      setData(response.data.data)\n      setTotalRows(response.data.total_data)\n      setLoading(false)\n    }\n    fetchDT(1)\n  }, [qParamFind, perPage])\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true)\n    const value = await axios.get(KOTA_URL + '/find')\n\n    setTemp(value.data.data)\n    console.log('cek kota:', temp)\n\n    const response = await axios.get(\n      `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n    )\n    setData(response.data.data)\n\n    setTotalRows(response.data.total)\n    setLoading(false)\n    console.log('cek ahhh :', data)\n    return [data, setData] as const\n  }\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n          <label htmlFor='' className='mb-3'>\n            Kota\n          </label>\n          <input\n            type='text'\n            className='form-control form-control form-control-solid'\n            name='kota'\n            value={valFilterKota.val}\n            onChange={handleChangeInputKota}\n            placeholder='Kota'\n          />\n        </div>\n      </div>\n      <div className='row g-8 mt-2 ms-5 me-5'>\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary' onClick={handleFilter}>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n\n        <div className='d-flex justify-content-end col-md-6 col-lg-6 col-sm-12'>\n          <Link to='/master/Kota/TambahKota'>\n            <button className='btn btn-primary me-5'>\n              <i className='fa-solid fa-plus'></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n        {/* onSubmit: async (values) => {\n      const bodyparam: FormInput = {}\n      valuesFormik?.kota ? (bodyparam.kota = valuesFormik.kota) : delete bodyparam.kota\n\n      try {\n        const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\n        if (response) {\n          fetchUsers(1)\n          handleClose()\n          setValuesFormik({})\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    }, */}\n      </>\n\n      <div className='table-responsive mt-30 ms-30 me-1'>\n        <DataTable columns={columns} data={temp} pagination />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\n\nexport interface FormInput {\n  kota?: string\n  kode?: string\n  updated_by?: string\n}\n\nexport interface SelectOption {\n  readonly value: string\n  readonly label: string\n  readonly color: string\n  readonly isFixed?: boolean\n  readonly isDisabled?: boolean\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/sarana-prasarana\n\nexport function LihatKota() {\n  const {id} = useParams()\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KOTA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kota: jsonD.kota,\n        kode: jsonD.kode,\n        updated_by: '',\n      }\n      setValuesFormikExist((prevstate: any) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormikExist, id])\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kota ? valuesFormikExist?.kota : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kode</Form.Label>\n                        <Form.Control\n                          name='kode'\n                          className='form-control form-control-solid'\n                          value={valuesFormikExist?.kode ? valuesFormikExist?.kode : ''}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kota'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate, useParams} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kota?: string\n  updated_by?: number\n}\n\ninterface GetDataInterface {\n  id?: number\n  kode?: string\n  kota?: string\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000//master/kota\n\nexport function UpdateKota() {\n  const navigate = useNavigate()\n  const {id} = useParams()\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n  const [valuesFormikExist, setValuesFormikExist] = React.useState<FormInput>({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${KOTA_URL}/findone/${id}`)\n      const jsonD: GetDataInterface = response.data.data\n      const paramValue: FormInput = {\n        kota: jsonD.kota,\n        updated_by: 0,\n      }\n      setValuesFormikExist((prevstate) => ({...prevstate, ...paramValue}))\n    }\n    fetchData()\n  }, [valuesFormik, id])\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kota: '',\n    },\n    onSubmit: async (values) => {\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kota: valuesFormik?.kota\n          ? valuesFormik.kota\n          : valuesFormikExist?.kota\n          ? valuesFormikExist.kota\n          : '',\n        updated_by: 0,\n      }\n      try {\n        const response = await axios.put(`${KOTA_URL}/update/${id}`, bodyparam)\n        if (response) {\n          if (selectedFile) {\n            formData.append('file_dokumentasi', selectedFile)\n            const responseFile = await axios.post(`${KOTA_URL}/upload/${id}`, formData)\n            if (responseFile) {\n              console.log('File success uploaded!')\n              Swal.fire({\n                icon: 'success',\n                title: 'Data berhasil disimpan',\n                showConfirmButton: false,\n                timer: 1500,\n              })\n              navigate('/master/Kota', {replace: true})\n            }\n            return\n          }\n          Swal.fire({\n            icon: 'success',\n            title: 'Data berhasil disimpan',\n            showConfirmButton: false,\n            timer: 1500,\n          })\n          navigate('/master/Kota', {replace: true})\n        }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-2 mb-xl-1'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-4 mb-3'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={\n                            valuesFormik?.kota || valuesFormik?.kota === ''\n                              ? valuesFormik?.kota\n                              : valuesFormikExist?.kota\n                              ? valuesFormikExist?.kota\n                              : ''\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kota'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport AsyncSelect from 'react-select/async'\nimport {useFormik} from 'formik'\nimport Swal from 'sweetalert2'\n\nexport interface FormInput {\n  kota?: string\n  created_by?: number\n}\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KOTA_URL = `${API_URL}/master/kota` //http://localhost:3000/master/kota\n\nexport function TambahKota() {\n  const navigate = useNavigate()\n\n  const [valuesFormik, setValuesFormik] = React.useState<FormInput>({})\n\n  const handleChangeFormikSelect = (value: any, name: string) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [name]: value,\n    }))\n  }\n\n  const handleChangeFormik = (event: {\n    preventDefault: () => void\n    target: {value: any; name: any}\n  }) => {\n    setValuesFormik((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      kota: '',\n    },\n    onSubmit: async (values) => {\n      console.log(selectedFile)\n      let formData = new FormData()\n      const bodyparam: FormInput = {\n        kota: valuesFormik?.kota ? valuesFormik.kota : '',\n        created_by: 0,\n      }\n      try {\n        const response = await axios.post(`${KOTA_URL}/create`, bodyparam)\n        if (response) {\n            if (selectedFile) {\n              formData.append('file_dokumentasi', selectedFile)\n              const responseFile = await axios.post(\n                `${KOTA_URL}/upload-file/${response.data.data.return_id}`,\n                formData\n              )\n              if (responseFile) {\n                console.log('File success uploaded!')\n                Swal.fire({\n                  icon: 'success',\n                  title: 'Data berhasil disimpan',\n                  showConfirmButton: false,\n                  timer: 1500,\n                })\n                navigate('/master/Kota', {replace: true})\n              }\n              return\n            }\n            Swal.fire({\n              icon: 'success',\n              title: 'Data berhasil disimpan',\n              showConfirmButton: false,\n              timer: 1500,\n            })\n            navigate('/master/Kota', {replace: true})\n          }\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Data gagal disimpan, harap mencoba lagi',\n          showConfirmButton: false,\n          timer: 1500,\n        })\n        console.error(error)\n      }\n    },\n  })\n\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  return (\n    <div className='app-main flex-column flex-row-fluid' id='kt_app_main'>\n      <div className='d-flex flex-column flex-column-fluid'>\n        <div id='kt_app_content' className='app-content flex-column-fluid'>\n          <div id='kt_app_content_container' className='app-container container-xxl'>\n            <div className='card mb-3 mb-xl-2'>\n              <div className='card-body'>\n                <form onSubmit={formik.handleSubmit}>\n                  <div className='row mt-2'>\n                    <div className='col-5 mb-6'>\n                      <div className='form-group'>\n                        <Form.Label>Kota</Form.Label>\n                        <Form.Control\n                          name='kota'\n                          className='form-control form-control-solid'\n                          onChange={handleChangeFormik}\n                          value={valuesFormik?.kota}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='d-grid gap-2 d-md-flex justify-content-md-center'>\n                    <Link to='/master/Kota'>\n                      <button className='btn btn-secondary'>\n                        <i className='fa-solid fa-arrow-left'></i>\n                        Kembali\n                      </button>\n                    </Link>\n                    <button className='btn btn-primary' type='submit'>\n                      <i className='fa-solid fa-paper-plane'></i>\n                      Simpan\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KECAMATAN_URL = `${API_URL}/master/kecamatan` //http://localhost:3000/master/kecamatan\n\nexport function Kecamatan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Kode Kecamatan',\n      selector: (row: any) => row.kode_kecamatan,\n      sortable: true,\n      sortField: 'kode_kecamatan',\n    },\n    {\n      name: 'kecamatan',\n      selector: (row: any) => row.kecamatan,\n      sortable: true,\n      sortField: 'kecamatan',\n    },\n    {\n      name: 'Kode Kota',\n      selector: (row: any) => row.kode_kota,\n      sortable: true,\n      sortField: 'kode_kota',\n    },\n    {\n      name: 'kota',\n      selector: (row: any) => row.kota,\n      sortable: true,\n      sortField: 'kota',\n    },\n    {\n     \n    },\n\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(KECAMATAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6'>\n          <div className='form-group'>\n          <label htmlFor='' className='mb-3'>\n              Kota\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n        </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6'>\n          <div className='form-group'>\n          <label htmlFor='' className='mb-3'>\n              Kecamatan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n        </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n          <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Kecamatan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Kota</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Kota\" />\n        </Form.Group>\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Kecamatan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Kecamatan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const KELURAHAN_URL = `${API_URL}/master/kelurahan` //http://localhost:3000/master/kelurahan\n\nexport function Kelurahan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Kode Kelurahan',\n      selector: (row: any) => row.kode_kelurahan,\n      sortable: true,\n      sortField: 'kelurahan',\n    },\n    {\n      name: 'Kelurahan',\n      selector: (row: any) => row.kelurahan,\n      sortable: true,\n      sortField: 'kelurahan',\n    },\n    {\n      name: 'Kode Kecamatan',\n      selector: (row: any) => row.kode_kecamatan,\n      sortable: true,\n      sortField: 'Kode kecamatan',\n    },\n    {\n      name: 'Kecamatan',\n      selector: (row: any) => row.kecamatan,\n      sortable: true,\n      sortField: 'kecamatan',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(KELURAHAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Kecamatan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Kelurahan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Kelurahan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        \n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Kecamatan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Kecamatan\" />\n        </Form.Group>\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Kelurahan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Kelurahan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEGIATAN_URL = `${API_URL}/master/jenis-kegiatan` //http://localhost:3000/master/jenis-kegiatan\n\nexport function JenisKegiatan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Jenis Kegiatan',\n      selector: (row: any) => row.jenis_kegiatan,\n      sortable: true,\n      sortField: 'jenis_kegiatan',\n    },\n    {\n    },\n    {\n      name: 'Kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_KEGIATAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Kegiatan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Kegiatan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Kegiatan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Kegiatan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KEJADIAN_URL = `${API_URL}/master/jenis-kejadian` //http://localhost:3000/jenis-kejadian\n\nexport function JenisKejadian() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n      \n    },\n    {\n      name: 'Jenis Kejadian',\n      selector: (row: any) => row.jenis_kejadian,\n      sortable: true,\n      sortField: 'jenis_kejadian',\n    },\n    {\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_KEJADIAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Kejadian\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n     \n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Kejadian</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Kejadian</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Kejadian\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PELANGGARAN_URL = `${API_URL}/master/Jenis-pelanggaran` //http://localhost:3000/Jenis-pelanggaran\nexport function JenisPelanggaran() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Jenis Pelanggaran',\n      selector: (row: any) => row.jenis_pelanggaran,\n      sortable: true,\n      sortField: 'jenis_pelanggaran',\n    },\n    {\n    },\n    {\n      \n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_PELANGGARAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Pelanggaran\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Pelanggaran</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Pelanggaran</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Pelanggaran\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERTOLONGAN_URL = `${API_URL}/master/jenis-pertolongan` //http://localhost:3000/jenis-pertolongan\n\nexport function JenisPertolongan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Jenis Pertolongan',\n      selector: (row: any) => row.jenis_pertolongan,\n      sortable: true,\n      sortField: 'jenis_pertolongan',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_PERTOLONGAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Pertolongan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Pertolongan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Pertolongan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Pertolongan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_PERDA_PERKADA_URL = `${API_URL}/master/jenis-perda-perkada` //http://localhost:3000/jenis-perda-perkada\n\nexport function JenisPerdaPerkada() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Judul',\n      selector: (row: any) => row.judul,\n      sortable: true,\n      sortField: 'judul',\n    },\n    {\n      name: 'Deskripsi',\n      selector: (row: any) => row.deskripsi,\n      sortable: true,\n      sortField: 'deskripsi',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_PERDA_PERKADA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Judul Perda / Perkada\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Deskripsi\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Perda / Perkada</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Perda / Perkada</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Perda / Perkada\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function JenisPenindakan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Penindakan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Penindakan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Penindakan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Penindakan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_JIWA_URL = `${API_URL}/master/jenis-korban-jiwa` //http://localhost:3000/jenis-korban-jiwa\n\nexport function KorbanJiwa() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Jenis Korban Jiwa',\n      selector: (row: any) => row.jenis_korban_jiwa,\n      sortable: true,\n      sortField: 'jenis_korban_jiwa',\n    },\n    {\n    \n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_KORBAN_JIWA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Korban Jiwa\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Korban Jiwa</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Korban Jiwa</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Korban Jiwa\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_KORBAN_MATERIAL_URL = `${API_URL}/master/jenis-korban-material` //http://localhost:3000/jenis-korban-material\n\nexport function KorbanMaterial() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n    },\n    {\n      name: 'Jenis Korban Material',\n      selector: (row: any) => row.jenis_korban_material,\n      sortable: true,\n      sortField: 'jenis_korban_material',\n    },\n    {\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_KORBAN_MATERIAL_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Korban Material\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Korban Material</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Korban Material</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Korban Material\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function JenisBantuan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Bantuan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Bantuan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Bantuan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Bantuan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function InstansiTerkait() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Instansi Terkait\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Instansi Terkait</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Instansi Terakait</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Instansi Terkait\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const AGAMA_URL = `${API_URL}/master/agama` //http://localhost:3000/master/agama\n\nexport function Agama() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    \n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {},\n    {\n      name: 'Agama',\n      selector: (row: any) => row.agama,\n      sortable: true,\n      sortField: 'agama',\n    },\n    {},\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(AGAMA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Agama\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Agama</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Agama</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Agama\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PANGKAT_URL = `${API_URL}/master/pangkat` //http://localhost:3000/master/pangkat\n\nexport function Pangkat() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n    },\n    {\n      name: 'Pangkat',\n      selector: (row: any) => row.pangkat,\n      sortable: true,\n      sortField: 'pangkat',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(PANGKAT_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Pangkat\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      \n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Pendidikan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Pendidikan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Pendidikan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n    throw new Error('Function not implemented.');\n  }\n  \nfunction onEdit(record: any) {\nthrow new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function TempatPelaksana() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Tempat Pelaksana\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      \n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Tempat Pelaksana</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Tempat Pelaksana</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Tempat Pelaksana\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function SKPD() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              SKPD\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah SKPD</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>SKPD</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"SKPD\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PENDIDIKAN_URL = `${API_URL}/master/pendidikan` //http://localhost:3000/master/pendidikan\n\nexport function Pendidikan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n    {\n    },\n    {\n      name: 'Pendidikan',\n      selector: (row: any) => row.pendidikan,\n      sortable: true,\n      sortField: 'pendidikan',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(PENDIDIKAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Pendidikan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      \n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Pendidikan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Pendidikan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Pendidikan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n    throw new Error('Function not implemented.');\n  }\n  \nfunction onEdit(record: any) {\nthrow new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JENIS_SARANA_PRASARANA_URL = `${API_URL}/master/jenis-sarana-prasarana` //http://localhost:3000/master/sarana-prasarana\n\nexport function JenisSaranaPrasarana() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JENIS_SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Sarana Prasarana\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Sarana dan Prasarana</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Sarana Dan Prasrana</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis sarana Dan prasarana\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const GOLONGAN_URL = `${API_URL}/master/golongan` //http://localhost:3000/sarana-prasarana\n\nexport function Golongan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n      name: 'Golongan',\n      selector: (row: any) => row.golongan,\n      sortable: true,\n      sortField: 'golongan',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get( GOLONGAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Golongan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Golongan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Golongan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Golongan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const ESELON_URL = `${API_URL}/master/eselon` //http://localhost:3000/master/eselon\n\nexport function Eselon() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {},\n    {\n      name: 'Eselon',\n      selector: (row: any) => row.eselon,\n      sortable: true,\n      sortField: 'eselon',\n    },\n    {},\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(ESELON_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Eselon\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Eselon</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Kota</Form.Label>\n            <Form.Control type=\"Eselon\" placeholder=\"Eselon\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\n\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const JABATAN_URL = `${API_URL}/master/jabatan` //http://localhost:3000/sarana-prasarana\n\nexport function Jabatan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'no',\n    },\n    {\n    },    \n    {\n      name: 'Jabatan',\n      selector: (row: any) => row.jabatan,\n      sortable: true,\n      sortField: 'jabatan',\n    },    \n    {\n    },   \n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(JABATAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jabatan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jabatan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jabatan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jabatan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function SumberInformasi() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Sumber Informasi\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Sumber Informasi</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Sumber Informasi</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Sumber Informasi\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function JenisKekerasan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Kekerasan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n      \n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title> Tambah Jenis Kekerasan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Kekerasan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Kekerasan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const PENERBITAN_URL = `${API_URL}/master/jenis-penerbitan` //http://localhost:3000/jenis-penerbitan\n\nexport function JenisPenerbitan() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'No',\n      selector: (row: any) => row.id,\n      sortable: true,\n      sortField: 'id',\n    },\n   \n    {\n      name: 'Jenis Penertiban',\n      selector: (row: any) => row.jenis_penertiban,\n      sortable: true,\n      sortField: 'jenis_penertiban',\n    },\n    {\n      name: 'kode',\n      selector: (row: any) => row.kode,\n      sortable: true,\n      sortField: 'kode',\n    },\n    {\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(PENERBITAN_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Penerbitan\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Penerbitan</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Penerbitan</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Jenis Penerbitan\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport DataTable from 'react-data-table-component';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst API_URL = process.env.REACT_APP_SISAPPRA_API_URL //http://localhost:3000\nexport const SARANA_PRASARANA_URL = `${API_URL}/sarana-prasarana` //http://localhost:3000/sarana-prasarana\n\nexport function JenisPenyelesaian() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  const LoadingAnimation = (props: any) => {\n    return (\n      <>\n        <div className=\"alert alert-primary d-flex align-items-center p-5 mb-10\">\n          {/* <span className=\"svg-icon svg-icon-2hx svg-icon-primary me-3\">...</span> */}\n          <span className=\"spinner-border spinner-border-xl align-middle me-3\"></span>\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"mb-1\">Sedang mengambil data...</h5>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  const columns = [\n    {\n      name: 'Jenis Sarana & Prasarana',\n      selector: (row: any) => row.jenis_sarana_prasarana,\n      sortable: true,\n      sortField: 'jenis_sarana_prasarana',\n    },\n    {\n      name: 'Status Sarana & Prasarana',\n      selector: (row: any) => row.status_sarana_prasarana,\n      sortable: true,\n      sortField: 'status_sarana_prasarana',\n    },\n    {\n      name: 'Jumlah',\n      selector: (row: any) => row.jumlah,\n      sortable: true,\n      sortField: 'jumlah',\n    },\n    {\n      name: 'Kondisi',\n      selector: (row: any) => row.kondisi,\n      sortable: true,\n      sortField: 'kondisi',\n    },\n    {\n      name: 'Keterangan',\n      selector: (row: any) => row.keterangan,\n      sortable: true,\n      sortField: 'keterangan',\n    },\n    {\n      name: 'Dokumentasi',\n      selector: (row: any) => row.dokumentasi,\n      sortable: true,\n      sortField: 'dokumentasi',\n    },\n    {\n      name: 'Aksi',\n      sortable: false,\n      text: \"Action\",\n      className: \"action\",\n      align: \"left\",\n      cell: (record: any) => {\n        return (\n          <Fragment>\n\n            <div className=\"mb-2\">\n              {[DropdownButton].map((DropdownType, idx) => (\n                <>\n                  <DropdownType\n                    as={ButtonGroup}\n                    key={idx}\n                    id={`dropdown-button-drop-${idx}`}\n                    size=\"sm\"\n                    variant=\"light\"\n                    title=\"Aksi\">\n                    <Dropdown.Item>\n                      <Link to=\"/sarana-prasarana/LaporanSaranaPrasarana\">\n                        Detail\n                      </Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Ubah</Dropdown.Item>\n                    <Dropdown.Item href=\"#\">Hapus</Dropdown.Item>\n                  </DropdownType>\n                </>\n              ))}\n            </div>\n          </Fragment>\n        );\n      },\n    },\n\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n   \n  const [temp, setTemp] = useState([]);\n\n  const fetchUsers = async (page: any) => {\n    setLoading(true);\n    const value = await axios.get(SARANA_PRASARANA_URL + \"/find\");\n\n    setTemp(value.data.data);\n    console.log('cek response api:',temp);\n\n    \n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n   \n    setTotalRows(response.data.total);\n    setLoading(false);\n    console.log('cek ahhh :' ,data);\n    return [data, setData] as const;\n  };\n\n  const handlePageChange = (page: any) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage: any, page: any) => {\n    setLoading(true);\n\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}delay=1`);\n\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  const handleSort = (column: any, sortDirection: any) => {\n    // simulate server sort\n    console.log(column, sortDirection);\n    setLoading(true);\n\n    // instead of setTimeout this is where you would handle your API call.\n    setTimeout(() => {\n      setData(orderBy(data, column.sortField, sortDirection));\n      setLoading(false);\n    }, 100);\n  };\n\n\n  return (\n    <div className={`card`}>\n      {/* begin::Body */}\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n          <div className='col-xxl-6 col-lg-6 col-md-3 col-sm-10'>\n            <label htmlFor='' className='mb-3'>\n              Jenis Penyelesaian\n            </label>\n            <input\n              type='text' className='form-control form-control form-control-solid' name='tags'/>\n          </div>\n      </div>\n      <div className=\"row g-8 mt-2 ms-5 me-5\">\n        <div className='col-md-6 col-lg-6 col-sm-12'>\n        <Link to='#'>\n            <button className='btn btn-primary'>\n              <i className='fa-solid fa-search'></i>\n              Cari\n            </button>\n          </Link>\n        </div>\n        \n        <div className=\"d-flex justify-content-end col-md-6 col-lg-6 col-sm-12\">\n          <Link to='#i'>\n            <button className='btn btn-primary me-5' onClick={handleShow}>\n              <i className=\"fa-solid fa-plus\"></i>\n              Tambah\n            </button>\n          </Link>\n        </div>\n      </div>\n\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tambah Jenis Penyelesaian</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group className=\"mb-3 form-control-solid\">\n            <Form.Label>Jenis Penyelesaian</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Penyelesaian\" />\n        </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n          <i className=\"fa-solid fa-paper-plane\"></i>\n            Simpan\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n\n      <div className='table-responsive mt-5 ms-5 me-5'>\n      <DataTable\n            columns={columns}\n            data={temp}\n            pagination\n        />\n        {/* <DataTable\n          columns={columns}\n          data={data}\n          progressPending={loading}\n          progressComponent={<LoadingAnimation />}\n          pagination\n          paginationServer\n          paginationTotalRows={totalRows}\n          sortServer\n          onSort={handleSort}\n          onChangeRowsPerPage={handlePerRowsChange}\n          onChangePage={handlePageChange}\n        /> */}\n      </div>\n      {/* end::Body */}\n    </div>\n  )\n}\nfunction orderBy(data: never[], sortField: any, sortDirection: any): React.SetStateAction<never[]> {\n  throw new Error('Function not implemented.');\n}\n\nfunction onEdit(record: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import React from 'react'\nimport {Navigate, Route, Routes, Outlet} from 'react-router-dom'\nimport {PageLink, PageTitle} from '../../../_metronic/layout/core'\n\nimport {Kota} from './components/Kota'\nimport {LihatKota} from './components/Lihat-master/LihatKota'\nimport {UpdateKota} from './components/Update-master/UpdateKota'\nimport {TambahKota} from './components/Tambah-master/TambahKota'\n\nimport {Kecamatan} from './components/Kecamatan'\nimport {Kelurahan} from './components/Kelurahan'\nimport {JenisKegiatan} from './components/JenisKegiatan'\nimport {JenisKejadian} from './components/JenisKejadian'\nimport {JenisPelanggaran} from './components/JenisPelanggaran'\nimport {JenisPertolongan} from './components/JenisPertolongan'\nimport {JenisPerdaPerkada} from './components/JenisPerdaPerkada'\nimport {JenisPenindakan} from './components/JenisPenindakan'\nimport {KorbanJiwa} from './components/KorbanJiwa'\nimport {KorbanMaterial} from './components/KorbanMaterial'\nimport {JenisBantuan} from './components/JenisBantuan'\nimport {InstansiTerkait} from './components/InstansiTerkait'\nimport {Agama} from './components/Agama'\nimport {Pangkat} from './components/Pangkat'\nimport {TempatPelaksana} from './components/TempatPelaksana'\nimport {SKPD} from './components/SKPD'\nimport {Pendidikan} from './components/Pendidikan'\nimport {JenisSaranaPrasarana} from './components/JenisSaranaPrasarana'\nimport {Golongan} from './components/Golongan'\nimport {Eselon} from './components/Eselon'\nimport {Jabatan} from './components/Jabatan'\nimport {SumberInformasi} from './components/SumberInformasi'\nimport {JenisKekerasan} from './components/JenisKekerasan'\nimport {JenisPenerbitan} from './components/JenisPenerbitan'\nimport {JenisPenyelesaian} from './components/JenisPenyelesaian'\n\nconst masterBreadCrumbs: Array<PageLink> = [\n  {\n    title: 'Master',\n    path: '/master/InformasiDataMaster',\n    isSeparator: false,\n    isActive: false,\n  },\n  {\n    title: '',\n    path: '',\n    isSeparator: true,\n    isActive: false,\n  },\n]\n\nconst MasterPage: React.FC = () => {\n  return (\n    <Routes>\n      <Route\n        element={\n          <>\n            <Outlet />\n          </>\n        }\n      >\n        <Route\n          path='Kota'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kota</PageTitle>\n              <Kota />\n            </>\n          }\n        />\n        <Route\n          path='Kota/UpdateKota/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Update Kota</PageTitle>\n              <UpdateKota />\n            </>\n          }\n        />\n        <Route\n          path='Kota/LihatKota/:id'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Lihat Kota</PageTitle>\n              <LihatKota />\n            </>\n          }\n        />\n        <Route\n          path='Kota/TambahKota'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tambah Kota</PageTitle>\n              <TambahKota />\n            </>\n          }\n        />\n        <Route\n          path='SKPD'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>SKPD</PageTitle>\n              <SKPD />\n            </>\n          }\n        />\n        <Route\n          path='Pangkat'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Pangkat</PageTitle>\n              <Pangkat />\n            </>\n          }\n        />\n        <Route\n          path='TempatPelaksana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Tempat Pelaksana</PageTitle>\n              <TempatPelaksana />\n            </>\n          }\n        />\n        <Route\n          path='Golongan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Golongan </PageTitle>\n              <Golongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisSaranaPrasarana'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jenis Sarana Prasarana </PageTitle>\n              <JenisSaranaPrasarana />\n            </>\n          }\n        />\n        <Route\n          path='Kecamatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kecamatan</PageTitle>\n              <Kecamatan />\n            </>\n          }\n        />\n        <Route\n          path='Kelurahan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Kelurahan</PageTitle>\n              <Kelurahan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKegiatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kegiatan </PageTitle>\n              <JenisKegiatan />\n            </>\n          }\n        />\n        <Route\n          path='JenisKejadian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kejadian </PageTitle>\n              <JenisKejadian />\n            </>\n          }\n        />\n        <Route\n          path='Agama'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Agama</PageTitle>\n              <Agama />\n            </>\n          }\n        />\n        <Route\n          path='Jabatan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Jabatan </PageTitle>\n              <Jabatan />\n            </>\n          }\n        />\n        <Route\n          path='Eselon'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Eselon </PageTitle>\n              <Eselon />\n            </>\n          }\n        />\n        <Route\n          path='Pendidikan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Pendidikan </PageTitle>\n              <Pendidikan />\n            </>\n          }\n        />\n        <Route\n          path='SumberInformasi'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}> Sumber Informasi </PageTitle>\n              <SumberInformasi />\n            </>\n          }\n        />\n        <Route\n          path='JenisPelanggaran'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pelanggaran</PageTitle>\n              <JenisPelanggaran />\n            </>\n          }\n        />\n        <Route\n          path='JenisPertolongan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Pertolongan</PageTitle>\n              <JenisPertolongan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenindakan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penindakan</PageTitle>\n              <JenisPenindakan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPerdaPerkada'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Perda / Perkada</PageTitle>\n              <JenisPerdaPerkada />\n            </>\n          }\n        />\n        <Route\n          path='JenisKekerasan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Kekerasan</PageTitle>\n              <JenisKekerasan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenerbitan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penerbitan</PageTitle>\n              <JenisPenerbitan />\n            </>\n          }\n        />\n        <Route\n          path='JenisPenyelesaian'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Penyelesaian</PageTitle>\n              <JenisPenyelesaian />\n            </>\n          }\n        />\n        <Route\n          path='KorbanJiwa'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Jiwa </PageTitle>\n              <KorbanJiwa />\n            </>\n          }\n        />\n        <Route\n          path='KorbanMaterial'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Korban Material</PageTitle>\n              <KorbanMaterial />\n            </>\n          }\n        />\n        <Route\n          path='JenisBantuan'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Jenis Bantuan</PageTitle>\n              <JenisBantuan />\n            </>\n          }\n        />\n        <Route\n          path='InstansiTerkait'\n          element={\n            <>\n              <PageTitle breadcrumbs={masterBreadCrumbs}>Instansi Terkait</PageTitle>\n              <InstansiTerkait />\n            </>\n          }\n        />\n\n        <Route index element={<Navigate to='/master' />} />\n      </Route>\n    </Routes>\n  )\n}\n\nexport default MasterPage\n"],"names":["KOTA_URL","process","Kota","navigate","useNavigate","useState","val","valFilterKota","setFilterKota","strparam","qParamFind","setUriFind","useEffect","fetchUsers","columns","name","selector","row","id","sortable","sortField","kota","width","kode","text","className","align","cell","record","Fragment","DropdownButton","map","DropdownType","idx","as","ButtonGroup","size","variant","title","Dropdown","href","onClick","replace","Swal","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","axios","showConfirmButton","timer","handleFilter","uriParam","prevState","React","data","setData","setLoading","setTotalRows","perPage","temp","setTemp","page","response","total_data","fetchDT","value","console","log","total","htmlFor","type","onChange","event","target","placeholder","to","pagination","LihatKota","useParams","valuesFormikExist","setValuesFormikExist","fetchData","jsonD","paramValue","updated_by","prevstate","Form","readOnly","UpdateKota","selectedFile","valuesFormik","setValuesFormik","formik","useFormik","initialValues","onSubmit","values","formData","FormData","bodyparam","append","error","handleSubmit","prevValues","TambahKota","created_by","return_id","KECAMATAN_URL","Kecamatan","show","setShow","handleClose","kode_kecamatan","kecamatan","kode_kota","Modal","onHide","closeButton","Button","KELURAHAN_URL","Kelurahan","kode_kelurahan","kelurahan","JENIS_KEGIATAN_URL","JenisKegiatan","jenis_kegiatan","JENIS_KEJADIAN_URL","JenisKejadian","jenis_kejadian","JENIS_PELANGGARAN_URL","JenisPelanggaran","jenis_pelanggaran","JENIS_PERTOLONGAN_URL","JenisPertolongan","jenis_pertolongan","JENIS_PERDA_PERKADA_URL","JenisPerdaPerkada","judul","deskripsi","SARANA_PRASARANA_URL","JenisPenindakan","jenis_sarana_prasarana","status_sarana_prasarana","jumlah","kondisi","keterangan","dokumentasi","JENIS_KORBAN_JIWA_URL","KorbanJiwa","jenis_korban_jiwa","JENIS_KORBAN_MATERIAL_URL","KorbanMaterial","jenis_korban_material","JenisBantuan","InstansiTerkait","AGAMA_URL","Agama","agama","PANGKAT_URL","Pangkat","pangkat","TempatPelaksana","SKPD","PENDIDIKAN_URL","Pendidikan","pendidikan","JENIS_SARANA_PRASARANA_URL","JenisSaranaPrasarana","GOLONGAN_URL","Golongan","golongan","ESELON_URL","Eselon","eselon","JABATAN_URL","Jabatan","jabatan","SumberInformasi","JenisKekerasan","PENERBITAN_URL","JenisPenerbitan","jenis_penertiban","JenisPenyelesaian","masterBreadCrumbs","path","isSeparator","isActive","element","breadcrumbs","index"],"sourceRoot":""}